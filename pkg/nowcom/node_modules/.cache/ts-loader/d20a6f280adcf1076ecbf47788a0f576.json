{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--15-3!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts","mtime":1716430386795},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdk5ldFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hcGkvdm5ldCc7CmltcG9ydCB7IHN0cmlwU3RyaW5ncywgZmluZFRyYW5zbGF0ZWRBZGRyZXNzIH0gZnJvbSAnLi4vc2VydmljZXMvaGVscGVycy91dGlscyc7CmltcG9ydCB7IFBST0RVQ1RfTkFNRSB9IGZyb20gJy4uL2NvbmZpZy9jb25zdGFudHMnOwpjb25zdCB2bmV0RXh0ZW5zaW9uRmFjdG9yeSA9ICgpID0+IHsKICByZXR1cm4gewogICAgc3RhdGUoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaXRlbXM6IFtdCiAgICAgIH07CiAgICB9LAogICAgZ2V0dGVyczogewogICAgICBpdGVtczogc3RhdGUgPT4gc3RhdGUuaXRlbXMKICAgIH0sCiAgICBtdXRhdGlvbnM6IHsKICAgICAgc2V0SXRlbXMoc3RhdGUsIGl0ZW1zKSB7CiAgICAgICAgc3RhdGUuaXRlbXMgPSBpdGVtczsKICAgICAgfSwKICAgICAgYWRkSXRlbShzdGF0ZSwgaXRlbSkgewogICAgICAgIHN0YXRlLml0ZW1zLnB1c2goaXRlbSk7CiAgICAgIH0sCiAgICAgIHVwZGF0ZUl0ZW0oKSB7CiAgICAgICAgLy8gZG8gbm90aGluZwogICAgICB9LAogICAgICByZW1vdmVJdGVtKHN0YXRlLCBpdGVtTmFtZSkgewogICAgICAgIHN0YXRlLml0ZW1zID0gc3RhdGUuaXRlbXMuZmlsdGVyKGl0ZW0gPT4gaXRlbS5uYW1lICE9PSBpdGVtTmFtZSk7CiAgICAgIH0KICAgIH0sCiAgICBhY3Rpb25zOiB7CiAgICAgIGFzeW5jIGZpbmRBbGwoewogICAgICAgIGNvbW1pdAogICAgICB9KSB7CiAgICAgICAgY29uc3QgW25ldHdvcmtzLCBuZXR3b3JrVHJhbnNsYXRpb25zXSA9IGF3YWl0IFByb21pc2UuYWxsKFt2TmV0U2VydmljZS5nZXROZXR3b3JrcygpLCB2TmV0U2VydmljZS5nZXROZXR3b3JrVHJhbnNsYXRpb25zKCldKTsKICAgICAgICBjb25zdCBwYXJzZWREYXRhID0gbmV0d29ya3MuZGF0YS5pdGVtcy5tYXAoaXRlbSA9PiB7CiAgICAgICAgICB2YXIgX21haW5UcmFuc2xhdGVkQWRkcmVzOwogICAgICAgICAgY29uc3QgdHJhbnNsYXRlZEFkZHJlc3NEYXRhID0gbmV0d29ya1RyYW5zbGF0aW9ucy5kYXRhLml0ZW1zOwogICAgICAgICAgY29uc3QgbWFpblRyYW5zbGF0ZWRBZGRyZXNzID0gZmluZFRyYW5zbGF0ZWRBZGRyZXNzKHRyYW5zbGF0ZWRBZGRyZXNzRGF0YSwgaXRlbS5zcGVjLm5hbWUpOwogICAgICAgICAgY29uc3Qgc3VibmV0cyA9IGl0ZW0uc3BlYy5zdWJuZXRzLm1hcChzdWJuZXQgPT4gewogICAgICAgICAgICB2YXIgX3N1Ym5ldCRhZGRyZXNzVHJhbnNsOwogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIGFkZHJlc3M6IHN1Ym5ldC5hZGRyZXNzLAogICAgICAgICAgICAgIGZvcm1hdHRlZEFkZHJlc3M6IGAke3N1Ym5ldC5hZGRyZXNzfS8ke3N1Ym5ldC5wcmVmaXhMZW5ndGh9YCwKICAgICAgICAgICAgICBuYW1lOiBzdHJpcFN0cmluZ3Moc3VibmV0Lm5hbWUpLAogICAgICAgICAgICAgIGxvbmdOYW1lOiBzdWJuZXQubmFtZSwKICAgICAgICAgICAgICBwcmVmaXhfbGVuOiBzdWJuZXQucHJlZml4TGVuZ3RoLAogICAgICAgICAgICAgIHRyYW5zbGF0ZWRBZGRyZXNzOiAoX3N1Ym5ldCRhZGRyZXNzVHJhbnNsID0gc3VibmV0LmFkZHJlc3NUcmFuc2xhdGlvbikgPT09IG51bGwgfHwgX3N1Ym5ldCRhZGRyZXNzVHJhbnNsID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfc3VibmV0JGFkZHJlc3NUcmFuc2wub3V0c2lkZQogICAgICAgICAgICB9OwogICAgICAgICAgfSk7CiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBuYW1lOiBpdGVtLnNwZWMubmFtZSwKICAgICAgICAgICAgc3VibmV0cywKICAgICAgICAgICAgc3VibmV0TGVuZ3RoOiBzdWJuZXRzLmxlbmd0aCwKICAgICAgICAgICAgY2x1c3RlcjogJ2xvY2FsJywKICAgICAgICAgICAgdHJhbnNsYXRlZEFkZHJlc3M6IG1haW5UcmFuc2xhdGVkQWRkcmVzcyA9PT0gbnVsbCB8fCBtYWluVHJhbnNsYXRlZEFkZHJlc3MgPT09IHZvaWQgMCB8fCAoX21haW5UcmFuc2xhdGVkQWRkcmVzID0gbWFpblRyYW5zbGF0ZWRBZGRyZXNzLnNwZWMpID09PSBudWxsIHx8IF9tYWluVHJhbnNsYXRlZEFkZHJlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX21haW5UcmFuc2xhdGVkQWRkcmVzLm91dHNpZGUKICAgICAgICAgIH07CiAgICAgICAgfSk7CiAgICAgICAgY29tbWl0KCdzZXRJdGVtcycsIHBhcnNlZERhdGEpOwogICAgICB9LAogICAgICBhc3luYyBjcmVhdGUoewogICAgICAgIGNvbW1pdAogICAgICB9LCBkYXRhKSB7CiAgICAgICAgcmV0dXJuIGF3YWl0IHZOZXRTZXJ2aWNlLmNyZWF0ZU5ldHdvcmsoZGF0YSk7CiAgICAgIH0sCiAgICAgIGFzeW5jIGRlbGV0ZU5ldHdvcmsoewogICAgICAgIGNvbW1pdAogICAgICB9LCBpdGVtTmFtZSkgewogICAgICAgIHJldHVybiBhd2FpdCB2TmV0U2VydmljZS5kZWxldGVOZXR3b3JrKGl0ZW1OYW1lKTsKICAgICAgfSwKICAgICAgYXN5bmMgZGVsZXRlU3VibmV0KHsKICAgICAgICBjb21taXQKICAgICAgfSwgZGF0YSkgewogICAgICAgIHJldHVybiBhd2FpdCB2TmV0U2VydmljZS5wYXRjaFN1Ym5ldChkYXRhLnZuZXROYW1lLCBkYXRhLnZuZXREYXRhKTsKICAgICAgfSwKICAgICAgcmVzZXQoewogICAgICAgIGNvbW1pdAogICAgICB9KSB7CiAgICAgICAgY29tbWl0KCdzZXRJdGVtcycsIFtdKTsKICAgICAgfQogICAgfQogIH07Cn07CmNvbnN0IGNvbmZpZyA9IHsKICBuYW1lc3BhY2U6IFBST0RVQ1RfTkFNRSwKICBpc0NsdXN0ZXJTdG9yZTogdHJ1ZQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3BlY2lmaWNzOiB2bmV0RXh0ZW5zaW9uRmFjdG9yeSgpLAogIGNvbmZpZwp9Ow=="},{"version":3,"names":["vNetService","stripStrings","findTranslatedAddress","PRODUCT_NAME","vnetExtensionFactory","state","items","getters","mutations","setItems","addItem","item","push","updateItem","removeItem","itemName","filter","name","actions","findAll","commit","networks","networkTranslations","Promise","all","getNetworks","getNetworkTranslations","parsedData","data","map","_mainTranslatedAddres","translatedAddressData","mainTranslatedAddress","spec","subnets","subnet","_subnet$addressTransl","address","formattedAddress","prefixLength","longName","prefix_len","translatedAddress","addressTranslation","outside","subnetLength","length","cluster","create","createNetwork","deleteNetwork","deleteSubnet","patchSubnet","vnetName","vnetData","reset","config","namespace","isClusterStore","specifics"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts"],"sourcesContent":["import { CoreStoreConfig, CoreStoreSpecifics } from '@shell/core/types';\nimport { vNetService } from '../services/api/vnet'\nimport { stripStrings, findTranslatedAddress } from '../services/helpers/utils'\nimport { PRODUCT_NAME } from '../config/constants';\ninterface Subnets {\n    address: string;\n    formattedAddress: string;\n    name: string;\n    longName: string;\n    prefix_len: number;\n    translatedAddress: string;\n}\n\ninterface Vnets {\n    name: string;\n    subnets: Subnets[];\n    subnetLength: number;\n    cluster: string;\n    translatedAddress: string;\n}\n\ninterface vnetVariables {\n    items: Vnets[]\n}\n\nconst vnetExtensionFactory = (): CoreStoreSpecifics => {\n    return {\n        state() {\n            return {\n                items: []\n            }\n        },\n        getters: {\n            items: (state: vnetVariables) => state.items,\n        },\n        mutations: {\n            setItems(state: vnetVariables, items: Vnets[]) {\n                state.items = items\n            },\n            addItem(state: vnetVariables, item: Vnets) {\n                state.items.push(item)\n            },\n            updateItem() {\n                // do nothing\n            },\n            removeItem(state: vnetVariables, itemName: string) {\n                state.items = state.items.filter(item => item.name !== itemName)\n            }\n        },\n        actions: {\n            async findAll({ commit }: any) {\n                const [networks, networkTranslations] = await Promise.all([\n                    vNetService.getNetworks(),\n                    vNetService.getNetworkTranslations()\n                ]);\n        \n                const parsedData = networks.data.items.map((item: any) => {\n        \n                  const translatedAddressData = networkTranslations.data.items;\n                  const mainTranslatedAddress = findTranslatedAddress(translatedAddressData, item.spec.name);\n        \n                  const subnets = item.spec.subnets.map((subnet: any) => {\n                    return {\n                      address:    subnet.address,\n                      formattedAddress:    `${subnet.address}/${subnet.prefixLength}`,\n                      name:       stripStrings(subnet.name),\n                      longName:   subnet.name,\n                      prefix_len: subnet.prefixLength,\n                      translatedAddress: subnet.addressTranslation?.outside\n                    }\n                  });\n        \n                  return {\n                    name:    item.spec.name,\n                    subnets,\n                    subnetLength: subnets.length,\n                    cluster: 'local',\n                    translatedAddress: mainTranslatedAddress?.spec?.outside\n                  }\n                });\n        \n                commit('setItems', parsedData)\n            },\n            async create({ commit }: any, data: any) {\n                return await vNetService.createNetwork(data);\n            },\n            async deleteNetwork({ commit}: any, itemName: string) {\n                return await vNetService.deleteNetwork(itemName);\n            },\n            async deleteSubnet({ commit }: any, data: { vnetName: string, vnetData: any}) {\n                return await vNetService.patchSubnet(data.vnetName, data.vnetData);\n            },\n            reset({ commit }: any) {\n                commit('setItems', [])\n            }\n        }\n    }\n}\n\nconst config: CoreStoreConfig = { namespace: PRODUCT_NAME, isClusterStore: true };\n\nexport default {\n    specifics: vnetExtensionFactory(),\n    config,\n};"],"mappings":"AACA,SAASA,WAAW,QAAQ,sBAAsB;AAClD,SAASC,YAAY,EAAEC,qBAAqB,QAAQ,2BAA2B;AAC/E,SAASC,YAAY,QAAQ,qBAAqB;AAsBlD,MAAMC,oBAAoB,GAAGA,CAAA,KAAyB;EAClD,OAAO;IACHC,KAAKA,CAAA;MACD,OAAO;QACHC,KAAK,EAAE;OACV;IACL,CAAC;IACDC,OAAO,EAAE;MACLD,KAAK,EAAGD,KAAoB,IAAKA,KAAK,CAACC;KAC1C;IACDE,SAAS,EAAE;MACPC,QAAQA,CAACJ,KAAoB,EAAEC,KAAc;QACzCD,KAAK,CAACC,KAAK,GAAGA,KAAK;MACvB,CAAC;MACDI,OAAOA,CAACL,KAAoB,EAAEM,IAAW;QACrCN,KAAK,CAACC,KAAK,CAACM,IAAI,CAACD,IAAI,CAAC;MAC1B,CAAC;MACDE,UAAUA,CAAA;QACN;MAAA,CACH;MACDC,UAAUA,CAACT,KAAoB,EAAEU,QAAgB;QAC7CV,KAAK,CAACC,KAAK,GAAGD,KAAK,CAACC,KAAK,CAACU,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACM,IAAI,KAAKF,QAAQ,CAAC;MACpE;KACH;IACDG,OAAO,EAAE;MACL,MAAMC,OAAOA,CAAC;QAAEC;MAAM,CAAO;QACzB,MAAM,CAACC,QAAQ,EAAEC,mBAAmB,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACtDxB,WAAW,CAACyB,WAAW,EAAE,EACzBzB,WAAW,CAAC0B,sBAAsB,EAAE,CACvC,CAAC;QAEF,MAAMC,UAAU,GAAGN,QAAQ,CAACO,IAAI,CAACtB,KAAK,CAACuB,GAAG,CAAElB,IAAS,IAAI;UAAA,IAAAmB,qBAAA;UAEvD,MAAMC,qBAAqB,GAAGT,mBAAmB,CAACM,IAAI,CAACtB,KAAK;UAC5D,MAAM0B,qBAAqB,GAAG9B,qBAAqB,CAAC6B,qBAAqB,EAAEpB,IAAI,CAACsB,IAAI,CAAChB,IAAI,CAAC;UAE1F,MAAMiB,OAAO,GAAGvB,IAAI,CAACsB,IAAI,CAACC,OAAO,CAACL,GAAG,CAAEM,MAAW,IAAI;YAAA,IAAAC,qBAAA;YACpD,OAAO;cACLC,OAAO,EAAKF,MAAM,CAACE,OAAO;cAC1BC,gBAAgB,EAAK,GAAGH,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACI,YAAY,EAAE;cAC/DtB,IAAI,EAAQhB,YAAY,CAACkC,MAAM,CAAClB,IAAI,CAAC;cACrCuB,QAAQ,EAAIL,MAAM,CAAClB,IAAI;cACvBwB,UAAU,EAAEN,MAAM,CAACI,YAAY;cAC/BG,iBAAiB,GAAAN,qBAAA,GAAED,MAAM,CAACQ,kBAAkB,cAAAP,qBAAA,uBAAzBA,qBAAA,CAA2BQ;aAC/C;UACH,CAAC,CAAC;UAEF,OAAO;YACL3B,IAAI,EAAKN,IAAI,CAACsB,IAAI,CAAChB,IAAI;YACvBiB,OAAO;YACPW,YAAY,EAAEX,OAAO,CAACY,MAAM;YAC5BC,OAAO,EAAE,OAAO;YAChBL,iBAAiB,EAAEV,qBAAqB,aAArBA,qBAAqB,gBAAAF,qBAAA,GAArBE,qBAAqB,CAAEC,IAAI,cAAAH,qBAAA,uBAA3BA,qBAAA,CAA6Bc;WACjD;QACH,CAAC,CAAC;QAEFxB,MAAM,CAAC,UAAU,EAAEO,UAAU,CAAC;MAClC,CAAC;MACD,MAAMqB,MAAMA,CAAC;QAAE5B;MAAM,CAAO,EAAEQ,IAAS;QACnC,OAAO,MAAM5B,WAAW,CAACiD,aAAa,CAACrB,IAAI,CAAC;MAChD,CAAC;MACD,MAAMsB,aAAaA,CAAC;QAAE9B;MAAM,CAAM,EAAEL,QAAgB;QAChD,OAAO,MAAMf,WAAW,CAACkD,aAAa,CAACnC,QAAQ,CAAC;MACpD,CAAC;MACD,MAAMoC,YAAYA,CAAC;QAAE/B;MAAM,CAAO,EAAEQ,IAAwC;QACxE,OAAO,MAAM5B,WAAW,CAACoD,WAAW,CAACxB,IAAI,CAACyB,QAAQ,EAAEzB,IAAI,CAAC0B,QAAQ,CAAC;MACtE,CAAC;MACDC,KAAKA,CAAC;QAAEnC;MAAM,CAAO;QACjBA,MAAM,CAAC,UAAU,EAAE,EAAE,CAAC;MAC1B;;GAEP;AACL,CAAC;AAED,MAAMoC,MAAM,GAAoB;EAAEC,SAAS,EAAEtD,YAAY;EAAEuD,cAAc,EAAE;AAAI,CAAE;AAEjF,eAAe;EACXC,SAAS,EAAEvD,oBAAoB,EAAE;EACjCoD;CACH"}]}