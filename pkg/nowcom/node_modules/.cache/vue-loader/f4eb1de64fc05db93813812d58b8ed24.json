{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/homepage.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/homepage.vue","mtime":1716430386795},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMaXN0TmFtZXNwYWNlIGZyb20gJ0BzaGVsbC9wYWdlcy9jL19jbHVzdGVyL19wcm9kdWN0L25hbWVzcGFjZXMudnVlJzsKaW1wb3J0IEhvbWUgZnJvbSAnQHNoZWxsL3BhZ2VzL2hvbWUudnVlJzsKCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IEJBU0VfVVJMLCBWTEFOX0xJU1RfVVJMIH0gZnJvbSAnLi4vY29uZmlnL2FwaS50cyc7CmltcG9ydCB7IENBUEksIENBVEFMT0csIHR5cGUsIE5PREUsIFBPRCAgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKCgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAnSG9tZVBhZ2UnLAogICAgY29tcG9uZW50czogewogICAgICBIb21lLAogICAgICBMaXN0TmFtZXNwYWNlCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpc0xvYWRpbmc6IGZhbHNlLAogICAgICAgIGN1cnJlbnRUYWI6ICd0YWIxJywgLy8gSW5pdGlhbCB0YWIKICAgICAgfTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgIGNoYW5nZVRhYih0YWJOYW1lKSB7CiAgICAgICAgICB0aGlzLmN1cnJlbnRUYWIgPSB0YWJOYW1lOwogICAgICB9LAogICAgICBzaG93U3Bpbm5lcigpIHsKICAgICAgICB0aGlzLmlzTG9hZGluZyA9IHRydWU7CiAgICAgICAgLy8gSGlkZSB0aGUgc3Bpbm5lciBhZnRlciA1IHNlY29uZHMKICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMuaGlkZVNwaW5uZXIoKTsKICAgICAgICB9LCAzMDAwKTsKICAgICAgfSwKCiAgICAgIGhpZGVTcGlubmVyKCkgewogICAgICAgIHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0sCgogICAgICB0ZXN0QVBJKCkgewogICAgICAgIC8vIERlZmluZSB0aGUgcmVxdWVzdCBoZWFkZXJzIHdpdGggdGhlICdhcHBsaWNhdGlvbi9qc29uJyBjb250ZW50IHR5cGUKICAgICAgICBjb25zdCBoZWFkZXJzID0gewogICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgIH07CgogICAgICAgIC8vIEZldGNoIHRoZSBWTEFOIGxpc3QgZnJvbSB5b3VyIEFQSQogICAgICAgIGF4aW9zLmdldCgnL3YxJyAse2hlYWRlcnN9KQogICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICB0aGlzLnRlc3QgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICBjb25zb2xlLmxvZygidGVzdCIsIHRoaXMudGVzdCkKICAgICAgICAgIH0pCiAgICAgICAgICAuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBmZXRjaGluZyB0ZXN0OicsIGVycm9yKTsKICAgICAgICAgIH0pOwogICAgICB9LAogICAgICAKICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kQWxsJywgeyB0eXBlOiAnbm9kZSd9KQogICAgICAudGhlbihyZXN1bHQgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCkKICAgICAgICAvLyBJdGVyYXRlIG92ZXIgdGhlIGFycmF5IGFuZCBwcmludCB0aGUgbmFtZSBhbmQgSUQgb2YgZWFjaCBvYmplY3QKICAgICAgICByZXN1bHQuZm9yRWFjaChjbHVzdGVyID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdJRDonLCBjbHVzdGVyLmlkKTsKICAgICAgICAgIGNvbnNvbGUubG9nKCdLaW5kOicsIGNsdXN0ZXIua2luZCk7CiAgICAgICAgfSk7CiAgICAgIH0pCiAgICAgIC5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgLy8gSGFuZGxlIGFueSBlcnJvcnMgaGVyZQogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIGRhdGE6JywgZXJyb3IpOwogICAgICB9KTsKCiAgICAgIC8vIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2NyZWF0ZScsIHsgdHlwZTogJ25hbWVzcGFjZScsIE5hbWU6ICJ0ZXN0aW5nIn0pCiAgICAgIC8vIC50aGVuKHJlc3VsdCA9PiB7CiAgICAgIC8vICAgY29uc29sZS5sb2cocmVzdWx0KQogICAgICAvLyAgIC8vIEl0ZXJhdGUgb3ZlciB0aGUgYXJyYXkgYW5kIHByaW50IHRoZSBuYW1lIGFuZCBJRCBvZiBlYWNoIG9iamVjdAogICAgICAvLyAgIHJlc3VsdC5mb3JFYWNoKGNsdXN0ZXIgPT4gewogICAgICAvLyAgICAgY29uc29sZS5sb2coJ0lEOicsIGNsdXN0ZXIuaWQpOwogICAgICAvLyAgICAgY29uc29sZS5sb2coJ0tpbmQ6JywgY2x1c3Rlci5raW5kKTsKICAgICAgLy8gICB9KTsKICAgICAgLy8gfSkKICAgICAgLy8gLmNhdGNoKGVycm9yID0+IHsKICAgICAgLy8gICAvLyBIYW5kbGUgYW55IGVycm9ycyBoZXJlCiAgICAgIC8vICAgY29uc29sZS5lcnJvcignRXJyb3IgZmV0Y2hpbmcgZGF0YTonLCBlcnJvcik7CiAgICAgIC8vIH0pOwogICAgICB0aGlzLnRlc3RBUEkoKTsKICAgICAgdGhpcy5zaG93U3Bpbm5lcigpOwogICAgfSwKICB9Owo="},{"version":3,"sources":["homepage.vue"],"names":[],"mappings":";AA6CA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"homepage.vue","sourceRoot":"pages","sourcesContent":["<template>\n  <div>\n    <img src=\"../assets/img/nowcom.jpeg\" width=\"500\" height=\"200\"/>\n    <p>Nowcom Infrastructure </p>\n    <!-- Spinner Modal -->\n    <div v-if=\"isLoading\" class=\"spinner-modal\">\n      <div class=\"spinner-content\">\n        <!-- You can use an image or any other content for the spinner -->\n        <img src=\"../assets/img/loading.png\" alt=\"Loading Spinner\" class=\"spinner-image\" />\n      </div>\n    </div>\n    <!-- <ListNamespace ></ListNamespace> -->\n   <!-- <Home></Home> -->\n   <div></div>\n  </br>\n   <div>\n    <!-- Tab buttons -->\n    <div class=\"tab-buttons\">\n      <button @click=\"changeTab('tab1')\" :class=\"{ 'active': currentTab === 'tab1' }\">Basic</button>\n      <button @click=\"changeTab('tab2')\" :class=\"{ 'active': currentTab === 'tab2' }\">IP Address</button>\n      <button @click=\"changeTab('tab3')\" :class=\"{ 'active': currentTab === 'tab3' }\">Tags</button>\n    </div>\n\n    <!-- Tab content -->\n    <div v-if=\"currentTab === 'tab1'\">\n      <h2>Basic</h2>\n      <p>Basic</p>\n    </div>\n\n    <div v-if=\"currentTab === 'tab2'\">\n      <h2>IP Address</h2>\n      <p>IP Address</p>\n    </div>\n\n    <div v-if=\"currentTab === 'tab3'\">\n      <h2>Tags</h2>\n      <p>Tags</p>\n    </div>\n  </div>\n\n  </div>\n</template>\n\n\n<script>\nimport ListNamespace from '@shell/pages/c/_cluster/_product/namespaces.vue';\nimport Home from '@shell/pages/home.vue';\n\nimport axios from 'axios';\nimport { BASE_URL, VLAN_LIST_URL } from '../config/api.ts';\nimport { CAPI, CATALOG, type, NODE, POD  } from '@shell/config/types';\n\n\nexport default {\n    name: 'HomePage',\n    components: {\n      Home,\n      ListNamespace\n    },\n    data() {\n      return {\n        isLoading: false,\n        currentTab: 'tab1', // Initial tab\n      };\n    },\n    methods: {\n      changeTab(tabName) {\n          this.currentTab = tabName;\n      },\n      showSpinner() {\n        this.isLoading = true;\n        // Hide the spinner after 5 seconds\n        setTimeout(() => {\n          this.hideSpinner();\n        }, 3000);\n      },\n\n      hideSpinner() {\n        this.isLoading = false;\n      },\n\n      testAPI() {\n        // Define the request headers with the 'application/json' content type\n        const headers = {\n          'Content-Type': 'application/json',\n           'Accept': 'application/json',\n        };\n\n        // Fetch the VLAN list from your API\n        axios.get('/v1' ,{headers})\n          .then(response => {\n            this.test = response.data;\n            console.log(\"test\", this.test)\n          })\n          .catch(error => {\n            console.error('Error fetching test:', error);\n          });\n      },\n      \n    },\n    mounted() {\n      this.$store.dispatch('management/findAll', { type: 'node'})\n      .then(result => {\n        console.log(result)\n        // Iterate over the array and print the name and ID of each object\n        result.forEach(cluster => {\n          console.log('ID:', cluster.id);\n          console.log('Kind:', cluster.kind);\n        });\n      })\n      .catch(error => {\n        // Handle any errors here\n        console.error('Error fetching data:', error);\n      });\n\n      // this.$store.dispatch('management/create', { type: 'namespace', Name: \"testing\"})\n      // .then(result => {\n      //   console.log(result)\n      //   // Iterate over the array and print the name and ID of each object\n      //   result.forEach(cluster => {\n      //     console.log('ID:', cluster.id);\n      //     console.log('Kind:', cluster.kind);\n      //   });\n      // })\n      // .catch(error => {\n      //   // Handle any errors here\n      //   console.error('Error fetching data:', error);\n      // });\n      this.testAPI();\n      this.showSpinner();\n    },\n  };\n</script>\n\n\n<style lang=\"scss\" scoped>\n/* Your other styles */\n.spinner-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5); /* Semi-transparent black background for the modal effect */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000; /* Make sure the spinner is on top of other elements */\n}\n\n.spinner-content {\n  text-align: center;\n}\n\n.spinner-image {\n  width: 100px; /* Adjust the size of your spinner image */\n  height: 100px;\n  animation: spin 2s linear infinite; /* Rotate the image indefinitely \n  /* You can add more styles to customize the appearance of your spinner image */\n  border-radius: 50%; /* Make the image round */\n\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Add your styling here */\n .tab-buttons {\n    display: flex;\n    margin: 0 16px; /* Add margin to the buttons */\n  }\n  \n  .tab-buttons button {\n    padding: 5px 16px; /* Adjust padding for smaller buttons */\n    border: none;\n    background-color: #3b7498;\n    cursor: pointer;\n    margin-right: 8px; /* Add margin between buttons */\n    border-radius: 4px; /* Add rounded corners */\n  }\n  \n  .tab-buttons button.active {\n    background-color: #cdd7e2;\n    color: #3b7498;\n  }\n  /* Style for tab content */\n  h2 {\n    color: #007bff;\n  }\n\n</style>\n"]}]}