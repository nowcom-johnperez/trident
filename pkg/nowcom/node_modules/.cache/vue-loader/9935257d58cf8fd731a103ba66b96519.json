{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/createnetwork.vue?vue&type=template&id=dccba4d6&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/createnetwork.vue","mtime":1716430386794},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImJhc2UgY3JlYXRlLWJhc2UiPgogIDxMb2FkaW5nIDpsb2FkaW5nPSJpc0xvYWRpbmciIC8+CiAgPGRpdiBjbGFzcz0iY3JlYXRlLWNvbnRlbnQiPgogICAgPGgxPkNyZWF0ZSBWTkVUIE5ldHdvcms8L2gxPgogICAgPCEtLSA8cD5UaGlzIGlzIHBhZ2UgaXMgZm9yIHRoZSBjcmVhdGlvbiBvZiBWTkVUPC9wPiAtLT4KICAgIDxiciAvPgogICAgPFRhYnMgOmxpc3Q9InRhYkxpc3QiIDpjdXJyZW50PSJjdXJyZW50VGFiIiBAc2V0LWFjdGl2ZT0iY2hhbmdlVGFiIiAvPgogICAgPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQtY29udGFpbmVyIG10LTEwIj4KICAgICAgPGRpdiBjbGFzcz0idGFiLWNvbnRlbnQiIDpjbGFzcz0ieyAnc2hvdyc6IGN1cnJlbnRUYWIgPT09IDAgfSI+CiAgICAgICAgPHA+CiAgICAgICAgICBOb3djb20gVmlydHVhbCBOZXR3b3JrIChWTmV0KSBpcyB0aGUgZnVuZGFtZW50YWwgYnVpbGRpbmcgYmxvY2sgZm9yIHlvdXIgcHJpdmF0ZSBuZXR3b3JrIGluIE5vd2NvbSBDbG91ZC4KICAgICAgICAgIFZOZXQgZW5hYmxlcyBtYW55IHR5cGVzIG9mIE5vd2NvbSByZXNvdXJjZXMsIHN1Y2ggYXMgTm93Y29tIFZpcnR1YWwgTWFjaGluZXMgKFZNKSwKICAgICAgICAgIHRvIHNlY3VyZWx5IGNvbW11bmljYXRlIHdpdGggZWFjaCBvdGhlciwgdGhlIGludGVybmV0LCBhbmQgb24tcHJlbWlzZXMgbmV0d29ya3MuCiAgICAgICAgICBWTmV0IGlzIHNpbWlsYXIgdG8gYSB0cmFkaXRpb25hbCBuZXR3b3JrIHRoYXQgeW91J2Qgb3BlcmF0ZSBpbiB5b3VyIG93biBkYXRhIGNlbnRlciwKICAgICAgICAgIGJ1dCBicmluZ3Mgd2l0aCBpdCBhZGRpdGlvbmFsIGJlbmVmaXRzIG9mIE5vd2NvbSdzIGluZnJhc3RydWN0dXJlIHN1Y2ggYXMgc2NhbGUsIGF2YWlsYWJpbGl0eSwgYW5kCiAgICAgICAgICBpc29sYXRpb24uCiAgICAgICAgPC9wPgogICAgICAgIDxiciAvPgogICAgICAgIDwhLS0gVXBkYXRlZCBzZWxlY3QgaW5wdXQgd2l0aCAiQ3JlYXRlIE5ldyBWTkVUIiBvcHRpb24gLS0+CiAgICAgICAgPCEtLSA8c2VsZWN0IHYtbW9kZWw9InNlbGVjdGVkVm5ldE5hbWUiIEBjaGFuZ2U9ImhhbmRsZVNlbGVjdENoYW5nZSI+CiAgICAgICAgICAgICAgICAgIDxvcHRpb24gdmFsdWU9IiI+U2VsZWN0IE5ldHdvcmsgTmFtZTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICA8b3B0aW9uIHYtZm9yPSJuZXR3b3JrIGluIG5ldHdvcmtzIiA6dmFsdWU9Im5ldHdvcmsudm5ldF9uYW1lIj57eyBuZXR3b3JrLnZuZXRfbmFtZSB9fTwvb3B0aW9uPgogICAgICAgICAgICAgICAgICA8b3B0aW9uIHZhbHVlPSJDcmVhdGUgVk5FVCI+Q3JlYXRlIE5ldyBWTkVUPC9vcHRpb24+CiAgICAgICAgICAgICAgPC9zZWxlY3Q+IC0tPgogICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWNvbnRhaW5lciI+CiAgICAgICAgICA8bGFiZWwgZm9yPSJ2bmV0Ij5WTmV0IE5hbWU8L2xhYmVsPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJtdC0xMCIgbmFtZT0idm5ldCIgdi1tb2RlbD0ic2VsZWN0ZWRWbmV0TmFtZSIgcGxhY2Vob2xkZXI9ImUuZy4gdm5ldCIgcmVxdWlyZWQgLz4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvLWljb24iPgogICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtaW5mby1jaXJjbGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b29sdGlwIj5Ob3djb20gVmlydHVhbCBOZXR3b3JrIChWTmV0KSBpcyB0aGUgZnVuZGFtZW50YWwgYnVpbGRpbmcgYmxvY2sgZm9yIHlvdXIgcHJpdmF0ZSBuZXR3b3JrIGluIE5vd2NvbSBDbG91ZC4KICAgICAgICAgIFZOZXQgZW5hYmxlcyBtYW55IHR5cGVzIG9mIE5vd2NvbSByZXNvdXJjZXMsIHN1Y2ggYXMgTm93Y29tIFZpcnR1YWwgTWFjaGluZXMgKFZNKSwKICAgICAgICAgIHRvIHNlY3VyZWx5IGNvbW11bmljYXRlIHdpdGggZWFjaCBvdGhlciwgdGhlIGludGVybmV0LCBhbmQgb24tcHJlbWlzZXMgbmV0d29ya3MuCiAgICAgICAgICBWTmV0IGlzIHNpbWlsYXIgdG8gYSB0cmFkaXRpb25hbCBuZXR3b3JrIHRoYXQgeW91J2Qgb3BlcmF0ZSBpbiB5b3VyIG93biBkYXRhIGNlbnRlciwKICAgICAgICAgIGJ1dCBicmluZ3Mgd2l0aCBpdCBhZGRpdGlvbmFsIGJlbmVmaXRzIG9mIE5vd2NvbSdzIGluZnJhc3RydWN0dXJlIHN1Y2ggYXMgc2NhbGUsIGF2YWlsYWJpbGl0eSwgYW5kCiAgICAgICAgICBpc29sYXRpb24uPC9kaXY+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9ImNoZWNrYm94LWNvbnRlbnQgbXQtMjAiPgogICAgICAgICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiBpZD0iZGhjcCIgdi1tb2RlbD0iZGhjcEVuYWJsZWQiIC8+CiAgICAgICAgICA8bGFiZWwgZm9yPSJkaGNwIj5ESENQIEVuYWJsZWQ/PC9sYWJlbD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICA8ZGl2IGNsYXNzPSJjaGVja2JveC1jb250ZW50IG10LTIwIj4KICAgICAgICAgIDxpbnB1dCB0eXBlPSJjaGVja2JveCIgaWQ9ImRoY3AiIHYtbW9kZWw9ImV4dGVybmFsRE5TZW5hYmxlZCIgLz4KICAgICAgICAgIDxsYWJlbCBmb3I9ImRoY3AiPkV4dGVybmFsIEROUzwvbGFiZWw+CiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXYgY2xhc3M9Im10LTIwIj4KICAgICAgICAgIDxwPgogICAgICAgICAgICBDb25maWd1cmUgeW91ciB2aXJ0dWFsIG5ldHdvcmsgYWRkcmVzcyBzcGFjZSB3aXRoIHRoZSBJUHY0IGFuZCBJUHY2IGFkZHJlc3NlcyBhbmQgc3VibmV0cyB5b3UgbmVlZC4KICAgICAgICAgIDwvcD4KICAgICAgICAgIDxwIGNsYXNzPSJtdC01Ij4KICAgICAgICAgICAgRGVmaW5lIHRoZSBhZGRyZXNzIHNwYWNlIG9mIHlvdXIgdmlydHVhbCBuZXR3b3JrIHdpdGggb25lIG9yIG1vcmUgSVB2NCBvciBJUHY2IGFkZHJlc3MgcmFuZ2VzLgogICAgICAgICAgICBDcmVhdGUgc3VibmV0cyB0byBzZWdtZW50IHRoZSB2aXJ0dWFsIG5ldHdvcmsgYWRkcmVzcyBzcGFjZSBpbnRvIHNtYWxsZXIgcmFuZ2VzIGZvciB1c2UgYnkgeW91cgogICAgICAgICAgICBhcHBsaWNhdGlvbnMuCiAgICAgICAgICAgIFdoZW4geW91IGRlcGxveSByZXNvdXJjZXMgaW50byBhIHN1Ym5ldCwgTm93Y29tIGFzc2lnbnMgdGhlIHJlc291cmNlIGFuIElQIGFkZHJlc3MgZnJvbSB0aGUgc3VibmV0LgogICAgICAgICAgPC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0ibXQtMjAiPgogICAgICAgICAgICA8ZGl2IHYtZm9yPSIoc3VibmV0LCBpbmRleCkgaW4gc2VsZWN0ZWRWbmV0U3VibmV0cyIgOmtleT0iYHN1Ym5ldF8ke2luZGV4fWAiIGNsYXNzPSJyb3cgbXQtMTAiIHN0eWxlPSJqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IGdhcDogNXB4OyBhbGlnbi1pdGVtczogY2VudGVyOyI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCB2LW1vZGVsPSJzZWxlY3RlZFN1Ym5ldE5hbWVbaW5kZXhdIiB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iU3VibmV0IE5hbWUiCiAgICAgICAgICAgICAgICB0aXRsZT0iUGxlYXNlIGVudGVyIGEgdmFsaWQgSVAgYWRkcmVzcyIgQGlucHV0PSJoYW5kbGVTdWJuZXRJbnB1dChpbmRleCkiIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxpbnB1dCB2LW1vZGVsPSJzZWxlY3RlZFZuZXRTdWJuZXRzW2luZGV4XSIgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9IkVudGVyIHN1Ym5ldCAoZS5nLiwgMTAuMC4wLjApIgogICAgICAgICAgICAgICAgICBwYXR0ZXJuPSJcZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9XC5cZHsxLDN9IiB0aXRsZT0iUGxlYXNlIGVudGVyIGEgdmFsaWQgSVAgYWRkcmVzcyIKICAgICAgICAgICAgICAgICAgQGlucHV0PSJoYW5kbGVTdWJuZXRJbnB1dChpbmRleCkiIC8+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3VibmV0LXN1ZmZpeCI+CiAgICAgICAgICAgICAgICA8cD4vMjQ8L3A+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jb2x1bW4iIGFsaWduPSJsZWZ0Ij4KICAgICAgICAgICAgICAgIDxjQnV0dG9uIHYtaWY9ImluZGV4ID4gMCIgY2xhc3M9ImJ0bi1pY29uIiBAY2xpY2s9InJlbW92ZVN1Ym5ldChpbmRleCkiPgogICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtdHJhc2ggZmEtbGcgdGV4dC1kYW5nZXIiPjwvaT4KICAgICAgICAgICAgICAgIDwvY0J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tcm93IG1sLTUiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWNvbHVtbiIgYWxpZ249ImxlZnQiPgogICAgICAgICAgICAgIDxjQnV0dG9uIGNsYXNzPSJjYnRuIGJ0bi1saWdodCIgQGNsaWNrPSJhZGRTdWJuZXQiPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXBsdXMgbXItNSI+PC9pPgogICAgICAgICAgICAgICAgQWRkIFN1Ym5ldAogICAgICAgICAgICAgIDwvY0J1dHRvbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtY29udGFpbmVyIj4KICAgICAgICAgIDxsYWJlbCBmb3I9InRhZ3MiPlRhZ3M8L2xhYmVsPgogICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJtdC0xMCIgbmFtZT0idGFncyIgdi1tb2RlbD0ibmV3VGFnIiBwbGFjZWhvbGRlcj0iVHlwZSBhbmQgcHJlc3MgRW50ZXIgdG8gYWRkIHRhZ3MiIEBrZXlkb3duLmVudGVyLnByZXZlbnQ9ImFkZFRhZyIgLz4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbmZvLWljb24iPgogICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtaW5mby1jaXJjbGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0b29sdGlwIj5Ub29sdGlwIHRleHQ8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8VGFnIHYtZm9yPSIodGFnLCBpbmRleCkgaW4gdGFncyIgOmtleT0iaW5kZXgiIDpzaG93LWRlbGV0ZT0idHJ1ZSIgQGRlbGV0ZT0icmVtb3ZlVGFnKGluZGV4KSIgY2xhc3M9Im10LTEwIj57e3RhZ319PC9UYWc+CgogICAgICAgIDwhLS0gTmV3IGlucHV0IGZpZWxkIHRoYXQgYXBwZWFycyB3aGVuICJDcmVhdGUgTmV3IFZORVQiIGlzIHNlbGVjdGVkIC0tPgogICAgICAgIDwhLS0gTW9kYWwgZm9yIGNyZWF0aW5nIGEgbmV3IG5ldHdvcmsgLS0+CiAgICAgICAgPCEtLSA8TW9kYWwgdi1pZj0iY3JlYXRpbmdOZXdOZXR3b3JrIj4KICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6Y29udGVudD4KICAgICAgICAgICAgPGgyPkNyZWF0ZSBOZXcgTmV0d29yazwvaDI+CiAgICAgICAgICAgIDxpbnB1dCB2LW1vZGVsPSJuZXdOZXR3b3JrTmFtZSIgdmFsdWU9IlZyZi0iIHBsYWNlaG9sZGVyPSJFbnRlciBuZXcgbmV0d29yayBuYW1lIiBAaW5wdXQ9ImhhbmRsZU5ld05ldHdvcmtJbnB1dCIgLz4KICAgICAgICAgIDwvdGVtcGxhdGU+CgogICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpmb290ZXI+CiAgICAgICAgICAgIDxjQnV0dG9uIGNsYXNzPSJjYnRuIGJ0bi1wcmltYXJ5IiBAY2xpY2s9ImRlbGV0ZU5ldHdvcmsiIGxhYmVsPSJTYXZlIiAvPgogICAgICAgICAgICA8Y0J1dHRvbiBjbGFzcz0iY2J0biBidG4tbGlnaHQiIEBjbGljaz0iY2xvc2VNb2RhbCIgbGFiZWw9IkNhbmNlbCIgLz4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgPC9Nb2RhbD4gLS0+CiAgICAgIDwvZGl2PgoKICAgICAgPE1vZGFsIHNpemU9ImxnIiB2LWlmPSJyZXZpZXdNb2RhbFN0YXRlIj4KICAgICAgICA8dGVtcGxhdGUgI2hlYWRlcj4KICAgICAgICAgIDxoMSBjbGFzcz0ibWItMCI+UmV2aWV3PC9oMT4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6Y29udGVudD4KICAgICAgICAgIAogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGgyPkNvbmZpZ3VyZTwvaDI+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgIFZpcnR1YWwgTmV0d29yayBOYW1lOiAmbmJzcDsgPHNwYW4gY2xhc3M9InRleHQtYm9sZCIgOnN0eWxlPSJ7IGNvbG9yOiBzZWxlY3RlZFZuZXROYW1lID8gJycgOiAncmVkJywgJ2ZvbnQtc2l6ZSc6ICcxLjNyZW0nIH0iPnt7IHNlbGVjdGVkVm5ldE5hbWUgfHwgJ2VtcHR5JyB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICBESENQIEVuYWJsZWQ6IHt7IGRoY3BFbmFibGVkIH19CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgRXh0ZXJuYWwgRE5TOiB7eyBleHRlcm5hbEROU2VuYWJsZWQgfX0KICAgICAgICAgICAgPC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTMwIj4KICAgICAgICAgICAgPGgyPlRhZ3M8L2gyPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC0xMCI+CiAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtaWY9InRhZ3MubGVuZ3RoID4gMCI+CiAgICAgICAgICAgICAgICA8VGFnIHYtZm9yPSIodGFnLCBpbmRleCkgaW4gdGFncyIgOmtleT0iaW5kZXgiPnt7dGFnfX08L1RhZz4KICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDxwIHYtZWxzZT5ObyBUYWdzPC9wPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTMwIj4KICAgICAgICAgICAgPGgyPlN1Ym5ldDwvaDI+CiAgICAgICAgICAgIDxTdWJuZXQgdi1mb3I9IihuYW1lLCBpbmRleCkgaW4gc2VsZWN0ZWRTdWJuZXROYW1lIiA6a2V5PSJpbmRleCIgOm5hbWU9Im5hbWUiIDpjdXJyZW50LWFkZHJlc3M9InNlbGVjdGVkVm5ldFN1Ym5ldHNbaW5kZXhdIHx8ICdlbXB0eSciIDppcC1saXN0PSJzZWxlY3RlZFZuZXRTdWJuZXRzIiAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC90ZW1wbGF0ZT4KCiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDpmb290ZXI+CiAgICAgICAgICA8Y0J1dHRvbiBjbGFzcz0iY2J0biBidG4tcHJpbWFyeSIgQGNsaWNrPSJjcmVhdGVOZXR3b3JrIiA6ZGlzYWJsZWQ9IiFzZWxlY3RlZFZuZXROYW1lIHx8IGhhc0ludmFsaWRJUEFkZHJlc3MgfHwgaGFzRHVwbGljYXRlSVBBZGRyZXNzIHx8IGlzTG9hZGluZyIgbGFiZWw9IkNyZWF0ZSIgLz4KICAgICAgICAgIDxjQnV0dG9uIGNsYXNzPSJjYnRuIGJ0bi1saWdodCIgQGNsaWNrPSJyZXZpZXdNb2RhbFN0YXRlID0gZmFsc2UiIGxhYmVsPSJDYW5jZWwiIC8+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9Nb2RhbD4KICAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImZvb3RlciI+CiAgICA8ZGl2IGNsYXNzPSJmb3JtLWNvbHVtbi1ib3R0b20iPgogICAgICA8IS0tIDxidXR0b24gY2xhc3M9ImNidG4gYnRuLWxpZ2h0IG1yLTEwIiA6ZGlzYWJsZWQ9ImN1cnJlbnRUYWIgPT09IDAiIEBjbGljaz0icHJldmlvdXNUYWIiPlByZXZpb3VzPC9idXR0b24+CiAgICAgIDxidXR0b24gY2xhc3M9ImNidG4gYnRuLWxpZ2h0IiA6ZGlzYWJsZWQ9ImN1cnJlbnRUYWIgPT09IDMiIEBjbGljaz0ibmV4dFRhYiI+TmV4dDwvYnV0dG9uPiAtLT4KICAgICAgPCEtLSBDb25kaXRpb25hbGx5IHJlbmRlciB0aGUgYnV0dG9uIGJhc2VkIG9uIHRoZSBjdXJyZW50IHRhYiAtLT4KICAgICAgPGJ1dHRvbiBjbGFzcz0iY2J0biBidG4tcHJpbWFyeSBtbC0xMCIgQGNsaWNrPSJyZXZpZXdNb2RhbFN0YXRlID0gdHJ1ZSI+CiAgICAgICAgUmV2aWV3CiAgICAgIDwvYnV0dG9uPgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2Pgo="},null]}