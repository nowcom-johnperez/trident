{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/homepage.vue?vue&type=style&index=0&id=57503078&prod&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/homepage.vue","mtime":1716430386795},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qIFlvdXIgb3RoZXIgc3R5bGVzICovCi5zcGlubmVyLW1vZGFsIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC41KTsgLyogU2VtaS10cmFuc3BhcmVudCBibGFjayBiYWNrZ3JvdW5kIGZvciB0aGUgbW9kYWwgZWZmZWN0ICovCiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIHotaW5kZXg6IDEwMDA7IC8qIE1ha2Ugc3VyZSB0aGUgc3Bpbm5lciBpcyBvbiB0b3Agb2Ygb3RoZXIgZWxlbWVudHMgKi8KfQoKLnNwaW5uZXItY29udGVudCB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cgouc3Bpbm5lci1pbWFnZSB7CiAgd2lkdGg6IDEwMHB4OyAvKiBBZGp1c3QgdGhlIHNpemUgb2YgeW91ciBzcGlubmVyIGltYWdlICovCiAgaGVpZ2h0OiAxMDBweDsKICBhbmltYXRpb246IHNwaW4gMnMgbGluZWFyIGluZmluaXRlOyAvKiBSb3RhdGUgdGhlIGltYWdlIGluZGVmaW5pdGVseSAKICAvKiBZb3UgY2FuIGFkZCBtb3JlIHN0eWxlcyB0byBjdXN0b21pemUgdGhlIGFwcGVhcmFuY2Ugb2YgeW91ciBzcGlubmVyIGltYWdlICovCiAgYm9yZGVyLXJhZGl1czogNTAlOyAvKiBNYWtlIHRoZSBpbWFnZSByb3VuZCAqLwoKfQpAa2V5ZnJhbWVzIHNwaW4gewogIDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IH0KICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfQp9CgovKiBBZGQgeW91ciBzdHlsaW5nIGhlcmUgKi8KIC50YWItYnV0dG9ucyB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgbWFyZ2luOiAwIDE2cHg7IC8qIEFkZCBtYXJnaW4gdG8gdGhlIGJ1dHRvbnMgKi8KICB9CiAgCiAgLnRhYi1idXR0b25zIGJ1dHRvbiB7CiAgICBwYWRkaW5nOiA1cHggMTZweDsgLyogQWRqdXN0IHBhZGRpbmcgZm9yIHNtYWxsZXIgYnV0dG9ucyAqLwogICAgYm9yZGVyOiBub25lOwogICAgYmFja2dyb3VuZC1jb2xvcjogIzNiNzQ5ODsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIG1hcmdpbi1yaWdodDogOHB4OyAvKiBBZGQgbWFyZ2luIGJldHdlZW4gYnV0dG9ucyAqLwogICAgYm9yZGVyLXJhZGl1czogNHB4OyAvKiBBZGQgcm91bmRlZCBjb3JuZXJzICovCiAgfQogIAogIC50YWItYnV0dG9ucyBidXR0b24uYWN0aXZlIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICNjZGQ3ZTI7CiAgICBjb2xvcjogIzNiNzQ5ODsKICB9CiAgLyogU3R5bGUgZm9yIHRhYiBjb250ZW50ICovCiAgaDIgewogICAgY29sb3I6ICMwMDdiZmY7CiAgfQoK"},{"version":3,"sources":["homepage.vue"],"names":[],"mappings":";AAwIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"homepage.vue","sourceRoot":"pages","sourcesContent":["<template>\n  <div>\n    <img src=\"../assets/img/nowcom.jpeg\" width=\"500\" height=\"200\"/>\n    <p>Nowcom Infrastructure </p>\n    <!-- Spinner Modal -->\n    <div v-if=\"isLoading\" class=\"spinner-modal\">\n      <div class=\"spinner-content\">\n        <!-- You can use an image or any other content for the spinner -->\n        <img src=\"../assets/img/loading.png\" alt=\"Loading Spinner\" class=\"spinner-image\" />\n      </div>\n    </div>\n    <!-- <ListNamespace ></ListNamespace> -->\n   <!-- <Home></Home> -->\n   <div></div>\n  </br>\n   <div>\n    <!-- Tab buttons -->\n    <div class=\"tab-buttons\">\n      <button @click=\"changeTab('tab1')\" :class=\"{ 'active': currentTab === 'tab1' }\">Basic</button>\n      <button @click=\"changeTab('tab2')\" :class=\"{ 'active': currentTab === 'tab2' }\">IP Address</button>\n      <button @click=\"changeTab('tab3')\" :class=\"{ 'active': currentTab === 'tab3' }\">Tags</button>\n    </div>\n\n    <!-- Tab content -->\n    <div v-if=\"currentTab === 'tab1'\">\n      <h2>Basic</h2>\n      <p>Basic</p>\n    </div>\n\n    <div v-if=\"currentTab === 'tab2'\">\n      <h2>IP Address</h2>\n      <p>IP Address</p>\n    </div>\n\n    <div v-if=\"currentTab === 'tab3'\">\n      <h2>Tags</h2>\n      <p>Tags</p>\n    </div>\n  </div>\n\n  </div>\n</template>\n\n\n<script>\nimport ListNamespace from '@shell/pages/c/_cluster/_product/namespaces.vue';\nimport Home from '@shell/pages/home.vue';\n\nimport axios from 'axios';\nimport { BASE_URL, VLAN_LIST_URL } from '../config/api.ts';\nimport { CAPI, CATALOG, type, NODE, POD  } from '@shell/config/types';\n\n\nexport default {\n    name: 'HomePage',\n    components: {\n      Home,\n      ListNamespace\n    },\n    data() {\n      return {\n        isLoading: false,\n        currentTab: 'tab1', // Initial tab\n      };\n    },\n    methods: {\n      changeTab(tabName) {\n          this.currentTab = tabName;\n      },\n      showSpinner() {\n        this.isLoading = true;\n        // Hide the spinner after 5 seconds\n        setTimeout(() => {\n          this.hideSpinner();\n        }, 3000);\n      },\n\n      hideSpinner() {\n        this.isLoading = false;\n      },\n\n      testAPI() {\n        // Define the request headers with the 'application/json' content type\n        const headers = {\n          'Content-Type': 'application/json',\n           'Accept': 'application/json',\n        };\n\n        // Fetch the VLAN list from your API\n        axios.get('/v1' ,{headers})\n          .then(response => {\n            this.test = response.data;\n            console.log(\"test\", this.test)\n          })\n          .catch(error => {\n            console.error('Error fetching test:', error);\n          });\n      },\n      \n    },\n    mounted() {\n      this.$store.dispatch('management/findAll', { type: 'node'})\n      .then(result => {\n        console.log(result)\n        // Iterate over the array and print the name and ID of each object\n        result.forEach(cluster => {\n          console.log('ID:', cluster.id);\n          console.log('Kind:', cluster.kind);\n        });\n      })\n      .catch(error => {\n        // Handle any errors here\n        console.error('Error fetching data:', error);\n      });\n\n      // this.$store.dispatch('management/create', { type: 'namespace', Name: \"testing\"})\n      // .then(result => {\n      //   console.log(result)\n      //   // Iterate over the array and print the name and ID of each object\n      //   result.forEach(cluster => {\n      //     console.log('ID:', cluster.id);\n      //     console.log('Kind:', cluster.kind);\n      //   });\n      // })\n      // .catch(error => {\n      //   // Handle any errors here\n      //   console.error('Error fetching data:', error);\n      // });\n      this.testAPI();\n      this.showSpinner();\n    },\n  };\n</script>\n\n\n<style lang=\"scss\" scoped>\n/* Your other styles */\n.spinner-modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.5); /* Semi-transparent black background for the modal effect */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000; /* Make sure the spinner is on top of other elements */\n}\n\n.spinner-content {\n  text-align: center;\n}\n\n.spinner-image {\n  width: 100px; /* Adjust the size of your spinner image */\n  height: 100px;\n  animation: spin 2s linear infinite; /* Rotate the image indefinitely \n  /* You can add more styles to customize the appearance of your spinner image */\n  border-radius: 50%; /* Make the image round */\n\n}\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* Add your styling here */\n .tab-buttons {\n    display: flex;\n    margin: 0 16px; /* Add margin to the buttons */\n  }\n  \n  .tab-buttons button {\n    padding: 5px 16px; /* Adjust padding for smaller buttons */\n    border: none;\n    background-color: #3b7498;\n    cursor: pointer;\n    margin-right: 8px; /* Add margin between buttons */\n    border-radius: 4px; /* Add rounded corners */\n  }\n  \n  .tab-buttons button.active {\n    background-color: #cdd7e2;\n    color: #3b7498;\n  }\n  /* Style for tab content */\n  h2 {\n    color: #007bff;\n  }\n\n</style>\n"]}]}