{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/CodeMirror.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/CodeMirror.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEtFWU1BUCB9IGZyb20gJ0BzaGVsbC9zdG9yZS9wcmVmcyc7CmltcG9ydCB7IF9FRElULCBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgJ0NvZGVNaXJyb3InLAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIFNldHMgdGhlIGVkaXQgbW9kZSBmb3IgVGV4dCBBcmVhLgogICAgICogQHZhbHVlcyBfRURJVCwgX1ZJRVcKICAgICAqLwogICAgbW9kZTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IF9FRElUCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgb3B0aW9uczogewogICAgICB0eXBlOiAgICBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHt9CiAgICB9LAogICAgYXNUZXh0QXJlYTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlTWlycm9yUmVmOiBudWxsLAogICAgICBsb2FkZWQ6ICAgICAgICBmYWxzZQogICAgfTsKICB9LAoKICBjb21wdXRlZDogewoKICAgIGlzRGlzYWJsZWQoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKCiAgICBjb21iaW5lZE9wdGlvbnMoKSB7CiAgICAgIGNvbnN0IHRoZW1lID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sncHJlZnMvdGhlbWUnXTsKICAgICAgY29uc3Qga2V5bWFwID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sncHJlZnMvZ2V0J10oS0VZTUFQKTsKCiAgICAgIGNvbnN0IG91dCA9IHsKICAgICAgICAvLyBjb2RlbWlycm9yIGRlZmF1bHQgb3B0aW9ucwogICAgICAgIHRhYlNpemU6ICAgICAgICAgICAgICAgICAyLAogICAgICAgIGluZGVudFdpdGhUYWJzOiAgICAgICAgICBmYWxzZSwKICAgICAgICBtb2RlOiAgICAgICAgICAgICAgICAgICAgJ3lhbWwnLAogICAgICAgIGtleU1hcDogICAgICAgICAgICAgICAgICBrZXltYXAsCiAgICAgICAgdGhlbWU6ICAgICAgICAgICAgICAgICAgIGBiYXNlMTYtJHsgdGhlbWUgfWAsCiAgICAgICAgbGluZU51bWJlcnM6ICAgICAgICAgICAgIHRydWUsCiAgICAgICAgbGluZTogICAgICAgICAgICAgICAgICAgIHRydWUsCiAgICAgICAgc3R5bGVBY3RpdmVMaW5lOiAgICAgICAgIHRydWUsCiAgICAgICAgbGluZVdyYXBwaW5nOiAgICAgICAgICAgIHRydWUsCiAgICAgICAgZm9sZEd1dHRlcjogICAgICAgICAgICAgIHRydWUsCiAgICAgICAgc3R5bGVTZWxlY3RlZFRleHQ6ICAgICAgIHRydWUsCiAgICAgICAgc2hvd0N1cnNvcldoZW5TZWxlY3Rpbmc6IHRydWUsCiAgICAgIH07CgogICAgICBpZiAodGhpcy5hc1RleHRBcmVhKSB7CiAgICAgICAgb3V0LmxpbmVOdW1iZXJzID0gZmFsc2U7CiAgICAgICAgb3V0LnRhYlNpemUgPSAwOwogICAgICAgIG91dC5leHRyYUtleXMgPSB7IFRhYjogZmFsc2UgfTsKICAgICAgfQoKICAgICAgT2JqZWN0LmFzc2lnbihvdXQsIHRoaXMub3B0aW9ucyk7CgogICAgICByZXR1cm4gb3V0OwogICAgfSwKICB9LAoKICBjcmVhdGVkKCkgewogICAgaWYgKHdpbmRvdy5fX2NvZGVNaXJyb3JMb2FkZXIpIHsKICAgICAgd2luZG93Ll9fY29kZU1pcnJvckxvYWRlcigpLnRoZW4oKCkgPT4gewogICAgICAgIHRoaXMubG9hZGVkID0gdHJ1ZTsKICAgICAgfSk7CiAgICB9IGVsc2UgewogICAgICBjb25zb2xlLmVycm9yKCdDb2RlIG1pcnJvciBsb2FkZXIgbm90IGF2YWlsYWJsZScpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CgogICAgZm9jdXMoKSB7CiAgICAgIGlmICggdGhpcy4kcmVmcy5jb2RlTWlycm9yUmVmICkgewogICAgICAgIHRoaXMuJHJlZnMuY29kZU1pcnJvclJlZi5jb2RlbWlycm9yLmZvY3VzKCk7CiAgICAgIH0KICAgIH0sCgogICAgcmVmcmVzaCgpIHsKICAgICAgaWYgKCB0aGlzLiRyZWZzLmNvZGVNaXJyb3JSZWYgKSB7CiAgICAgICAgdGhpcy4kcmVmcy5jb2RlTWlycm9yUmVmLnJlZnJlc2goKTsKICAgICAgfQogICAgfSwKCiAgICBvblJlYWR5KGNvZGVNaXJyb3JSZWYpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGNvZGVNaXJyb3JSZWYucmVmcmVzaCgpOwogICAgICAgIHRoaXMuY29kZU1pcnJvclJlZiA9IGNvZGVNaXJyb3JSZWY7CiAgICAgIH0pOwogICAgICB0aGlzLiRlbWl0KCdvblJlYWR5JywgY29kZU1pcnJvclJlZik7CiAgICB9LAoKICAgIG9uSW5wdXQobmV3Q29kZSkgewogICAgICB0aGlzLiRlbWl0KCdvbklucHV0JywgbmV3Q29kZSk7CiAgICB9LAoKICAgIG9uQ2hhbmdlcyhjb2RlTWlycm9yUmVmLCBjaGFuZ2VzKSB7CiAgICAgIHRoaXMuJGVtaXQoJ29uQ2hhbmdlcycsIGNvZGVNaXJyb3JSZWYsIGNoYW5nZXMpOwogICAgfSwKCiAgICBvbkZvY3VzKCkgewogICAgICB0aGlzLiRlbWl0KCdvbkZvY3VzJywgdHJ1ZSk7CiAgICB9LAoKICAgIG9uQmx1cigpIHsKICAgICAgdGhpcy4kZW1pdCgnb25Gb2N1cycsIGZhbHNlKTsKICAgIH0sCgogICAgdXBkYXRlVmFsdWUodmFsdWUpIHsKICAgICAgaWYgKCB0aGlzLiRyZWZzLmNvZGVNaXJyb3JSZWYgKSB7CiAgICAgICAgdGhpcy4kcmVmcy5jb2RlTWlycm9yUmVmLmNvZGVtaXJyb3IuZG9jLnNldFZhbHVlKHZhbHVlKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["CodeMirror.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CodeMirror.vue","sourceRoot":"../../node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { KEYMAP } from '@shell/store/prefs';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\n\nexport default {\n  name:  'CodeMirror',\n  props: {\n    /**\n     * Sets the edit mode for Text Area.\n     * @values _EDIT, _VIEW\n     */\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n    value: {\n      type:     String,\n      required: true,\n    },\n    options: {\n      type:    Object,\n      default: () => {}\n    },\n    asTextArea: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return {\n      codeMirrorRef: null,\n      loaded:        false\n    };\n  },\n\n  computed: {\n\n    isDisabled() {\n      return this.mode === _VIEW;\n    },\n\n    combinedOptions() {\n      const theme = this.$store.getters['prefs/theme'];\n      const keymap = this.$store.getters['prefs/get'](KEYMAP);\n\n      const out = {\n        // codemirror default options\n        tabSize:                 2,\n        indentWithTabs:          false,\n        mode:                    'yaml',\n        keyMap:                  keymap,\n        theme:                   `base16-${ theme }`,\n        lineNumbers:             true,\n        line:                    true,\n        styleActiveLine:         true,\n        lineWrapping:            true,\n        foldGutter:              true,\n        styleSelectedText:       true,\n        showCursorWhenSelecting: true,\n      };\n\n      if (this.asTextArea) {\n        out.lineNumbers = false;\n        out.tabSize = 0;\n        out.extraKeys = { Tab: false };\n      }\n\n      Object.assign(out, this.options);\n\n      return out;\n    },\n  },\n\n  created() {\n    if (window.__codeMirrorLoader) {\n      window.__codeMirrorLoader().then(() => {\n        this.loaded = true;\n      });\n    } else {\n      console.error('Code mirror loader not available'); // eslint-disable-line no-console\n    }\n  },\n\n  methods: {\n\n    focus() {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.codemirror.focus();\n      }\n    },\n\n    refresh() {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.refresh();\n      }\n    },\n\n    onReady(codeMirrorRef) {\n      this.$nextTick(() => {\n        codeMirrorRef.refresh();\n        this.codeMirrorRef = codeMirrorRef;\n      });\n      this.$emit('onReady', codeMirrorRef);\n    },\n\n    onInput(newCode) {\n      this.$emit('onInput', newCode);\n    },\n\n    onChanges(codeMirrorRef, changes) {\n      this.$emit('onChanges', codeMirrorRef, changes);\n    },\n\n    onFocus() {\n      this.$emit('onFocus', true);\n    },\n\n    onBlur() {\n      this.$emit('onFocus', false);\n    },\n\n    updateValue(value) {\n      if ( this.$refs.codeMirrorRef ) {\n        this.$refs.codeMirrorRef.codemirror.doc.setValue(value);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <client-only placeholder=\" Loading...\">\n    <div\n      class=\"code-mirror\"\n      :class=\"{['as-text-area']: asTextArea}\"\n    >\n      <codemirror\n        v-if=\"loaded\"\n        ref=\"codeMirrorRef\"\n        :value=\"value\"\n        :options=\"combinedOptions\"\n        :disabled=\"isDisabled\"\n        @ready=\"onReady\"\n        @input=\"onInput\"\n        @changes=\"onChanges\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n      <div v-else>\n        Loading...\n      </div>\n    </div>\n  </client-only>\n</template>\n\n<style lang=\"scss\">\n  .code-mirror {\n    z-index: 0;\n\n    .vue-codemirror .CodeMirror {\n      height: initial;\n      background: none\n    }\n\n    &.as-text-area {\n      min-height: 40px;\n      position: relative;\n      display: block;\n      box-sizing: border-box;\n      width: 100%;\n      padding: 10px;\n      background-color: var(--input-bg);\n      border-radius: var(--border-radius);\n      border: solid var(--border-width) var(--input-border);\n      color: var(--input-text);\n\n      &:hover {\n        border-color: var(--input-hover-border);\n      }\n\n      &:focus, &.focus {\n        outline: none;\n        border-color: var(--outline);\n      }\n\n      .CodeMirror-wrap pre {\n        word-break: break-word;\n      }\n      .CodeMirror-code {\n        .CodeMirror-line {\n          &:not(:last-child)>span:after,\n          .cm-markdown-single-trailing-space-odd:before,\n          .cm-markdown-single-trailing-space-even:before {\n            color: var(--muted);\n            position: absolute;\n            line-height: 20px;\n            pointer-events: none;\n          }\n          &:not(:last-child)>span:after {\n            content: 'â†µ';\n            margin-left: 2px;\n          }\n          .cm-markdown-single-trailing-space-odd:before,\n          .cm-markdown-single-trailing-space-even:before {\n            font-weight: bold;\n            content: 'Â·';\n          }\n        }\n      }\n\n      .CodeMirror-lines {\n        color: var(--input-text);\n        padding: 0;\n\n        .CodeMirror-line > span > span {\n          &.cm-overlay {\n            font-family: monospace;\n          }\n        }\n\n        .CodeMirror-line > span {\n          font-family: $body-font;\n        }\n      }\n\n      .CodeMirror-sizer {\n        min-height: 20px;\n      }\n\n      .CodeMirror-selected {\n        background-color: var(--primary) !important;\n      }\n\n      .CodeMirror-selectedtext {\n        color: var(--primary-text);\n      }\n\n      .CodeMirror-line::selection,\n      .CodeMirror-line > span::selection,\n      .CodeMirror-line > span > span::selection {\n        color: var(--primary-text);\n        background-color: var(--primary);\n      }\n\n      .CodeMirror-line::-moz-selection,\n      .CodeMirror-line > span::-moz-selection,\n      .CodeMirror-line > span > span::-moz-selection {\n        color: var(--primary-text);\n        background-color: var(--primary);\n      }\n    }\n\n  }\n\n</style>\n"]}]}