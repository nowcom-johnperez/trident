{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/FileSelector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/FileSelector.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IF9FRElULCBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgc2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CgpleHBvcnQgZnVuY3Rpb24gY3JlYXRlT25TZWxlY3RlZChmaWVsZCkgewogIHJldHVybiBmdW5jdGlvbihjb250ZW50cykgewogICAgc2V0KHRoaXMsIGZpZWxkLCBjb250ZW50cyk7CiAgfTsKfQoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICBsYWJlbDogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogX0VESVQKICAgIH0sCgogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAoKICAgIGluY2x1ZGVGaWxlTmFtZTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCgogICAgc2hvd0dyb3dsRXJyb3I6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKCiAgICBtdWx0aXBsZTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKCiAgICBieXRlTGltaXQ6IHsKICAgICAgdHlwZTogICAgTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAoKICAgIHJlYWRBc0RhdGFVcmw6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCgogICAgZGlyZWN0b3J5OiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAoKICAgIHJhd0RhdGE6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCgogICAgYWNjZXB0OiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJyonCiAgICB9LAoKICB9LAoKICBjb21wdXRlZDogewogICAgaXNWaWV3KCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBfVklFVzsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBzZWxlY3RGaWxlKCkgewogICAgICAvLyBDbGVhciB0aGUgdmFsdWUgc28gdGhlIHVzZXIgY2FuIHJlc2VsZWN0IHRoZSBzYW1lIGZpbGUgYWdhaW4KICAgICAgdGhpcy4kcmVmcy51cGxvYWRlci52YWx1ZSA9IG51bGw7CiAgICAgIHRoaXMuJHJlZnMudXBsb2FkZXIuY2xpY2soKTsKICAgIH0sCgogICAgYXN5bmMgZmlsZUNoYW5nZShldmVudCkgewogICAgICBjb25zdCBpbnB1dCA9IGV2ZW50LnRhcmdldDsKICAgICAgY29uc3QgZmlsZXMgPSBBcnJheS5mcm9tKGlucHV0LmZpbGVzIHx8IFtdKTsKCiAgICAgIGlmICh0aGlzLmJ5dGVMaW1pdCkgewogICAgICAgIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgICAgICAgaWYgKGZpbGUuc2l6ZSA+IHRoaXMuYnl0ZUxpbWl0KSB7CiAgICAgICAgICAgIHRoaXMuJGVtaXQoJ2Vycm9yJywgYCR7IGZpbGUubmFtZSB9IGV4Y2VlZHMgdGhlIGZpbGUgc2l6ZSBsaW1pdCBvZiAkeyB0aGlzLmJ5dGVMaW1pdCB9IGJ5dGVzYCk7CgogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAodGhpcy5yYXdEYXRhKSB7CiAgICAgICAgY29uc3QgdW5ib3hlZENvbnRlbnRzID0gIXRoaXMubXVsdGlwbGUgJiYgZmlsZXMubGVuZ3RoID09PSAxID8gZmlsZXNbMF0gOiBmaWxlczsKCiAgICAgICAgdGhpcy4kZW1pdCgnc2VsZWN0ZWQnLCB1bmJveGVkQ29udGVudHMpOwoKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgYXN5bmNGaWxlQ29udGVudHMgPSBmaWxlcy5tYXAodGhpcy5nZXRGaWxlQ29udGVudHMpOwogICAgICAgIGNvbnN0IGZpbGVDb250ZW50cyA9IGF3YWl0IFByb21pc2UuYWxsKGFzeW5jRmlsZUNvbnRlbnRzKTsKICAgICAgICBjb25zdCB1bmJveGVkQ29udGVudHMgPSAhdGhpcy5tdWx0aXBsZSAmJiBmaWxlQ29udGVudHMubGVuZ3RoID09PSAxID8gZmlsZUNvbnRlbnRzWzBdIDogZmlsZUNvbnRlbnRzOwoKICAgICAgICB0aGlzLiRlbWl0KCdzZWxlY3RlZCcsIHVuYm94ZWRDb250ZW50cyk7CiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgdGhpcy4kZW1pdCgnZXJyb3InLCBlcnJvcik7CiAgICAgICAgaWYgKHRoaXMuc2hvd0dyb3dsRXJyb3IpIHsKICAgICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdncm93bC9mcm9tRXJyb3InLCB7IHRpdGxlOiAnRXJyb3IgcmVhZGluZyBmaWxlJywgZXJyb3IgfSwgeyByb290OiB0cnVlIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICBnZXRGaWxlQ29udGVudHMoZmlsZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CgogICAgICAgIHJlYWRlci5vbmxvYWQgPSAoZXYpID0+IHsKICAgICAgICAgIGNvbnN0IHZhbHVlID0gZXYudGFyZ2V0LnJlc3VsdDsKICAgICAgICAgIGNvbnN0IG5hbWUgPSBmaWxlLm5hbWU7CiAgICAgICAgICBjb25zdCBmaWxlQ29udGVudHMgPSB0aGlzLmluY2x1ZGVGaWxlTmFtZSA/IHsgdmFsdWUsIG5hbWUgfSA6IHZhbHVlOwoKICAgICAgICAgIHJlc29sdmUoZmlsZUNvbnRlbnRzKTsKICAgICAgICB9OwoKICAgICAgICByZWFkZXIub25lcnJvciA9IChlcnIpID0+IHsKICAgICAgICAgIHJlamVjdChlcnIpOwogICAgICAgIH07CiAgICAgICAgaWYgKHRoaXMucmVhZEFzRGF0YVVybCkgewogICAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJlYWRlci5yZWFkQXNUZXh0KGZpbGUpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["FileSelector.vue"],"names":[],"mappingsfile":"FileSelector.vue","sourceRoot":"../../node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { set } from '@shell/utils/object';\n\nexport function createOnSelected(field) {\n  return function(contents) {\n    set(this, field, contents);\n  };\n}\n\nexport default {\n  props: {\n    label: {\n      type:     String,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false,\n    },\n\n    includeFileName: {\n      type:    Boolean,\n      default: false,\n    },\n\n    showGrowlError: {\n      type:    Boolean,\n      default: true\n    },\n\n    multiple: {\n      type:    Boolean,\n      default: false\n    },\n\n    byteLimit: {\n      type:    Number,\n      default: 0\n    },\n\n    readAsDataUrl: {\n      type:    Boolean,\n      default: false\n    },\n\n    directory: {\n      type:    Boolean,\n      default: false\n    },\n\n    rawData: {\n      type:    Boolean,\n      default: false\n    },\n\n    accept: {\n      type:    String,\n      default: '*'\n    },\n\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    }\n  },\n\n  methods: {\n    selectFile() {\n      // Clear the value so the user can reselect the same file again\n      this.$refs.uploader.value = null;\n      this.$refs.uploader.click();\n    },\n\n    async fileChange(event) {\n      const input = event.target;\n      const files = Array.from(input.files || []);\n\n      if (this.byteLimit) {\n        for (const file of files) {\n          if (file.size > this.byteLimit) {\n            this.$emit('error', `${ file.name } exceeds the file size limit of ${ this.byteLimit } bytes`);\n\n            return;\n          }\n        }\n      }\n\n      if (this.rawData) {\n        const unboxedContents = !this.multiple && files.length === 1 ? files[0] : files;\n\n        this.$emit('selected', unboxedContents);\n\n        return;\n      }\n\n      try {\n        const asyncFileContents = files.map(this.getFileContents);\n        const fileContents = await Promise.all(asyncFileContents);\n        const unboxedContents = !this.multiple && fileContents.length === 1 ? fileContents[0] : fileContents;\n\n        this.$emit('selected', unboxedContents);\n      } catch (error) {\n        this.$emit('error', error);\n        if (this.showGrowlError) {\n          this.$store.dispatch('growl/fromError', { title: 'Error reading file', error }, { root: true });\n        }\n      }\n    },\n\n    getFileContents(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = (ev) => {\n          const value = ev.target.result;\n          const name = file.name;\n          const fileContents = this.includeFileName ? { value, name } : value;\n\n          resolve(fileContents);\n        };\n\n        reader.onerror = (err) => {\n          reject(err);\n        };\n        if (this.readAsDataUrl) {\n          reader.readAsDataURL(file);\n        } else {\n          reader.readAsText(file);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <button\n    v-if=\"!isView\"\n    :disabled=\"disabled\"\n    type=\"button\"\n    class=\"file-selector btn\"\n    @click=\"selectFile\"\n  >\n    <span>{{ label }}</span>\n    <input\n      ref=\"uploader\"\n      type=\"file\"\n      class=\"hide\"\n      :multiple=\"multiple\"\n      :webkitdirectory=\"directory\"\n      :accept=\"accept\"\n      @change=\"fileChange\"\n    >\n  </button>\n</template>\n"]}]}