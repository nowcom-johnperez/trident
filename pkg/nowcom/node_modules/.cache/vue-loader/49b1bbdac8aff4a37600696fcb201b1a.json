{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Footer.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Footer.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCBBc3luY0J1dHRvbiwgeyBBc3luY0J1dHRvbkNhbGxiYWNrIH0gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQXN5bmNCdXR0b24udnVlJzsKaW1wb3J0IEJhbm5lciBmcm9tICdAY29tcG9uZW50cy9CYW5uZXIvQmFubmVyLnZ1ZSc7CgpleHBvcnQgZGVmYXVsdCBWdWUuZXh0ZW5kKHsKICBjb21wb25lbnRzOiB7IEFzeW5jQnV0dG9uLCBCYW5uZXIgfSwKCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogQ3VycmVudCBtb2RlIG9mIHRoZSBwYWdlCiAgICAgKiBwYXNzZWQgdG8gYXN5bmNCdXR0b24gdG8gZGV0ZXJtaW5lIGxhYmxlcyBvZiB0aGUgYnV0dG9uCiAgICAgKi8KICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIGVycm9yczogewogICAgICB0eXBlOiAgICBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCgogICAgZGlzYWJsZVNhdmU6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGlzVmlldygpOiBib29sZWFuIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gX1ZJRVc7CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIHNhdmUoYnV0dG9uQ2I6IEFzeW5jQnV0dG9uQ2FsbGJhY2spIHsKICAgICAgdGhpcy4kZW1pdCgnc2F2ZScsIGJ1dHRvbkNiKTsKICAgIH0sCgogICAgZG9uZSgpIHsKICAgICAgdGhpcy4kZW1pdCgnZG9uZScpOwogICAgfQogIH0KfSk7Cg=="},{"version":3,"sources":["Footer.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Footer.vue","sourceRoot":"../../node_modules/@rancher/shell/components/form","sourcesContent":["<script lang=\"ts\">\nimport Vue from 'vue';\nimport { _VIEW } from '@shell/config/query-params';\nimport AsyncButton, { AsyncButtonCallback } from '@shell/components/AsyncButton.vue';\nimport Banner from '@components/Banner/Banner.vue';\n\nexport default Vue.extend({\n  components: { AsyncButton, Banner },\n\n  props: {\n    /**\n     * Current mode of the page\n     * passed to asyncButton to determine lables of the button\n     */\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    errors: {\n      type:    Array,\n      default: null,\n    },\n\n    disableSave: {\n      type:    Boolean,\n      default: false,\n    }\n  },\n\n  computed: {\n    isView(): boolean {\n      return this.mode === _VIEW;\n    },\n  },\n\n  methods: {\n    save(buttonCb: AsyncButtonCallback) {\n      this.$emit('save', buttonCb);\n    },\n\n    done() {\n      this.$emit('done');\n    }\n  }\n});\n</script>\n<template>\n  <div v-if=\"!isView\">\n    <div class=\"spacer-small\" />\n\n    <div\n      v-for=\"(err,idx) in errors\"\n      :key=\"idx\"\n    >\n      <Banner\n        color=\"error\"\n        :label=\"err\"\n      />\n    </div>\n    <div class=\"buttons\">\n      <div class=\"left\">\n        <slot name=\"left\" />\n      </div>\n      <div class=\"right\">\n        <slot name=\"cancel\">\n          <button\n            type=\"button\"\n            class=\"btn role-secondary\"\n            @click=\"done\"\n          >\n            <t k=\"generic.cancel\" />\n          </button>\n        </slot>\n        <slot name=\"middle\" />\n        <slot name=\"save\">\n          <AsyncButton\n            v-if=\"!isView\"\n            :mode=\"mode\"\n            :disabled=\"disableSave\"\n            @click=\"save\"\n          />\n        </slot>\n        <slot name=\"right\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n  .buttons {\n    display: grid;\n    grid-template-areas:  \"left right\";\n    grid-template-columns: \"min-content auto\";\n\n    .left {\n      grid-area: left;\n      text-align: left;\n\n      .btn, button {\n        margin: 0 $column-gutter 0 0;\n      }\n    }\n\n    .right {\n      grid-area: right;\n      text-align: right;\n\n      .btn, button {\n        margin: 0 0 0 $column-gutter;\n      }\n    }\n  }\n</style>\n"]}]}