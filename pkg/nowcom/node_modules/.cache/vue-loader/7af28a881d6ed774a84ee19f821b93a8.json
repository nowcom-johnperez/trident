{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/rancher-components/BadgeState/BadgeState.vue?vue&type=style&index=0&id=70e48e16&prod&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/rancher-components/BadgeState/BadgeState.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5iYWRnZS1zdGF0ZSB7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBkaXNwbGF5OiBpbmxpbmUtZmxleDsKICBwYWRkaW5nOiAycHggMTBweDsKICBib3JkZXI6IDFweCBzb2xpZCB0cmFuc3BhcmVudDsKICBib3JkZXItcmFkaXVzOiAyMHB4OwoKICAmLmJnLWluZm8gewogICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1wcmltYXJ5KTsKICB9CgogICYuYmctZXJyb3IgewogICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1lcnJvcik7CiAgfQoKICAmLmJnLXdhcm5pbmcgewogICAgYm9yZGVyLWNvbG9yOiB2YXIoLS13YXJuaW5nKTsKICB9CgogIC8vIFN1Y2Nlc3NmdWwgc3RhdGVzIGFyZSBkZS1lbXBoYXNpemVkIGJ5IHVzaW5nIFt0ZXh0LV1jb2xvciBpbnN0ZWFkIG9mIGJhY2tncm91bmQtY29sb3IKICAmLmJnLXN1Y2Nlc3MgewogICAgY29sb3I6IHZhcigtLXN1Y2Nlc3MpOwogICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7CiAgICBib3JkZXItY29sb3I6IHZhcigtLXN1Y2Nlc3MpOwogIH0KfQo="},{"version":3,"sources":["BadgeState.vue"],"names":[],"mappings":";AAgHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BadgeState.vue","sourceRoot":"../../node_modules/@rancher/shell/rancher-components/BadgeState","sourcesContent":["<script lang=\"ts\">\nimport Vue, { PropType } from 'vue';\n\ninterface Badge {\n  stateBackground: string;\n  stateDisplay: string;\n}\n\n/**\n * Badge state component.\n * <p>Represents a badge whose label and color is either taken from the value property or\n * from the label and color properties. The state property takes precedence.</p>\n */\nexport default Vue.extend({\n  props: {\n    /**\n     * A value having the properties `stateBackground` and `stateDisplay`\n     */\n    value: {\n      type:    Object as PropType<Badge>,\n      default: null\n    },\n\n    /**\n     * Badge color. `stateBackground` of the value property takes precedence if supplied\n     */\n    color: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * Optional icon to be shown before the label\n     */\n    icon: {\n      type:    String,\n      default: null\n    },\n\n    /**\n     * Label to display in the badge. `stateDisplay` of the value property takes precedence if supplied\n     */\n    label: {\n      type:    String,\n      default: null\n    }\n  },\n\n  computed: {\n    bg(): string | null {\n      return this.value?.stateBackground || this.color;\n    },\n\n    msg(): string | null {\n      return this.value?.stateDisplay || this.label;\n    }\n  }\n});\n</script>\n\n<template>\n  <span :class=\"{'badge-state': true, [bg]: true}\">\n    <i\n      v-if=\"icon\"\n      class=\"icon\"\n      :class=\"{[icon]: true, 'mr-5': !!msg}\"\n    />{{ msg }}\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n  .badge-state {\n    align-items: center;\n    display: inline-flex;\n    padding: 2px 10px;\n    border: 1px solid transparent;\n    border-radius: 20px;\n\n    &.bg-info {\n      border-color: var(--primary);\n    }\n\n    &.bg-error {\n      border-color: var(--error);\n    }\n\n    &.bg-warning {\n      border-color: var(--warning);\n    }\n\n    // Successful states are de-emphasized by using [text-]color instead of background-color\n    &.bg-success {\n      color: var(--success);\n      background: transparent;\n      border-color: var(--success);\n    }\n  }\n</style>\n<style lang=\"scss\">\n  // TODO: #6005\n  // Investigate why this is here.. I don't think that styles for sortable table should belong here\n  .sortable-table TD .badge-state {\n    @include clip;\n    display: inline-block;\n    max-width: 100%;\n    position: relative;\n    max-width: 110px;\n    font-size: .85em;\n    vertical-align: middle;\n  }\n</style>\n"]}]}