{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--2-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ResourceList/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ResourceList/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlc291cmNlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VUYWJsZSc7CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgTWFzdGhlYWQgZnJvbSAnLi9NYXN0aGVhZCc7CmltcG9ydCBSZXNvdXJjZUxvYWRpbmdJbmRpY2F0b3IgZnJvbSAnLi9SZXNvdXJjZUxvYWRpbmdJbmRpY2F0b3InOwppbXBvcnQgUmVzb3VyY2VGZXRjaCBmcm9tICdAc2hlbGwvbWl4aW5zL3Jlc291cmNlLWZldGNoJzsKaW1wb3J0IEljb25NZXNzYWdlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0ljb25NZXNzYWdlLnZ1ZSc7CmltcG9ydCB7IFJlc291cmNlTGlzdENvbXBvbmVudE5hbWUgfSBmcm9tICcuL3Jlc291cmNlLWxpc3QuY29uZmlnJzsKaW1wb3J0IHsgUGFuZWxMb2NhdGlvbiwgRXh0ZW5zaW9uUG9pbnQgfSBmcm9tICdAc2hlbGwvY29yZS90eXBlcyc7CmltcG9ydCBFeHRlbnNpb25QYW5lbCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9FeHRlbnNpb25QYW5lbCc7CmltcG9ydCB7IHNhbWVDb250ZW50cyB9IGZyb20gJ0BzaGVsbC91dGlscy9hcnJheSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiBSZXNvdXJjZUxpc3RDb21wb25lbnROYW1lLAogIGNvbXBvbmVudHM6IHsKICAgIExvYWRpbmcsCiAgICBSZXNvdXJjZVRhYmxlLAogICAgTWFzdGhlYWQsCiAgICBSZXNvdXJjZUxvYWRpbmdJbmRpY2F0b3IsCiAgICBJY29uTWVzc2FnZSwKICAgIEV4dGVuc2lvblBhbmVsCiAgfSwKICBtaXhpbnM6IFtSZXNvdXJjZUZldGNoXSwKICBwcm9wczogewogICAgaGFzQWR2YW5jZWRGaWx0ZXJpbmc6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBhZHZGaWx0ZXJIaWRlTGFiZWxzQXNDb2xzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgYWR2RmlsdGVyUHJldmVudEZpbHRlcmluZ0xhYmVsczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBjb25zdCBzdG9yZSA9IHRoaXMuJHN0b3JlOwogICAgY29uc3QgcmVzb3VyY2UgPSB0aGlzLnJlc291cmNlOwogICAgY29uc3Qgc2NoZW1hID0gdGhpcy5zY2hlbWE7CiAgICBpZiAodGhpcy5oYXNMaXN0Q29tcG9uZW50KSB7CiAgICAgIHZhciBfYXdhaXQkaW1wb3J0ZXI7CiAgICAgIC8vIElmIHlvdSBwcm92aWRlIHlvdXIgb3duIGxpc3QgdGhlbiBjYWxsIGl0cyBhc3luY0RhdGEKICAgICAgY29uc3QgaW1wb3J0ZXIgPSB0aGlzLmxpc3RDb21wb25lbnQ7CiAgICAgIGNvbnN0IGNvbXBvbmVudCA9IChfYXdhaXQkaW1wb3J0ZXIgPSBhd2FpdCBpbXBvcnRlcigpKSA9PT0gbnVsbCB8fCBfYXdhaXQkaW1wb3J0ZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hd2FpdCRpbXBvcnRlci5kZWZhdWx0OwogICAgICBpZiAoY29tcG9uZW50ICE9PSBudWxsICYmIGNvbXBvbmVudCAhPT0gdm9pZCAwICYmIGNvbXBvbmVudC50eXBlRGlzcGxheSkgewogICAgICAgIHRoaXMuY3VzdG9tVHlwZURpc3BsYXkgPSBjb21wb25lbnQudHlwZURpc3BsYXkuYXBwbHkodGhpcyk7CiAgICAgIH0KCiAgICAgIC8vIElmIHlvdXIgbGlzdCBwYWdlIGhhcyBhIGZldGNoIHRoZW4gaXQncyByZXNwb25zaWJsZSBmb3IgcG9wdWxhdGluZyByb3dzIGl0c2VsZgogICAgICBpZiAoY29tcG9uZW50ICE9PSBudWxsICYmIGNvbXBvbmVudCAhPT0gdm9pZCAwICYmIGNvbXBvbmVudC5mZXRjaCkgewogICAgICAgIHRoaXMuaGFzRmV0Y2ggPSB0cnVlOwogICAgICB9CgogICAgICAvLyBJZiB0aGUgY3VzdG9tIGNvbXBvbmVudCBzdXBwb3J0cyBpdCwgYXNrIGl0IHdoYXQgcmVzb3VyY2VzIGl0IGxvYWRzLCBzbyB3ZSBjYW4KICAgICAgLy8gdXNlIHRoZSBpbmNyZW1lbnRhbCBsb2FkaW5nIGluZGljYXRvciB3aGVuIGVuYWJsZWQKICAgICAgaWYgKGNvbXBvbmVudCAhPT0gbnVsbCAmJiBjb21wb25lbnQgIT09IHZvaWQgMCAmJiBjb21wb25lbnQuJGxvYWRpbmdSZXNvdXJjZXMpIHsKICAgICAgICBjb25zdCB7CiAgICAgICAgICBsb2FkUmVzb3VyY2VzLAogICAgICAgICAgbG9hZEluZGV0ZXJtaW5hdGUKICAgICAgICB9ID0gY29tcG9uZW50ID09PSBudWxsIHx8IGNvbXBvbmVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29tcG9uZW50LiRsb2FkaW5nUmVzb3VyY2VzKHRoaXMuJHJvdXRlLCB0aGlzLiRzdG9yZSk7CiAgICAgICAgdGhpcy5sb2FkUmVzb3VyY2VzID0gbG9hZFJlc291cmNlcyB8fCBbcmVzb3VyY2VdOwogICAgICAgIHRoaXMubG9hZEluZGV0ZXJtaW5hdGUgPSBsb2FkSW5kZXRlcm1pbmF0ZSB8fCBmYWxzZTsKICAgICAgfQogICAgfQogICAgaWYgKCF0aGlzLmhhc0ZldGNoKSB7CiAgICAgIGlmICghc2NoZW1hKSB7CiAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ2xvYWRpbmdFcnJvcicsIG5ldyBFcnJvcih0aGlzLnQoJ25hdi5mYWlsV2hhbGUucmVzb3VyY2VMaXN0Tm90Rm91bmQnLCB7CiAgICAgICAgICByZXNvdXJjZQogICAgICAgIH0sIHRydWUpKSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICAvLyBTZWUgY29tbWVudCBmb3IgYG5hbWVzcGFjZUZpbHRlclJlcXVpcmVkYCB3YXRjaGVyLCBza2lwIGZldGNoIGlmIHdlIGRvbid0IGhhdmUgYSB2YWxpZCBOUwogICAgICBpZiAoIXRoaXMubmFtZXNwYWNlRmlsdGVyUmVxdWlyZWQpIHsKICAgICAgICBhd2FpdCB0aGlzLiRmZXRjaFR5cGUocmVzb3VyY2UpOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgY29uc3QgZ2V0dGVycyA9IHRoaXMuJHN0b3JlLmdldHRlcnM7CiAgICBjb25zdCBwYXJhbXMgPSB7CiAgICAgIC4uLnRoaXMuJHJvdXRlLnBhcmFtcwogICAgfTsKICAgIGNvbnN0IHJlc291cmNlID0gcGFyYW1zLnJlc291cmNlOwogICAgY29uc3QgaGFzTGlzdENvbXBvbmVudCA9IGdldHRlcnNbJ3R5cGUtbWFwL2hhc0N1c3RvbUxpc3QnXShyZXNvdXJjZSk7CiAgICBjb25zdCBpblN0b3JlID0gZ2V0dGVyc1snY3VycmVudFN0b3JlJ10ocmVzb3VyY2UpOwogICAgY29uc3Qgc2NoZW1hID0gZ2V0dGVyc1tgJHtpblN0b3JlfS9zY2hlbWFGb3JgXShyZXNvdXJjZSk7CiAgICBjb25zdCBzaG93TWFzdGhlYWQgPSBnZXR0ZXJzW2B0eXBlLW1hcC9vcHRpb25zRm9yYF0ocmVzb3VyY2UpLnNob3dMaXN0TWFzdGhlYWQ7CiAgICByZXR1cm4gewogICAgICBpblN0b3JlLAogICAgICBzY2hlbWEsCiAgICAgIGhhc0xpc3RDb21wb25lbnQsCiAgICAgIHNob3dNYXN0aGVhZDogc2hvd01hc3RoZWFkID09PSB1bmRlZmluZWQgPyB0cnVlIDogc2hvd01hc3RoZWFkLAogICAgICByZXNvdXJjZSwKICAgICAgZXh0ZW5zaW9uVHlwZTogRXh0ZW5zaW9uUG9pbnQuUEFORUwsCiAgICAgIGV4dGVuc2lvbkxvY2F0aW9uOiBQYW5lbExvY2F0aW9uLlJFU09VUkNFX0xJU1QsCiAgICAgIGxvYWRSZXNvdXJjZXM6IFtyZXNvdXJjZV0sCiAgICAgIC8vIExpc3Qgb2YgcmVzb3VyY2VzIHRoYXQgd2lsbCBiZSBsb2FkZWQsIHRoaXMgY291bGQgYmUgbWFueSAoYFdvcmtsb2Fkc2ApCiAgICAgIGhhc0ZldGNoOiBmYWxzZSwKICAgICAgLy8gbWFudWFsIHJlZnJlc2gKICAgICAgbWFudWFsUmVmcmVzaEluaXQ6IGZhbHNlLAogICAgICB3YXRjaDogZmFsc2UsCiAgICAgIGZvcmNlOiBmYWxzZSwKICAgICAgLy8gUHJvdmlkZWQgYnkgZmV0Y2ggbGF0ZXIKICAgICAgY3VzdG9tVHlwZURpc3BsYXk6IG51bGwsCiAgICAgIC8vIGluY3JlbWVudGFsIGxvYWRpbmcKICAgICAgbG9hZEluZGV0ZXJtaW5hdGU6IGZhbHNlLAogICAgICAvLyBxdWVyeSBwYXJhbSBmb3Igc2ltcGxlIGZpbHRlcmluZwogICAgICB1c2VRdWVyeVBhcmFtc0ZvclNpbXBsZUZpbHRlcmluZzogdHJ1ZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBoZWFkZXJzKCkgewogICAgICBpZiAodGhpcy5oYXNMaXN0Q29tcG9uZW50IHx8ICF0aGlzLnNjaGVtYSkgewogICAgICAgIC8vIEN1c3RvbSBsaXN0cyBmaWd1cmUgb3V0IHRoZWlyIG93biBoZWFkZXJzCiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9oZWFkZXJzRm9yJ10odGhpcy5zY2hlbWEpOwogICAgfSwKICAgIGdyb3VwQnkoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9ncm91cEJ5Rm9yJ10odGhpcy5zY2hlbWEpOwogICAgfSwKICAgIHNob3dJbmNyZW1lbnRhbExvYWRpbmdJbmRpY2F0b3IoKSB7CiAgICAgIHZhciBfdGhpcyRwZXJmQ29uZmlnOwogICAgICByZXR1cm4gKF90aGlzJHBlcmZDb25maWcgPSB0aGlzLnBlcmZDb25maWcpID09PSBudWxsIHx8IF90aGlzJHBlcmZDb25maWcgPT09IHZvaWQgMCB8fCAoX3RoaXMkcGVyZkNvbmZpZyA9IF90aGlzJHBlcmZDb25maWcuaW5jcmVtZW50YWxMb2FkaW5nKSA9PT0gbnVsbCB8fCBfdGhpcyRwZXJmQ29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRwZXJmQ29uZmlnLmVuYWJsZWQ7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgLyoqCiAgICAgKiBXaGVuIGEgTlMgZmlsdGVyIGlzIHJlcXVpcmVkIGFuZCB0aGUgdXNlciBzZWxlY3RzIGEgZGlmZmVyZW50IG9uZSwga2ljayBvZmYgYSBuZXcgc2V0IG9mIEFQSSByZXF1ZXN0cwogICAgICoKICAgICAqIFJlc291cmNlTGlzdCBoYXMgdHdvIG1vZGVzCiAgICAgKiAxKSBSZXNvdXJjZUxpc3QgY29tcG9uZW50IGhhbmRsZXMgQVBJIHJlcXVlc3QgdG8gZmV0Y2ggcmVzb3VyY2VzCiAgICAgKiAyKSBDdXN0b20gbGlzdCBjb21wb25lbnQgaGFuZGxlcyBBUEkgcmVxdWVzdCB0byBmZXRjaCByZXNvdXJjZXMKICAgICAqCiAgICAgKiBUaGlzIGNvdmVycyBjYXNlIDEKICAgICAqLwogICAgbmFtZXNwYWNlRmlsdGVyKG5ldSwgb2xkKSB7CiAgICAgIGlmIChzYW1lQ29udGVudHMobmV1LCBvbGQpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGlmIChuZXUgJiYgIXRoaXMuaGFzRmV0Y2gpIHsKICAgICAgICB0aGlzLiRmZXRjaFR5cGUodGhpcy5yZXNvdXJjZSk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICBsZXQgbGlzdENvbXBvbmVudCA9IGZhbHNlOwogICAgY29uc3QgcmVzb3VyY2UgPSB0aGlzLiRyb3V0ZS5wYXJhbXMucmVzb3VyY2U7CiAgICBjb25zdCBoYXNMaXN0Q29tcG9uZW50ID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sndHlwZS1tYXAvaGFzQ3VzdG9tTGlzdCddKHJlc291cmNlKTsKICAgIGlmIChoYXNMaXN0Q29tcG9uZW50KSB7CiAgICAgIGxpc3RDb21wb25lbnQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9pbXBvcnRMaXN0J10ocmVzb3VyY2UpOwogICAgfQogICAgdGhpcy5saXN0Q29tcG9uZW50ID0gbGlzdENvbXBvbmVudDsKICB9Cn07"},{"version":3,"names":["ResourceTable","Loading","Masthead","ResourceLoadingIndicator","ResourceFetch","IconMessage","ResourceListComponentName","PanelLocation","ExtensionPoint","ExtensionPanel","sameContents","name","components","mixins","props","hasAdvancedFiltering","type","Boolean","default","advFilterHideLabelsAsCols","advFilterPreventFilteringLabels","fetch","store","$store","resource","schema","hasListComponent","_await$importer","importer","listComponent","component","typeDisplay","customTypeDisplay","apply","hasFetch","$loadingResources","loadResources","loadIndeterminate","$route","dispatch","Error","t","namespaceFilterRequired","$fetchType","data","getters","params","inStore","showMasthead","showListMasthead","undefined","extensionType","PANEL","extensionLocation","RESOURCE_LIST","manualRefreshInit","watch","force","useQueryParamsForSimpleFiltering","computed","headers","groupBy","showIncrementalLoadingIndicator","_this$perfConfig","perfConfig","incrementalLoading","enabled","namespaceFilter","neu","old","created"],"sources":["../../node_modules/@rancher/shell/components/ResourceList/index.vue"],"sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Loading from '@shell/components/Loading';\nimport Masthead from './Masthead';\nimport ResourceLoadingIndicator from './ResourceLoadingIndicator';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport IconMessage from '@shell/components/IconMessage.vue';\nimport { ResourceListComponentName } from './resource-list.config';\nimport { PanelLocation, ExtensionPoint } from '@shell/core/types';\nimport ExtensionPanel from '@shell/components/ExtensionPanel';\nimport { sameContents } from '@shell/utils/array';\n\nexport default {\n  name: ResourceListComponentName,\n\n  components: {\n    Loading,\n    ResourceTable,\n    Masthead,\n    ResourceLoadingIndicator,\n    IconMessage,\n    ExtensionPanel\n  },\n  mixins: [ResourceFetch],\n\n  props: {\n    hasAdvancedFiltering: {\n      type:    Boolean,\n      default: false\n    },\n    advFilterHideLabelsAsCols: {\n      type:    Boolean,\n      default: false\n    },\n    advFilterPreventFilteringLabels: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  async fetch() {\n    const store = this.$store;\n    const resource = this.resource;\n\n    const schema = this.schema;\n\n    if ( this.hasListComponent ) {\n      // If you provide your own list then call its asyncData\n      const importer = this.listComponent;\n      const component = (await importer())?.default;\n\n      if ( component?.typeDisplay ) {\n        this.customTypeDisplay = component.typeDisplay.apply(this);\n      }\n\n      // If your list page has a fetch then it's responsible for populating rows itself\n      if ( component?.fetch ) {\n        this.hasFetch = true;\n      }\n\n      // If the custom component supports it, ask it what resources it loads, so we can\n      // use the incremental loading indicator when enabled\n      if (component?.$loadingResources) {\n        const { loadResources, loadIndeterminate } = component?.$loadingResources(this.$route, this.$store);\n\n        this.loadResources = loadResources || [resource];\n        this.loadIndeterminate = loadIndeterminate || false;\n      }\n    }\n\n    if ( !this.hasFetch ) {\n      if ( !schema ) {\n        store.dispatch('loadingError', new Error(this.t('nav.failWhale.resourceListNotFound', { resource }, true)));\n\n        return;\n      }\n\n      // See comment for `namespaceFilterRequired` watcher, skip fetch if we don't have a valid NS\n      if (!this.namespaceFilterRequired) {\n        await this.$fetchType(resource);\n      }\n    }\n  },\n\n  data() {\n    const getters = this.$store.getters;\n    const params = { ...this.$route.params };\n    const resource = params.resource;\n\n    const hasListComponent = getters['type-map/hasCustomList'](resource);\n\n    const inStore = getters['currentStore'](resource);\n    const schema = getters[`${ inStore }/schemaFor`](resource);\n\n    const showMasthead = getters[`type-map/optionsFor`](resource).showListMasthead;\n\n    return {\n      inStore,\n      schema,\n      hasListComponent,\n      showMasthead:                     showMasthead === undefined ? true : showMasthead,\n      resource,\n      extensionType:                    ExtensionPoint.PANEL,\n      extensionLocation:                PanelLocation.RESOURCE_LIST,\n      loadResources:                    [resource], // List of resources that will be loaded, this could be many (`Workloads`)\n      hasFetch:                         false,\n      // manual refresh\n      manualRefreshInit:                false,\n      watch:                            false,\n      force:                            false,\n      // Provided by fetch later\n      customTypeDisplay:                null,\n      // incremental loading\n      loadIndeterminate:                false,\n      // query param for simple filtering\n      useQueryParamsForSimpleFiltering: true\n    };\n  },\n\n  computed: {\n    headers() {\n      if ( this.hasListComponent || !this.schema ) {\n        // Custom lists figure out their own headers\n        return [];\n      }\n\n      return this.$store.getters['type-map/headersFor'](this.schema);\n    },\n\n    groupBy() {\n      return this.$store.getters['type-map/groupByFor'](this.schema);\n    },\n\n    showIncrementalLoadingIndicator() {\n      return this.perfConfig?.incrementalLoading?.enabled;\n    },\n\n  },\n\n  watch: {\n    /**\n     * When a NS filter is required and the user selects a different one, kick off a new set of API requests\n     *\n     * ResourceList has two modes\n     * 1) ResourceList component handles API request to fetch resources\n     * 2) Custom list component handles API request to fetch resources\n     *\n     * This covers case 1\n     */\n    namespaceFilter(neu, old) {\n      if (sameContents(neu, old)) {\n        return;\n      }\n\n      if (neu && !this.hasFetch) {\n        this.$fetchType(this.resource);\n      }\n    }\n  },\n\n  created() {\n    let listComponent = false;\n\n    const resource = this.$route.params.resource;\n    const hasListComponent = this.$store.getters['type-map/hasCustomList'](resource);\n\n    if ( hasListComponent ) {\n      listComponent = this.$store.getters['type-map/importList'](resource);\n    }\n\n    this.listComponent = listComponent;\n  },\n};\n</script>\n\n<template>\n  <IconMessage\n    v-if=\"namespaceFilterRequired\"\n    :vertical=\"true\"\n    :subtle=\"false\"\n    icon=\"icon-filter_alt\"\n  >\n    <template #message>\n      {{ t('resourceList.nsFiltering') }}\n    </template>\n  </IconMessage>\n  <div v-else>\n    <Masthead\n      v-if=\"showMasthead\"\n      :type-display=\"customTypeDisplay\"\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :show-incremental-loading-indicator=\"showIncrementalLoadingIndicator\"\n      :load-resources=\"loadResources\"\n      :load-indeterminate=\"loadIndeterminate\"\n    >\n      <template slot=\"extraActions\">\n        <slot name=\"extraActions\" />\n      </template>\n    </Masthead>\n    <!-- Extensions area -->\n    <ExtensionPanel\n      :resource=\"{}\"\n      :type=\"extensionType\"\n      :location=\"extensionLocation\"\n    />\n\n    <div v-if=\"hasListComponent\">\n      <component\n        :is=\"listComponent\"\n        :incremental-loading-indicator=\"showIncrementalLoadingIndicator\"\n        :rows=\"rows\"\n        v-bind=\"$data\"\n      />\n    </div>\n    <ResourceTable\n      v-else\n      :schema=\"schema\"\n      :rows=\"rows\"\n      :loading=\"loading\"\n      :headers=\"headers\"\n      :group-by=\"groupBy\"\n      :has-advanced-filtering=\"hasAdvancedFiltering\"\n      :adv-filter-hide-labels-as-cols=\"advFilterHideLabelsAsCols\"\n      :adv-filter-prevent-filtering-labels=\"advFilterPreventFilteringLabels\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    />\n  </div>\n</template>\n\n  <style lang=\"scss\" scoped>\n    .header {\n      position: relative;\n    }\n    H2 {\n      position: relative;\n      margin: 0 0 20px 0;\n    }\n    .filter{\n      line-height: 45px;\n    }\n    .right-action {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n    }\n  </style>\n"],"mappings":"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"}]}