{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/features.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/features.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTUFOQUdFTUVOVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwpjb25zdCBkZWZpbml0aW9ucyA9IHt9OwpleHBvcnQgY29uc3QgY3JlYXRlID0gZnVuY3Rpb24gKG5hbWUsIGRlZikgewogIGRlZmluaXRpb25zW25hbWVdID0gewogICAgZGVmCiAgfTsKICByZXR1cm4gbmFtZTsKfTsKZXhwb3J0IGNvbnN0IG1hcEZlYXR1cmUgPSBmdW5jdGlvbiAobmFtZSkgewogIHJldHVybiB7CiAgICBnZXQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydmZWF0dXJlcy9nZXQnXShuYW1lKTsKICAgIH0sCiAgICBzZXQodmFsdWUpIHsKICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgZmVhdHVyZSBzdG9yZSBvbmx5IHN1cHBvcnRzIGdldHRpbmcnKTsKICAgIH0KICB9Owp9OwoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0KLy8gVGhlIGRlZmF1bHQgKDJuZCBhcmcpIGlzIHVzZWQgb25seSBpZiB0aGUgZmxhZyBpcyBtaXNzaW5nIGVudGlyZWx5IGZyb20gdGhlIHNlcnZlci4KLy8gICAgVGhpcyBpcyBtYWlubHkgdXNlZnVsIGZvciBkZXZlbG9wbWVudCBiZWZvcmUgdGhlIGZsYWcgaGFzIGJlZW4gY3JlYXRlZCBpbiB0aGUgQVBJLi4KCmV4cG9ydCBjb25zdCBNVUxUSV9DTFVTVEVSID0gY3JlYXRlKCdtdWx0aS1jbHVzdGVyLW1hbmFnZW1lbnQnLCB0cnVlKTsKZXhwb3J0IGNvbnN0IExFR0FDWSA9IGNyZWF0ZSgnbGVnYWN5JywgZmFsc2UpOwpleHBvcnQgY29uc3QgUktFMiA9IGNyZWF0ZSgncmtlMicsIHRydWUpOwpleHBvcnQgY29uc3QgVU5TVVBQT1JURURfU1RPUkFHRV9EUklWRVJTID0gY3JlYXRlKCd1bnN1cHBvcnRlZC1zdG9yYWdlLWRyaXZlcnMnLCBmYWxzZSk7CmV4cG9ydCBjb25zdCBGTEVFVCA9IGNyZWF0ZSgnY29udGludW91cy1kZWxpdmVyeScsIHRydWUpOwpleHBvcnQgY29uc3QgSEFSVkVTVEVSID0gY3JlYXRlKCdoYXJ2ZXN0ZXInLCB0cnVlKTsKZXhwb3J0IGNvbnN0IEhBUlZFU1RFUl9DT05UQUlORVIgPSBjcmVhdGUoJ2hhcnZlc3Rlci1iYXJlbWV0YWwtY29udGFpbmVyLXdvcmtsb2FkJywgZmFsc2UpOwoKLy8gTm90IGN1cnJlbnRseSB1c2VkLi4gbm8gcG9pbnQgZGVmaW5pbmcgb25lcyB3ZSBkb24ndCB1c2UKLy8gZXhwb3J0IGNvbnN0IEVNQkVEREVEX0NMVVNURVJfQVBJID0gY3JlYXRlKCdlbWJlZGRlZC1jbHVzdGVyLWFwaScsIHRydWUpOwovLyBleHBvcnQgY29uc3QgSVNUSU9fVklSVFVBTF9TRVJWSUNFX1VJID0gY3JlYXRlKCdpc3Rpby12aXJ0dWFsLXNlcnZpY2UtdWknLCB0cnVlKTsKLy8gZXhwb3J0IGNvbnN0IFBST1ZJU0lPTklOR1YyID0gY3JlYXRlKCdwcm92aXNpb25pbmd2MicsIHRydWUpOwovLyBleHBvcnQgY29uc3QgQVVUSCA9IGNyZWF0ZSgnYXV0aCcsIHRydWUpOwoKLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmV4cG9ydCBjb25zdCBnZXR0ZXJzID0gewogIGdldDogKHN0YXRlLCBnZXR0ZXJzLCByb290U3RhdGUsIHJvb3RHZXR0ZXJzKSA9PiBuYW1lID0+IHsKICAgIGNvbnN0IGRlZmluaXRpb24gPSBkZWZpbml0aW9uc1tuYW1lXTsKICAgIGlmICghZGVmaW5pdGlvbikgewogICAgICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gZmVhdHVyZTogJHtuYW1lfWApOwogICAgfQogICAgY29uc3QgZW50cnkgPSByb290R2V0dGVyc1snbWFuYWdlbWVudC9ieUlkJ10oTUFOQUdFTUVOVC5GRUFUVVJFLCBuYW1lKTsKICAgIGlmIChlbnRyeSkgewogICAgICByZXR1cm4gZW50cnkuZW5hYmxlZDsKICAgIH0KICAgIHJldHVybiBkZWZpbml0aW9uLmRlZjsKICB9Cn07CmV4cG9ydCBjb25zdCBhY3Rpb25zID0gewogIGxvYWRTZXJ2ZXIoewogICAgcm9vdEdldHRlcnMsCiAgICBkaXNwYXRjaAogIH0pIHsKICAgIGlmIChyb290R2V0dGVyc1snbWFuYWdlbWVudC9jYW5MaXN0J10oTUFOQUdFTUVOVC5GRUFUVVJFKSkgewogICAgICByZXR1cm4gZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsKICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULkZFQVRVUkUKICAgICAgfSwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["MANAGEMENT","definitions","create","name","def","mapFeature","get","$store","getters","set","value","Error","MULTI_CLUSTER","LEGACY","RKE2","UNSUPPORTED_STORAGE_DRIVERS","FLEET","HARVESTER","HARVESTER_CONTAINER","state","rootState","rootGetters","definition","entry","FEATURE","enabled","actions","loadServer","dispatch","type","root"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/features.js"],"sourcesContent":["import { MANAGEMENT } from '@shell/config/types';\n\nconst definitions = {};\n\nexport const create = function(name, def) {\n  definitions[name] = { def };\n\n  return name;\n};\n\nexport const mapFeature = function(name) {\n  return {\n    get() {\n      return this.$store.getters['features/get'](name);\n    },\n\n    set(value) {\n      throw new Error('The feature store only supports getting');\n    }\n  };\n};\n\n// --------------------\n// The default (2nd arg) is used only if the flag is missing entirely from the server.\n//    This is mainly useful for development before the flag has been created in the API..\n\nexport const MULTI_CLUSTER = create('multi-cluster-management', true);\nexport const LEGACY = create('legacy', false);\nexport const RKE2 = create('rke2', true);\nexport const UNSUPPORTED_STORAGE_DRIVERS = create('unsupported-storage-drivers', false);\nexport const FLEET = create('continuous-delivery', true);\nexport const HARVESTER = create('harvester', true);\nexport const HARVESTER_CONTAINER = create('harvester-baremetal-container-workload', false);\n\n// Not currently used.. no point defining ones we don't use\n// export const EMBEDDED_CLUSTER_API = create('embedded-cluster-api', true);\n// export const ISTIO_VIRTUAL_SERVICE_UI = create('istio-virtual-service-ui', true);\n// export const PROVISIONINGV2 = create('provisioningv2', true);\n// export const AUTH = create('auth', true);\n\n// --------------------\n\nexport const getters = {\n  get: (state, getters, rootState, rootGetters) => (name) => {\n    const definition = definitions[name];\n\n    if (!definition) {\n      throw new Error(`Unknown feature: ${ name }`);\n    }\n\n    const entry = rootGetters['management/byId'](MANAGEMENT.FEATURE, name);\n\n    if ( entry ) {\n      return entry.enabled;\n    }\n\n    return definition.def;\n  },\n};\n\nexport const actions = {\n  loadServer({ rootGetters, dispatch }) {\n    if ( rootGetters['management/canList'](MANAGEMENT.FEATURE) ) {\n      return dispatch('management/findAll', { type: MANAGEMENT.FEATURE }, { root: true });\n    }\n  },\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,qBAAqB;AAEhD,MAAMC,WAAW,GAAG,CAAC,CAAC;AAEtB,OAAO,MAAMC,MAAM,GAAG,SAAAA,CAASC,IAAI,EAAEC,GAAG,EAAE;EACxCH,WAAW,CAACE,IAAI,CAAC,GAAG;IAAEC;EAAI,CAAC;EAE3B,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,SAAAA,CAASF,IAAI,EAAE;EACvC,OAAO;IACLG,GAAGA,CAAA,EAAG;MACJ,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,CAACL,IAAI,CAAC;IAClD,CAAC;IAEDM,GAAGA,CAACC,KAAK,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAGV,MAAM,CAAC,0BAA0B,EAAE,IAAI,CAAC;AACrE,OAAO,MAAMW,MAAM,GAAGX,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;AAC7C,OAAO,MAAMY,IAAI,GAAGZ,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;AACxC,OAAO,MAAMa,2BAA2B,GAAGb,MAAM,CAAC,6BAA6B,EAAE,KAAK,CAAC;AACvF,OAAO,MAAMc,KAAK,GAAGd,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC;AACxD,OAAO,MAAMe,SAAS,GAAGf,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;AAClD,OAAO,MAAMgB,mBAAmB,GAAGhB,MAAM,CAAC,wCAAwC,EAAE,KAAK,CAAC;;AAE1F;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,MAAMM,OAAO,GAAG;EACrBF,GAAG,EAAEA,CAACa,KAAK,EAAEX,OAAO,EAAEY,SAAS,EAAEC,WAAW,KAAMlB,IAAI,IAAK;IACzD,MAAMmB,UAAU,GAAGrB,WAAW,CAACE,IAAI,CAAC;IAEpC,IAAI,CAACmB,UAAU,EAAE;MACf,MAAM,IAAIX,KAAK,CAAE,oBAAoBR,IAAM,EAAC,CAAC;IAC/C;IAEA,MAAMoB,KAAK,GAAGF,WAAW,CAAC,iBAAiB,CAAC,CAACrB,UAAU,CAACwB,OAAO,EAAErB,IAAI,CAAC;IAEtE,IAAKoB,KAAK,EAAG;MACX,OAAOA,KAAK,CAACE,OAAO;IACtB;IAEA,OAAOH,UAAU,CAAClB,GAAG;EACvB;AACF,CAAC;AAED,OAAO,MAAMsB,OAAO,GAAG;EACrBC,UAAUA,CAAC;IAAEN,WAAW;IAAEO;EAAS,CAAC,EAAE;IACpC,IAAKP,WAAW,CAAC,oBAAoB,CAAC,CAACrB,UAAU,CAACwB,OAAO,CAAC,EAAG;MAC3D,OAAOI,QAAQ,CAAC,oBAAoB,EAAE;QAAEC,IAAI,EAAE7B,UAAU,CAACwB;MAAQ,CAAC,EAAE;QAAEM,IAAI,EAAE;MAAK,CAAC,CAAC;IACrF;EACF;AACF,CAAC"}]}