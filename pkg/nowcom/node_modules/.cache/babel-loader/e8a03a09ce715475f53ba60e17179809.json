{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--2-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ResourceDetail/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ResourceDetail/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IENyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldy9pbXBsJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBSZXNvdXJjZVlhbWwgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VZYW1sJzsKaW1wb3J0IHsgX1ZJRVcsIF9FRElULCBfQ0xPTkUsIF9JTVBPUlQsIF9TVEFHRSwgX0NSRUFURSwgQVMsIF9ZQU1MLCBfREVUQUlMLCBfQ09ORklHLCBfR1JBUEgsIFBSRVZJRVcsIE1PREUgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IEZMRUVULCBTQ0hFTUEgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgY3JlYXRlWWFtbCB9IGZyb20gJ0BzaGVsbC91dGlscy9jcmVhdGUteWFtbCc7CmltcG9ydCBNYXN0aGVhZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZURldGFpbC9NYXN0aGVhZCc7CmltcG9ydCBEZXRhaWxUb3AgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvRGV0YWlsVG9wJzsKaW1wb3J0IHsgY2xvbmUsIGRpZmYgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IEljb25NZXNzYWdlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0ljb25NZXNzYWdlJzsKaW1wb3J0IEZvcmNlRGlyZWN0ZWRUcmVlQ2hhcnQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZmxlZXQvRm9yY2VEaXJlY3RlZFRyZWVDaGFydCc7CmltcG9ydCB7IGNoZWNrU2NoZW1hc0ZvckZpbmRBbGxIYXNoIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2F1dGgnOwpmdW5jdGlvbiBtb2RlRm9yKHJvdXRlKSB7CiAgdmFyIF9yb3V0ZSRxdWVyeSwgX3JvdXRlJHBhcmFtczsKICBpZiAoKChfcm91dGUkcXVlcnkgPSByb3V0ZS5xdWVyeSkgPT09IG51bGwgfHwgX3JvdXRlJHF1ZXJ5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcm91dGUkcXVlcnkubW9kZSkgPT09IF9JTVBPUlQpIHsKICAgIHJldHVybiBfSU1QT1JUOwogIH0KICBpZiAoKF9yb3V0ZSRwYXJhbXMgPSByb3V0ZS5wYXJhbXMpICE9PSBudWxsICYmIF9yb3V0ZSRwYXJhbXMgIT09IHZvaWQgMCAmJiBfcm91dGUkcGFyYW1zLmlkKSB7CiAgICByZXR1cm4gcm91dGUucXVlcnkubW9kZSB8fCBfVklFVzsKICB9IGVsc2UgewogICAgcmV0dXJuIF9DUkVBVEU7CiAgfQp9CmFzeW5jIGZ1bmN0aW9uIGdldFlhbWwoc3RvcmUsIG1vZGVsKSB7CiAgY29uc3QgaW5TdG9yZSA9IHN0b3JlLmdldHRlcnNbJ2N1cnJlbnRTdG9yZSddKG1vZGVsLnR5cGUpOwogIGxldCB5YW1sOwogIGNvbnN0IG9wdCA9IHsKICAgIGhlYWRlcnM6IHsKICAgICAgYWNjZXB0OiAnYXBwbGljYXRpb24veWFtbCcKICAgIH0KICB9OwogIGlmIChtb2RlbC5oYXNMaW5rKCd2aWV3JykpIHsKICAgIHlhbWwgPSAoYXdhaXQgbW9kZWwuZm9sbG93TGluaygndmlldycsIG9wdCkpLmRhdGE7CiAgfQogIGNvbnN0IGNsZWFuZWRZYW1sID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goYCR7aW5TdG9yZX0vY2xlYW5Gb3JEb3dubG9hZGAsIHlhbWwpOwogIHJldHVybiBjbGVhbmVkWWFtbDsKfQpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTG9hZGluZywKICAgIERldGFpbFRvcCwKICAgIEZvcmNlRGlyZWN0ZWRUcmVlQ2hhcnQsCiAgICBSZXNvdXJjZVlhbWwsCiAgICBNYXN0aGVhZCwKICAgIEljb25NZXNzYWdlCiAgfSwKICBtaXhpbnM6IFtDcmVhdGVFZGl0Vmlld10sCiAgcHJvcHM6IHsKICAgIHN0b3JlT3ZlcnJpZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgcmVzb3VyY2VPdmVycmlkZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCiAgICBwYXJlbnRSb3V0ZU92ZXJyaWRlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIGZsZXhDb250ZW50OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLyoqCiAgICAgKiBJbmhlcml0ZWQgZ2xvYmFsIGlkZW50aWZpZXIgcHJlZml4IGZvciB0ZXN0cwogICAgICogRGVmaW5lIGEgdGVybSBiYXNlZCBvbiB0aGUgcGFyZW50IGNvbXBvbmVudCB0byBhdm9pZCBjb25mbGljdHMgb24gbXVsdGlwbGUgY29tcG9uZW50cwogICAgICovCiAgICBjb21wb25lbnRUZXN0aWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAncmVzb3VyY2UtZGV0YWlscycKICAgIH0KICB9LAogIGFzeW5jIGZldGNoKCkgewogICAgY29uc3Qgc3RvcmUgPSB0aGlzLiRzdG9yZTsKICAgIGNvbnN0IHJvdXRlID0gdGhpcy4kcm91dGU7CiAgICBjb25zdCBwYXJhbXMgPSByb3V0ZS5wYXJhbXM7CiAgICBsZXQgcmVzb3VyY2UgPSB0aGlzLnJlc291cmNlT3ZlcnJpZGUgfHwgcGFyYW1zLnJlc291cmNlOwogICAgY29uc3QgaW5TdG9yZSA9IHRoaXMuc3RvcmVPdmVycmlkZSB8fCBzdG9yZS5nZXR0ZXJzWydjdXJyZW50U3RvcmUnXShyZXNvdXJjZSk7CiAgICBjb25zdCByZWFsTW9kZSA9IHRoaXMucmVhbE1vZGU7CgogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1jb25zdAogICAgbGV0IHsKICAgICAgbmFtZXNwYWNlLAogICAgICBpZAogICAgfSA9IHBhcmFtczsKCiAgICAvLyBUaGVyZSBhcmUgNiAicmVhbCIgbW9kZXMgdGhhdCBjYW4gYmUgcHV0IGludG8gdGhlIHF1ZXJ5IHN0cmluZwogICAgLy8gVGhlc2UgYXJlIG1hcHBlZCBkb3duIHRvIHRoZSAzIHJlZ3VsYXIgcGFnZSAibW9kZSJzIHRoYXQgY3JlYXRlLWVkaXQtdmlldyBjb21wb25lbnRzCiAgICAvLyBrbm93IGFib3V0OiAgdmlldywgZWRpdCwgY3JlYXRlIChzdGFnZSwgaW1wb3J0IGFuZCBjbG9uZSBiZWNvbWUgImNyZWF0ZSIpCiAgICBjb25zdCBtb2RlID0gW19DTE9ORSwgX0lNUE9SVCwgX1NUQUdFXS5pbmNsdWRlcyhyZWFsTW9kZSkgPyBfQ1JFQVRFIDogcmVhbE1vZGU7CiAgICBjb25zdCBnZXRHcmFwaENvbmZpZyA9IHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2hhc0dyYXBoJ10ocmVzb3VyY2UpOwogICAgY29uc3QgaGFzR3JhcGggPSAhIWdldEdyYXBoQ29uZmlnOwogICAgY29uc3QgaGFzQ3VzdG9tRGV0YWlsID0gc3RvcmUuZ2V0dGVyc1sndHlwZS1tYXAvaGFzQ3VzdG9tRGV0YWlsJ10ocmVzb3VyY2UsIGlkKTsKICAgIGNvbnN0IGhhc0N1c3RvbUVkaXQgPSBzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9oYXNDdXN0b21FZGl0J10ocmVzb3VyY2UsIGlkKTsKICAgIGNvbnN0IHNjaGVtYXMgPSBzdG9yZS5nZXR0ZXJzW2Ake2luU3RvcmV9L2FsbGBdKFNDSEVNQSk7CgogICAgLy8gQXMgZGV0ZXJtaW5lcyB3aGF0IGNvbXBvbmVudCB3aWxsIGJlIHJlbmRlcmVkCiAgICBjb25zdCByZXF1ZXN0ZWQgPSByb3V0ZS5xdWVyeVtBU107CiAgICBsZXQgYXM7CiAgICBsZXQgbm90Rm91bmQgPSBmYWxzZTsKICAgIGlmIChtb2RlID09PSBfVklFVyAmJiBoYXNDdXN0b21EZXRhaWwgJiYgKCFyZXF1ZXN0ZWQgfHwgcmVxdWVzdGVkID09PSBfREVUQUlMKSkgewogICAgICBhcyA9IF9ERVRBSUw7CiAgICB9IGVsc2UgaWYgKG1vZGUgPT09IF9WSUVXICYmIGhhc0dyYXBoICYmIHJlcXVlc3RlZCA9PT0gX0dSQVBIKSB7CiAgICAgIGFzID0gX0dSQVBIOwogICAgfSBlbHNlIGlmIChoYXNDdXN0b21FZGl0ICYmICghcmVxdWVzdGVkIHx8IHJlcXVlc3RlZCA9PT0gX0NPTkZJRykpIHsKICAgICAgYXMgPSBfQ09ORklHOwogICAgfSBlbHNlIHsKICAgICAgYXMgPSBfWUFNTDsKICAgIH0KICAgIHRoaXMuYXMgPSBhczsKICAgIGNvbnN0IG9wdGlvbnMgPSBzdG9yZS5nZXR0ZXJzW2B0eXBlLW1hcC9vcHRpb25zRm9yYF0ocmVzb3VyY2UpOwogICAgdGhpcy5zaG93TWFzdGhlYWQgPSBbX0NSRUFURSwgX0VESVRdLmluY2x1ZGVzKG1vZGUpID8gb3B0aW9ucy5yZXNvdXJjZUVkaXRNYXN0aGVhZCA6IHRydWU7CiAgICBjb25zdCBjYW5WaWV3WWFtbCA9IG9wdGlvbnMuY2FuWWFtbDsKICAgIGlmIChvcHRpb25zLnJlc291cmNlKSB7CiAgICAgIHJlc291cmNlID0gb3B0aW9ucy5yZXNvdXJjZTsKICAgIH0KICAgIGNvbnN0IHNjaGVtYSA9IHN0b3JlLmdldHRlcnNbYCR7aW5TdG9yZX0vc2NoZW1hRm9yYF0ocmVzb3VyY2UpOwogICAgbGV0IG1vZGVsLCBpbml0aWFsTW9kZWwsIGxpdmVNb2RlbCwgeWFtbDsKICAgIGlmIChyZWFsTW9kZSA9PT0gX0NSRUFURSB8fCByZWFsTW9kZSA9PT0gX0lNUE9SVCkgewogICAgICB2YXIgX3NjaGVtYSRhdHRyaWJ1dGVzOwogICAgICBpZiAoIW5hbWVzcGFjZSkgewogICAgICAgIG5hbWVzcGFjZSA9IHN0b3JlLmdldHRlcnNbJ2RlZmF1bHROYW1lc3BhY2UnXTsKICAgICAgfQogICAgICBjb25zdCBkYXRhID0gewogICAgICAgIHR5cGU6IHJlc291cmNlCiAgICAgIH07CiAgICAgIGlmIChzY2hlbWEgIT09IG51bGwgJiYgc2NoZW1hICE9PSB2b2lkIDAgJiYgKF9zY2hlbWEkYXR0cmlidXRlcyA9IHNjaGVtYS5hdHRyaWJ1dGVzKSAhPT0gbnVsbCAmJiBfc2NoZW1hJGF0dHJpYnV0ZXMgIT09IHZvaWQgMCAmJiBfc2NoZW1hJGF0dHJpYnV0ZXMubmFtZXNwYWNlZCkgewogICAgICAgIGRhdGEubWV0YWRhdGEgPSB7CiAgICAgICAgICBuYW1lc3BhY2UKICAgICAgICB9OwogICAgICB9CiAgICAgIGxpdmVNb2RlbCA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKGAke2luU3RvcmV9L2NyZWF0ZWAsIGRhdGEpOwogICAgICBpbml0aWFsTW9kZWwgPSBhd2FpdCBzdG9yZS5kaXNwYXRjaChgJHtpblN0b3JlfS9jbG9uZWAsIHsKICAgICAgICByZXNvdXJjZTogbGl2ZU1vZGVsCiAgICAgIH0pOwogICAgICBtb2RlbCA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKGAke2luU3RvcmV9L2Nsb25lYCwgewogICAgICAgIHJlc291cmNlOiBsaXZlTW9kZWwKICAgICAgfSk7CiAgICAgIGlmIChtb2RlbC5mb3JjZVlhbWwgPT09IHRydWUpIHsKICAgICAgICBhcyA9IF9ZQU1MOwogICAgICAgIHRoaXMuYXMgPSBhczsKICAgICAgfQogICAgICBpZiAoYXMgPT09IF9ZQU1MKSB7CiAgICAgICAgeWFtbCA9IGNyZWF0ZVlhbWwoc2NoZW1hcywgcmVzb3VyY2UsIGRhdGEpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB2YXIgX3NjaGVtYSRhdHRyaWJ1dGVzMjsKICAgICAgaWYgKGFzID09PSBfR1JBUEgpIHsKICAgICAgICBjb25zdCBncmFwaFNjaGVtYSA9IGF3YWl0IGNoZWNrU2NoZW1hc0ZvckZpbmRBbGxIYXNoKHsKICAgICAgICAgIGNsdXN0ZXI6IHsKICAgICAgICAgICAgaW5TdG9yZVR5cGU6ICdtYW5hZ2VtZW50JywKICAgICAgICAgICAgdHlwZTogRkxFRVQuQ0xVU1RFUgogICAgICAgICAgfSwKICAgICAgICAgIGJ1bmRsZTogewogICAgICAgICAgICBpblN0b3JlVHlwZTogJ21hbmFnZW1lbnQnLAogICAgICAgICAgICB0eXBlOiBGTEVFVC5CVU5ETEUKICAgICAgICAgIH0sCiAgICAgICAgICBidW5kbGVEZXBsb3ltZW50OiB7CiAgICAgICAgICAgIGluU3RvcmVUeXBlOiAnbWFuYWdlbWVudCcsCiAgICAgICAgICAgIHR5cGU6IEZMRUVULkJVTkRMRV9ERVBMT1lNRU5UCiAgICAgICAgICB9CiAgICAgICAgfSwgdGhpcy4kc3RvcmUpOwogICAgICAgIHRoaXMuY2FuVmlld0NoYXJ0ID0gZ3JhcGhTY2hlbWEuY2x1c3RlciAmJiBncmFwaFNjaGVtYS5idW5kbGUgJiYgZ3JhcGhTY2hlbWEuYnVuZGxlRGVwbG95bWVudDsKICAgICAgfQogICAgICBsZXQgZnFpZCA9IGlkOwogICAgICBpZiAoKF9zY2hlbWEkYXR0cmlidXRlczIgPSBzY2hlbWEuYXR0cmlidXRlcykgIT09IG51bGwgJiYgX3NjaGVtYSRhdHRyaWJ1dGVzMiAhPT0gdm9pZCAwICYmIF9zY2hlbWEkYXR0cmlidXRlczIubmFtZXNwYWNlZCAmJiBuYW1lc3BhY2UpIHsKICAgICAgICBmcWlkID0gYCR7bmFtZXNwYWNlfS8ke2ZxaWR9YDsKICAgICAgfQogICAgICB0cnkgewogICAgICAgIGxpdmVNb2RlbCA9IGF3YWl0IHN0b3JlLmRpc3BhdGNoKGAke2luU3RvcmV9L2ZpbmRgLCB7CiAgICAgICAgICB0eXBlOiByZXNvdXJjZSwKICAgICAgICAgIGlkOiBmcWlkLAogICAgICAgICAgb3B0OiB7CiAgICAgICAgICAgIHdhdGNoOiB0cnVlCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBpZiAoZS5zdGF0dXMgPT09IDQwNCB8fCBlLnN0YXR1cyA9PT0gNDAzKSB7CiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnbG9hZGluZ0Vycm9yJywgbmV3IEVycm9yKHRoaXMudCgnbmF2LmZhaWxXaGFsZS5yZXNvdXJjZUlkTm90Rm91bmQnLCB7CiAgICAgICAgICAgIHJlc291cmNlLAogICAgICAgICAgICBmcWlkCiAgICAgICAgICB9LCB0cnVlKSkpOwogICAgICAgIH0KICAgICAgICBsaXZlTW9kZWwgPSB7fTsKICAgICAgICBub3RGb3VuZCA9IGZxaWQ7CiAgICAgIH0KICAgICAgaWYgKHJlYWxNb2RlID09PSBfVklFVykgewogICAgICAgIG1vZGVsID0gbGl2ZU1vZGVsOwogICAgICB9IGVsc2UgewogICAgICAgIG1vZGVsID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goYCR7aW5TdG9yZX0vY2xvbmVgLCB7CiAgICAgICAgICByZXNvdXJjZTogbGl2ZU1vZGVsCiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgaW5pdGlhbE1vZGVsID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goYCR7aW5TdG9yZX0vY2xvbmVgLCB7CiAgICAgICAgcmVzb3VyY2U6IGxpdmVNb2RlbAogICAgICB9KTsKICAgICAgaWYgKGFzID09PSBfWUFNTCkgewogICAgICAgIHlhbWwgPSBhd2FpdCBnZXRZYW1sKHRoaXMuJHN0b3JlLCBsaXZlTW9kZWwpOwogICAgICB9CiAgICAgIGlmIChhcyA9PT0gX0dSQVBIKSB7CiAgICAgICAgdGhpcy5jaGFydERhdGEgPSBsaXZlTW9kZWw7CiAgICAgIH0KICAgICAgaWYgKFtfQ0xPTkUsIF9JTVBPUlQsIF9TVEFHRV0uaW5jbHVkZXMocmVhbE1vZGUpKSB7CiAgICAgICAgbW9kZWwuY2xlYW5Gb3JOZXcoKTsKICAgICAgICB5YW1sID0gbW9kZWwuY2xlYW5ZYW1sKHlhbWwsIHJlYWxNb2RlKTsKICAgICAgfQogICAgfQoKICAgIC8vIEVuc3VyZSBjb21tb24gcHJvcGVydGllcyBleGlzdHMKICAgIG1vZGVsID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goYCR7aW5TdG9yZX0vY2xlYW5Gb3JEZXRhaWxgLCBtb2RlbCk7CiAgICBjb25zdCBvdXQgPSB7CiAgICAgIGhhc0dyYXBoLAogICAgICBnZXRHcmFwaENvbmZpZywKICAgICAgaGFzQ3VzdG9tRGV0YWlsLAogICAgICBoYXNDdXN0b21FZGl0LAogICAgICBjYW5WaWV3WWFtbCwKICAgICAgcmVzb3VyY2UsCiAgICAgIGFzLAogICAgICB5YW1sLAogICAgICBpbml0aWFsTW9kZWwsCiAgICAgIGxpdmVNb2RlbCwKICAgICAgbW9kZSwKICAgICAgdmFsdWU6IG1vZGVsLAogICAgICBub3RGb3VuZAogICAgfTsKICAgIGZvciAoY29uc3Qga2V5IGluIG91dCkgewogICAgICB0aGlzW2tleV0gPSBvdXRba2V5XTsKICAgIH0KICAgIGlmICh0aGlzLm1vZGUgPT09IF9DUkVBVEUpIHsKICAgICAgdGhpcy52YWx1ZS5hcHBseURlZmF1bHRzKHRoaXMsIHJlYWxNb2RlKTsKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydERhdGE6IG51bGwsCiAgICAgIHJlc291cmNlU3VidHlwZTogbnVsbCwKICAgICAgLy8gU2V0IGJ5IGZldGNoCiAgICAgIGhhc0dyYXBoOiBudWxsLAogICAgICBoYXNDdXN0b21EZXRhaWw6IG51bGwsCiAgICAgIGhhc0N1c3RvbUVkaXQ6IG51bGwsCiAgICAgIHJlc291cmNlOiBudWxsLAogICAgICBhc1lhbWw6IG51bGwsCiAgICAgIHlhbWw6IG51bGwsCiAgICAgIGxpdmVNb2RlbDogbnVsbCwKICAgICAgaW5pdGlhbE1vZGVsOiBudWxsLAogICAgICBtb2RlOiBudWxsLAogICAgICBhczogbnVsbCwKICAgICAgdmFsdWU6IG51bGwsCiAgICAgIG1vZGVsOiBudWxsLAogICAgICBub3RGb3VuZDogbnVsbCwKICAgICAgY2FuVmlld0NoYXJ0OiB0cnVlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHJlYWxNb2RlKCkgewogICAgICAvLyBUaGVyZSBhcmUgNSAicmVhbCIgbW9kZXMgdGhhdCB5b3UgY2FuIHN0YXJ0IGluOiB2aWV3LCBlZGl0LCBjcmVhdGUsIHN0YWdlLCBjbG9uZQogICAgICBjb25zdCByZWFsTW9kZSA9IG1vZGVGb3IodGhpcy4kcm91dGUpOwogICAgICByZXR1cm4gcmVhbE1vZGU7CiAgICB9LAogICAgaXNWaWV3KCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBfVklFVzsKICAgIH0sCiAgICBpc1lhbWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmFzID09PSBfWUFNTDsKICAgIH0sCiAgICBpc0RldGFpbCgpIHsKICAgICAgcmV0dXJuIHRoaXMuYXMgPT09IF9ERVRBSUw7CiAgICB9LAogICAgaXNHcmFwaCgpIHsKICAgICAgcmV0dXJuIHRoaXMuYXMgPT09IF9HUkFQSDsKICAgIH0sCiAgICBvZmZlclByZXZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLmFzID09PSBfWUFNTCAmJiBbX0VESVQsIF9DTE9ORSwgX0lNUE9SVCwgX1NUQUdFXS5pbmNsdWRlcyh0aGlzLm1vZGUpOwogICAgfSwKICAgIHNob3dDb21wb25lbnQoKSB7CiAgICAgIHN3aXRjaCAodGhpcy5hcykgewogICAgICAgIGNhc2UgX0RFVEFJTDoKICAgICAgICAgIHJldHVybiB0aGlzLmRldGFpbENvbXBvbmVudDsKICAgICAgICBjYXNlIF9DT05GSUc6CiAgICAgICAgICByZXR1cm4gdGhpcy5lZGl0Q29tcG9uZW50OwogICAgICB9CiAgICAgIHJldHVybiBudWxsOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgICckcm91dGUucXVlcnknKGluTmV1LCBpbk9sZCkgewogICAgICBjb25zdCBuZXUgPSBjbG9uZShpbk5ldSk7CiAgICAgIGNvbnN0IG9sZCA9IGNsb25lKGluT2xkKTsKICAgICAgZGVsZXRlIG5ldVtQUkVWSUVXXTsKICAgICAgZGVsZXRlIG9sZFtQUkVWSUVXXTsKICAgICAgaWYgKCF0aGlzLmlzVmlldykgewogICAgICAgIGRlbGV0ZSBuZXVbQVNdOwogICAgICAgIGRlbGV0ZSBvbGRbQVNdOwogICAgICB9CiAgICAgIGNvbnN0IHF1ZXJ5RGlmZiA9IE9iamVjdC5rZXlzKGRpZmYobmV1LCBvbGQpKTsKICAgICAgaWYgKHF1ZXJ5RGlmZi5pbmNsdWRlcyhNT0RFKSB8fCBxdWVyeURpZmYuaW5jbHVkZXMoQVMpKSB7CiAgICAgICAgdGhpcy4kZmV0Y2goKTsKICAgICAgfQogICAgfSwKICAgIC8vIEF1dG8gcmVmcmVzaCBZQU1MIHdoZW4gdGhlIG1vZGVsIGNoYW5nZXMKICAgIGFzeW5jICd2YWx1ZS5tZXRhZGF0YS5yZXNvdXJjZVZlcnNpb24nKGEsIGIpIHsKICAgICAgaWYgKHRoaXMubW9kZSA9PT0gX1ZJRVcgJiYgdGhpcy5hcyA9PT0gX1lBTUwgJiYgYSAmJiBiICYmIGEgIT09IGIpIHsKICAgICAgICB0aGlzLnlhbWwgPSBhd2FpdCBnZXRZYW1sKHRoaXMuJHN0b3JlLCB0aGlzLmxpdmVNb2RlbCk7CiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWNvbnN0CiAgICBjb25zdCBpZCA9IHRoaXMuJHJvdXRlLnBhcmFtcy5pZDsKICAgIGNvbnN0IHJlc291cmNlID0gdGhpcy5yZXNvdXJjZU92ZXJyaWRlIHx8IHRoaXMuJHJvdXRlLnBhcmFtcy5yZXNvdXJjZTsKICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzW2B0eXBlLW1hcC9vcHRpb25zRm9yYF0ocmVzb3VyY2UpOwogICAgY29uc3QgZGV0YWlsUmVzb3VyY2UgPSBvcHRpb25zLnJlc291cmNlRGV0YWlsIHx8IG9wdGlvbnMucmVzb3VyY2UgfHwgcmVzb3VyY2U7CiAgICBjb25zdCBlZGl0UmVzb3VyY2UgPSBvcHRpb25zLnJlc291cmNlRWRpdCB8fCBvcHRpb25zLnJlc291cmNlIHx8IHJlc291cmNlOwoKICAgIC8vIEZJWE1FOiBUaGVzZSBhcmVuJ3QgcmlnaHQuLi4gc2lnbmF0dXJlIGlzIChyYXdUeXBlLCBzdWJUeXBlKS4uIG5vdCAocmF3VHlwZSwgcmVzb3VyY2VJZCkKICAgIC8vIFJlbW92ZSBpZD8gSG93IGRvZXMgc3VidHlwZSBnZXQgaW4gKGNsdXN0ZXIvbm9kZSkKICAgIHRoaXMuZGV0YWlsQ29tcG9uZW50ID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sndHlwZS1tYXAvaW1wb3J0RGV0YWlsJ10oZGV0YWlsUmVzb3VyY2UsIGlkKTsKICAgIHRoaXMuZWRpdENvbXBvbmVudCA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3R5cGUtbWFwL2ltcG9ydEVkaXQnXShlZGl0UmVzb3VyY2UsIGlkKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHNldFN1YnR5cGUoc3VidHlwZSkgewogICAgICB0aGlzLnJlc291cmNlU3VidHlwZSA9IHN1YnR5cGU7CiAgICB9LAogICAga2V5QWN0aW9uKGFjdCkgewogICAgICBjb25zdCBtID0gdGhpcy5saXZlTW9kZWw7CiAgICAgIGlmIChtICE9PSBudWxsICYmIG0gIT09IHZvaWQgMCAmJiBtW2FjdF0pIHsKICAgICAgICBtW2FjdF0oKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["CreateEditView","Loading","ResourceYaml","_VIEW","_EDIT","_CLONE","_IMPORT","_STAGE","_CREATE","AS","_YAML","_DETAIL","_CONFIG","_GRAPH","PREVIEW","MODE","FLEET","SCHEMA","createYaml","Masthead","DetailTop","clone","diff","IconMessage","ForceDirectedTreeChart","checkSchemasForFindAllHash","modeFor","route","_route$query","_route$params","query","mode","params","id","getYaml","store","model","inStore","getters","type","yaml","opt","headers","accept","hasLink","followLink","data","cleanedYaml","dispatch","components","mixins","props","storeOverride","String","default","resourceOverride","parentRouteOverride","flexContent","Boolean","componentTestid","fetch","$store","$route","resource","realMode","namespace","includes","getGraphConfig","hasGraph","hasCustomDetail","hasCustomEdit","schemas","requested","as","notFound","options","showMasthead","resourceEditMasthead","canViewYaml","canYaml","schema","initialModel","liveModel","_schema$attributes","attributes","namespaced","metadata","forceYaml","_schema$attributes2","graphSchema","cluster","inStoreType","CLUSTER","bundle","BUNDLE","bundleDeployment","BUNDLE_DEPLOYMENT","canViewChart","fqid","watch","e","status","Error","t","chartData","cleanForNew","cleanYaml","out","value","key","applyDefaults","resourceSubtype","asYaml","computed","isView","isYaml","isDetail","isGraph","offerPreview","showComponent","detailComponent","editComponent","$route.query","inNeu","inOld","neu","old","queryDiff","Object","keys","$fetch","value.metadata.resourceVersion","a","b","created","detailResource","resourceDetail","editResource","resourceEdit","methods","setSubtype","subtype","keyAction","act","m"],"sources":["../../node_modules/@rancher/shell/components/ResourceDetail/index.vue"],"sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view/impl';\nimport Loading from '@shell/components/Loading';\nimport ResourceYaml from '@shell/components/ResourceYaml';\nimport {\n  _VIEW, _EDIT, _CLONE, _IMPORT, _STAGE, _CREATE,\n  AS, _YAML, _DETAIL, _CONFIG, _GRAPH, PREVIEW, MODE,\n} from '@shell/config/query-params';\nimport { FLEET, SCHEMA } from '@shell/config/types';\nimport { createYaml } from '@shell/utils/create-yaml';\nimport Masthead from '@shell/components/ResourceDetail/Masthead';\nimport DetailTop from '@shell/components/DetailTop';\nimport { clone, diff } from '@shell/utils/object';\nimport IconMessage from '@shell/components/IconMessage';\nimport ForceDirectedTreeChart from '@shell/components/fleet/ForceDirectedTreeChart';\nimport { checkSchemasForFindAllHash } from '@shell/utils/auth';\n\nfunction modeFor(route) {\n  if ( route.query?.mode === _IMPORT ) {\n    return _IMPORT;\n  }\n\n  if ( route.params?.id ) {\n    return route.query.mode || _VIEW;\n  } else {\n    return _CREATE;\n  }\n}\n\nasync function getYaml(store, model) {\n  const inStore = store.getters['currentStore'](model.type);\n  let yaml;\n  const opt = { headers: { accept: 'application/yaml' } };\n\n  if ( model.hasLink('view') ) {\n    yaml = (await model.followLink('view', opt)).data;\n  }\n\n  const cleanedYaml = await store.dispatch(`${ inStore }/cleanForDownload`, yaml);\n\n  return cleanedYaml;\n}\n\nexport default {\n  components: {\n    Loading,\n    DetailTop,\n    ForceDirectedTreeChart,\n    ResourceYaml,\n    Masthead,\n    IconMessage,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    storeOverride: {\n      type:    String,\n      default: null,\n    },\n\n    resourceOverride: {\n      type:    String,\n      default: null,\n    },\n\n    parentRouteOverride: {\n      type:    String,\n      default: null,\n    },\n\n    flexContent: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'resource-details'\n    }\n  },\n\n  async fetch() {\n    const store = this.$store;\n    const route = this.$route;\n    const params = route.params;\n    let resource = this.resourceOverride || params.resource;\n\n    const inStore = this.storeOverride || store.getters['currentStore'](resource);\n    const realMode = this.realMode;\n\n    // eslint-disable-next-line prefer-const\n    let { namespace, id } = params;\n\n    // There are 6 \"real\" modes that can be put into the query string\n    // These are mapped down to the 3 regular page \"mode\"s that create-edit-view components\n    // know about:  view, edit, create (stage, import and clone become \"create\")\n    const mode = ([_CLONE, _IMPORT, _STAGE].includes(realMode) ? _CREATE : realMode);\n\n    const getGraphConfig = store.getters['type-map/hasGraph'](resource);\n    const hasGraph = !!getGraphConfig;\n    const hasCustomDetail = store.getters['type-map/hasCustomDetail'](resource, id);\n    const hasCustomEdit = store.getters['type-map/hasCustomEdit'](resource, id);\n\n    const schemas = store.getters[`${ inStore }/all`](SCHEMA);\n\n    // As determines what component will be rendered\n    const requested = route.query[AS];\n    let as;\n    let notFound = false;\n\n    if ( mode === _VIEW && hasCustomDetail && (!requested || requested === _DETAIL) ) {\n      as = _DETAIL;\n    } else if ( mode === _VIEW && hasGraph && requested === _GRAPH) {\n      as = _GRAPH;\n    } else if ( hasCustomEdit && (!requested || requested === _CONFIG) ) {\n      as = _CONFIG;\n    } else {\n      as = _YAML;\n    }\n\n    this.as = as;\n\n    const options = store.getters[`type-map/optionsFor`](resource);\n\n    this.showMasthead = [_CREATE, _EDIT].includes(mode) ? options.resourceEditMasthead : true;\n    const canViewYaml = options.canYaml;\n\n    if ( options.resource ) {\n      resource = options.resource;\n    }\n\n    const schema = store.getters[`${ inStore }/schemaFor`](resource);\n    let model, initialModel, liveModel, yaml;\n\n    if ( realMode === _CREATE || realMode === _IMPORT ) {\n      if ( !namespace ) {\n        namespace = store.getters['defaultNamespace'];\n      }\n\n      const data = { type: resource };\n\n      if ( schema?.attributes?.namespaced ) {\n        data.metadata = { namespace };\n      }\n\n      liveModel = await store.dispatch(`${ inStore }/create`, data);\n      initialModel = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n      model = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n\n      if (model.forceYaml === true) {\n        as = _YAML;\n        this.as = as;\n      }\n\n      if ( as === _YAML ) {\n        yaml = createYaml(schemas, resource, data);\n      }\n    } else {\n      if ( as === _GRAPH ) {\n        const graphSchema = await checkSchemasForFindAllHash({\n          cluster: {\n            inStoreType: 'management',\n            type:        FLEET.CLUSTER\n          },\n          bundle: {\n            inStoreType: 'management',\n            type:        FLEET.BUNDLE\n          },\n\n          bundleDeployment: {\n            inStoreType: 'management',\n            type:        FLEET.BUNDLE_DEPLOYMENT\n          }\n\n        }, this.$store);\n\n        this.canViewChart = graphSchema.cluster && graphSchema.bundle && graphSchema.bundleDeployment;\n      }\n\n      let fqid = id;\n\n      if ( schema.attributes?.namespaced && namespace ) {\n        fqid = `${ namespace }/${ fqid }`;\n      }\n\n      try {\n        liveModel = await store.dispatch(`${ inStore }/find`, {\n          type: resource,\n          id:   fqid,\n          opt:  { watch: true }\n        });\n      } catch (e) {\n        if (e.status === 404 || e.status === 403) {\n          store.dispatch('loadingError', new Error(this.t('nav.failWhale.resourceIdNotFound', { resource, fqid }, true)));\n        }\n        liveModel = {};\n        notFound = fqid;\n      }\n\n      if (realMode === _VIEW) {\n        model = liveModel;\n      } else {\n        model = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n      }\n\n      initialModel = await store.dispatch(`${ inStore }/clone`, { resource: liveModel });\n\n      if ( as === _YAML ) {\n        yaml = await getYaml(this.$store, liveModel);\n      }\n\n      if ( as === _GRAPH ) {\n        this.chartData = liveModel;\n      }\n\n      if ( [_CLONE, _IMPORT, _STAGE].includes(realMode) ) {\n        model.cleanForNew();\n        yaml = model.cleanYaml(yaml, realMode);\n      }\n    }\n\n    // Ensure common properties exists\n    model = await store.dispatch(`${ inStore }/cleanForDetail`, model);\n\n    const out = {\n      hasGraph,\n      getGraphConfig,\n      hasCustomDetail,\n      hasCustomEdit,\n      canViewYaml,\n      resource,\n      as,\n      yaml,\n      initialModel,\n      liveModel,\n      mode,\n      value: model,\n      notFound,\n    };\n\n    for ( const key in out ) {\n      this[key] = out[key];\n    }\n\n    if ( this.mode === _CREATE ) {\n      this.value.applyDefaults(this, realMode);\n    }\n  },\n  data() {\n    return {\n      chartData:       null,\n      resourceSubtype: null,\n\n      // Set by fetch\n      hasGraph:        null,\n      hasCustomDetail: null,\n      hasCustomEdit:   null,\n      resource:        null,\n      asYaml:          null,\n      yaml:            null,\n      liveModel:       null,\n      initialModel:    null,\n      mode:            null,\n      as:              null,\n      value:           null,\n      model:           null,\n      notFound:        null,\n      canViewChart:    true,\n    };\n  },\n\n  computed: {\n    realMode() {\n      // There are 5 \"real\" modes that you can start in: view, edit, create, stage, clone\n      const realMode = modeFor(this.$route);\n\n      return realMode;\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    isYaml() {\n      return this.as === _YAML;\n    },\n\n    isDetail() {\n      return this.as === _DETAIL;\n    },\n\n    isGraph() {\n      return this.as === _GRAPH;\n    },\n\n    offerPreview() {\n      return this.as === _YAML && [_EDIT, _CLONE, _IMPORT, _STAGE].includes(this.mode);\n    },\n\n    showComponent() {\n      switch ( this.as ) {\n      case _DETAIL: return this.detailComponent;\n      case _CONFIG: return this.editComponent;\n      }\n\n      return null;\n    },\n  },\n\n  watch: {\n    '$route.query'(inNeu, inOld) {\n      const neu = clone(inNeu);\n      const old = clone(inOld);\n\n      delete neu[PREVIEW];\n      delete old[PREVIEW];\n\n      if ( !this.isView ) {\n        delete neu[AS];\n        delete old[AS];\n      }\n\n      const queryDiff = Object.keys(diff(neu, old));\n\n      if ( queryDiff.includes(MODE) || queryDiff.includes(AS)) {\n        this.$fetch();\n      }\n    },\n\n    // Auto refresh YAML when the model changes\n    async 'value.metadata.resourceVersion'(a, b) {\n      if ( this.mode === _VIEW && this.as === _YAML && a && b && a !== b) {\n        this.yaml = await getYaml(this.$store, this.liveModel);\n      }\n    }\n  },\n\n  created() {\n    // eslint-disable-next-line prefer-const\n    const id = this.$route.params.id;\n    const resource = this.resourceOverride || this.$route.params.resource;\n    const options = this.$store.getters[`type-map/optionsFor`](resource);\n\n    const detailResource = options.resourceDetail || options.resource || resource;\n    const editResource = options.resourceEdit || options.resource || resource;\n\n    // FIXME: These aren't right... signature is (rawType, subType).. not (rawType, resourceId)\n    // Remove id? How does subtype get in (cluster/node)\n    this.detailComponent = this.$store.getters['type-map/importDetail'](detailResource, id);\n    this.editComponent = this.$store.getters['type-map/importEdit'](editResource, id);\n  },\n\n  methods: {\n    setSubtype(subtype) {\n      this.resourceSubtype = subtype;\n    },\n\n    keyAction(act) {\n      const m = this.liveModel;\n\n      if ( m?.[act] ) {\n        m[act]();\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending || notFound\" />\n  <div v-else>\n    <Masthead\n      v-if=\"showMasthead\"\n      :resource=\"resource\"\n      :value=\"liveModel\"\n      :mode=\"mode\"\n      :real-mode=\"realMode\"\n      :as=\"as\"\n      :has-graph=\"hasGraph\"\n      :has-detail=\"hasCustomDetail\"\n      :has-edit=\"hasCustomEdit\"\n      :can-view-yaml=\"canViewYaml\"\n      :resource-subtype=\"resourceSubtype\"\n      :parent-route-override=\"parentRouteOverride\"\n      :store-override=\"storeOverride\"\n    >\n      <DetailTop\n        v-if=\"isView && isDetail\"\n        :value=\"liveModel\"\n      />\n    </Masthead>\n\n    <ForceDirectedTreeChart\n      v-if=\"isGraph && canViewChart\"\n      :data=\"chartData\"\n      :fdc-config=\"getGraphConfig\"\n    />\n\n    <ResourceYaml\n      v-else-if=\"isYaml\"\n      ref=\"resourceyaml\"\n      v-model=\"value\"\n      :mode=\"mode\"\n      :yaml=\"yaml\"\n      :offer-preview=\"offerPreview\"\n      :done-route=\"doneRoute\"\n      :done-override=\"value.doneOverride\"\n      :class=\"{'flex-content': flexContent}\"\n    />\n\n    <component\n      :is=\"showComponent\"\n      v-else\n      ref=\"comp\"\n      v-model=\"value\"\n      v-bind=\"_data\"\n      :done-params=\"doneParams\"\n      :done-route=\"doneRoute\"\n      :mode=\"mode\"\n      :initial-value=\"initialModel\"\n      :live-value=\"liveModel\"\n      :real-mode=\"realMode\"\n      :class=\"{'flex-content': flexContent}\"\n      @set-subtype=\"setSubtype\"\n    />\n\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','d']\"\n      :data-testid=\"componentTestid + '-detail'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToDetail')\"\n    />\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','c']\"\n      :data-testid=\"componentTestid + '-config'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToViewConfig')\"\n    />\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','y']\"\n      :data-testid=\"componentTestid + '-yaml'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToViewYaml')\"\n    />\n    <button\n      v-if=\"isView\"\n      v-shortkey.once=\"['shift','e']\"\n      :data-testid=\"componentTestid + '-edit'\"\n      class=\"hide\"\n      @shortkey=\"keyAction('goToEdit')\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.flex-content {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n}\n</style>\n"],"mappings":"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"}]}