{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--2-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DashboardMetrics","mapGetters","CAPI","ENDPOINTS","EVENT","NAMESPACE","INGRESS","MANAGEMENT","METRIC","NODE","SERVICE","PV","WORKLOAD_TYPES","COUNT","CATALOG","PSP","setPromiseResult","AlertTable","Banner","parseSi","createMemoryValues","NAME","ROLES","STATE","mapPref","PSP_DEPRECATION_BANNER","haveV1Monitoring","monitoringStatus","Tabbed","Tab","allDashboardsExist","EtcdInfoBanner","metricPoller","EmberPage","ResourceSummary","resourceCounts","HardwareResourceGauge","isEmpty","ConfigBadge","EventsTable","fetchClusterResources","SimpleBox","ExtensionPoint","CardLocation","getApplicableExtensionEnhancements","RESOURCES","DEPLOYMENT","STATEFUL_SET","JOB","DAEMON_SET","CLUSTER_METRICS_DETAIL_URL","CLUSTER_METRICS_SUMMARY_URL","K8S_METRICS_DETAIL_URL","K8S_METRICS_SUMMARY_URL","ETCD_METRICS_DETAIL_URL","ETCD_METRICS_SUMMARY_URL","COMPONENT_STATUS","name","components","mixins","fetch","$store","currentCluster","id","isLocal","getters","dispatch","type","data","clusterCounts","nodeHeaders","constraints","events","nodeMetrics","showClusterMetrics","showK8sMetrics","showEtcdMetrics","selectedTab","extensionCards","CARD","CLUSTER_DASHBOARD_CARD","$route","beforeDestroy","computed","displayPspDeprecationBanner","_cluster$status","_cluster$status2","_cluster$status3","_cluster$status4","cluster","major","status","version","parseInt","minor","_this$$store$getters","_clusterCounts$PSP","counts","summary","count","nodes","mgmtNodes","CLUSTER","hidePspDeprecationBanner","hasV1Monitoring","v1MonitoringURL","displayProvider","_this$currentCluster","other","provider","t","isHarvesterCluster","_this$currentCluster2","isHarvester","isRKE","includes","toLowerCase","accessibleResources","_this$clusterCounts","defaultAllowedResources","Object","keys","filter","typeId","allowedResources","Set","resource","componentServices","forEach","cs","push","healthy","isComponentStatusHealthy","labelKey","totalCountGaugeInput","totalInput","total","useful","warningCount","errorCount","entries","entry","hasStats","_this$currentCluster3","_this$currentCluster4","allocatable","requested","cpuReserved","_this$currentCluster5","_this$currentCluster6","cpu","units","podsUsed","_this$currentCluster7","_this$currentCluster8","pods","ramReserved","_this$currentCluster9","_this$currentCluster10","memory","metricAggregations","checkNodes","nodeNames","reduce","acc","n","_n$metadata","nodeName","metadata","labels","someNonWorkerRoles","some","node","hasARole","isWorker","metrics","find","nd","initialAggregation","agg","metric","usage","cpuUsed","_this$currentCluster11","_this$metricAggregati","capacity","ramUsed","_this$currentCluster12","_this$metricAggregati2","hasMonitoring","_this$clusterCounts2","APP","namespaces","canAccessNodes","_this$clusterCounts3","canAccessDeployments","_this$clusterCounts4","hasMetricsTabs","hasBadge","_this$currentCluster13","badge","hasDescription","_this$currentCluster14","spec","description","allEventsLink","params","product","methods","field","_this$currentCluster15","matching","componentStatuses","s","startsWith","length","conditions","c","showActions","commit","resources","elem","$refs","loadMetrics","force","tabChange","neu","selectedName","goToHarvesterCluster","provClusters","RANCHER_CLUSTER","provCluster","p","mgmt"],"sources":["../../node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue"],"sourcesContent":["<script>\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport {\n  CAPI,\n  ENDPOINTS,\n  EVENT,\n  NAMESPACE,\n  INGRESS,\n  MANAGEMENT,\n  METRIC,\n  NODE,\n  SERVICE,\n  PV,\n  WORKLOAD_TYPES,\n  COUNT,\n  CATALOG,\n  PSP,\n} from '@shell/config/types';\nimport { setPromiseResult } from '@shell/utils/promise';\nimport AlertTable from '@shell/components/AlertTable';\nimport { Banner } from '@components/Banner';\nimport { parseSi, createMemoryValues } from '@shell/utils/units';\nimport {\n  NAME,\n  ROLES,\n  STATE,\n} from '@shell/config/table-headers';\n\nimport { mapPref, PSP_DEPRECATION_BANNER } from '@shell/store/prefs';\nimport { haveV1Monitoring, monitoringStatus } from '@shell/utils/monitoring';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport EtcdInfoBanner from '@shell/components/EtcdInfoBanner';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport EmberPage from '@shell/components/EmberPage';\nimport ResourceSummary, { resourceCounts } from '@shell/components/ResourceSummary';\nimport HardwareResourceGauge from '@shell/components/HardwareResourceGauge';\nimport { isEmpty } from '@shell/utils/object';\nimport ConfigBadge from './ConfigBadge';\nimport EventsTable from './EventsTable';\nimport { fetchClusterResources } from './explorer-utils';\nimport SimpleBox from '@shell/components/SimpleBox';\nimport { ExtensionPoint, CardLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\n\nexport const RESOURCES = [NAMESPACE, INGRESS, PV, WORKLOAD_TYPES.DEPLOYMENT, WORKLOAD_TYPES.STATEFUL_SET, WORKLOAD_TYPES.JOB, WORKLOAD_TYPES.DAEMON_SET, SERVICE];\n\nconst CLUSTER_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-nodes-1/rancher-cluster-nodes?orgId=1';\nconst CLUSTER_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-1/rancher-cluster?orgId=1';\nconst K8S_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-nodes-1/rancher-kubernetes-components-nodes?orgId=1';\nconst K8S_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-1/rancher-kubernetes-components?orgId=1';\nconst ETCD_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-nodes-1/rancher-etcd-nodes?orgId=1';\nconst ETCD_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-1/rancher-etcd?orgId=1';\n\nconst COMPONENT_STATUS = [\n  'etcd',\n  'scheduler',\n  'controller-manager',\n];\n\nexport default {\n  name: 'ClusterExplorerIndexPage',\n\n  components: {\n    EtcdInfoBanner,\n    DashboardMetrics,\n    HardwareResourceGauge,\n    ResourceSummary,\n    Tab,\n    Tabbed,\n    AlertTable,\n    Banner,\n    EmberPage,\n    ConfigBadge,\n    EventsTable,\n    SimpleBox,\n  },\n\n  mixins: [metricPoller],\n\n  fetch() {\n    fetchClusterResources(this.$store, NODE);\n\n    if (this.currentCluster) {\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [CLUSTER_METRICS_DETAIL_URL, CLUSTER_METRICS_SUMMARY_URL]),\n        this,\n        'showClusterMetrics',\n        `Determine cluster metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [K8S_METRICS_DETAIL_URL, K8S_METRICS_SUMMARY_URL]),\n        this,\n        'showK8sMetrics',\n        `Determine k8s metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [ETCD_METRICS_DETAIL_URL, ETCD_METRICS_SUMMARY_URL]),\n        this,\n        'showEtcdMetrics',\n        `Determine etcd metrics`\n      );\n\n      if (this.currentCluster.isLocal && this.$store.getters['management/schemaFor'](MANAGEMENT.NODE)) {\n        this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE });\n      }\n    }\n  },\n\n  data() {\n    const clusterCounts = this.$store.getters[`cluster/all`](COUNT);\n    const nodeHeaders = [\n      STATE,\n      NAME,\n      ROLES,\n    ];\n\n    return {\n      nodeHeaders,\n      constraints:        [],\n      events:             [],\n      nodeMetrics:        [],\n      showClusterMetrics: false,\n      showK8sMetrics:     false,\n      showEtcdMetrics:    false,\n      CLUSTER_METRICS_DETAIL_URL,\n      CLUSTER_METRICS_SUMMARY_URL,\n      K8S_METRICS_DETAIL_URL,\n      K8S_METRICS_SUMMARY_URL,\n      ETCD_METRICS_DETAIL_URL,\n      ETCD_METRICS_SUMMARY_URL,\n      clusterCounts,\n      selectedTab:        'cluster-events',\n      extensionCards:     getApplicableExtensionEnhancements(this, ExtensionPoint.CARD, CardLocation.CLUSTER_DASHBOARD_CARD, this.$route),\n    };\n  },\n\n  beforeDestroy() {\n    // Remove the data and stop watching resources that were fetched in this page\n    // Events in particular can lead to change messages having to be processed when we are no longer interested in events\n    this.$store.dispatch('cluster/forgetType', EVENT);\n    this.$store.dispatch('cluster/forgetType', NODE);\n    this.$store.dispatch('cluster/forgetType', ENDPOINTS); // Used by AlertTable to get alerts when v2 monitoring is installed\n    this.$store.dispatch('cluster/forgetType', METRIC.NODE);\n    this.$store.dispatch('cluster/forgetType', MANAGEMENT.NODE);\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    ...monitoringStatus(),\n\n    displayPspDeprecationBanner() {\n      const cluster = this.currentCluster;\n      const major = cluster.status?.version?.major ? parseInt(cluster.status?.version?.major) : 0;\n      const minor = cluster.status?.version?.minor ? parseInt(cluster.status?.version?.minor) : 0;\n\n      if (major === 1 && minor >= 21 && minor < 25) {\n        const clusterCounts = this.$store.getters[`cluster/all`](COUNT)?.[0]?.counts;\n\n        return !!clusterCounts?.[PSP]?.summary?.count;\n      }\n\n      return false;\n    },\n\n    nodes() {\n      return this.$store.getters['cluster/all'](NODE);\n    },\n\n    mgmtNodes() {\n      return this.$store.getters['management/all'](MANAGEMENT.CLUSTER);\n    },\n\n    hidePspDeprecationBanner: mapPref(PSP_DEPRECATION_BANNER),\n\n    hasV1Monitoring() {\n      return haveV1Monitoring(this.$store.getters);\n    },\n\n    v1MonitoringURL() {\n      return `/k/${ this.currentCluster.id }/monitoring`;\n    },\n\n    displayProvider() {\n      const other = 'other';\n\n      let provider = this.currentCluster?.status?.provider || other;\n\n      if (provider === 'rke.windows') {\n        provider = 'rkeWindows';\n      }\n\n      if (!this.$store.getters['i18n/exists'](`cluster.provider.${ provider }`)) {\n        provider = 'other';\n      }\n\n      return this.t(`cluster.provider.${ provider }`);\n    },\n\n    isHarvesterCluster() {\n      return this.currentCluster?.isHarvester;\n    },\n\n    isRKE() {\n      return ['rke', 'rke.windows', 'rke2', 'rke2.windows'].includes((this.currentCluster.status.provider || '').toLowerCase());\n    },\n\n    accessibleResources() {\n      // This is a list of IDs for allowed resources counts.\n      const defaultAllowedResources = Object.keys(this.clusterCounts?.[0]?.counts || {}).filter((typeId) => {\n        return this.$store.getters['type-map/isIgnored']({ id: typeId });\n      });\n\n      // Merge with RESOURCES list\n      const allowedResources = [...new Set([...defaultAllowedResources, ...RESOURCES])];\n\n      return allowedResources.filter((resource) => this.$store.getters['cluster/schemaFor'](resource));\n    },\n\n    componentServices() {\n      const status = [];\n\n      COMPONENT_STATUS.forEach((cs) => {\n        status.push({\n          name:     cs,\n          healthy:  this.isComponentStatusHealthy(cs),\n          labelKey: `clusterIndexPage.sections.componentStatus.${ cs }`,\n        });\n      });\n\n      return status;\n    },\n\n    totalCountGaugeInput() {\n      const totalInput = {\n        name:         this.t('clusterIndexPage.resourceGauge.totalResources'),\n        total:        0,\n        useful:       0,\n        warningCount: 0,\n        errorCount:   0\n      };\n\n      this.accessibleResources.forEach((resource) => {\n        const counts = resourceCounts(this.$store, resource);\n\n        Object.entries(counts).forEach((entry) => {\n          totalInput[entry[0]] += entry[1];\n        });\n      });\n\n      return totalInput;\n    },\n\n    hasStats() {\n      return this.currentCluster?.status?.allocatable && this.currentCluster?.status?.requested;\n    },\n\n    cpuReserved() {\n      const total = parseSi(this.currentCluster?.status?.allocatable?.cpu);\n\n      return {\n        total,\n        useful: parseSi(this.currentCluster?.status?.requested?.cpu),\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    podsUsed() {\n      return {\n        total:  parseSi(this.currentCluster?.status?.allocatable?.pods || '0'),\n        useful: parseSi(this.currentCluster?.status?.requested?.pods || '0'),\n      };\n    },\n\n    ramReserved() {\n      return createMemoryValues(this.currentCluster?.status?.allocatable?.memory, this.currentCluster?.status?.requested?.memory);\n    },\n\n    metricAggregations() {\n      let checkNodes = this.nodes;\n\n      // Special case local cluster\n      if (this.currentCluster.isLocal) {\n        const nodeNames = this.nodes.reduce((acc, n) => {\n          acc[n.id] = n;\n\n          return acc;\n        }, {});\n\n        checkNodes = this.mgmtNodes.filter((n) => {\n          const nodeName = n.metadata?.labels?.['management.cattle.io/nodename'] || n.id;\n\n          return !!nodeNames[nodeName];\n        });\n      }\n\n      const someNonWorkerRoles = checkNodes.some((node) => node.hasARole && !node.isWorker);\n      const metrics = this.nodeMetrics.filter((nodeMetrics) => {\n        const node = this.nodes.find((nd) => nd.id === nodeMetrics.id);\n\n        return node && (!someNonWorkerRoles || node.isWorker);\n      });\n      const initialAggregation = {\n        cpu:    0,\n        memory: 0\n      };\n\n      if (isEmpty(metrics)) {\n        return null;\n      }\n\n      return metrics.reduce((agg, metric) => {\n        agg.cpu += parseSi(metric.usage.cpu);\n        agg.memory += parseSi(metric.usage.memory);\n\n        return agg;\n      }, initialAggregation);\n    },\n\n    cpuUsed() {\n      const total = parseSi(this.currentCluster?.status?.capacity?.cpu);\n\n      return {\n        total,\n        useful: this.metricAggregations?.cpu,\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    ramUsed() {\n      return createMemoryValues(this.currentCluster?.status?.capacity?.memory, this.metricAggregations?.memory);\n    },\n\n    hasMonitoring() {\n      return !!this.clusterCounts?.[0]?.counts?.[CATALOG.APP]?.namespaces?.['cattle-monitoring-system'];\n    },\n\n    canAccessNodes() {\n      return !!this.clusterCounts?.[0]?.counts?.[NODE];\n    },\n\n    canAccessDeployments() {\n      return !!this.clusterCounts?.[0]?.counts?.[WORKLOAD_TYPES.DEPLOYMENT];\n    },\n\n    hasMetricsTabs() {\n      return this.showClusterMetrics || this.showK8sMetrics || this.showEtcdMetrics;\n    },\n\n    hasBadge() {\n      return !!this.currentCluster?.badge;\n    },\n\n    hasDescription() {\n      return !!this.currentCluster?.spec?.description;\n    },\n\n    allEventsLink() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  'explorer',\n          resource: 'event',\n        }\n      };\n    }\n  },\n\n  methods: {\n    // Ported from Ember\n    isComponentStatusHealthy(field) {\n      const matching = (this.currentCluster?.status?.componentStatuses || []).filter((s) => s.name.startsWith(field));\n\n      // If there's no matching component status, it's \"healthy\"\n      if ( !matching.length ) {\n        return true;\n      }\n\n      const count = matching.reduce((acc, status) => {\n        const conditions = status.conditions.find((c) => c.status !== 'True');\n\n        return !conditions ? acc : acc + 1;\n      }, 0);\n\n      return count === 0;\n    },\n\n    showActions() {\n      this.$store.commit('action-menu/show', {\n        resources: this.currentCluster,\n        elem:      this.$refs['cluster-actions'],\n      });\n    },\n\n    // Used by metric-poller mixin\n    async loadMetrics() {\n      this.nodeMetrics = await fetchClusterResources(this.$store, METRIC.NODE, { force: true } );\n    },\n\n    // Events/Alerts tab changed\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n    },\n\n    async goToHarvesterCluster() {\n      try {\n        const provClusters = await this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n        const provCluster = provClusters.find((p) => p.mgmt.id === this.currentCluster.id);\n\n        await provCluster.goToHarvesterCluster();\n      } catch {\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <section class=\"dashboard\">\n    <header>\n      <div class=\"title\">\n        <h1>\n          <t k=\"clusterIndexPage.header\" />\n        </h1>\n        <div>\n          <span v-if=\"hasDescription\">{{ currentCluster.spec.description }}</span>\n        </div>\n      </div>\n    </header>\n    <Banner\n      v-if=\"displayPspDeprecationBanner && !hidePspDeprecationBanner\"\n      :closable=\"true\"\n      color=\"warning\"\n      @close=\"hidePspDeprecationBanner = true\"\n    >\n      <t\n        k=\"landing.deprecatedPsp\"\n        :raw=\"true\"\n      />\n    </Banner>\n    <div\n      class=\"cluster-dashboard-glance\"\n    >\n      <div>\n        <label>{{ t('glance.provider') }}: </label>\n        <span v-if=\"isHarvesterCluster\">\n          <a\n            role=\"button\"\n            @click=\"goToHarvesterCluster\"\n          >\n            {{ displayProvider }}\n          </a>\n        </span>\n        <span v-else>\n          {{ displayProvider }}\n        </span>\n      </div>\n      <div>\n        <label>{{ t('glance.version') }}: </label>\n        <span>{{ currentCluster.kubernetesVersionBase }}</span>\n        <span\n          v-if=\"currentCluster.kubernetesVersionExtension\"\n          style=\"font-size: 0.75em\"\n        >{{ currentCluster.kubernetesVersionExtension }}</span>\n      </div>\n      <div>\n        <label>{{ t('glance.created') }}: </label>\n        <span><LiveDate\n          :value=\"currentCluster.metadata.creationTimestamp\"\n          :add-suffix=\"true\"\n          :show-tooltip=\"true\"\n        /></span>\n      </div>\n      <p\n        v-if=\"displayPspDeprecationBanner && hidePspDeprecationBanner\"\n        v-clean-tooltip=\"t('landing.deprecatedPsp')\"\n        class=\"alt-psp-deprecation-info\"\n      >\n        <span>{{ t('landing.psps') }}</span>\n        <i class=\"icon icon-warning\" />\n      </p>\n      <div :style=\"{'flex':1}\" />\n      <div v-if=\"!monitoringStatus.v2 && !monitoringStatus.v1\">\n        <n-link\n          :to=\"{name: 'c-cluster-explorer-tools'}\"\n          class=\"monitoring-install\"\n        >\n          <i class=\"icon icon-gear\" />\n          <span>{{ t('glance.installMonitoring') }}</span>\n        </n-link>\n      </div>\n      <div v-if=\"monitoringStatus.v1\">\n        <span>{{ t('glance.v1MonitoringInstalled') }}</span>\n      </div>\n      <ConfigBadge\n        v-if=\"currentCluster.canUpdate\"\n        :cluster=\"currentCluster\"\n      />\n    </div>\n\n    <div class=\"resource-gauges\">\n      <ResourceSummary :spoofed-counts=\"totalCountGaugeInput\" />\n      <ResourceSummary\n        v-if=\"canAccessNodes\"\n        resource=\"node\"\n      />\n      <ResourceSummary\n        v-if=\"canAccessDeployments\"\n        resource=\"apps.deployment\"\n      />\n    </div>\n\n    <!-- extension cards -->\n    <div\n      v-if=\"extensionCards.length\"\n      class=\"extension-card-container mt-20\"\n    >\n      <SimpleBox\n        v-for=\"item, i in extensionCards\"\n        :key=\"`extensionCards${i}`\"\n        class=\"extension-card\"\n        :style=\"item.style\"\n      >\n        <h3>\n          {{ item.label }}\n        </h3>\n        <component\n          :is=\"item.component\"\n          :resource=\"currentCluster\"\n        />\n      </SimpleBox>\n    </div>\n\n    <h3\n      v-if=\"!hasV1Monitoring && hasStats\"\n      class=\"mt-40\"\n    >\n      {{ t('clusterIndexPage.sections.capacity.label') }}\n    </h3>\n    <div\n      v-if=\"!hasV1Monitoring && hasStats\"\n      class=\"hardware-resource-gauges\"\n    >\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.pods')\"\n        :used=\"podsUsed\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.cores')\"\n        :reserved=\"cpuReserved\"\n        :used=\"cpuUsed\"\n        :units=\"cpuReserved.units\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.ram')\"\n        :reserved=\"ramReserved\"\n        :used=\"ramUsed\"\n        :units=\"ramReserved.units\"\n      />\n    </div>\n\n    <div v-if=\"!hasV1Monitoring && componentServices\">\n      <div\n        v-for=\"status in componentServices\"\n        :key=\"status.name\"\n        class=\"k8s-component-status\"\n        :class=\"{'k8s-component-status-healthy': status.healthy, 'k8s-component-status-unhealthy': !status.healthy}\"\n      >\n        <i\n          v-if=\"status.healthy\"\n          class=\"icon icon-checkmark\"\n        />\n        <i\n          v-else\n          class=\"icon icon-warning\"\n        />\n        <div>{{ t(status.labelKey) }}</div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"hasV1Monitoring\"\n      id=\"ember-anchor\"\n      class=\"mt-20\"\n    >\n      <EmberPage\n        inline=\"ember-anchor\"\n        :src=\"v1MonitoringURL\"\n      />\n    </div>\n\n    <div class=\"mt-30\">\n      <Tabbed @changed=\"tabChange\">\n        <Tab\n          name=\"cluster-events\"\n          :label=\"t('clusterIndexPage.sections.events.label')\"\n          :weight=\"2\"\n        >\n          <span class=\"events-table-link\">\n            <n-link :to=\"allEventsLink\">\n              <span>{{ t('glance.eventsTable') }}</span>\n            </n-link>\n          </span>\n          <EventsTable />\n        </Tab>\n        <Tab\n          v-if=\"hasMonitoring\"\n          name=\"cluster-alerts\"\n          :label=\"t('clusterIndexPage.sections.alerts.label')\"\n          :weight=\"1\"\n        >\n          <AlertTable v-if=\"selectedTab === 'cluster-alerts'\" />\n        </Tab>\n      </Tabbed>\n    </div>\n    <Tabbed\n      v-if=\"hasMetricsTabs\"\n      default-tab=\"cluster-metrics\"\n      :use-hash=\"false\"\n      class=\"mt-30\"\n    >\n      <Tab\n        v-if=\"showClusterMetrics\"\n        name=\"cluster-metrics\"\n        :label=\"t('clusterIndexPage.sections.clusterMetrics.label')\"\n        :weight=\"2\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"CLUSTER_METRICS_DETAIL_URL\"\n            :summary-url=\"CLUSTER_METRICS_SUMMARY_URL\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showK8sMetrics\"\n        name=\"k8s-metrics\"\n        :label=\"t('clusterIndexPage.sections.k8sMetrics.label')\"\n        :weight=\"1\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"K8S_METRICS_DETAIL_URL\"\n            :summary-url=\"K8S_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showEtcdMetrics\"\n        name=\"etcd-metrics\"\n        :label=\"t('clusterIndexPage.sections.etcdMetrics.label')\"\n        :weight=\"0\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            class=\"etcd-metrics\"\n            :detail-url=\"ETCD_METRICS_DETAIL_URL\"\n            :summary-url=\"ETCD_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          >\n            <EtcdInfoBanner />\n          </DashboardMetrics>\n        </template>\n      </Tab>\n    </Tabbed>\n  </section>\n</template>\n\n<style lang=\"scss\" scoped>\n.extension-card-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(calc((100%/3) - 40px), 1fr));\n  grid-column-gap: 15px;\n  grid-row-gap: 20px;\n}\n\n@media only screen and (max-width: map-get($breakpoints, \"--viewport-9\")) {\n  .extension-card-container {\n    grid-template-columns: 1fr !important;\n  }\n}\n\n.cluster-dashboard-glance {\n  border-top: 1px solid var(--border);\n  border-bottom: 1px solid var(--border);\n  padding: 20px 0px;\n  display: flex;\n\n  &>*:not(:nth-last-child(-n+2)) {\n    margin-right: 40px;\n\n    & SPAN {\n       font-weight: bold\n    }\n  }\n}\n\n.title h1 {\n  margin: 0;\n}\n\n.actions-span {\n  align-self: center;\n}\n\n.events {\n  margin-top: 30px;\n}\n\n.graph-options {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.etcd-metrics ::v-deep .external-link {\n  top: -107px;\n}\n\n.cluster-tools-tip {\n  margin-top: 0;\n}\n\n.alt-psp-deprecation-info {\n  display: flex;\n  align-items: center;\n  color: var(--warning);\n\n  span {\n    margin-right: 4px;\n  }\n}\n\n.monitoring-install {\n  display: flex;\n  margin-left: 10px;\n\n  > I {\n    line-height: inherit;\n    margin-right: 4px;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n.events-table-link {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n}\n\n.k8s-component-status {\n  align-items: center;\n  display: inline-flex;\n  border: 1px solid;\n  margin-top: 20px;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  > div {\n    padding: 5px 20px;\n  }\n\n  > I {\n    text-align: center;\n    padding: 5px 10px;\n    border-right: 1px solid var(--border);\n  }\n\n  &.k8s-component-status-unhealthy {\n    border-color: var(--error-border);\n\n    > I {\n      color: var(--error)\n    }\n  }\n\n  &.k8s-component-status-healthy {\n    border-color: var(--border);\n\n    > I {\n      color: var(--success)\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}