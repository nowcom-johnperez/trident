{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--2-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/listnetwork.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/listnetwork.vue","mtime":1716430386795},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgU09SVEFCTEVfU1VCX05FVFdPUktfSEVBREVSUywgU09SVEFCTEVfTkVUV09SS19IRUFERVJTIH0gZnJvbSAnLi4vY29uZmlnL3RhYmxlJzsKaW1wb3J0IHsgVk5FVF9CVVRUT05TIH0gZnJvbSAnLi4vY29uZmlnL2J1dHRvbnMnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBTb3J0YWJsZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUudnVlJzsKaW1wb3J0IGNCdXR0b24gZnJvbSAnLi4vY29tcG9uZW50cy9jb21tb24vQnV0dG9uJzsKaW1wb3J0IFNpZGVCYXIgZnJvbSAnLi4vY29tcG9uZW50cy9TaWRlYmFyJzsKaW1wb3J0IEdyb3VwQnV0dG9ucyBmcm9tICcuLi9jb21wb25lbnRzL2NvbW1vbi9Hcm91cEJ1dHRvbnMnOwppbXBvcnQgTW9kYWwgZnJvbSAnLi4vY29tcG9uZW50cy9jb21tb24vTW9kYWwnOwppbXBvcnQgQWxlcnQgZnJvbSAnLi4vY29tcG9uZW50cy9jb21tb24vQWxlcnQnOwppbXBvcnQgQWRkU3VibmV0IGZyb20gJy4uL2NvbXBvbmVudHMvZm9ybXMvQWRkU3VibmV0JzsKaW1wb3J0IHsgUFJPRFVDVF9OQU1FLCBDUkVBVEVfTkVUV09SSywgQkxBTktfQ0xVU1RFUiB9IGZyb20gJy4uL2NvbmZpZy9jb25zdGFudHMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0xpc3ROZXR3b3JrJywKICBjb21wb25lbnRzOiB7CiAgICBTb3J0YWJsZVRhYmxlLAogICAgY0J1dHRvbiwKICAgIFNpZGVCYXIsCiAgICBHcm91cEJ1dHRvbnMsCiAgICBNb2RhbCwKICAgIEFsZXJ0LAogICAgQWRkU3VibmV0CiAgfSwKICAvLyBsYXlvdXQ6ICdob21lJywKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2VsZWN0ZWROYW1lOiAnJywKICAgICAgLy8gRHJvcGRvd24gZm9yIG5ldHdvcmsgbmFtZQogICAgICBzZWxlY3RlZFZuZXROYW1lOiAnJywKICAgICAgc2VsZWN0ZWRTdWJuZXROYW1lOiAnJywKICAgICAgc2VsZWN0ZWRWbmV0U3VibmV0czogJzEwLjU1LjAuMCcsCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBpc01vZGFsT3BlbjogZmFsc2UsCiAgICAgIGFwaVJlc3BvbnNlOiBudWxsLAogICAgICBzdWJuZXRSZXNwb25zZTogbnVsbCwKICAgICAgaXNNb2RhbFN1Ym5ldE9wZW46IGZhbHNlLAogICAgICB2bmV0X25hbWU6ICcnLAogICAgICBzdWJuZXRfbmFtZTogJycsCiAgICAgIHN1Ym5ldF9hZGRyZXNzOiAnJywKICAgICAgc3VibmV0X3ByZWZpeF9sZW46ICcnLAogICAgICBzdWJuZXRfaWQ6ICcnLAogICAgICBzZWxlY3RlZE5ldHdvcms6IG51bGwsCiAgICAgIHNpZGViYXJWaXNpYmxlOiBmYWxzZSwKICAgICAgYWRkU3VibmV0U2lkZWJhclZpc2libGU6IGZhbHNlLAogICAgICBhcGlFcnJvcjogbnVsbCwKICAgICAgYXBpUmVzcG9uc2VNZXNzYWdlOiAnJywKICAgICAgZmlsdGVyczogewogICAgICAgIG5hbWU6IHsKICAgICAgICAgIHZhbHVlOiAnJywKICAgICAgICAgIGtleXM6IFsnbG9uZ05hbWUnXQogICAgICAgIH0KICAgICAgfSwKICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgIHRvdGFsUGFnZXM6IDAsCiAgICAgIG5ldHdvcmtIZWFkZXI6IFtdLAogICAgICBzdWJuZXR3b3JrSGVhZGVyOiBbXSwKICAgICAgdm5ldEJ1dHRvbnM6IFtdCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoUFJPRFVDVF9OQU1FLCB7CiAgICAgIG5ldHdvcmtzOiAnaXRlbXMnCiAgICB9KQogIH0sCiAgbWV0aG9kczogewogICAgYWN0aW9uSGFuZGxlcihhY3Rpb24pIHsKICAgICAgaWYgKGFjdGlvbiA9PT0gJ2NyZWF0ZScpIHsKICAgICAgICB0aGlzLiRyb3V0ZXIucHVzaChgLyR7UFJPRFVDVF9OQU1FfS9jLyR7QkxBTktfQ0xVU1RFUn0vJHtDUkVBVEVfTkVUV09SS31gKTsKICAgICAgfSBlbHNlIGlmIChhY3Rpb24gPT09ICdyZWZyZXNoJykgewogICAgICAgIHRoaXMuZmV0Y2hOZXR3b3JrcygpOwogICAgICB9CiAgICB9LAogICAgYXN5bmMgZ2V0U3VibmV0QnlOYW1lKG5ldHdvcmtOYW1lKSB7CiAgICAgIC8vIGNvbnN0IHN1Ym5ldFJlcyA9IGF3YWl0IHZOZXRTZXJ2aWNlLmdldFN1Ym5ldEJ5TmFtZShuZXR3b3JrTmFtZSk7CgogICAgICB0aGlzLnNlbGVjdGVkTmV0d29yayA9IG51bGw7CgogICAgICAvLyB0aGlzLnNlbGVjdGVkTmV0d29yay5zdWJuZXRzID0gc3VibmV0UmVzLmRhdGEuc3BlYy5zdWJuZXRzLm1hcChzdWJuZXQgPT4gKHsKICAgICAgLy8gICBhZGRyZXNzOiAgICBzdWJuZXQuYWRkcmVzcywKICAgICAgLy8gICBmb3JtYXR0ZWRBZGRyZXNzOiAgICBgJHtzdWJuZXQuYWRkcmVzc30vJHtzdWJuZXQucHJlZml4TGVuZ3RofWAsCiAgICAgIC8vICAgbmFtZTogICAgICAgc3RyaXBTdHJpbmdzKHN1Ym5ldC5uYW1lKSwKICAgICAgLy8gICBsb25nTmFtZTogICBzdWJuZXQubmFtZSwKICAgICAgLy8gICBwcmVmaXhfbGVuOiBzdWJuZXQucHJlZml4TGVuZ3RoLAogICAgICAvLyAgIHRyYW5zbGF0ZWRBZGRyZXNzOiBzdWJuZXQuYWRkcmVzc1RyYW5zbGF0aW9uPy5vdXRzaWRlCiAgICAgIC8vIH0pKTsKCiAgICAgIC8vIGNvbnNvbGUubG9nKGBzdWJuZXRSZXNgLCB0aGlzLnNlbGVjdGVkTmV0d29yay5zdWJuZXRzKQogICAgICBhd2FpdCB0aGlzLmZldGNoTmV0d29ya3MoKTsKICAgICAgdGhpcy5zZWxlY3RlZE5ldHdvcmsgPSB0aGlzLm5ldHdvcmtzLmZpbmQobmV0d29yayA9PiBuZXR3b3JrLm5hbWUgPT09IG5ldHdvcmtOYW1lKTsKICAgIH0sCiAgICBhc3luYyBzdWJuZXRBZGRlZEhhbmRsZXIoKSB7CiAgICAgIHRoaXMuc3VibmV0UmVzcG9uc2UgPSAnc3VjY2Vzcyc7CiAgICAgIHRoaXMuc3VibmV0UmVzcG9uc2VNZXNzYWdlID0gJ1N1Y2Nlc3NmdWxseSBhZGRlZCBzdWJuZXQhJzsKICAgICAgdGhpcy5hZGRTdWJuZXRTaWRlYmFyVmlzaWJsZSA9IGZhbHNlOwogICAgICBhd2FpdCB0aGlzLmdldFN1Ym5ldEJ5TmFtZSh0aGlzLnNlbGVjdGVkTmV0d29yay5uYW1lKTsKICAgIH0sCiAgICBhZGRTdWJuZXRTaWRlYmFyKCkgewogICAgICB0aGlzLnNlbGVjdGVkU3VibmV0TmFtZSA9IG51bGw7CiAgICAgIHRoaXMuYWRkU3VibmV0U2lkZWJhclZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGNsb3NlU3VibmV0U2lkZWJhcigpIHsKICAgICAgdGhpcy5hZGRTdWJuZXRTaWRlYmFyVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIG9wZW5TaWRlYmFyKGl0ZW0pIHsKICAgICAgLy8gVXBkYXRlIHRoZSBpdGVtIHdpdGggdGhlIGZldGNoZWQgZGF0YQogICAgICB0aGlzLnN1Ym5ldFJlc3BvbnNlID0gbnVsbDsKICAgICAgdGhpcy5zZWxlY3RlZE5ldHdvcmsgPSBpdGVtOwogICAgICB0aGlzLnNpZGViYXJWaXNpYmxlID0gdHJ1ZTsKICAgIH0sCiAgICBjbG9zZVNpZGViYXIoKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWROZXR3b3JrID0gbnVsbDsKICAgICAgdGhpcy5zaWRlYmFyVmlzaWJsZSA9IGZhbHNlOwogICAgfSwKICAgIG9wZW5Nb2RhbCh2bmV0Um93KSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBuYW1lCiAgICAgIH0gPSB2bmV0Um93OwogICAgICAvLyBTZXQgdGhlIHNlbGVjdGVkIFZMQU4gbmFtZQogICAgICB0aGlzLnNlbGVjdGVkVm5ldE5hbWUgPSBuYW1lOwogICAgICB0aGlzLnN1Ym5ldFJlc3BvbnNlID0gbnVsbDsKICAgICAgLy8gT3BlbiB0aGUgbW9kYWwKICAgICAgdGhpcy5pc01vZGFsT3BlbiA9IHRydWU7CiAgICB9LAogICAgY2xvc2VNb2RhbCgpIHsKICAgICAgdGhpcy5pc01vZGFsT3BlbiA9IGZhbHNlOwogICAgfSwKICAgIG9wZW5Nb2RhbEFjdGlvbihzdWJuZXRSb3cpIHsKICAgICAgY29uc3QgewogICAgICAgIG5hbWUsCiAgICAgICAgYWRkcmVzcywKICAgICAgICBwcmVmaXhfbGVuCiAgICAgIH0gPSBzdWJuZXRSb3c7CiAgICAgIC8vIFNldCB0aGUgc2VsZWN0ZWQgVkxBTiBuYW1lCiAgICAgIGNvbnNvbGUubG9nKG5hbWUsIGFkZHJlc3MsIHByZWZpeF9sZW4pOwogICAgICB0aGlzLnZuZXRfbmFtZSA9IHRoaXMuc2VsZWN0ZWROZXR3b3JrLm5hbWU7CiAgICAgIHRoaXMuc3VibmV0X25hbWUgPSBuYW1lOwogICAgICB0aGlzLnN1Ym5ldF9hZGRyZXNzID0gYWRkcmVzczsKICAgICAgdGhpcy5zdWJuZXRfcHJlZml4X2xlbiA9IHByZWZpeF9sZW47CgogICAgICAvLyBPcGVuIHRoZSBtb2RhbAogICAgICB0aGlzLmlzTW9kYWxTdWJuZXRPcGVuID0gdHJ1ZTsKICAgIH0sCiAgICBjbG9zZU1vZGFsU3VibmV0KCkgewogICAgICB0aGlzLmlzTW9kYWxTdWJuZXRPcGVuID0gZmFsc2U7CiAgICB9LAogICAgYXN5bmMgZmV0Y2hOZXR3b3JrcygpIHsKICAgICAgY29uc29sZS5sb2coJ2ZldGNoaW5nIG5ldHdvcmtzJyk7CiAgICAgIC8vIEZldGNoIHRoZSBuZXR3b3JrIGxpc3QgZnJvbSB5b3VyIEFQSQogICAgICB0cnkgewogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKGAke1BST0RVQ1RfTkFNRX0vZmluZEFsbGApOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIE5ldHdvcmsgTGlzdDonLCBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBhc3luYyBkZWxldGVOZXR3b3JrKCkgewogICAgICB0cnkgewogICAgICAgIGNvbnNvbGUubG9nKGBEZWxldGUgTmV0d29yayBFbmRwb2ludCwgJHt0aGlzLnNlbGVjdGVkVm5ldE5hbWV9YCk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAvLyBDbG9zZSB0aGUgbW9kYWwgYmVmb3JlIGRlbGV0aW9uCiAgICAgICAgdGhpcy5jbG9zZU1vZGFsKCk7CiAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goYCR7UFJPRFVDVF9OQU1FfS9kZWxldGVOZXR3b3JrYCwgdGhpcy5zZWxlY3RlZFZuZXROYW1lKTsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgLy8gZGVmaW5lcyB3aGF0IGtpbmQgb2YgY29tcG9uZW50IHNob3VsZCB0aGUgbm90aWZpY2F0aW9uIHNob3cKICAgICAgICB0aGlzLmFwaVJlc3BvbnNlID0gJ2Vycm9yJzsKICAgICAgICAvLyBTZXQgdGhlIEFQSSByZXNwb25zZSBkYXRhIGluIHRoZSBjb21wb25lbnQKICAgICAgICB0aGlzLmFwaVJlc3BvbnNlTWVzc2FnZSA9IGBZb3UgaGF2ZSBzdWNjZXNzZnVsbHkgZGVsZXRlZCBWTkVUOiAke3RoaXMuc2VsZWN0ZWRWbmV0TmFtZX1gOwogICAgICAgIHRoaXMuYXBpRXJyb3IgPSBudWxsOyAvLyBSZXNldCBlcnJvciBzdGF0ZQoKICAgICAgICBhd2FpdCB0aGlzLmZldGNoTmV0d29ya3MoKTsKICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICAvLyBIYW5kbGUgYW55IGVycm9ycyBoZXJlCiAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgZGVsZXRpbmcgbmV0d29yazonLCBlcnJvcik7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgdGhpcy5pc01vZGFsT3BlbiA9IHRydWU7CiAgICAgICAgdGhpcy5hcGlSZXNwb25zZU1lc3NhZ2UgPSAnRXJyb3InOwogICAgICAgIC8vIFNldCB0aGUgQVBJIGVycm9yIGluIHRoZSBjb21wb25lbnQKICAgICAgICB0aGlzLmFwaUVycm9yID0gZXJyb3IucmVzcG9uc2UgPyBlcnJvci5yZXNwb25zZS5kYXRhIDogZXJyb3IubWVzc2FnZTsKICAgICAgICB0aGlzLmFwaVJlc3BvbnNlID0gMTsgLy8gUmVzZXQgcmVzcG9uc2Ugc3RhdGUKICAgICAgfSBmaW5hbGx5IHt9CiAgICB9LAogICAgYXN5bmMgZGVsZXRlU3VibmV0KCkgewogICAgICB0cnkgewogICAgICAgIGNvbnNvbGUubG9nKGBEZWxldGUgU3VibmV0IEVuZHBvaW50LCAke3RoaXMudm5ldF9uYW1lfSwgJHt0aGlzLnN1Ym5ldF9uYW1lfSwgJHt0aGlzLnN1Ym5ldF9pZH1gKTsKICAgICAgICB0aGlzLnNlbGVjdGVkTmV0d29yay5zdWJuZXRzID0gdGhpcy5zZWxlY3RlZE5ldHdvcmsuc3VibmV0cy5maWx0ZXIoc3VibmV0ID0+IHN1Ym5ldC5uYW1lICE9PSB0aGlzLnN1Ym5ldF9uYW1lKTsKICAgICAgICBjb25zb2xlLmxvZygnbmV3IHN1Ym5ldCcsIHRoaXMuc2VsZWN0ZWROZXR3b3JrLnN1Ym5ldCk7CiAgICAgICAgY29uc3Qgdm5ldF9kYXRhID0gewogICAgICAgICAgYXBpVmVyc2lvbjogJ3BhY2tldGxpZnRlci5kZXYvdjEnLAogICAgICAgICAga2luZDogJ1ZuZXQnLAogICAgICAgICAgLy8gdm5ldF92bGFuOiB0aGlzLnNlbGVjdGVkVm5ldFZsYW4sCiAgICAgICAgICBtZXRhZGF0YTogewogICAgICAgICAgICBuYW1lOiB0aGlzLnZuZXRfbmFtZS50b0xvd2VyQ2FzZSgpLAogICAgICAgICAgICBuYW1lc3BhY2U6ICdkZWZhdWx0JwogICAgICAgICAgfSwKICAgICAgICAgIHNwZWM6IHsKICAgICAgICAgICAgbmFtZTogdGhpcy52bmV0X25hbWUudG9Mb3dlckNhc2UoKSwKICAgICAgICAgICAgc3VibmV0czogdGhpcy5zZWxlY3RlZE5ldHdvcmsuc3VibmV0cwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICAvLyBDbG9zZSB0aGUgbW9kYWwgYmVmb3JlIGRlbGV0aW9uCiAgICAgICAgdGhpcy5jbG9zZU1vZGFsU3VibmV0KCk7CiAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goYCR7UFJPRFVDVF9OQU1FfS9kZWxldGVTdWJuZXRgLCB7CiAgICAgICAgICB2bmV0TmFtZTogdGhpcy52bmV0X25hbWUsCiAgICAgICAgICB2bmV0RGF0YTogdm5ldF9kYXRhCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7CgogICAgICAgIC8vIGRlZmluZXMgd2hhdCBraW5kIG9mIGNvbXBvbmVudCBzaG91bGQgdGhlIG5vdGlmaWNhdGlvbiBzaG93CiAgICAgICAgdGhpcy5zdWJuZXRSZXNwb25zZSA9ICdlcnJvcic7CiAgICAgICAgdGhpcy5zdWJuZXRSZXNwb25zZU1lc3NhZ2UgPSBgU3VjY2Vzc2Z1bGx5IGRlbGV0ZWQgc3VibmV0OiAke3RoaXMuc3VibmV0X25hbWV9YDsKICAgICAgICBhd2FpdCB0aGlzLmdldFN1Ym5ldEJ5TmFtZSh0aGlzLnZuZXRfbmFtZSk7CgogICAgICAgIC8vIFVwZGF0ZSB0aGUgc2VsZWN0ZWROZXR3b3JrIHdpdGggdGhlIHNlbGVjdGVkIHZuZXRfbmFtZQogICAgICAgIHRoaXMuc2VsZWN0ZWROZXR3b3JrLnZuZXRfbmFtZSA9IHRoaXMudm5ldF9uYW1lOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIC8vIEhhbmRsZSBhbnkgZXJyb3JzIGhlcmUKICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBkZWxldGluZyBuZXR3b3JrOicsIGVycm9yKTsKICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICB0aGlzLmlzTW9kYWxTdWJuZXRPcGVuID0gdHJ1ZTsKICAgICAgICAvLyBTZXQgdGhlIEFQSSBlcnJvciBpbiB0aGUgY29tcG9uZW50CiAgICAgICAgdGhpcy5zdWJuZXRSZXNwb25zZU1lc3NhZ2UgPSBlcnJvci5yZXNwb25zZSA/IGVycm9yLnJlc3BvbnNlLmRhdGEgOiBlcnJvci5tZXNzYWdlOwogICAgICAgIHRoaXMuc3VibmV0UmVzcG9uc2UgPSAnZXJyb3InOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5uZXR3b3JrSGVhZGVyID0gU09SVEFCTEVfTkVUV09SS19IRUFERVJTOwogICAgdGhpcy5zdWJuZXR3b3JrSGVhZGVyID0gU09SVEFCTEVfU1VCX05FVFdPUktfSEVBREVSUzsKICAgIHRoaXMudm5ldEJ1dHRvbnMgPSBWTkVUX0JVVFRPTlM7CiAgfSwKICBtb3VudGVkKCkgewogICAgLy8gRmV0Y2ggdGhlIFZMQU4gbGlzdCBhbmQgbmV0d29yayBsaXN0IHdoZW4gdGhlIGNvbXBvbmVudCBpcyBtb3VudGVkCiAgICB0aGlzLmZldGNoTmV0d29ya3MoKTsKICAgIC8vIHRoaXMuZmV0Y2hIYXJ2ZXN0ZXJOZXR3b3JrcygpOwogIH0KfTs="},{"version":3,"names":["SORTABLE_SUB_NETWORK_HEADERS","SORTABLE_NETWORK_HEADERS","VNET_BUTTONS","mapGetters","SortableTable","cButton","SideBar","GroupButtons","Modal","Alert","AddSubnet","PRODUCT_NAME","CREATE_NETWORK","BLANK_CLUSTER","name","components","data","selectedName","selectedVnetName","selectedSubnetName","selectedVnetSubnets","loading","isModalOpen","apiResponse","subnetResponse","isModalSubnetOpen","vnet_name","subnet_name","subnet_address","subnet_prefix_len","subnet_id","selectedNetwork","sidebarVisible","addSubnetSidebarVisible","apiError","apiResponseMessage","filters","value","keys","currentPage","totalPages","networkHeader","subnetworkHeader","vnetButtons","computed","networks","methods","actionHandler","action","$router","push","fetchNetworks","getSubnetByName","networkName","find","network","subnetAddedHandler","subnetResponseMessage","addSubnetSidebar","closeSubnetSidebar","openSidebar","item","closeSidebar","openModal","vnetRow","closeModal","openModalAction","subnetRow","address","prefix_len","console","log","closeModalSubnet","$store","dispatch","error","deleteNetwork","response","message","deleteSubnet","subnets","filter","subnet","vnet_data","apiVersion","kind","metadata","toLowerCase","namespace","spec","vnetName","vnetData","created","mounted"],"sources":["pages/listnetwork.vue"],"sourcesContent":["<!-- eslint-disable no-console -->\n<template>\n  <div class=\"base\">\n    <h1 class=\"text-label\">Virtual Network</h1>\n    <div class=\"mt-10 mb-10\" v-if=\"apiResponse\">\n      <Alert :variant=\"apiResponse\" @close=\"apiResponse = null\">{{ apiResponseMessage }}</Alert>\n    </div>\n    <GroupButtons :list=\"vnetButtons\" @action=\"actionHandler\"/>\n    <div class=\"form-row mt-10\">\n      <div class=\"form-column\">\n        <SortableTable :headers=\"networkHeader\" :rows=\"networks\" :paging=\"true\" :rowActionsWidth=\"10\" :rows-per-page=\"5\" keyField=\"longName\" :loading=\"loading\">\n          <template #cell:name=\"{row}\">\n            <a href=\"#\" @click.prevent=\"openSidebar(row)\">{{ row.name }}</a>\n          </template>\n          <template #row-actions=\"row\">\n            <cButton class=\"cbtn btn-primary\" @click=\"openModal(row.row)\" :disabled=\"loading\">\n              <span class=\"fa fa-trash fa-lg mr-5\"></span> Delete\n            </cButton>\n          </template>\n        </SortableTable>\n        </br> </br>\n      </div>\n    </div>\n\n    <SideBar type=\"main\" :sidebar-visible=\"sidebarVisible\" @close=\"closeSidebar\">\n      <h2 class=\"text-label\">{{ selectedNetwork ? selectedNetwork.name : 'No Network Selected' }}</h2>\n        <div class=\"form-row\">\n          <div class=\"form-column\" align=\"left\">\n            <cButton class=\"cbtn btn-light\" @click=\"addSubnetSidebar\">\n              <i class=\"fa fa-plus fa-lg mr-5\"></i> Add Subnet\n            </cButton> \n          </div>\n        </div>\n        <div class=\"mt-10 mb-10\" v-if=\"subnetResponse\">\n          <Alert :variant=\"subnetResponse\" @close=\"subnetResponse = null\">{{ subnetResponseMessage }}</Alert>\n        </div>\n        <SortableTable v-if=\"selectedNetwork\" :headers=\"subnetworkHeader\" :rows=\"selectedNetwork.subnets\" :paging=\"true\" :rowActionsWidth=\"10\" :rows-per-page=\"5\" keyField=\"name\" :loading=\"loading\">\n          <template #row-actions=\"row\">\n            <cButton class=\"cbtn btn-primary\" @click=\"openModalAction(row.row)\" :disabled=\"loading\">\n              <span class=\"fa fa-trash fa-lg mr-5\"></span> Delete\n            </cButton>\n          </template>  \n        </SortableTable>\n    </SideBar>\n\n    <SideBar type=\"sub\" :sidebar-visible=\"addSubnetSidebarVisible\" @close=\"closeSubnetSidebar\">\n      <AddSubnet v-if=\"selectedNetwork\" :is-open=\"addSubnetSidebarVisible\" :current-network=\"selectedNetwork\" @success=\"subnetAddedHandler\" />\n    </SideBar>\n\n    <!-- Modal -->\n    <Modal v-if=\"isModalOpen\">\n      <template v-slot:content>\n        <h2>Delete?</h2>\n        <p>Are you sure that you want to delete VLAN \"{{ selectedVnetName }}\"?</p>\n      </template>\n\n      <template v-slot:footer>\n        <cButton class=\"cbtn btn-danger\" @click=\"deleteNetwork\" :disabled=\"loading\" label=\"Yes\" />\n        <cButton class=\"cbtn btn-light\" @click=\"closeModal\" :disabled=\"loading\" label=\"No\" />\n      </template>\n    </Modal>\n\n    <Modal v-if=\"isModalSubnetOpen\">\n      <template v-slot:content>\n        <h2>Are you sure that you want to delete:</h2>\n        <p>Subnet \"{{ subnet_name }}\" under VNET \"{{ vnet_name }}\"?</p>\n      </template>\n\n      <template v-slot:footer>\n        <cButton class=\"cbtn btn-danger\" @click=\"deleteSubnet\" :disabled=\"loading\" label=\"Yes\" />\n        <cButton class=\"cbtn btn-light\" @click=\"closeModalSubnet\" :disabled=\"loading\" label=\"No\" />\n      </template>\n    </Modal>\n  </div>\n</template>\n\n<script>\nimport { SORTABLE_SUB_NETWORK_HEADERS, SORTABLE_NETWORK_HEADERS } from '../config/table'\nimport { VNET_BUTTONS } from '../config/buttons'\nimport { mapGetters } from 'vuex'\nimport SortableTable from '@shell/components/ResourceTable.vue'\n\nimport cButton from '../components/common/Button'\nimport SideBar from '../components/Sidebar'\nimport GroupButtons from '../components/common/GroupButtons'\nimport Modal from '../components/common/Modal'\nimport Alert from '../components/common/Alert'\nimport AddSubnet from '../components/forms/AddSubnet'\n\nimport { PRODUCT_NAME, CREATE_NETWORK, BLANK_CLUSTER } from '../config/constants'\n\nexport default {\n  name: 'ListNetwork',\n  components: {\n    SortableTable,\n    cButton,\n    SideBar,\n    GroupButtons,\n    Modal,\n    Alert,\n    AddSubnet\n  },\n  // layout: 'home',\n  data() {\n    return {\n      selectedName:            '', // Dropdown for network name\n      selectedVnetName:        '',\n      selectedSubnetName:      '',\n      selectedVnetSubnets:     '10.55.0.0',\n      loading:                 false,\n      isModalOpen:             false,\n      apiResponse:             null,\n      subnetResponse:          null,\n      isModalSubnetOpen:       false,\n      vnet_name:               '',\n      subnet_name:             '',\n      subnet_address:          '',\n      subnet_prefix_len:       '',\n      subnet_id:               '',\n      selectedNetwork:         null,\n      sidebarVisible:          false,\n      addSubnetSidebarVisible: false,\n      apiError:                null,\n      apiResponseMessage:      '',\n      filters:                 { name: { value: '', keys: ['longName'] } },\n      currentPage:             1,\n      totalPages:              0,\n      networkHeader: [],\n      subnetworkHeader: [],\n      vnetButtons: [],\n    };\n  },\n  computed: {\n    ...mapGetters(PRODUCT_NAME, {\n      networks: 'items',\n    })\n  },\n  methods: {\n    actionHandler (action) {\n      if (action === 'create') {\n        this.$router.push(`/${ PRODUCT_NAME }/c/${ BLANK_CLUSTER }/${ CREATE_NETWORK }`);\n      } else if (action === 'refresh') {\n        this.fetchNetworks();\n      }\n    },\n    async getSubnetByName (networkName) {\n      // const subnetRes = await vNetService.getSubnetByName(networkName);\n\n      this.selectedNetwork = null;\n\n      // this.selectedNetwork.subnets = subnetRes.data.spec.subnets.map(subnet => ({\n      //   address:    subnet.address,\n      //   formattedAddress:    `${subnet.address}/${subnet.prefixLength}`,\n      //   name:       stripStrings(subnet.name),\n      //   longName:   subnet.name,\n      //   prefix_len: subnet.prefixLength,\n      //   translatedAddress: subnet.addressTranslation?.outside\n      // }));\n\n      // console.log(`subnetRes`, this.selectedNetwork.subnets)\n      await this.fetchNetworks();\n\n      this.selectedNetwork = this.networks.find((network) => network.name === networkName);\n    },\n    async subnetAddedHandler() {\n      this.subnetResponse = 'success';\n      this.subnetResponseMessage = 'Successfully added subnet!';\n      this.addSubnetSidebarVisible = false;\n      await this.getSubnetByName(this.selectedNetwork.name);\n    },\n    addSubnetSidebar() {\n      this.selectedSubnetName = null;\n      this.addSubnetSidebarVisible = true;\n    },\n    closeSubnetSidebar() {\n      this.addSubnetSidebarVisible = false;\n    },\n    openSidebar(item) {\n      // Update the item with the fetched data\n      this.subnetResponse = null;\n      this.selectedNetwork = item;\n      this.sidebarVisible = true;\n    },\n    closeSidebar() {\n      this.selectedNetwork = null;\n      this.sidebarVisible = false;\n    },\n    openModal(vnetRow) {\n      const { name } = vnetRow;\n      // Set the selected VLAN name\n      this.selectedVnetName = name;\n      this.subnetResponse = null;\n      // Open the modal\n      this.isModalOpen = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n\n    openModalAction(subnetRow) {\n      const { name, address, prefix_len } = subnetRow;\n      // Set the selected VLAN name\n      console.log(name, address, prefix_len);\n      this.vnet_name = this.selectedNetwork.name;\n      this.subnet_name = name;\n      this.subnet_address = address;\n      this.subnet_prefix_len = prefix_len;\n\n      // Open the modal\n      this.isModalSubnetOpen = true;\n    },\n\n    closeModalSubnet() {\n      this.isModalSubnetOpen = false;\n    },\n\n    async fetchNetworks() {\n      console.log('fetching networks');\n      // Fetch the network list from your API\n      try {\n        await this.$store.dispatch(`${PRODUCT_NAME}/findAll`)\n      } catch (error) {\n        console.error('Error fetching Network List:', error);\n      }\n    },\n    async deleteNetwork() {\n      try {\n        console.log(`Delete Network Endpoint, ${ this.selectedVnetName }`);\n        this.loading = true;\n        // Close the modal before deletion\n        this.closeModal();\n        await this.$store.dispatch(`${PRODUCT_NAME}/deleteNetwork`, this.selectedVnetName);\n        this.loading = false;\n\n        // defines what kind of component should the notification show\n        this.apiResponse = 'error';\n        // Set the API response data in the component\n        this.apiResponseMessage = `You have successfully deleted VNET: ${this.selectedVnetName}`;\n        this.apiError = null; // Reset error state\n\n        await this.fetchNetworks();\n      } catch (error) {\n        // Handle any errors here\n        console.error('Error deleting network:', error);\n        this.loading = false;\n        this.isModalOpen = true;\n        this.apiResponseMessage = 'Error';\n        // Set the API error in the component\n        this.apiError = error.response ? error.response.data : error.message;\n        this.apiResponse = 1; // Reset response state\n      } finally {\n        \n      }\n    },\n\n    async deleteSubnet() {\n      try {\n        console.log(\n          `Delete Subnet Endpoint, ${ this.vnet_name }, ${ this.subnet_name }, ${ this.subnet_id }`\n        );\n        this.selectedNetwork.subnets = this.selectedNetwork.subnets.filter(subnet => subnet.name !== this.subnet_name);\n        console.log('new subnet', this.selectedNetwork.subnet);\n\n        const vnet_data = {\n          apiVersion: 'packetlifter.dev/v1',\n          kind:       'Vnet',\n          // vnet_vlan: this.selectedVnetVlan,\n          metadata:   {\n            name:      this.vnet_name.toLowerCase(),\n            namespace: 'default'\n          },\n          spec: {\n            name:    this.vnet_name.toLowerCase(),\n            subnets: this.selectedNetwork.subnets,\n          }\n        };\n\n        this.loading = true;\n        // Close the modal before deletion\n        this.closeModalSubnet();\n        await this.$store.dispatch(`${PRODUCT_NAME}/deleteSubnet`, {\n          vnetName: this.vnet_name,\n          vnetData: vnet_data\n        })\n        this.loading = false;\n\n        // defines what kind of component should the notification show\n        this.subnetResponse = 'error';\n        this.subnetResponseMessage = `Successfully deleted subnet: ${this.subnet_name}`;\n\n        await this.getSubnetByName(this.vnet_name);\n\n        // Update the selectedNetwork with the selected vnet_name\n        this.selectedNetwork.vnet_name = this.vnet_name;\n        \n      } catch (error) {\n        // Handle any errors here\n        console.error('Error deleting network:', error);\n        this.loading = false;\n        this.isModalSubnetOpen = true;\n        // Set the API error in the component\n        this.subnetResponseMessage = error.response ? error.response.data : error.message;\n        this.subnetResponse = 'error';\n      }\n    },\n  },\n  created() {\n    this.networkHeader = SORTABLE_NETWORK_HEADERS;\n    this.subnetworkHeader = SORTABLE_SUB_NETWORK_HEADERS;\n    this.vnetButtons = VNET_BUTTONS;\n  },\n  mounted() {\n    // Fetch the VLAN list and network list when the component is mounted\n    this.fetchNetworks();\n    // this.fetchHarvesterNetworks();\n  },\n};\n</script>\n\n<style scoped>\n/* notif */\n/* Your existing style code */\n.notification {\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  padding: 10px;\n  border-radius: 5px;\n  color: #fff;\n  font-weight: bold;\n}\n</style>\n"],"mappings":"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"}]}