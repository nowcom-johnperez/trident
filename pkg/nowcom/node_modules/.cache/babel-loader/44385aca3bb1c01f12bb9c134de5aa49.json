{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/index.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/index.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isEmpty","uniq","get","camelToTitle","validateKubernetesName","displayKeyFor","type","key","getters","intlPrefix","intlPrefixLabel","match","replace","validateLength","val","field","displayKey","errors","nullable","required","minLength","maxLength","min","fieldMin","max","fieldMax","len","push","lengthKey","indexOf","count","validateChars","validChars","invalidChars","test","length","regex","RegExp","join","map","chr","chars","validateHostname","opts","restricted","slice","labels","split","label","i","validateDnsLabel","forHostname","errorKey","ianaServiceName","substr","includes","validateDnsLikeTypes","validateBoolean"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/index.js"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport uniq from 'lodash/uniq';\nimport { get } from '@shell/utils/object';\nimport { camelToTitle } from '@shell/utils/string';\nimport { validateKubernetesName } from './kubernetes-name';\n\nexport function displayKeyFor(type, key, getters) {\n  const intlPrefix = `model.${ type }.${ key }`;\n  const intlPrefixLabel = `${ intlPrefix }.label`;\n\n  if ( getters['i18n/exists'](`${ intlPrefix }.label`) ) {\n    return getters['i18n/t'](intlPrefixLabel);\n  }\n\n  if ( getters['i18n/exists'](intlPrefix) ) {\n    return getters['i18n/t'](intlPrefix);\n  }\n\n  if ( key.match(/.Id$/) ) {\n    return camelToTitle(key.replace(/Id$/, ''));\n  }\n\n  return camelToTitle(key);\n}\n\nexport function validateLength(val, field, displayKey, getters, errors = []) {\n  const {\n    nullable,\n    required,\n    type = '',\n    minLength,\n    maxLength,\n    min: fieldMin,\n    max: fieldMax,\n  } = field;\n  const len = val ? get(val, 'length') : 0;\n\n  if ( !nullable && required) {\n    if ((typeof val === 'object' && isEmpty(val)) || (!val && val !== 0)) {\n      errors.push(getters['i18n/t']('validation.required', { key: displayKey }));\n\n      return errors;\n    }\n  }\n\n  if ( val === null ) {\n    return errors;\n  }\n\n  const lengthKey = (type.indexOf('array[') === 0 ? 'arrayLength' : 'stringLength');\n\n  // String and array length:\n  let min = minLength;\n  let max = maxLength;\n\n  if ( min && max ) {\n    if ( (len < min) || (len > max) ) {\n      if ( min === max ) {\n        errors.push(getters['i18n/t'](`validation.${ lengthKey }.exactly`, { key: displayKey, count: min }));\n      } else {\n        errors.push(getters['i18n/t'](`validation.${ lengthKey }.between`, {\n          key: displayKey, min, max\n        }));\n      }\n    }\n  } else if ( min && (len < min) ) {\n    errors.push(getters['i18n/t'](`validation.${ lengthKey }.min`, { key: displayKey, count: min }));\n  } else if ( max && (len > max) ) {\n    errors.push(getters['i18n/t'](`validation.${ lengthKey }.max`, { key: displayKey, count: max }));\n  }\n\n  // Number min/max\n  min = fieldMin;\n  max = fieldMax;\n\n  if ( val !== null && min && max ) {\n    if ( (val < min) || (val > max) ) {\n      if ( min === max ) {\n        errors.push(getters['i18n/t']('validation.number.exactly', { key: displayKey, val: max }));\n      } else {\n        errors.push(getters['i18n/t']('validation.number.between', {\n          key: displayKey, min, max\n        }));\n      }\n    }\n  } else if ( min && (val < min) ) {\n    errors.push(getters['i18n/t']('validation.number.min', { key: displayKey, val: min }));\n  } else if ( max && (val > max) ) {\n    errors.push(getters['i18n/t']('validation.number.max', { key: displayKey, val: max }));\n  }\n\n  return errors;\n}\n\nexport function validateChars(val, field, displayKey, getters, errors = []) {\n  const {\n    validChars,\n    invalidChars\n  } = field;\n  const test = [];\n\n  if ( validChars ) {\n    test.push(`[^${ field.validChars }]`);\n  }\n\n  if ( invalidChars ) {\n    test.push(`[${ field.invalidChars }]`);\n  }\n\n  if ( test.length ) {\n    const regex = new RegExp(`(${ test.join('|') })`, 'g');\n    let match = val.match(regex);\n\n    if ( match ) {\n      match = uniq(match).map((chr) => {\n        if ( chr === ' ' ) {\n          return '[space]';\n        } else {\n          return chr;\n        }\n      });\n\n      errors.push(getters['i18n/t']('validation.chars', {\n        key: displayKey, count: match.length, chars: match.join(' ')\n      }));\n    }\n  }\n\n  return errors;\n}\n\nexport function validateHostname(val, displayKey, getters, opts, errors = []) {\n  opts = opts || {};\n\n  const {\n    max = 253,\n    restricted = false,\n  } = opts;\n\n  // Hostname can not start with a dot\n  if (val.slice(0, 1) === '.') {\n    errors.push(getters['i18n/t']('validation.dns.hostname.startDot', { key: displayKey }));\n  }\n\n  // Hostname can not end with a dot in restricted mode\n  if ( restricted && val.length > 1 && val.slice(-1) === '.' ) {\n    errors.push(getters['i18n/t']('validation.dns.hostname.endDot', { key: displayKey }));\n  }\n\n  // Hostname can not be empty string\n  if (val.length === 0) {\n    errors.push(getters['i18n/t']('validation.dns.hostname.empty', { key: displayKey }));\n  }\n\n  // Total length of the hostname can be at most 253 characters\n  // (255 minus one for null-termination, and one for the trailing dot of a real FQDN)\n  if (val.length > max) {\n    errors.push(getters['i18n/t']('validation.dns.hostname.tooLong', { key: displayKey, max }));\n  }\n\n  // Split the hostname with the dot and validate the element as label\n  const labels = val.split(/\\./);\n  let label;\n\n  for ( let i = 0 ; i < labels.length ; i++ ) {\n    label = labels[i];\n\n    // Already checked if Hostname starts with a dot\n    if ( i === 0 && label === '' ) {\n      continue;\n    }\n\n    // Hostname can end with a dot (this makes it an explicitly fully qualified domain name)\n    // so the last element of the labels can be empty string.\n    if (i === labels.length - 1 && label === '') {\n      continue;\n    }\n\n    validateDnsLabel(label, displayKey, getters, { forHostname: true }, errors);\n  }\n\n  return errors;\n}\n\nexport function validateDnsLabel(label, displayKey, getters, opts, errors = []) {\n  opts = opts || {};\n\n  const {\n    forHostname = false,\n    errorKey = (forHostname ? 'hostname' : 'label'),\n    ianaServiceName = false,\n    restricted = false,\n  } = opts;\n\n  validateKubernetesName(label, displayKey, getters, opts, errors);\n\n  // Restricted labels cannot begin with a number\n  if ( restricted && label.slice(0, 1).match(/[0-9]/) ) {\n    errors.push(getters['i18n/t'](`validation.dns.${ errorKey }.startNumber`, { key: displayKey }));\n  }\n\n  // Label cannot contain two consecutive hyphens at the 3rd & 4th characters, unless an IDN string\n  // If is of type ianaServiceName can not contain two consecutive hyphens in any position\n  if (\n    ( label.substr(2, 2) === '--' && label.substr(0, 2) !== 'xn' ) ||\n    ( ianaServiceName && label.includes('--') )\n  ) {\n    errors.push(getters['i18n/t'](`validation.dns.doubleHyphen`, { key: displayKey }));\n  }\n\n  return errors;\n}\n\nexport function validateDnsLikeTypes(val, type, displayKey, getters, opts, errors = []) {\n  switch (type) {\n  case 'dnsLabel':\n    validateDnsLabel(val, displayKey, getters, { restricted: false }, errors);\n    break;\n  case 'dnsLabelRestricted':\n    validateDnsLabel(val, displayKey, getters, { restricted: true }, errors);\n    break;\n  case 'hostname':\n    validateHostname(val, displayKey, getters, { restricted: false }, errors);\n    break;\n  default:\n    break;\n  }\n\n  return errors;\n}\n\nexport function validateBoolean(val, field, displayKey, getters, errors = []) {\n  const { required } = field;\n\n  if (required && !val && val !== false) {\n    errors.push(getters['i18n/t']('validation.required', { key: displayKey }));\n\n    return;\n  }\n  if (typeof val !== 'boolean' && !!val) {\n    errors.push(getters['i18n/t']('validation.boolean', { key: displayKey }));\n  }\n}\n"],"mappings":"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"}]}