{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--2-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ConsumptionGauge.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ConsumptionGauge.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/babel.config.js","mtime":1716430386791},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFBlcmNlbnRhZ2VCYXIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUGVyY2VudGFnZUJhcic7CmltcG9ydCB7IGZvcm1hdFBlcmNlbnQgfSBmcm9tICdAc2hlbGwvdXRpbHMvc3RyaW5nJzsKCi8qKgogKiBBIGRldGFpbGVkIHZpZXcgb2YgaG93IG11Y2ggYSByZXNvdXJjZSBpcyBiZWluZyBjb25zdW1lZC4KICovCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBQZXJjZW50YWdlQmFyCiAgfSwKICBwcm9wczogewogICAgLyoqCiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgcmVzb3VyY2UgdG8gYmUgZGlzcGxheWVkLgogICAgICovCiAgICByZXNvdXJjZU5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8qKgogICAgICogVGhlIHRvdGFsIGFtb3VudCBvZiB0aGUgcmVzb3VyY2UgKGJvdGggdXNlZCBhbmQgdW51c2VkIGFtb3VudCkuCiAgICAgKi8KICAgIGNhcGFjaXR5OiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSBhbW91bnQgb2YgdGhlIHJlc291cmNlIHRoYXQgaXMgY3VycmVudGx5IGluIHVzZS4KICAgICAqLwogICAgdXNlZDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBUaGUgdW5pdHMgdGhhdCBzaG91bGQgYmUgZGlzcGxheWVkIHdoZW4gcmVmZXJlbmNpbmcgYW1vdW50cyBvZiB0aGUgcmVzb3VyY2UuCiAgICAgKi8KICAgIHVuaXRzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICAvKioKICAgICAqIEEgbWV0aG9kIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGZvcm1hdCB0aGUgKmNhcGFjaXR5KiBhbmQgKnVzZWQqIG51bWJlcnMgZm9yIGRpc3BsYXkuCiAgICAgKi8KICAgIG51bWJlckZvcm1hdHRlcjogewogICAgICB0eXBlOiBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogdmFsdWUgPT4gTnVtYmVyLmlzSW50ZWdlcih2YWx1ZSkgPyB2YWx1ZSA6IHZhbHVlLnRvRml4ZWQoMikKICAgIH0sCiAgICAvKioKICAgICAqIE9wdGlvbmFsIG1hcCBvZiBjc3MgY29sb3IgY2xhc3M6IHBlcmNlbnRhZ2Ugc3RvcHMgdG8gYXBwbHkgdG8gYmFyCiAgICAgKi8KCiAgICBjb2xvclN0b3BzOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIC8qKgogICAgICogUmVkdWNlIHRoZSB2ZXJ0aWFsIGhlaWdodCBieSBjaGFuZ2VkICdVc2VkJyBmb3IgdGhlIHJlc291cmNlIG5hbWUKICAgICAqLwogICAgdXNlZEFzUmVzb3VyY2VOYW1lOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1dDogZmFsc2UKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkaXNwbGF5VW5pdHMoKSB7CiAgICAgIGlmICh0aGlzLnVuaXRzKSB7CiAgICAgICAgcmV0dXJuIGAgJHt0aGlzLnVuaXRzfWA7CiAgICAgIH0KICAgICAgcmV0dXJuICcnOwogICAgfSwKICAgIHBlcmNlbnRhZ2VCYXJWYWx1ZSgpIHsKICAgICAgaWYgKCF0aGlzLnVzZWQgfHwgIXRoaXMuY2FwYWNpdHkpIHsKICAgICAgICByZXR1cm4gMDsKICAgICAgfQogICAgICByZXR1cm4gdGhpcy51c2VkICogMTAwIC8gdGhpcy5jYXBhY2l0eTsKICAgIH0sCiAgICBhbW91bnRUZW1wbGF0ZVZhbHVlcygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB1c2VkOiB0aGlzLm51bWJlckZvcm1hdHRlcih0aGlzLnVzZWQgfHwgMCksCiAgICAgICAgdG90YWw6IHRoaXMubnVtYmVyRm9ybWF0dGVyKHRoaXMuY2FwYWNpdHkgfHwgMCksCiAgICAgICAgdW5pdDogdGhpcy5kaXNwbGF5VW5pdHMKICAgICAgfTsKICAgIH0sCiAgICBmb3JtYXR0ZWRQZXJjZW50YWdlKCkgewogICAgICByZXR1cm4gZm9ybWF0UGVyY2VudCh0aGlzLnBlcmNlbnRhZ2VCYXJWYWx1ZSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["PercentageBar","formatPercent","components","props","resourceName","type","String","default","capacity","Number","required","used","units","numberFormatter","Function","value","isInteger","toFixed","colorStops","Object","usedAsResourceName","Boolean","defaut","computed","displayUnits","percentageBarValue","amountTemplateValues","total","unit","formattedPercentage"],"sources":["../../node_modules/@rancher/shell/components/ConsumptionGauge.vue"],"sourcesContent":["<script>\nimport PercentageBar from '@shell/components/PercentageBar';\nimport { formatPercent } from '@shell/utils/string';\n\n/**\n * A detailed view of how much a resource is being consumed.\n */\nexport default {\n  components: { PercentageBar },\n  props:      {\n    /**\n     * The name of the resource to be displayed.\n     */\n    resourceName: {\n      type:    String,\n      default: ''\n    },\n    /**\n     * The total amount of the resource (both used and unused amount).\n     */\n    capacity: {\n      type:     Number,\n      required: true\n    },\n    /**\n     * The amount of the resource that is currently in use.\n     */\n    used: {\n      type:     Number,\n      required: true\n    },\n    /**\n     * The units that should be displayed when referencing amounts of the resource.\n     */\n    units: {\n      type:    String,\n      default: ''\n    },\n    /**\n     * A method which can be used to format the *capacity* and *used* numbers for display.\n     */\n    numberFormatter: {\n      type:    Function,\n      default: (value) => Number.isInteger(value) ? value : value.toFixed(2)\n    },\n\n    /**\n     * Optional map of css color class: percentage stops to apply to bar\n     */\n\n    colorStops: {\n      type:    Object,\n      default: null\n    },\n\n    /**\n     * Reduce the vertial height by changed 'Used' for the resource name\n     */\n    usedAsResourceName: {\n      type:   Boolean,\n      defaut: false\n    }\n  },\n  computed: {\n    displayUnits() {\n      if ( this.units ) {\n        return ` ${ this.units }`;\n      }\n\n      return '';\n    },\n    percentageBarValue() {\n      if (!this.used || !this.capacity) {\n        return 0;\n      }\n\n      return (this.used * 100) / this.capacity;\n    },\n    amountTemplateValues() {\n      return {\n        used:  this.numberFormatter(this.used || 0),\n        total: this.numberFormatter(this.capacity || 0),\n        unit:  this.displayUnits\n      };\n    },\n    formattedPercentage() {\n      return formatPercent(this.percentageBarValue);\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"consumption-gauge\">\n    <h3 v-if=\"resourceName && !usedAsResourceName\">\n      {{ resourceName }}\n    </h3>\n    <div class=\"numbers\">\n      <!-- @slot Optional slot to use as the title rather than showing the resource name -->\n      <slot\n        name=\"title\"\n        :amountTemplateValues=\"amountTemplateValues\"\n        :formattedPercentage=\"formattedPercentage\"\n      >\n        <h4 v-if=\"usedAsResourceName\">\n          {{ resourceName }}\n        </h4>\n        <span v-else>{{ t('node.detail.glance.consumptionGauge.used') }}</span>\n        <span class=\"numbers-stats\">\n          {{ t('node.detail.glance.consumptionGauge.amount', amountTemplateValues) }}\n          <span class=\"percentage\"><i>/&nbsp;</i>{{ formattedPercentage }}</span>\n        </span>\n      </slot>\n    </div>\n    <div class=\"mt-10\">\n      <PercentageBar\n        :value=\"percentageBarValue\"\n        :color-stops=\"colorStops\"\n      />\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.consumption-gauge {\n  .numbers {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    &-stats {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 10px;\n      align-self: baseline;\n\n    }\n\n    .percentage {\n      font-weight: bold;\n      i {\n        margin-right: 10px;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"AACA,OAAAA,aAAA;AACA,SAAAC,aAAA;;AAEA;AACA;AACA;AACA;EACAC,UAAA;IAAAF;EAAA;EACAG,KAAA;IACA;AACA;AACA;IACAC,YAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;AACA;AACA;IACAC,QAAA;MACAH,IAAA,EAAAI,MAAA;MACAC,QAAA;IACA;IACA;AACA;AACA;IACAC,IAAA;MACAN,IAAA,EAAAI,MAAA;MACAC,QAAA;IACA;IACA;AACA;AACA;IACAE,KAAA;MACAP,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACA;AACA;AACA;IACAM,eAAA;MACAR,IAAA,EAAAS,QAAA;MACAP,OAAA,EAAAQ,KAAA,IAAAN,MAAA,CAAAO,SAAA,CAAAD,KAAA,IAAAA,KAAA,GAAAA,KAAA,CAAAE,OAAA;IACA;IAEA;AACA;AACA;;IAEAC,UAAA;MACAb,IAAA,EAAAc,MAAA;MACAZ,OAAA;IACA;IAEA;AACA;AACA;IACAa,kBAAA;MACAf,IAAA,EAAAgB,OAAA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACAC,aAAA;MACA,SAAAZ,KAAA;QACA,gBAAAA,KAAA;MACA;MAEA;IACA;IACAa,mBAAA;MACA,UAAAd,IAAA,UAAAH,QAAA;QACA;MACA;MAEA,YAAAG,IAAA,cAAAH,QAAA;IACA;IACAkB,qBAAA;MACA;QACAf,IAAA,OAAAE,eAAA,MAAAF,IAAA;QACAgB,KAAA,OAAAd,eAAA,MAAAL,QAAA;QACAoB,IAAA,OAAAJ;MACA;IACA;IACAK,oBAAA;MACA,OAAA5B,aAAA,MAAAwB,kBAAA;IACA;EACA;AACA"}]}