{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/object.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/object.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/trident/babel.config.js","mtime":1716430386784},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["cloneDeep","flattenDeep","compact","JSONPath","Vue","transform","isObject","isArray","isEqual","difference","splitObjectPath","joinObjectPath","addObject","set","obj","path","value","ptr","parts","i","length","key","getAllValues","keysInOrder","split","currentValue","forEach","currentKey","map","indexValue","Array","arr","flat","filter","val","get","Error","startsWith","json","wrap","e","console","log","includes","_obj","remove","parentAry","undefined","leafKey","pop","parent","getter","clone","isEmpty","Object","keys","isSimpleKeyValue","values","every","v","cleanUp","each","definedKeys","subkey","diff","from","to","out","res","toVal","k","fromVal","fromKeys","toKeys","missing","isEqualBasic","fromValue","toValue","changeset","parentPath","op","changesetConflicts","a","b","sort","seen","ok","aa","bb","parentKey","parentKeys","push","applyChangeset","entry","pickBy","predicate","entries","reduce","toDictionary","array","callback","assign","item"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/object.js"],"sourcesContent":["import cloneDeep from 'lodash/cloneDeep';\nimport flattenDeep from 'lodash/flattenDeep';\nimport compact from 'lodash/compact';\nimport { JSONPath } from 'jsonpath-plus';\nimport Vue from 'vue';\nimport transform from 'lodash/transform';\nimport isObject from 'lodash/isObject';\nimport isArray from 'lodash/isArray';\nimport isEqual from 'lodash/isEqual';\nimport difference from 'lodash/difference';\nimport { splitObjectPath, joinObjectPath } from '@shell/utils/string';\nimport { addObject } from '@shell/utils/array';\n\nexport function set(obj, path, value) {\n  let ptr = obj;\n\n  if (!ptr) {\n    return;\n  }\n\n  const parts = splitObjectPath(path);\n\n  for (let i = 0; i < parts.length; i++) {\n    const key = parts[i];\n\n    if ( i === parts.length - 1 ) {\n      Vue.set(ptr, key, value);\n    } else if ( !ptr[key] ) {\n      // Make sure parent keys exist\n      Vue.set(ptr, key, {});\n    }\n\n    ptr = ptr[key];\n  }\n\n  return obj;\n}\n\nexport function getAllValues(obj, path) {\n  const keysInOrder = path.split('.');\n  let currentValue = [obj];\n\n  keysInOrder.forEach((currentKey) => {\n    currentValue = currentValue.map((indexValue) => {\n      if (Array.isArray(indexValue)) {\n        return indexValue.map((arr) => arr[currentKey]).flat();\n      } else if (indexValue) {\n        return indexValue[currentKey];\n      } else {\n        return null;\n      }\n    }).flat();\n  });\n\n  return currentValue.filter((val) => val !== null);\n}\n\nexport function get(obj, path) {\n  if ( !path) {\n    throw new Error('Cannot translate an empty input. The t function requires a string.');\n  }\n  if ( path.startsWith('$') ) {\n    try {\n      return JSONPath({\n        path,\n        json: obj,\n        wrap: false,\n      });\n    } catch (e) {\n      console.log('JSON Path error', e, path, obj); // eslint-disable-line no-console\n\n      return '(JSON Path err)';\n    }\n  }\n  if ( !path.includes('.') ) {\n    return obj?.[path];\n  }\n\n  const parts = splitObjectPath(path);\n\n  for (let i = 0; i < parts.length; i++) {\n    if (!obj) {\n      return;\n    }\n\n    obj = obj[parts[i]];\n  }\n\n  return obj;\n}\n\nexport function remove(obj, path) {\n  const parentAry = splitObjectPath(path);\n\n  // Remove the very last part of the path\n\n  if (parentAry.length === 1) {\n    Vue.set(obj, path, undefined);\n    delete obj[path];\n  } else {\n    const leafKey = parentAry.pop();\n    const parent = get(obj, joinObjectPath(parentAry));\n\n    if ( parent ) {\n      Vue.set(parent, leafKey, undefined);\n      delete parent[leafKey];\n    }\n  }\n\n  return obj;\n}\n\nexport function getter(path) {\n  return function(obj) {\n    return get(obj, path);\n  };\n}\n\nexport function clone(obj) {\n  return cloneDeep(obj);\n}\n\nexport function isEmpty(obj) {\n  if ( !obj ) {\n    return true;\n  }\n\n  return !Object.keys(obj).length;\n}\n\n/**\n * Checks to see if the object is a simple key value pair where all values are\n * just primitives.\n * @param {any} obj\n */\nexport function isSimpleKeyValue(obj) {\n  return obj !== null &&\n    !Array.isArray(obj) &&\n    typeof obj === 'object' &&\n    Object.values(obj || {}).every((v) => typeof v !== 'object');\n}\n\n/*\nreturns an object with no key/value pairs (including nested) where the value is:\n  empty array\n  empty object\n  null\n  undefined\n*/\nexport function cleanUp(obj) {\n  Object.keys(obj).map((key) => {\n    const val = obj[key];\n\n    if ( Array.isArray(val) ) {\n      obj[key] = val.map((each) => {\n        if (each !== null && each !== undefined) {\n          return cleanUp(each);\n        }\n      });\n      if (obj[key].length === 0) {\n        delete obj[key];\n      }\n    } else if (typeof val === 'undefined' || val === null) {\n      delete obj[key];\n    } else if ( isObject(val) ) {\n      if (isEmpty(val)) {\n        delete obj[key];\n      }\n      obj[key] = cleanUp(val);\n    }\n  });\n\n  return obj;\n}\n\nexport function definedKeys(obj) {\n  const keys = Object.keys(obj).map((key) => {\n    const val = obj[key];\n\n    if ( Array.isArray(val) ) {\n      return key;\n    } else if ( isObject(val) ) {\n      return ( definedKeys(val) || [] ).map((subkey) => `${ key }.${ subkey }`);\n    } else {\n      return key;\n    }\n  });\n\n  return compact(flattenDeep(keys));\n}\n\nexport function diff(from, to) {\n  from = from || {};\n  to = to || {};\n\n  // Copy values in 'to' that are different than from\n  const out = transform(to, (res, toVal, k) => {\n    const fromVal = from[k];\n\n    if ( isEqual(toVal, fromVal) ) {\n      return;\n    }\n\n    if ( Array.isArray(toVal) || Array.isArray(fromVal) ) {\n      // Don't diff arrays, just use the whole value\n      res[k] = toVal;\n    } else if ( isObject(toVal) && isObject(from[k]) ) {\n      res[k] = diff(fromVal, toVal);\n    } else {\n      res[k] = toVal;\n    }\n  });\n\n  const fromKeys = definedKeys(from);\n  const toKeys = definedKeys(to);\n\n  // Return keys that are in 'from' but not 'to.'\n  const missing = difference(fromKeys, toKeys);\n\n  for ( const k of missing ) {\n    set(out, k, null);\n  }\n\n  return out;\n}\n\n/**\n * Super simple lodash isEqual equivalent.\n *\n * Only checks root properties for strict equality\n */\nfunction isEqualBasic(from, to) {\n  const fromKeys = Object.keys(from || {});\n  const toKeys = Object.keys(to || {});\n\n  if (fromKeys.length !== toKeys.length) {\n    return false;\n  }\n\n  for (let i = 0; i < fromKeys.length; i++) {\n    const fromValue = from[fromKeys[i]];\n    const toValue = to[fromKeys[i]];\n\n    if (fromValue !== toValue) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { isEqualBasic as isEqual };\n\nexport function changeset(from, to, parentPath = []) {\n  let out = {};\n\n  if ( isEqual(from, to) ) {\n    return out;\n  }\n\n  for ( const k in from ) {\n    const path = joinObjectPath([...parentPath, k]);\n\n    if ( !(k in to) ) {\n      out[path] = { op: 'remove', path };\n    } else if ( (isObject(from[k]) && isObject(to[k])) || (isArray(from[k]) && isArray(to[k])) ) {\n      out = { ...out, ...changeset(from[k], to[k], [...parentPath, k]) };\n    } else if ( !isEqual(from[k], to[k]) ) {\n      out[path] = {\n        op: 'change', from: from[k], value: to[k]\n      };\n    }\n  }\n\n  for ( const k in to ) {\n    if ( !(k in from) ) {\n      const path = joinObjectPath([...parentPath, k]);\n\n      out[path] = { op: 'add', value: to[k] };\n    }\n  }\n\n  return out;\n}\n\nexport function changesetConflicts(a, b) {\n  let keys = Object.keys(a).sort();\n  const out = [];\n  const seen = {};\n\n  for ( const k of keys ) {\n    let ok = true;\n    const aa = a[k];\n    const bb = b[k];\n\n    // If we've seen a change for a parent of this key before (e.g. looking at `spec.replicas` and there's already been a change to `spec`), assume they conflict\n    for ( const parentKey of parentKeys(k) ) {\n      if ( seen[parentKey] ) {\n        ok = false;\n        break;\n      }\n    }\n\n    seen[k] = true;\n\n    if ( ok && bb ) {\n      switch ( `${ aa.op }-${ bb.op }` ) {\n      case 'add-add':\n      case 'add-change':\n      case 'change-add':\n      case 'change-change':\n        ok = isEqual(aa.value, bb.value);\n        break;\n\n      case 'add-remove':\n      case 'change-remove':\n      case 'remove-add':\n      case 'remove-change':\n        ok = false;\n        break;\n\n      case 'remove-remove':\n      default:\n        ok = true;\n        break;\n      }\n    }\n\n    if ( !ok ) {\n      addObject(out, k);\n    }\n  }\n\n  // Check parent keys going the other way\n  keys = Object.keys(b).sort();\n  for ( const k of keys ) {\n    let ok = true;\n\n    for ( const parentKey of parentKeys(k) ) {\n      if ( seen[parentKey] ) {\n        ok = false;\n        break;\n      }\n    }\n\n    seen[k] = true;\n\n    if ( !ok ) {\n      addObject(out, k);\n    }\n  }\n\n  return out.sort();\n\n  function parentKeys(k) {\n    const out = [];\n    const parts = splitObjectPath(k);\n\n    parts.pop();\n\n    while ( parts.length ) {\n      const path = joinObjectPath(parts);\n\n      out.push(path);\n      parts.pop();\n    }\n\n    return out;\n  }\n}\n\nexport function applyChangeset(obj, changeset) {\n  let entry;\n\n  for ( const path in changeset ) {\n    entry = changeset[path];\n\n    if ( entry.op === 'add' || entry.op === 'change' ) {\n      set(obj, path, entry.value);\n    } else if ( entry.op === 'remove' ) {\n      remove(obj, path);\n    } else {\n      throw new Error(`Unknown operation:${ entry.op }`);\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n */\nexport function pickBy(obj = {}, predicate = (value, key) => false) {\n  return Object.entries(obj)\n    .reduce((res, [key, value]) => {\n      if (predicate(value, key)) {\n        res[key] = value;\n      }\n\n      return res;\n    }, {});\n}\n\n/**\n * Convert list to dictionary from a given function\n * @param {*} array\n * @param {*} callback\n * @returns\n */\nexport const toDictionary = (array, callback) => Object.assign(\n  {}, ...array.map((item) => ({ [item]: callback(item) }))\n);\n"],"mappings":"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"}]}