{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/middleware/authenticated.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/middleware/authenticated.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/trident/babel.config.js","mtime":1716430386784},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["REDIRECTED","NAME","EXPLORER","SETUP","TIMED_OUT","UPGRADED","_FLAGGED","_UNFLAG","SETTING","MANAGEMENT","NORMAN","DEFAULT_WORKSPACE","_ALL_IF_AUTHED","applyProducts","findBy","ClusterNotFoundError","get","setFavIcon","haveSetFavIcon","dynamicPluginLoader","AFTER_LOGIN_ROUTE","WORKSPACE","BACK_TO","FLEET_NAME","canViewResource","getPackageFromRoute","route","_arraySafe$find","meta","arraySafe","Array","isArray","find","m","pkg","getResourceFromRoute","to","_to$params","resource","params","findMeta","beforeEachSetup","key","i","length","undefined","getClusterFromRoute","_to$params2","cluster","getProductFromRoute","_to$params3","product","_to$name","match","name","setProduct","store","redirect","_store$getters$curren","_store$getters$curren2","matched","path","getters","dispatch","Error","productNotFound","oldProduct","oldStore","inStore","commit","neuStore","invalidResource","app","$cookies","req","isDev","from","$plugin","next","startsWith","set","sameSite","secure","upgraded","query","router","applyQuery","title","message","timeout","initialPass","firstLogin","type","opt","load","url","redirectUnauthorized","res","FIRST_LOGIN","plSetting","PL","value","e","id","ok","tryInitialSetup","isLoggedIn","me","notLoggedIn","noAuth","v3User","mustChangePassword","fromHeader","findMe","status","_status","error","locationError","process","server","backTo","window","localStorage","getItem","removeItem","location","href","localCheckResource","beforeEach","redirected","client","afterEach","setTimeout","_popStateDetected","_route$matched","clusterId","oldPkg","oldPkgPlugin","Object","values","getPlugins","p","onLeave","oldIsExt","always","newPkgPlugin","fullPath","Promise","all","onEnter","newLocation","check","resolvedRoute","resolve","newPkg","targetRoute","isSingleProduct","afterLoginRoute","_isSingleProduct$afte","principals","PRINCIPAL","password","provider","body","username","console"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/middleware/authenticated.js"],"sourcesContent":["import { REDIRECTED } from '@shell/config/cookies';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport {\n  SETUP, TIMED_OUT, UPGRADED, _FLAGGED, _UNFLAG\n} from '@shell/config/query-params';\nimport { SETTING } from '@shell/config/settings';\nimport { MANAGEMENT, NORMAN, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport { _ALL_IF_AUTHED } from '@shell/plugins/dashboard-store/actions';\nimport { applyProducts } from '@shell/store/type-map';\nimport { findBy } from '@shell/utils/array';\nimport { ClusterNotFoundError } from '@shell/utils/error';\nimport { get } from '@shell/utils/object';\nimport { setFavIcon, haveSetFavIcon } from '@shell/utils/favicon';\nimport dynamicPluginLoader from '@shell/pkg/dynamic-plugin-loader';\nimport { AFTER_LOGIN_ROUTE, WORKSPACE } from '@shell/store/prefs';\nimport { BACK_TO } from '@shell/config/local-storage';\nimport { NAME as FLEET_NAME } from '@shell/config/product/fleet.js';\nimport { canViewResource } from '@shell/utils/auth';\n\nconst getPackageFromRoute = (route) => {\n  if (!route?.meta) {\n    return;\n  }\n  // Sometimes meta is an array... sometimes not\n  const arraySafe = Array.isArray(route.meta) ? route.meta : [route.meta];\n\n  return arraySafe.find((m) => !!m.pkg)?.pkg;\n};\n\nconst getResourceFromRoute = (to) => {\n  let resource = to.params?.resource;\n\n  if (!resource) {\n    resource = findMeta(to, 'resource');\n  }\n\n  return resource;\n};\n\nlet beforeEachSetup = false;\n\nfunction findMeta(route, key) {\n  if (route?.meta) {\n    const meta = Array.isArray(route.meta) ? route.meta : [route.meta];\n\n    for (let i = 0; i < meta.length; i++) {\n      if (meta[i][key]) {\n        return meta[i][key];\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport function getClusterFromRoute(to) {\n  let cluster = to.params?.cluster;\n\n  if (!cluster) {\n    cluster = findMeta(to, 'cluster');\n  }\n\n  return cluster;\n}\n\nexport function getProductFromRoute(to) {\n  let product = to.params?.product;\n\n  if ( !product ) {\n    const match = to.name?.match(/^c-cluster-([^-]+)/);\n\n    if ( match ) {\n      product = match[1];\n    }\n  }\n\n  // If still no product, see if the route indicates the product via route metadata\n  if (!product) {\n    product = findMeta(to, 'product');\n  }\n\n  return product;\n}\n\nfunction setProduct(store, to, redirect) {\n  let product = getProductFromRoute(to);\n\n  // since all products are hardcoded as routes (ex: c-local-explorer), if we match the wildcard route it means that the product does not exist\n  if ((product && (!to.matched.length || (to.matched.length && to.matched[0].path === '/c/:cluster/:product'))) ||\n  // if the product grabbed from the route is not registered, then we don't have it!\n  (product && !store.getters['type-map/isProductRegistered'](product))) {\n    store.dispatch('loadingError', new Error(store.getters['i18n/t']('nav.failWhale.productNotFound', { productNotFound: product }, true)));\n\n    return () => redirect(302, '/fail-whale');\n  }\n\n  if ( !product ) {\n    product = EXPLORER;\n  }\n\n  const oldProduct = store.getters['productId'];\n  const oldStore = store.getters['currentProduct']?.inStore;\n\n  if ( product !== oldProduct ) {\n    store.commit('setProduct', product);\n  }\n\n  const neuStore = store.getters['currentProduct']?.inStore;\n\n  if ( neuStore !== oldStore ) {\n    // If the product store changes, clear the catalog.\n    // There might be management catalog items in it vs cluster.\n    store.commit('catalog/reset');\n  }\n\n  return false;\n}\n\n/**\n * Check that the resource is valid, if not redirect to fail whale\n *\n * This requires that\n * - product is set\n * - product's store is set and setup (so we can check schema's within it)\n * - product's store has the schemaFor getter (extension stores might not have it)\n * - there's a resource associated with route (meta or param)\n */\nfunction invalidResource(store, to, redirect) {\n  const product = store.getters['currentProduct'];\n  const resource = getResourceFromRoute(to);\n\n  // In order to check a resource is valid we need these\n  if (!product || !resource) {\n    return false;\n  }\n\n  if (canViewResource(store, resource)) {\n    return false;\n  }\n\n  // Unknown resource, redirect to fail whale\n\n  store.dispatch('loadingError', new Error(store.getters['i18n/t']('nav.failWhale.resourceNotFound', { resource }, true)));\n\n  return () => redirect(302, '/fail-whale');\n}\n\nexport default async function({\n  route, app, store, redirect, $cookies, req, isDev, from, $plugin, next\n}) {\n  if ( route.path && typeof route.path === 'string') {\n    // Ignore webpack hot module reload requests\n    if ( route.path.startsWith('/__webpack_hmr/') ) {\n      return;\n    }\n\n    // Ignore the error page\n    if ( route.path.startsWith('/fail-whale') ) {\n      return;\n    }\n  }\n\n  // This tells Ember not to redirect back to us once you've already been to dashboard once.\n  if ( !$cookies.get(REDIRECTED) ) {\n    $cookies.set(REDIRECTED, 'true', {\n      path:     '/',\n      sameSite: true,\n      secure:   true,\n    });\n  }\n\n  const upgraded = route.query[UPGRADED] === _FLAGGED;\n\n  if ( upgraded ) {\n    app.router.applyQuery({ [UPGRADED]: _UNFLAG });\n\n    store.dispatch('growl/success', {\n      title:   store.getters['i18n/t']('serverUpgrade.title'),\n      message: store.getters['i18n/t']('serverUpgrade.message'),\n      timeout: 0,\n    });\n  }\n\n  // Initial ?setup=admin-password can technically be on any route\n  let initialPass = route.query[SETUP];\n  let firstLogin = null;\n\n  try {\n    // Load settings, which will either be just the public ones if not logged in, or all if you are\n    await store.dispatch('management/findAll', {\n      type: MANAGEMENT.SETTING,\n      opt:  {\n        load: _ALL_IF_AUTHED, url: `/v1/${ MANAGEMENT.SETTING }`, redirectUnauthorized: false\n      }\n    });\n\n    // Set the favicon - use custom one from store if set\n    if (!haveSetFavIcon()) {\n      setFavIcon(store);\n    }\n\n    const res = store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.FIRST_LOGIN);\n    const plSetting = store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.PL);\n\n    firstLogin = res?.value === 'true';\n\n    if (!initialPass && plSetting?.value === 'Harvester') {\n      initialPass = 'admin';\n    }\n  } catch (e) {\n  }\n\n  if ( firstLogin === null ) {\n    try {\n      const res = await store.dispatch('rancher/find', {\n        type: 'setting',\n        id:   SETTING.FIRST_LOGIN,\n        opt:  { url: `/v3/settings/${ SETTING.FIRST_LOGIN }` }\n      });\n\n      firstLogin = res?.value === 'true';\n\n      const plSetting = await store.dispatch('rancher/find', {\n        type: 'setting',\n        id:   SETTING.PL,\n        opt:  { url: `/v3/settings/${ SETTING.PL }` }\n      });\n\n      if (!initialPass && plSetting?.value === 'Harvester') {\n        initialPass = 'admin';\n      }\n    } catch (e) {\n    }\n  }\n\n  // TODO show error if firstLogin and default pass doesn't work\n  if ( firstLogin ) {\n    const ok = await tryInitialSetup(store, initialPass);\n\n    if (ok) {\n      if (initialPass) {\n        store.dispatch('auth/setInitialPass', initialPass);\n      }\n\n      return redirect({ name: 'auth-setup' });\n    } else {\n      return redirect({ name: 'auth-login' });\n    }\n  }\n\n  // Make sure you're actually logged in\n  function isLoggedIn(me) {\n    store.commit('auth/hasAuth', true);\n    store.commit('auth/loggedInAs', me.id);\n  }\n\n  function notLoggedIn() {\n    store.commit('auth/hasAuth', true);\n\n    if ( route.name === 'index' ) {\n      return redirect(302, '/auth/login');\n    } else {\n      return redirect(302, `/auth/login?${ TIMED_OUT }`);\n    }\n  }\n\n  function noAuth() {\n    store.commit('auth/hasAuth', false);\n  }\n\n  if ( store.getters['auth/enabled'] !== false && !store.getters['auth/loggedIn'] ) {\n    // `await` so we have one successfully request whilst possibly logged in (ensures fromHeader is populated from `x-api-cattle-auth`)\n    await store.dispatch('auth/getUser');\n\n    const v3User = store.getters['auth/v3User'] || {};\n\n    if (v3User?.mustChangePassword) {\n      return redirect({ name: 'auth-setup' });\n    }\n\n    // In newer versions the API calls return the auth state instead of having to make a new call all the time.\n    const fromHeader = store.getters['auth/fromHeader'];\n\n    if ( fromHeader === 'none' ) {\n      noAuth();\n    } else if ( fromHeader === 'true' ) {\n      const me = await findMe(store);\n\n      isLoggedIn(me);\n    } else if ( fromHeader === 'false' ) {\n      notLoggedIn();\n    } else {\n      // Older versions look at principals and see what happens\n      try {\n        const me = await findMe(store);\n\n        isLoggedIn(me);\n      } catch (e) {\n        const status = e?._status;\n\n        if ( status === 404 ) {\n          noAuth();\n        } else {\n          if ( status === 401 ) {\n            notLoggedIn();\n          } else {\n            store.commit('setError', { error: e, locationError: new Error('Auth Middleware') });\n            if ( process.server ) {\n              redirect(302, '/fail-whale');\n            }\n          }\n\n          return;\n        }\n      }\n    }\n\n    store.dispatch('gcStartIntervals');\n  }\n\n  if (!process.server) {\n    const backTo = window.localStorage.getItem(BACK_TO);\n\n    if (backTo) {\n      window.localStorage.removeItem(BACK_TO);\n\n      window.location.href = backTo;\n    }\n  }\n\n  // GC should be notified of route change before any find/get request is made that might be used for that page\n  store.dispatch('gcRouteChanged', route);\n\n  // Load stuff\n  let localCheckResource = false;\n\n  await applyProducts(store, $plugin);\n\n  // Setup a beforeEach hook once to keep track of the current product\n  if ( !beforeEachSetup ) {\n    beforeEachSetup = true;\n    // This only needs to happen when beforeEach hook hasn't run (the initial load)\n    localCheckResource = true;\n\n    store.app.router.beforeEach((to, from, next) => {\n      // NOTE - This beforeEach runs AFTER this middleware. So anything in this middleware that requires it must set it manually\n      let redirected = setProduct(store, to, redirect);\n\n      if (redirected) {\n        return redirected();\n      }\n\n      redirected = invalidResource(store, to, redirect);\n\n      if (redirected) {\n        return redirected();\n      }\n\n      next();\n    });\n\n    // Call it for the initial pageload\n    const redirected = setProduct(store, route, redirect);\n\n    if (redirected) {\n      return redirected();\n    }\n\n    if (process.client) {\n      store.app.router.afterEach((to, from) => {\n        // Clear state used to record if back button was used for navigation\n        setTimeout(() => {\n          window._popStateDetected = false;\n        }, 1);\n      });\n    }\n  }\n\n  try {\n    let clusterId = get(route, 'params.cluster');\n\n    // Route can provide cluster ID via metadata\n    if (!clusterId && route) {\n      clusterId = getClusterFromRoute(route);\n    }\n\n    const pkg = getPackageFromRoute(route);\n    const product = getProductFromRoute(route);\n\n    const oldPkg = getPackageFromRoute(from);\n    const oldProduct = getProductFromRoute(from);\n\n    // Leave an old pkg where we weren't before?\n    const oldPkgPlugin = oldPkg ? Object.values($plugin.getPlugins()).find((p) => p.name === oldPkg) : null;\n\n    if (oldPkg && oldPkg !== pkg ) {\n      // Execute anything optional the plugin wants to. For example resetting it's store to remove data\n      await oldPkgPlugin.onLeave(store, {\n        clusterId,\n        product,\n        oldProduct,\n        oldIsExt: !!oldPkg\n      });\n    }\n\n    // Sometimes this needs to happen before or alongside other things... but is always needed\n    const always = [\n      store.dispatch('loadManagement')\n    ];\n\n    // Entering a new package where we weren't before?\n    const newPkgPlugin = pkg ? Object.values($plugin.getPlugins()).find((p) => p.name === pkg) : null;\n\n    // Note - We can't block on oldPkg !== newPkg because on a fresh load the `from` route equals the `to` route\n    if (pkg && (oldPkg !== pkg || from.fullPath === route.fullPath)) {\n      // Execute mandatory store actions\n      await Promise.all(always);\n\n      // Execute anything optional the plugin wants to\n      await newPkgPlugin.onEnter(store, {\n        clusterId,\n        product,\n        oldProduct,\n        oldIsExt: !!oldPkg\n      });\n    }\n\n    if (!route.matched?.length) {\n      // If there are no matching routes we could be trying to nav to a page belonging to a dynamic plugin which needs loading\n      await Promise.all([\n        ...always,\n      ]);\n\n      // If a plugin claims the route and is loaded correctly we'll get a route back\n      const newLocation = await dynamicPluginLoader.check({ route, store });\n\n      // If we have a new location, double check that it's actually valid\n      const resolvedRoute = newLocation ? store.app.router.resolve(newLocation) : null;\n\n      if (resolvedRoute?.route.matched.length) {\n        // Note - don't use `redirect` or `store.app.route` (breaks feature by failing to run middleware in default layout)\n        return next(newLocation);\n      }\n    }\n\n    // Ensure that the activeNamespaceCache is updated given the change of context either from or to a place where it uses workspaces\n    // When fleet moves to it's own package this should be moved to pkg onEnter/onLeave\n    if ((oldProduct === FLEET_NAME || product === FLEET_NAME) && oldProduct !== product) {\n      // See note above for store.app.router.beforeEach, need to setProduct manually, for the moment do this in a targeted way\n      const redirected = setProduct(store, route, redirect);\n\n      if (redirected) {\n        return redirected();\n      }\n\n      store.commit('updateWorkspace', {\n        value:   store.getters['prefs/get'](WORKSPACE) || DEFAULT_WORKSPACE,\n        getters: store.getters\n      });\n    }\n\n    // Always run loadCluster, it handles 'unload' as well\n    // Run them in parallel\n    await Promise.all([\n      ...always,\n      store.dispatch('loadCluster', {\n        id:          clusterId,\n        oldPkg:      oldPkgPlugin,\n        newPkg:      newPkgPlugin,\n        product,\n        oldProduct,\n        targetRoute: route\n      })\n    ]);\n\n    if (localCheckResource) {\n      const redirected = invalidResource(store, route, redirect);\n\n      if (redirected) {\n        return redirected();\n      }\n    }\n\n    if (!clusterId) {\n      clusterId = store.getters['defaultClusterId']; // This needs the cluster list, so no parallel\n      const isSingleProduct = store.getters['isSingleProduct'];\n\n      if (isSingleProduct?.afterLoginRoute) {\n        const value = {\n          name:   'c-cluster-product',\n          ...isSingleProduct.afterLoginRoute,\n          params: {\n            cluster: clusterId,\n            ...isSingleProduct.afterLoginRoute?.params\n          },\n        };\n\n        await store.dispatch('prefs/set', {\n          key: AFTER_LOGIN_ROUTE,\n          value,\n        });\n      }\n    }\n  } catch (e) {\n    if ( e instanceof ClusterNotFoundError ) {\n      return redirect(302, '/home');\n    } else {\n      // Sets error 500 if lost connection to API\n      store.commit('setError', { error: e, locationError: new Error(store.getters['i18n/t']('nav.failWhale.authMiddleware')) });\n\n      return redirect(302, '/fail-whale');\n    }\n  }\n}\n\nasync function findMe(store) {\n  // First thing we do in loadManagement is fetch principals anyway.... so don't ?me=true here\n  const principals = await store.dispatch('rancher/findAll', {\n    type: NORMAN.PRINCIPAL,\n    opt:  {\n      url:                  '/v3/principals',\n      redirectUnauthorized: false,\n    }\n  });\n\n  const me = findBy(principals, 'me', true);\n\n  return me;\n}\n\nasync function tryInitialSetup(store, password = 'admin') {\n  try {\n    const res = await store.dispatch('auth/login', {\n      provider: 'local',\n      body:     {\n        username: 'admin',\n        password\n      },\n    });\n\n    return res._status === 200;\n  } catch (e) {\n    console.error('Error trying initial setup', e); // eslint-disable-line no-console\n\n    return false;\n  }\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,uBAAuB;AAClD,SAASC,IAAI,IAAIC,QAAQ,QAAQ,gCAAgC;AACjE,SACEC,KAAK,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,QACxC,4BAA4B;AACnC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,UAAU,EAAEC,MAAM,EAAEC,iBAAiB,QAAQ,qBAAqB;AAC3E,SAASC,cAAc,QAAQ,wCAAwC;AACvE,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,SAASC,oBAAoB,QAAQ,oBAAoB;AACzD,SAASC,GAAG,QAAQ,qBAAqB;AACzC,SAASC,UAAU,EAAEC,cAAc,QAAQ,sBAAsB;AACjE,OAAOC,mBAAmB,MAAM,kCAAkC;AAClE,SAASC,iBAAiB,EAAEC,SAAS,QAAQ,oBAAoB;AACjE,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASrB,IAAI,IAAIsB,UAAU,QAAQ,gCAAgC;AACnE,SAASC,eAAe,QAAQ,mBAAmB;AAEnD,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACrC,IAAI,EAACD,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEE,IAAI,GAAE;IAChB;EACF;EACA;EACA,MAAMC,SAAS,GAAGC,KAAK,CAACC,OAAO,CAACL,KAAK,CAACE,IAAI,CAAC,GAAGF,KAAK,CAACE,IAAI,GAAG,CAACF,KAAK,CAACE,IAAI,CAAC;EAEvE,QAAAD,eAAA,GAAOE,SAAS,CAACG,IAAI,CAAEC,CAAC,IAAK,CAAC,CAACA,CAAC,CAACC,GAAG,CAAC,cAAAP,eAAA,uBAA9BA,eAAA,CAAgCO,GAAG;AAC5C,CAAC;AAED,MAAMC,oBAAoB,GAAIC,EAAE,IAAK;EAAA,IAAAC,UAAA;EACnC,IAAIC,QAAQ,IAAAD,UAAA,GAAGD,EAAE,CAACG,MAAM,cAAAF,UAAA,uBAATA,UAAA,CAAWC,QAAQ;EAElC,IAAI,CAACA,QAAQ,EAAE;IACbA,QAAQ,GAAGE,QAAQ,CAACJ,EAAE,EAAE,UAAU,CAAC;EACrC;EAEA,OAAOE,QAAQ;AACjB,CAAC;AAED,IAAIG,eAAe,GAAG,KAAK;AAE3B,SAASD,QAAQA,CAACd,KAAK,EAAEgB,GAAG,EAAE;EAC5B,IAAIhB,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEE,IAAI,EAAE;IACf,MAAMA,IAAI,GAAGE,KAAK,CAACC,OAAO,CAACL,KAAK,CAACE,IAAI,CAAC,GAAGF,KAAK,CAACE,IAAI,GAAG,CAACF,KAAK,CAACE,IAAI,CAAC;IAElE,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGf,IAAI,CAACgB,MAAM,EAAED,CAAC,EAAE,EAAE;MACpC,IAAIf,IAAI,CAACe,CAAC,CAAC,CAACD,GAAG,CAAC,EAAE;QAChB,OAAOd,IAAI,CAACe,CAAC,CAAC,CAACD,GAAG,CAAC;MACrB;IACF;EACF;EAEA,OAAOG,SAAS;AAClB;AAEA,OAAO,SAASC,mBAAmBA,CAACV,EAAE,EAAE;EAAA,IAAAW,WAAA;EACtC,IAAIC,OAAO,IAAAD,WAAA,GAAGX,EAAE,CAACG,MAAM,cAAAQ,WAAA,uBAATA,WAAA,CAAWC,OAAO;EAEhC,IAAI,CAACA,OAAO,EAAE;IACZA,OAAO,GAAGR,QAAQ,CAACJ,EAAE,EAAE,SAAS,CAAC;EACnC;EAEA,OAAOY,OAAO;AAChB;AAEA,OAAO,SAASC,mBAAmBA,CAACb,EAAE,EAAE;EAAA,IAAAc,WAAA;EACtC,IAAIC,OAAO,IAAAD,WAAA,GAAGd,EAAE,CAACG,MAAM,cAAAW,WAAA,uBAATA,WAAA,CAAWC,OAAO;EAEhC,IAAK,CAACA,OAAO,EAAG;IAAA,IAAAC,QAAA;IACd,MAAMC,KAAK,IAAAD,QAAA,GAAGhB,EAAE,CAACkB,IAAI,cAAAF,QAAA,uBAAPA,QAAA,CAASC,KAAK,CAAC,oBAAoB,CAAC;IAElD,IAAKA,KAAK,EAAG;MACXF,OAAO,GAAGE,KAAK,CAAC,CAAC,CAAC;IACpB;EACF;;EAEA;EACA,IAAI,CAACF,OAAO,EAAE;IACZA,OAAO,GAAGX,QAAQ,CAACJ,EAAE,EAAE,SAAS,CAAC;EACnC;EAEA,OAAOe,OAAO;AAChB;AAEA,SAASI,UAAUA,CAACC,KAAK,EAAEpB,EAAE,EAAEqB,QAAQ,EAAE;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACvC,IAAIR,OAAO,GAAGF,mBAAmB,CAACb,EAAE,CAAC;;EAErC;EACA,IAAKe,OAAO,KAAK,CAACf,EAAE,CAACwB,OAAO,CAAChB,MAAM,IAAKR,EAAE,CAACwB,OAAO,CAAChB,MAAM,IAAIR,EAAE,CAACwB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,KAAK,sBAAuB,CAAC;EAC5G;EACCV,OAAO,IAAI,CAACK,KAAK,CAACM,OAAO,CAAC,8BAA8B,CAAC,CAACX,OAAO,CAAE,EAAE;IACpEK,KAAK,CAACO,QAAQ,CAAC,cAAc,EAAE,IAAIC,KAAK,CAACR,KAAK,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC,+BAA+B,EAAE;MAAEG,eAAe,EAAEd;IAAQ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IAEvI,OAAO,MAAMM,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC;EAC3C;EAEA,IAAK,CAACN,OAAO,EAAG;IACdA,OAAO,GAAGjD,QAAQ;EACpB;EAEA,MAAMgE,UAAU,GAAGV,KAAK,CAACM,OAAO,CAAC,WAAW,CAAC;EAC7C,MAAMK,QAAQ,IAAAT,qBAAA,GAAGF,KAAK,CAACM,OAAO,CAAC,gBAAgB,CAAC,cAAAJ,qBAAA,uBAA/BA,qBAAA,CAAiCU,OAAO;EAEzD,IAAKjB,OAAO,KAAKe,UAAU,EAAG;IAC5BV,KAAK,CAACa,MAAM,CAAC,YAAY,EAAElB,OAAO,CAAC;EACrC;EAEA,MAAMmB,QAAQ,IAAAX,sBAAA,GAAGH,KAAK,CAACM,OAAO,CAAC,gBAAgB,CAAC,cAAAH,sBAAA,uBAA/BA,sBAAA,CAAiCS,OAAO;EAEzD,IAAKE,QAAQ,KAAKH,QAAQ,EAAG;IAC3B;IACA;IACAX,KAAK,CAACa,MAAM,CAAC,eAAe,CAAC;EAC/B;EAEA,OAAO,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,eAAeA,CAACf,KAAK,EAAEpB,EAAE,EAAEqB,QAAQ,EAAE;EAC5C,MAAMN,OAAO,GAAGK,KAAK,CAACM,OAAO,CAAC,gBAAgB,CAAC;EAC/C,MAAMxB,QAAQ,GAAGH,oBAAoB,CAACC,EAAE,CAAC;;EAEzC;EACA,IAAI,CAACe,OAAO,IAAI,CAACb,QAAQ,EAAE;IACzB,OAAO,KAAK;EACd;EAEA,IAAId,eAAe,CAACgC,KAAK,EAAElB,QAAQ,CAAC,EAAE;IACpC,OAAO,KAAK;EACd;;EAEA;;EAEAkB,KAAK,CAACO,QAAQ,CAAC,cAAc,EAAE,IAAIC,KAAK,CAACR,KAAK,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC,gCAAgC,EAAE;IAAExB;EAAS,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EAExH,OAAO,MAAMmB,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC;AAC3C;AAEA,eAAe,gBAAe;EAC5B/B,KAAK;EAAE8C,GAAG;EAAEhB,KAAK;EAAEC,QAAQ;EAAEgB,QAAQ;EAAEC,GAAG;EAAEC,KAAK;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AACpE,CAAC,EAAE;EACD,IAAKpD,KAAK,CAACmC,IAAI,IAAI,OAAOnC,KAAK,CAACmC,IAAI,KAAK,QAAQ,EAAE;IACjD;IACA,IAAKnC,KAAK,CAACmC,IAAI,CAACkB,UAAU,CAAC,iBAAiB,CAAC,EAAG;MAC9C;IACF;;IAEA;IACA,IAAKrD,KAAK,CAACmC,IAAI,CAACkB,UAAU,CAAC,aAAa,CAAC,EAAG;MAC1C;IACF;EACF;;EAEA;EACA,IAAK,CAACN,QAAQ,CAACzD,GAAG,CAAChB,UAAU,CAAC,EAAG;IAC/ByE,QAAQ,CAACO,GAAG,CAAChF,UAAU,EAAE,MAAM,EAAE;MAC/B6D,IAAI,EAAM,GAAG;MACboB,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAI;IACZ,CAAC,CAAC;EACJ;EAEA,MAAMC,QAAQ,GAAGzD,KAAK,CAAC0D,KAAK,CAAC/E,QAAQ,CAAC,KAAKC,QAAQ;EAEnD,IAAK6E,QAAQ,EAAG;IACdX,GAAG,CAACa,MAAM,CAACC,UAAU,CAAC;MAAE,CAACjF,QAAQ,GAAGE;IAAQ,CAAC,CAAC;IAE9CiD,KAAK,CAACO,QAAQ,CAAC,eAAe,EAAE;MAC9BwB,KAAK,EAAI/B,KAAK,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC,qBAAqB,CAAC;MACvD0B,OAAO,EAAEhC,KAAK,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC;MACzD2B,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIC,WAAW,GAAGhE,KAAK,CAAC0D,KAAK,CAACjF,KAAK,CAAC;EACpC,IAAIwF,UAAU,GAAG,IAAI;EAErB,IAAI;IACF;IACA,MAAMnC,KAAK,CAACO,QAAQ,CAAC,oBAAoB,EAAE;MACzC6B,IAAI,EAAEnF,UAAU,CAACD,OAAO;MACxBqF,GAAG,EAAG;QACJC,IAAI,EAAElF,cAAc;QAAEmF,GAAG,EAAG,OAAOtF,UAAU,CAACD,OAAS,EAAC;QAAEwF,oBAAoB,EAAE;MAClF;IACF,CAAC,CAAC;;IAEF;IACA,IAAI,CAAC9E,cAAc,CAAC,CAAC,EAAE;MACrBD,UAAU,CAACuC,KAAK,CAAC;IACnB;IAEA,MAAMyC,GAAG,GAAGzC,KAAK,CAACM,OAAO,CAAC,iBAAiB,CAAC,CAACrD,UAAU,CAACD,OAAO,EAAEA,OAAO,CAAC0F,WAAW,CAAC;IACrF,MAAMC,SAAS,GAAG3C,KAAK,CAACM,OAAO,CAAC,iBAAiB,CAAC,CAACrD,UAAU,CAACD,OAAO,EAAEA,OAAO,CAAC4F,EAAE,CAAC;IAElFT,UAAU,GAAG,CAAAM,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEI,KAAK,MAAK,MAAM;IAElC,IAAI,CAACX,WAAW,IAAI,CAAAS,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,KAAK,MAAK,WAAW,EAAE;MACpDX,WAAW,GAAG,OAAO;IACvB;EACF,CAAC,CAAC,OAAOY,CAAC,EAAE,CACZ;EAEA,IAAKX,UAAU,KAAK,IAAI,EAAG;IACzB,IAAI;MACF,MAAMM,GAAG,GAAG,MAAMzC,KAAK,CAACO,QAAQ,CAAC,cAAc,EAAE;QAC/C6B,IAAI,EAAE,SAAS;QACfW,EAAE,EAAI/F,OAAO,CAAC0F,WAAW;QACzBL,GAAG,EAAG;UAAEE,GAAG,EAAG,gBAAgBvF,OAAO,CAAC0F,WAAa;QAAE;MACvD,CAAC,CAAC;MAEFP,UAAU,GAAG,CAAAM,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEI,KAAK,MAAK,MAAM;MAElC,MAAMF,SAAS,GAAG,MAAM3C,KAAK,CAACO,QAAQ,CAAC,cAAc,EAAE;QACrD6B,IAAI,EAAE,SAAS;QACfW,EAAE,EAAI/F,OAAO,CAAC4F,EAAE;QAChBP,GAAG,EAAG;UAAEE,GAAG,EAAG,gBAAgBvF,OAAO,CAAC4F,EAAI;QAAE;MAC9C,CAAC,CAAC;MAEF,IAAI,CAACV,WAAW,IAAI,CAAAS,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEE,KAAK,MAAK,WAAW,EAAE;QACpDX,WAAW,GAAG,OAAO;MACvB;IACF,CAAC,CAAC,OAAOY,CAAC,EAAE,CACZ;EACF;;EAEA;EACA,IAAKX,UAAU,EAAG;IAChB,MAAMa,EAAE,GAAG,MAAMC,eAAe,CAACjD,KAAK,EAAEkC,WAAW,CAAC;IAEpD,IAAIc,EAAE,EAAE;MACN,IAAId,WAAW,EAAE;QACflC,KAAK,CAACO,QAAQ,CAAC,qBAAqB,EAAE2B,WAAW,CAAC;MACpD;MAEA,OAAOjC,QAAQ,CAAC;QAAEH,IAAI,EAAE;MAAa,CAAC,CAAC;IACzC,CAAC,MAAM;MACL,OAAOG,QAAQ,CAAC;QAAEH,IAAI,EAAE;MAAa,CAAC,CAAC;IACzC;EACF;;EAEA;EACA,SAASoD,UAAUA,CAACC,EAAE,EAAE;IACtBnD,KAAK,CAACa,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC;IAClCb,KAAK,CAACa,MAAM,CAAC,iBAAiB,EAAEsC,EAAE,CAACJ,EAAE,CAAC;EACxC;EAEA,SAASK,WAAWA,CAAA,EAAG;IACrBpD,KAAK,CAACa,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC;IAElC,IAAK3C,KAAK,CAAC4B,IAAI,KAAK,OAAO,EAAG;MAC5B,OAAOG,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC;IACrC,CAAC,MAAM;MACL,OAAOA,QAAQ,CAAC,GAAG,EAAG,eAAerD,SAAW,EAAC,CAAC;IACpD;EACF;EAEA,SAASyG,MAAMA,CAAA,EAAG;IAChBrD,KAAK,CAACa,MAAM,CAAC,cAAc,EAAE,KAAK,CAAC;EACrC;EAEA,IAAKb,KAAK,CAACM,OAAO,CAAC,cAAc,CAAC,KAAK,KAAK,IAAI,CAACN,KAAK,CAACM,OAAO,CAAC,eAAe,CAAC,EAAG;IAChF;IACA,MAAMN,KAAK,CAACO,QAAQ,CAAC,cAAc,CAAC;IAEpC,MAAM+C,MAAM,GAAGtD,KAAK,CAACM,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAEjD,IAAIgD,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEC,kBAAkB,EAAE;MAC9B,OAAOtD,QAAQ,CAAC;QAAEH,IAAI,EAAE;MAAa,CAAC,CAAC;IACzC;;IAEA;IACA,MAAM0D,UAAU,GAAGxD,KAAK,CAACM,OAAO,CAAC,iBAAiB,CAAC;IAEnD,IAAKkD,UAAU,KAAK,MAAM,EAAG;MAC3BH,MAAM,CAAC,CAAC;IACV,CAAC,MAAM,IAAKG,UAAU,KAAK,MAAM,EAAG;MAClC,MAAML,EAAE,GAAG,MAAMM,MAAM,CAACzD,KAAK,CAAC;MAE9BkD,UAAU,CAACC,EAAE,CAAC;IAChB,CAAC,MAAM,IAAKK,UAAU,KAAK,OAAO,EAAG;MACnCJ,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACL;MACA,IAAI;QACF,MAAMD,EAAE,GAAG,MAAMM,MAAM,CAACzD,KAAK,CAAC;QAE9BkD,UAAU,CAACC,EAAE,CAAC;MAChB,CAAC,CAAC,OAAOL,CAAC,EAAE;QACV,MAAMY,MAAM,GAAGZ,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEa,OAAO;QAEzB,IAAKD,MAAM,KAAK,GAAG,EAAG;UACpBL,MAAM,CAAC,CAAC;QACV,CAAC,MAAM;UACL,IAAKK,MAAM,KAAK,GAAG,EAAG;YACpBN,WAAW,CAAC,CAAC;UACf,CAAC,MAAM;YACLpD,KAAK,CAACa,MAAM,CAAC,UAAU,EAAE;cAAE+C,KAAK,EAAEd,CAAC;cAAEe,aAAa,EAAE,IAAIrD,KAAK,CAAC,iBAAiB;YAAE,CAAC,CAAC;YACnF,IAAKsD,OAAO,CAACC,MAAM,EAAG;cACpB9D,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC;YAC9B;UACF;UAEA;QACF;MACF;IACF;IAEAD,KAAK,CAACO,QAAQ,CAAC,kBAAkB,CAAC;EACpC;EAEA,IAAI,CAACuD,OAAO,CAACC,MAAM,EAAE;IACnB,MAAMC,MAAM,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACrG,OAAO,CAAC;IAEnD,IAAIkG,MAAM,EAAE;MACVC,MAAM,CAACC,YAAY,CAACE,UAAU,CAACtG,OAAO,CAAC;MAEvCmG,MAAM,CAACI,QAAQ,CAACC,IAAI,GAAGN,MAAM;IAC/B;EACF;;EAEA;EACAhE,KAAK,CAACO,QAAQ,CAAC,gBAAgB,EAAErC,KAAK,CAAC;;EAEvC;EACA,IAAIqG,kBAAkB,GAAG,KAAK;EAE9B,MAAMlH,aAAa,CAAC2C,KAAK,EAAEqB,OAAO,CAAC;;EAEnC;EACA,IAAK,CAACpC,eAAe,EAAG;IACtBA,eAAe,GAAG,IAAI;IACtB;IACAsF,kBAAkB,GAAG,IAAI;IAEzBvE,KAAK,CAACgB,GAAG,CAACa,MAAM,CAAC2C,UAAU,CAAC,CAAC5F,EAAE,EAAEwC,IAAI,EAAEE,IAAI,KAAK;MAC9C;MACA,IAAImD,UAAU,GAAG1E,UAAU,CAACC,KAAK,EAAEpB,EAAE,EAAEqB,QAAQ,CAAC;MAEhD,IAAIwE,UAAU,EAAE;QACd,OAAOA,UAAU,CAAC,CAAC;MACrB;MAEAA,UAAU,GAAG1D,eAAe,CAACf,KAAK,EAAEpB,EAAE,EAAEqB,QAAQ,CAAC;MAEjD,IAAIwE,UAAU,EAAE;QACd,OAAOA,UAAU,CAAC,CAAC;MACrB;MAEAnD,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;;IAEF;IACA,MAAMmD,UAAU,GAAG1E,UAAU,CAACC,KAAK,EAAE9B,KAAK,EAAE+B,QAAQ,CAAC;IAErD,IAAIwE,UAAU,EAAE;MACd,OAAOA,UAAU,CAAC,CAAC;IACrB;IAEA,IAAIX,OAAO,CAACY,MAAM,EAAE;MAClB1E,KAAK,CAACgB,GAAG,CAACa,MAAM,CAAC8C,SAAS,CAAC,CAAC/F,EAAE,EAAEwC,IAAI,KAAK;QACvC;QACAwD,UAAU,CAAC,MAAM;UACfX,MAAM,CAACY,iBAAiB,GAAG,KAAK;QAClC,CAAC,EAAE,CAAC,CAAC;MACP,CAAC,CAAC;IACJ;EACF;EAEA,IAAI;IAAA,IAAAC,cAAA;IACF,IAAIC,SAAS,GAAGvH,GAAG,CAACU,KAAK,EAAE,gBAAgB,CAAC;;IAE5C;IACA,IAAI,CAAC6G,SAAS,IAAI7G,KAAK,EAAE;MACvB6G,SAAS,GAAGzF,mBAAmB,CAACpB,KAAK,CAAC;IACxC;IAEA,MAAMQ,GAAG,GAAGT,mBAAmB,CAACC,KAAK,CAAC;IACtC,MAAMyB,OAAO,GAAGF,mBAAmB,CAACvB,KAAK,CAAC;IAE1C,MAAM8G,MAAM,GAAG/G,mBAAmB,CAACmD,IAAI,CAAC;IACxC,MAAMV,UAAU,GAAGjB,mBAAmB,CAAC2B,IAAI,CAAC;;IAE5C;IACA,MAAM6D,YAAY,GAAGD,MAAM,GAAGE,MAAM,CAACC,MAAM,CAAC9D,OAAO,CAAC+D,UAAU,CAAC,CAAC,CAAC,CAAC5G,IAAI,CAAE6G,CAAC,IAAKA,CAAC,CAACvF,IAAI,KAAKkF,MAAM,CAAC,GAAG,IAAI;IAEvG,IAAIA,MAAM,IAAIA,MAAM,KAAKtG,GAAG,EAAG;MAC7B;MACA,MAAMuG,YAAY,CAACK,OAAO,CAACtF,KAAK,EAAE;QAChC+E,SAAS;QACTpF,OAAO;QACPe,UAAU;QACV6E,QAAQ,EAAE,CAAC,CAACP;MACd,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMQ,MAAM,GAAG,CACbxF,KAAK,CAACO,QAAQ,CAAC,gBAAgB,CAAC,CACjC;;IAED;IACA,MAAMkF,YAAY,GAAG/G,GAAG,GAAGwG,MAAM,CAACC,MAAM,CAAC9D,OAAO,CAAC+D,UAAU,CAAC,CAAC,CAAC,CAAC5G,IAAI,CAAE6G,CAAC,IAAKA,CAAC,CAACvF,IAAI,KAAKpB,GAAG,CAAC,GAAG,IAAI;;IAEjG;IACA,IAAIA,GAAG,KAAKsG,MAAM,KAAKtG,GAAG,IAAI0C,IAAI,CAACsE,QAAQ,KAAKxH,KAAK,CAACwH,QAAQ,CAAC,EAAE;MAC/D;MACA,MAAMC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;;MAEzB;MACA,MAAMC,YAAY,CAACI,OAAO,CAAC7F,KAAK,EAAE;QAChC+E,SAAS;QACTpF,OAAO;QACPe,UAAU;QACV6E,QAAQ,EAAE,CAAC,CAACP;MACd,CAAC,CAAC;IACJ;IAEA,IAAI,GAAAF,cAAA,GAAC5G,KAAK,CAACkC,OAAO,cAAA0E,cAAA,eAAbA,cAAA,CAAe1F,MAAM,GAAE;MAC1B;MACA,MAAMuG,OAAO,CAACC,GAAG,CAAC,CAChB,GAAGJ,MAAM,CACV,CAAC;;MAEF;MACA,MAAMM,WAAW,GAAG,MAAMnI,mBAAmB,CAACoI,KAAK,CAAC;QAAE7H,KAAK;QAAE8B;MAAM,CAAC,CAAC;;MAErE;MACA,MAAMgG,aAAa,GAAGF,WAAW,GAAG9F,KAAK,CAACgB,GAAG,CAACa,MAAM,CAACoE,OAAO,CAACH,WAAW,CAAC,GAAG,IAAI;MAEhF,IAAIE,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAE9H,KAAK,CAACkC,OAAO,CAAChB,MAAM,EAAE;QACvC;QACA,OAAOkC,IAAI,CAACwE,WAAW,CAAC;MAC1B;IACF;;IAEA;IACA;IACA,IAAI,CAACpF,UAAU,KAAK3C,UAAU,IAAI4B,OAAO,KAAK5B,UAAU,KAAK2C,UAAU,KAAKf,OAAO,EAAE;MACnF;MACA,MAAM8E,UAAU,GAAG1E,UAAU,CAACC,KAAK,EAAE9B,KAAK,EAAE+B,QAAQ,CAAC;MAErD,IAAIwE,UAAU,EAAE;QACd,OAAOA,UAAU,CAAC,CAAC;MACrB;MAEAzE,KAAK,CAACa,MAAM,CAAC,iBAAiB,EAAE;QAC9BgC,KAAK,EAAI7C,KAAK,CAACM,OAAO,CAAC,WAAW,CAAC,CAACzC,SAAS,CAAC,IAAIV,iBAAiB;QACnEmD,OAAO,EAAEN,KAAK,CAACM;MACjB,CAAC,CAAC;IACJ;;IAEA;IACA;IACA,MAAMqF,OAAO,CAACC,GAAG,CAAC,CAChB,GAAGJ,MAAM,EACTxF,KAAK,CAACO,QAAQ,CAAC,aAAa,EAAE;MAC5BwC,EAAE,EAAWgC,SAAS;MACtBC,MAAM,EAAOC,YAAY;MACzBiB,MAAM,EAAOT,YAAY;MACzB9F,OAAO;MACPe,UAAU;MACVyF,WAAW,EAAEjI;IACf,CAAC,CAAC,CACH,CAAC;IAEF,IAAIqG,kBAAkB,EAAE;MACtB,MAAME,UAAU,GAAG1D,eAAe,CAACf,KAAK,EAAE9B,KAAK,EAAE+B,QAAQ,CAAC;MAE1D,IAAIwE,UAAU,EAAE;QACd,OAAOA,UAAU,CAAC,CAAC;MACrB;IACF;IAEA,IAAI,CAACM,SAAS,EAAE;MACdA,SAAS,GAAG/E,KAAK,CAACM,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC;MAC/C,MAAM8F,eAAe,GAAGpG,KAAK,CAACM,OAAO,CAAC,iBAAiB,CAAC;MAExD,IAAI8F,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEC,eAAe,EAAE;QAAA,IAAAC,qBAAA;QACpC,MAAMzD,KAAK,GAAG;UACZ/C,IAAI,EAAI,mBAAmB;UAC3B,GAAGsG,eAAe,CAACC,eAAe;UAClCtH,MAAM,EAAE;YACNS,OAAO,EAAEuF,SAAS;YAClB,KAAAuB,qBAAA,GAAGF,eAAe,CAACC,eAAe,cAAAC,qBAAA,uBAA/BA,qBAAA,CAAiCvH,MAAM;UAC5C;QACF,CAAC;QAED,MAAMiB,KAAK,CAACO,QAAQ,CAAC,WAAW,EAAE;UAChCrB,GAAG,EAAEtB,iBAAiB;UACtBiF;QACF,CAAC,CAAC;MACJ;IACF;EACF,CAAC,CAAC,OAAOC,CAAC,EAAE;IACV,IAAKA,CAAC,YAAYvF,oBAAoB,EAAG;MACvC,OAAO0C,QAAQ,CAAC,GAAG,EAAE,OAAO,CAAC;IAC/B,CAAC,MAAM;MACL;MACAD,KAAK,CAACa,MAAM,CAAC,UAAU,EAAE;QAAE+C,KAAK,EAAEd,CAAC;QAAEe,aAAa,EAAE,IAAIrD,KAAK,CAACR,KAAK,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC,8BAA8B,CAAC;MAAE,CAAC,CAAC;MAEzH,OAAOL,QAAQ,CAAC,GAAG,EAAE,aAAa,CAAC;IACrC;EACF;AACF;AAEA,eAAewD,MAAMA,CAACzD,KAAK,EAAE;EAC3B;EACA,MAAMuG,UAAU,GAAG,MAAMvG,KAAK,CAACO,QAAQ,CAAC,iBAAiB,EAAE;IACzD6B,IAAI,EAAElF,MAAM,CAACsJ,SAAS;IACtBnE,GAAG,EAAG;MACJE,GAAG,EAAmB,gBAAgB;MACtCC,oBAAoB,EAAE;IACxB;EACF,CAAC,CAAC;EAEF,MAAMW,EAAE,GAAG7F,MAAM,CAACiJ,UAAU,EAAE,IAAI,EAAE,IAAI,CAAC;EAEzC,OAAOpD,EAAE;AACX;AAEA,eAAeF,eAAeA,CAACjD,KAAK,EAAEyG,QAAQ,GAAG,OAAO,EAAE;EACxD,IAAI;IACF,MAAMhE,GAAG,GAAG,MAAMzC,KAAK,CAACO,QAAQ,CAAC,YAAY,EAAE;MAC7CmG,QAAQ,EAAE,OAAO;MACjBC,IAAI,EAAM;QACRC,QAAQ,EAAE,OAAO;QACjBH;MACF;IACF,CAAC,CAAC;IAEF,OAAOhE,GAAG,CAACkB,OAAO,KAAK,GAAG;EAC5B,CAAC,CAAC,OAAOb,CAAC,EAAE;IACV+D,OAAO,CAACjD,KAAK,CAAC,4BAA4B,EAAEd,CAAC,CAAC,CAAC,CAAC;;IAEhD,OAAO,KAAK;EACd;AACF"}]}