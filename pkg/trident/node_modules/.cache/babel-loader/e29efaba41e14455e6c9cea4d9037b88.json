{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pkg/dynamic-plugin-loader.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pkg/dynamic-plugin-loader.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/trident/babel.config.js","mtime":1716430386784},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBrZXkgPSBfdG9Qcm9wZXJ0eUtleShrZXkpOyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH0KZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkoYXJnKSB7IHZhciBrZXkgPSBfdG9QcmltaXRpdmUoYXJnLCAic3RyaW5nIik7IHJldHVybiB0eXBlb2Yga2V5ID09PSAic3ltYm9sIiA/IGtleSA6IFN0cmluZyhrZXkpOyB9CmZ1bmN0aW9uIF90b1ByaW1pdGl2ZShpbnB1dCwgaGludCkgeyBpZiAodHlwZW9mIGlucHV0ICE9PSAib2JqZWN0IiB8fCBpbnB1dCA9PT0gbnVsbCkgcmV0dXJuIGlucHV0OyB2YXIgcHJpbSA9IGlucHV0W1N5bWJvbC50b1ByaW1pdGl2ZV07IGlmIChwcmltICE9PSB1bmRlZmluZWQpIHsgdmFyIHJlcyA9IHByaW0uY2FsbChpbnB1dCwgaGludCB8fCAiZGVmYXVsdCIpOyBpZiAodHlwZW9mIHJlcyAhPT0gIm9iamVjdCIpIHJldHVybiByZXM7IHRocm93IG5ldyBUeXBlRXJyb3IoIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuIik7IH0gcmV0dXJuIChoaW50ID09PSAic3RyaW5nIiA/IFN0cmluZyA6IE51bWJlcikoaW5wdXQpOyB9Ci8qKgogKiBTb21lIHBsdWdpbnMgd29uJ3QgYmUgYnVuZGxlZCB3aXRoIHRoZSBkYXNoYm9hcmQgYnVpbGQgYnV0IGxvYWRlZCBvbiBkZW1hbmQgYXQgcnVuIHRpbWUuCiAqIFRoaXMgZmlsZSBhbGxvd3MgJ21hbmFnZXInIHN0eWxlIHBsdWdpbnMgdG8gZGVmaW5lZCBob3cgdG8gZGV0ZXJtaW5lIGlmIGEgdW5rbm93biByb3V0ZQogKiBiZWxvbmdzIHRvIG9uZSBvZiB0aGVpciBhc3NvY2lhdGVkIHBsdWdpbnMgYW5kIGhvdyB0aGF0IHBsdWdpbiBjYW4gYmUgbG9hZGVkCiAqLwpjbGFzcyBEeW5hbWljUGx1Z2luTG9hZGVyIHsKICBjb25zdHJ1Y3RvcigpIHsKICAgIF9kZWZpbmVQcm9wZXJ0eSh0aGlzLCAiZHluYW1pY1BsdWdpbkxvYWRlcnMiLCBbXSk7CiAgfQogIHJlZ2lzdGVyKHJlZykgewogICAgdGhpcy5keW5hbWljUGx1Z2luTG9hZGVycy5wdXNoKHJlZyk7CiAgfQogIGFzeW5jIGNoZWNrKHsKICAgIHJvdXRlLAogICAgc3RvcmUKICB9KSB7CiAgICBmb3IgKGNvbnN0IGRwbCBvZiB0aGlzLmR5bmFtaWNQbHVnaW5Mb2FkZXJzKSB7CiAgICAgIC8vIENoZWNrIHRoYXQgdGhlIHJvdXRlIGlzIHZhbGlkIGFuZCB0aGVuIGxvYWQgdGhlIHBsdWdpbiBhc3NvY2lhdGVkIHdpdGggaXQKICAgICAgY29uc3QgcmVzID0gYXdhaXQgZHBsLmxvYWQoewogICAgICAgIHJvdXRlLAogICAgICAgIHN0b3JlCiAgICAgIH0pOwogICAgICBpZiAocmVzKSB7CiAgICAgICAgcmV0dXJuIHJlczsKICAgICAgfQogICAgfQogIH0KfQpjb25zdCBkeW5hbWljUGx1Z2luTG9hZGVyID0gbmV3IER5bmFtaWNQbHVnaW5Mb2FkZXIoKTsKZXhwb3J0IGRlZmF1bHQgZHluYW1pY1BsdWdpbkxvYWRlcjs="},{"version":3,"names":["DynamicPluginLoader","constructor","_defineProperty","register","reg","dynamicPluginLoaders","push","check","route","store","dpl","res","load","dynamicPluginLoader"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pkg/dynamic-plugin-loader.js"],"sourcesContent":["\n/**\n * Some plugins won't be bundled with the dashboard build but loaded on demand at run time.\n * This file allows 'manager' style plugins to defined how to determine if a unknown route\n * belongs to one of their associated plugins and how that plugin can be loaded\n */\nclass DynamicPluginLoader {\n  dynamicPluginLoaders = [];\n\n  register(reg) {\n    this.dynamicPluginLoaders.push(reg);\n  }\n\n  async check({ route, store }) {\n    for (const dpl of this.dynamicPluginLoaders) {\n      // Check that the route is valid and then load the plugin associated with it\n      const res = await dpl.load({ route, store });\n\n      if (res) {\n        return res;\n      }\n    }\n  }\n}\n\nconst dynamicPluginLoader = new DynamicPluginLoader();\n\nexport default dynamicPluginLoader;\n"],"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,mBAAmB,CAAC;EAAAC,YAAA;IAAAC,eAAA,+BACD,EAAE;EAAA;EAEzBC,QAAQA,CAACC,GAAG,EAAE;IACZ,IAAI,CAACC,oBAAoB,CAACC,IAAI,CAACF,GAAG,CAAC;EACrC;EAEA,MAAMG,KAAKA,CAAC;IAAEC,KAAK;IAAEC;EAAM,CAAC,EAAE;IAC5B,KAAK,MAAMC,GAAG,IAAI,IAAI,CAACL,oBAAoB,EAAE;MAC3C;MACA,MAAMM,GAAG,GAAG,MAAMD,GAAG,CAACE,IAAI,CAAC;QAAEJ,KAAK;QAAEC;MAAM,CAAC,CAAC;MAE5C,IAAIE,GAAG,EAAE;QACP,OAAOA,GAAG;MACZ;IACF;EACF;AACF;AAEA,MAAME,mBAAmB,GAAG,IAAIb,mBAAmB,CAAC,CAAC;AAErD,eAAea,mBAAmB"}]}