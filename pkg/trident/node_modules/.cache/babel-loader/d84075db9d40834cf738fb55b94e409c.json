{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/service.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/service.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/trident/babel.config.js","mtime":1716430386784},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGlzRW1wdHkgZnJvbSAnbG9kYXNoL2lzRW1wdHknOwppbXBvcnQgeyB2YWxpZGF0ZURuc0xhYmVsLCB2YWxpZGF0ZUhvc3RuYW1lIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3ZhbGlkYXRvcnMnOwpleHBvcnQgZnVuY3Rpb24gc2VydmljZVBvcnQoc3BlYywgZ2V0dGVycywgZXJyb3JzLCB2YWxpZGF0b3JBcmdzKSB7CiAgY29uc3QgewogICAgcG9ydHMsCiAgICB0eXBlOiBzZXJ2aWNlVHlwZQogIH0gPSBzcGVjOwogIGlmIChzZXJ2aWNlVHlwZSA9PT0gJ0V4dGVybmFsTmFtZScpIHsKICAgIHJldHVybiBlcnJvcnM7CiAgfQogIGlmIChpc0VtcHR5KHBvcnRzKSkgewogICAgZXJyb3JzLnB1c2goZ2V0dGVyc1snaTE4bi90J10oJ3ZhbGlkYXRpb24ucmVxdWlyZWQnLCB7CiAgICAgIGtleTogJ1BvcnQgUnVsZXMnCiAgICB9KSk7CiAgICByZXR1cm4gZXJyb3JzOwogIH0KICBwb3J0cy5mb3JFYWNoKChwb3J0LCBpbmQsIGFyeSkgPT4gewogICAgY29uc3QgewogICAgICBuYW1lLAogICAgICBub2RlUG9ydCwKICAgICAgcG9ydDogcFBvcnQsCiAgICAgIHRhcmdldFBvcnQKICAgIH0gPSBwb3J0OwogICAgY29uc3QgaWR4ID0gaW5kICsgMTsKICAgIGlmIChhcnkubGVuZ3RoID4gMSAmJiBpc0VtcHR5KG5hbWUpKSB7CiAgICAgIGVycm9ycy5wdXNoKGdldHRlcnNbJ2kxOG4vdCddKCd2YWxpZGF0aW9uLnNlcnZpY2UucG9ydHMubmFtZS5yZXF1aXJlZCcsIHsKICAgICAgICBwb3NpdGlvbjogaWR4CiAgICAgIH0pKTsKICAgIH0KICAgIGlmICghaXNFbXB0eShuYW1lKSkgewogICAgICBjb25zdCBuYW1lRXJyb3JzID0gdmFsaWRhdGVEbnNMYWJlbChuYW1lLCAnbmFtZScsIGdldHRlcnMsIHVuZGVmaW5lZCwgZXJyb3JzKTsKICAgICAgaWYgKCFpc0VtcHR5KG5hbWVFcnJvcnMpKSB7CiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggJiYgZXJyb3JzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGVycm9ycyA9IFsuLi5lcnJvcnMsIC4uLm5hbWVFcnJvcnNdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBlcnJvcnMgPSBuYW1lRXJyb3JzOwogICAgICAgIH0KICAgICAgfQogICAgfQogICAgaWYgKG5vZGVQb3J0KSB7CiAgICAgIGNvbnN0IG5wID0gcGFyc2VJbnQobm9kZVBvcnQsIDEwKTsKICAgICAgaWYgKGlzTmFOKG5wKSkgewogICAgICAgIGVycm9ycy5wdXNoKGdldHRlcnNbJ2kxOG4vdCddKCd2YWxpZGF0aW9uLnNlcnZpY2UucG9ydHMubm9kZVBvcnQucmVxdWlyZWRJbnQnLCB7CiAgICAgICAgICBwb3NpdGlvbjogaWR4CiAgICAgICAgfSkpOwogICAgICB9CiAgICB9CiAgICBpZiAocFBvcnQpIHsKICAgICAgY29uc3QgcCA9IHBhcnNlSW50KHBQb3J0LCAxMCk7CiAgICAgIGlmIChpc05hTihwKSkgewogICAgICAgIGVycm9ycy5wdXNoKGdldHRlcnNbJ2kxOG4vdCddKCd2YWxpZGF0aW9uLnNlcnZpY2UucG9ydHMucG9ydC5yZXF1aXJlZEludCcsIHsKICAgICAgICAgIHBvc2l0aW9uOiBpZHgKICAgICAgICB9KSk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIGVycm9ycy5wdXNoKGdldHRlcnNbJ2kxOG4vdCddKCd2YWxpZGF0aW9uLnNlcnZpY2UucG9ydHMucG9ydC5yZXF1aXJlZCcsIHsKICAgICAgICBwb3NpdGlvbjogaWR4CiAgICAgIH0pKTsKICAgIH0KICAgIGlmICh0YXJnZXRQb3J0KSB7CiAgICAgIGNvbnN0IHRwSWFuYURpc3BsYXlLZXkgPSBnZXR0ZXJzWydpMThuL3QnXSgndmFsaWRhdGlvbi5zZXJ2aWNlLnBvcnRzLnRhcmdldFBvcnQuaWFuYUF0JywgewogICAgICAgIHBvc2l0aW9uOiBpZHgKICAgICAgfSk7CiAgICAgIGNvbnN0IHRwID0gcGFyc2VJbnQodGFyZ2V0UG9ydCwgMTApOwogICAgICBjb25zdCB0cFRlc3QgPSBuZXcgUmVnRXhwKCdeXFxkKyQnKTsKICAgICAgY29uc3QgdGFyZ2V0UG9ydElzTnVtYmVyID0gdHBUZXN0LnRlc3QodGFyZ2V0UG9ydCk7CiAgICAgIGlmICghdGFyZ2V0UG9ydElzTnVtYmVyKSB7CiAgICAgICAgLy8gbm90IGEgbnVtYmVyCiAgICAgICAgLyogW3JmYzYzMzVdKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvcmZjL3JmYzYzMzUudHh0KSBwb3J0IG5hbWUgKElBTkFfU1ZDX05BTUUpCiAgICAgICAgICBBbiBhbHBoYW51bWVyaWMgKGEteiwgYW5kIDAtOSkgc3RyaW5nLCB3aXRoIGEgbWF4aW11bSBsZW5ndGggb2YgMTUgY2hhcmFjdGVycywKICAgICAgICAgIHdpdGggdGhlICctJyBjaGFyYWN0ZXIgYWxsb3dlZCBhbnl3aGVyZSBleGNlcHQgdGhlIGZpcnN0IG9yIHRoZSBsYXN0IGNoYXJhY3RlciBvciBhZGphY2VudCB0byBhbm90aGVyICctJyBjaGFyYWN0ZXIsCiAgICAgICAgICBpdCBtdXN0IGNvbnRhaW4gYXQgbGVhc3QgYShhIC0geikgY2hhcmFjdGVyCiAgICAgICAgICB2YWxpZGF0ZUNoYXJzKHN0ciwgeyB2YWxpZENoYXJzOiAnQS1aYS16MC05Xy4tJyB9LCBkaXNwbGF5S2V5LCBpbnRsLCBlcnJvcnMpOyAqLwogICAgICAgIGNvbnN0IG9wdHMgPSB7CiAgICAgICAgICBpYW5hU2VydmljZU5hbWU6IHRydWUsCiAgICAgICAgICBtYXhMZW5ndGg6IDE1LAogICAgICAgICAgdmFsaWRDaGFyczogJ0EtWmEtejAtOS0nCiAgICAgICAgfTsKICAgICAgICBjb25zdCBpc0lhbmFTZXJ2aWNlTmFtZUVycm9ycyA9IHZhbGlkYXRlRG5zTGFiZWwodGFyZ2V0UG9ydCwgdHBJYW5hRGlzcGxheUtleSwgZ2V0dGVycywgb3B0cywgZXJyb3JzKTsKICAgICAgICBpZiAoIWlzRW1wdHkoaXNJYW5hU2VydmljZU5hbWVFcnJvcnMpKSB7CiAgICAgICAgICBlcnJvcnMucHVzaCguLi5pc0lhbmFTZXJ2aWNlTmFtZUVycm9ycyk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHRwIDwgMSB8fCB0cCA+IDY1NTM1KSB7CiAgICAgICAgZXJyb3JzLnB1c2goZ2V0dGVyc1snaTE4bi90J10oJ3ZhbGlkYXRpb24uc2VydmljZS5wb3J0cy50YXJnZXRQb3J0LmJldHdlZW4nLCB7CiAgICAgICAgICBwb3NpdGlvbjogaWR4CiAgICAgICAgfSkpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBlcnJvcnMucHVzaChnZXR0ZXJzWydpMThuL3QnXSgndmFsaWRhdGlvbi5zZXJ2aWNlLnBvcnRzLnRhcmdldFBvcnQucmVxdWlyZWQnLCB7CiAgICAgICAgcG9zaXRpb246IGlkeAogICAgICB9KSk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGVycm9yczsKfQpleHBvcnQgZnVuY3Rpb24gY2x1c3RlcklwKHNwZWMsIGdldHRlcnMsIGVycm9ycywgdmFsaWRhdG9yQXJncykgewogIC8qCiAgICBjbHVzdGVySVAgaXMgdGhlIElQIGFkZHJlc3Mgb2YgdGhlIHNlcnZpY2UgYW5kIGlzIHVzdWFsbHkgYXNzaWduZWQgcmFuZG9tbHkgYnkgdGhlIG1hc3Rlci4KICAgIElmIGFuIGFkZHJlc3MgaXMgc3BlY2lmaWVkIG1hbnVhbGx5IGFuZCBpcyBub3QgaW4gdXNlIGJ5IG90aGVycywgaXQgd2lsbCBiZSBhbGxvY2F0ZWQgdG8gdGhlIHNlcnZpY2U7IG90aGVyd2lzZSwgY3JlYXRpb24gb2YgdGhlIHNlcnZpY2Ugd2lsbCBmYWlsLgogICAgVGhpcyBmaWVsZCBjYW4gbm90IGJlIGNoYW5nZWQgdGhyb3VnaCB1cGRhdGVzLgogICAgVmFsaWQgdmFsdWVzIGFyZSBcIk5vbmVcIiwgZW1wdHkgc3RyaW5nIChcIlwiKSwgb3IgYSB2YWxpZCBJUCBhZGRyZXNzLiBcIk5vbmVcIiBjYW4gYmUgc3BlY2lmaWVkIGZvciBoZWFkbGVzcyBzZXJ2aWNlcyB3aGVuIHByb3h5aW5nIGlzIG5vdCByZXF1aXJlZC4KICAgIE9ubHkgYXBwbGllcyB0byB0eXBlcyBDbHVzdGVySVAsIE5vZGVQb3J0LCBhbmQgTG9hZEJhbGFuY2VyLiBJZ25vcmVkIGlmIHR5cGUgaXMgRXh0ZXJuYWxOYW1lLgogICAgTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zZXJ2aWNlcy1uZXR3b3JraW5nL3NlcnZpY2UvI3ZpcnR1YWwtaXBzLWFuZC1zZXJ2aWNlLXByb3hpZXMKICAqLwogIGNvbnN0IHR5cGVzVG9DaGVjayA9IFsnQ2x1c3RlcklQJywgJ05vZGVQb3J0JywgJ0xvYWRCYWxhbmNlciddOwogIGNvbnN0IHNlcnZpY2VUeXBlID0gc3BlYyA9PT0gbnVsbCB8fCBzcGVjID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzcGVjLnR5cGU7CiAgaWYgKCF0eXBlc1RvQ2hlY2suaW5jbHVkZXMoc2VydmljZVR5cGUpKSB7CiAgICAvLyB2YWxpZGF0aW9uIG9ubHkgYXBwbGllcyB0byBzZXJ2aWNlcyBpbiB0aGUgdHlwZXMgdG8gY2hlY2sKICAgIHJldHVybiBlcnJvcnM7CiAgfQogIHJldHVybiBlcnJvcnM7Cn0KZXhwb3J0IGZ1bmN0aW9uIGV4dGVybmFsTmFtZShzcGVjLCBnZXR0ZXJzLCBlcnJvcnMsIHZhbGlkYXRvckFyZ3MpIHsKICAvKgogIGV4dGVybmFsTmFtZSBpcyB0aGUgZXh0ZXJuYWwgcmVmZXJlbmNlIHRoYXQga3ViZWRucyBvciBlcXVpdmFsZW50IHdpbGwgcmV0dXJuIGFzIGEgQ05BTUUgcmVjb3JkIGZvciB0aGlzIHNlcnZpY2UuCiAgTm8gcHJveHlpbmcgd2lsbCBiZSBpbnZvbHZlZC4KICBNdXN0IGJlIGEgdmFsaWQgUkZDLTExMjMgaG9zdG5hbWUgKGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmMxMTIzKSBhbmQgcmVxdWlyZXMgVHlwZSB0byBiZSBFeHRlcm5hbE5hbWUuCiAgKi8KICBpZiAoKHNwZWMgPT09IG51bGwgfHwgc3BlYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3BlYy50eXBlKSA9PT0gJ0V4dGVybmFsTmFtZScpIHsKICAgIGlmIChpc0VtcHR5KHNwZWMgPT09IG51bGwgfHwgc3BlYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3BlYy5leHRlcm5hbE5hbWUpKSB7CiAgICAgIGVycm9ycy5wdXNoKGdldHRlcnNbJ2kxOG4vdCddKCd2YWxpZGF0aW9uLnNlcnZpY2UuZXh0ZXJuYWxOYW1lLm5vbmUnKSk7CiAgICB9IGVsc2UgewogICAgICBjb25zdCBob3N0TmFtZUVycm9ycyA9IHZhbGlkYXRlSG9zdG5hbWUoc3BlYy5leHRlcm5hbE5hbWUsICdFeHRlcm5hbE5hbWUnLCBnZXR0ZXJzLCB1bmRlZmluZWQsIGVycm9ycyk7CiAgICAgIGlmICghaXNFbXB0eShob3N0TmFtZUVycm9ycykpIHsKICAgICAgICBpZiAoZXJyb3JzLmxlbmd0aCAmJiBlcnJvcnMubGVuZ3RoID4gMCkgewogICAgICAgICAgZXJyb3JzID0gWy4uLmVycm9ycywgLi4uaG9zdE5hbWVFcnJvcnNdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBlcnJvcnMgPSBob3N0TmFtZUVycm9yczsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CiAgcmV0dXJuIGVycm9yczsKfQ=="},{"version":3,"names":["isEmpty","validateDnsLabel","validateHostname","servicePort","spec","getters","errors","validatorArgs","ports","type","serviceType","push","key","forEach","port","ind","ary","name","nodePort","pPort","targetPort","idx","length","position","nameErrors","undefined","np","parseInt","isNaN","p","tpIanaDisplayKey","tp","tpTest","RegExp","targetPortIsNumber","test","opts","ianaServiceName","maxLength","validChars","isIanaServiceNameErrors","clusterIp","typesToCheck","includes","externalName","hostNameErrors"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/service.js"],"sourcesContent":["import isEmpty from 'lodash/isEmpty';\nimport { validateDnsLabel, validateHostname } from '@shell/utils/validators';\n\nexport function servicePort(spec, getters, errors, validatorArgs) {\n  const { ports, type: serviceType } = spec;\n\n  if (serviceType === 'ExternalName') {\n    return errors;\n  }\n\n  if (isEmpty(ports)) {\n    errors.push(getters['i18n/t']('validation.required', { key: 'Port Rules' }));\n\n    return errors;\n  }\n\n  ports.forEach((port, ind, ary) => {\n    const {\n      name,\n      nodePort,\n      port: pPort,\n      targetPort,\n    } = port;\n    const idx = ind + 1;\n\n    if (ary.length > 1 && isEmpty(name)) {\n      errors.push(getters['i18n/t']('validation.service.ports.name.required', { position: idx }));\n    }\n\n    if (!isEmpty(name)) {\n      const nameErrors = validateDnsLabel(name, 'name', getters, undefined, errors);\n\n      if (!isEmpty(nameErrors)) {\n        if (errors.length && errors.length > 0) {\n          errors = [...errors, ...nameErrors];\n        } else {\n          errors = nameErrors;\n        }\n      }\n    }\n\n    if (nodePort) {\n      const np = parseInt(nodePort, 10);\n\n      if (isNaN(np)) {\n        errors.push(getters['i18n/t']('validation.service.ports.nodePort.requiredInt', { position: idx }));\n      }\n    }\n\n    if (pPort) {\n      const p = parseInt(pPort, 10);\n\n      if (isNaN(p)) {\n        errors.push(getters['i18n/t']('validation.service.ports.port.requiredInt', { position: idx }));\n      }\n    } else {\n      errors.push(getters['i18n/t']('validation.service.ports.port.required', { position: idx }));\n    }\n\n    if (targetPort) {\n      const tpIanaDisplayKey = getters['i18n/t']('validation.service.ports.targetPort.ianaAt', { position: idx });\n      const tp = parseInt(targetPort, 10);\n      const tpTest = new RegExp('^\\\\d+$');\n      const targetPortIsNumber = tpTest.test(targetPort);\n\n      if (!targetPortIsNumber) { // not a number\n        /* [rfc6335](https://tools.ietf.org/rfc/rfc6335.txt) port name (IANA_SVC_NAME)\n          An alphanumeric (a-z, and 0-9) string, with a maximum length of 15 characters,\n          with the '-' character allowed anywhere except the first or the last character or adjacent to another '-' character,\n          it must contain at least a(a - z) character\n          validateChars(str, { validChars: 'A-Za-z0-9_.-' }, displayKey, intl, errors); */\n        const opts = {\n          ianaServiceName: true,\n          maxLength:       15,\n          validChars:      'A-Za-z0-9-',\n        };\n        const isIanaServiceNameErrors = validateDnsLabel(targetPort, tpIanaDisplayKey, getters, opts, errors);\n\n        if (!isEmpty(isIanaServiceNameErrors)) {\n          errors.push(...isIanaServiceNameErrors);\n        }\n      } else if (tp < 1 || tp > 65535) {\n        errors.push(getters['i18n/t']('validation.service.ports.targetPort.between', { position: idx }));\n      }\n    } else {\n      errors.push(getters['i18n/t']('validation.service.ports.targetPort.required', { position: idx }));\n    }\n  });\n\n  return errors;\n}\n\nexport function clusterIp(spec, getters, errors, validatorArgs) {\n  /*\n    clusterIP is the IP address of the service and is usually assigned randomly by the master.\n    If an address is specified manually and is not in use by others, it will be allocated to the service; otherwise, creation of the service will fail.\n    This field can not be changed through updates.\n    Valid values are \\\"None\\\", empty string (\\\"\\\"), or a valid IP address. \\\"None\\\" can be specified for headless services when proxying is not required.\n    Only applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if type is ExternalName.\n    More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n  */\n  const typesToCheck = ['ClusterIP', 'NodePort', 'LoadBalancer'];\n  const serviceType = spec?.type;\n\n  if (!typesToCheck.includes(serviceType)) {\n    // validation only applies to services in the types to check\n    return errors;\n  }\n\n  return errors;\n}\n\nexport function externalName(spec, getters, errors, validatorArgs) {\n  /*\n  externalName is the external reference that kubedns or equivalent will return as a CNAME record for this service.\n  No proxying will be involved.\n  Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123) and requires Type to be ExternalName.\n  */\n  if (spec?.type === 'ExternalName') {\n    if (isEmpty(spec?.externalName)) {\n      errors.push(getters['i18n/t']('validation.service.externalName.none'));\n    } else {\n      const hostNameErrors = validateHostname(spec.externalName, 'ExternalName', getters, undefined, errors);\n\n      if (!isEmpty(hostNameErrors)) {\n        if (errors.length && errors.length > 0) {\n          errors = [...errors, ...hostNameErrors];\n        } else {\n          errors = hostNameErrors;\n        }\n      }\n    }\n  }\n\n  return errors;\n}\n"],"mappings":"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"}]}