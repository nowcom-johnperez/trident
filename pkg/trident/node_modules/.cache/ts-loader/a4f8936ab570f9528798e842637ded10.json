{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--15-3!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/formRules/index.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/formRules/index.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/trident/babel.config.js","mtime":1716430386784},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/thread-loader/dist/cjs.js","mtime":1716430465967},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["RBAC","HCI","isEmpty","has","cronstrue","Port","constructor","port","string","String","int","parseInt","empty","isNumber","isNaN","includes","isInt","httpsKeys","runValidators","val","validators","validator","message","t","key","startDot","label","slice","undefined","endDot","startNumber","_a","match","startHyphen","endHyphen","minValue","min","Number","maxValue","max","betweenValues","minLength","length","maxLength","betweenLengths","requiredInt","isInteger","isPositive","isOctal","valueString","isValid","portNumber","dnsChars","matchedChars","count","chars","map","char","join","dnsDoubleDash","substr","dnsIanaServiceNameDoubleDash","dnsEmpty","dnsTooLong","hostnameEmpty","hostnameTooLong","absolutePath","required","noUpperCase","toLowerCase","cronSchedule","toString","e","isHttps","startsWith","interval","test","containerImage","image","name","containerImages","containers","jobTemplate","_d","_c","_b","spec","template","_f","_e","container","find","containerError","dnsLabel","dnsLabelIanaServiceName","dnsLabelRestricted","hostname","hostNameMessage","labels","split","labelValidators","i","labelMessage","wildcardHostname","replace","externalName","testRule","ruleGroups","groups","clusterName","isRke2","servicePort","idx","nodePort","listeningPort","targetPort","position","ianaServiceNameErrors","groupIsValid","readableIndex","returnMessage","index","rules","forEach","rule","readableRuleIndex","alert","groupIndex","ruleIndex","record","expr","groupsAreValid","group","arr","matching","roleTemplateRules","type","some","verbs","resources","nonResourceURLs","ROLE","apiGroups","clusterIp","backupTarget","parseValue","JSON","parse","accessKeyId","secretAccessKey","bucketRegion","bucketName","imageUrl","VM_IMAGE_FILE_FORMAT","urlSlug","pop","fileExtension","fileRequired","IMAGE_NAME","subDomain"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/validators/formRules/index.ts"],"sourcesContent":["import { RBAC } from '@shell/config/types';\nimport { HCI } from '@shell/config/labels-annotations';\nimport isEmpty from 'lodash/isEmpty';\nimport has from 'lodash/has';\n// import uniq from 'lodash/uniq';\nimport cronstrue from 'cronstrue';\nimport { Translation } from '@shell/types/t';\n\n// import uniq from 'lodash/uniq';\nexport type Validator<T = undefined | string> = (val: any, arg?: any) => T;\n\nexport type ValidatorFactory = (arg1: any, arg2?: any) => Validator\n\ntype ServicePort = {\n  name?: string,\n  nodePort?: string | number,\n  port?: string | number,\n  targetPort?: string | number,\n  idx: number\n}\n\nexport class Port {\n  empty: boolean;\n  int: number;\n  string: string;\n  isNumber: boolean;\n  isInt: boolean;\n  constructor(port: number | string | undefined) {\n    this.string = String(port);\n    this.int = parseInt(this.string, 10);\n    this.empty = (!port && this.int !== 0);\n    this.isNumber = !isNaN(this.int) && !this.string.includes('e'); // leaving out the exponent edge case to keep the logic simple and because port numbers aren't that big...\n    this.isInt = this.isNumber && !this.string.includes('.');\n  }\n}\n\nconst httpsKeys = [\n  'server-url'\n];\n\nconst runValidators = (val: any, validators: Validator[]) => {\n  for (const validator of validators) {\n    const message = validator(val);\n\n    if (message) {\n      return message;\n    }\n  }\n};\n\nexport interface ValidationOptions {\n  key?: string,\n}\n\n// \"t\" is the function name we use for getting a translated string\nexport default function(t: Translation, { key = 'Value' }: ValidationOptions): { [key:string]: Validator<any> | ValidatorFactory } {\n  // utility validators these validators only get used by other validators\n  const startDot: ValidatorFactory = (label: string): Validator => (val: string) => val?.slice(0, 1) === '.' ? t(`validation.dns.${ label }.startDot`, { key }) : undefined;\n\n  const endDot = (label: string): Validator => (val: string) => val?.slice(-1) === '.' ? t(`validation.dns.${ label }.endDot`, { key }) : undefined;\n\n  const startNumber: ValidatorFactory = (label: string): Validator => (val: string) => val?.slice(0, 1)?.match(/[0-9]/) ? t(`validation.dns.${ label }.startNumber`, { key }) : undefined;\n\n  const startHyphen: ValidatorFactory = (label: string): Validator => (val: string) => val?.slice(0, 1) === '-' ? t(`validation.dns.${ label }.startHyphen`, { key }) : undefined;\n\n  const endHyphen: ValidatorFactory = (label: string): Validator => (val: string) => val?.slice(-1) === '-' ? t(`validation.dns.${ label }.endHyphen`, { key }) : undefined;\n\n  const minValue: ValidatorFactory = (min: string) => (val: string | number) => Number(val) < Number(min) ? t('validation.minValue', { key, min }) : undefined;\n\n  const maxValue: ValidatorFactory = (max: string) => (val: string | number) => Number(val) > Number(max) ? t('validation.maxValue', { key, max }) : undefined;\n\n  const betweenValues: ValidatorFactory = ([min, max]: string[]) => (val: string | number) => minValue(min)(val) || maxValue(max)(val) ? t('validation.betweenValues', {\n    key, min, max\n  }) : undefined;\n\n  const minLength: ValidatorFactory = (min: string) => (val: string) => val.length < Number(min) ? t('validation.minLength', { key, min }) : undefined;\n\n  const maxLength: ValidatorFactory = (max: string) => (val: string) => val.length > Number(max) ? t('validation.maxLength', { key, max }) : undefined;\n\n  const betweenLengths: ValidatorFactory = ([min, max]: string[]) => (val: string) => minLength(min)(val) || maxLength(max)(val) ? t('validation.betweenLengths', {\n    key, min, max\n  }) : undefined;\n\n  const requiredInt: Validator = (val: string) => isNaN(parseInt(val, 10)) ? t('validation.number.requiredInt', { key }) : undefined;\n\n  const isInteger: Validator = (val: string | number) => !Number.isInteger(+val) || `${ val }`.match(/\\.+/g) ? t('validation.number.requiredInt', { key }) : undefined;\n\n  const isPositive: Validator = (val: string | number) => +val < 0 ? t('validation.number.isPositive', { key }) : undefined;\n\n  const isOctal: Validator = (val: string | number) => {\n    const valueString = `${ val }`;\n    const isValid = valueString.match(/(^0+)(.+)/);\n\n    return isValid ? t('validation.number.isOctal', { key }) : undefined;\n  };\n\n  const portNumber: Validator = (val: string) => parseInt(val, 10) < 1 || parseInt(val, 10) > 65535 ? t('validation.number.between', {\n    key, min: '1', max: '65535'\n  }) : undefined;\n\n  const dnsChars: Validator = (val: string) => {\n    const matchedChars = val?.match(/[^${'A-Za-z0-9-'}]/g);\n\n    if (matchedChars) {\n      return t('validation.chars', {\n        key, count: matchedChars.length, chars: matchedChars.map((char) => char === ' ' ? 'Space' : `\"${ char }\"`).join(', ')\n      });\n    }\n\n    return undefined;\n  };\n\n  // the weird edge case here deals with internationalized domain names which are prepended with 'xn--'\n  // https://datatracker.ietf.org/doc/html/rfc5891#section-4.2.3.1\n  const dnsDoubleDash: Validator = (val: string) => (val?.substr(2, 2) === '--' && val?.substr(0, 2) !== 'xn') ? t(`validation.dns.doubleHyphen`, { key }) : undefined;\n\n  const dnsIanaServiceNameDoubleDash: Validator = (val: string) => (val?.substr(2, 2) === '--' && val?.substr(0, 2) !== 'xn') ? t(`validation.dns.doubleHyphen`, { key }) : undefined;\n\n  const dnsEmpty: ValidatorFactory = (label: string): Validator => (val = '') => val.length === 0 ? t(`validation.dns.${ label }.emptyLabel`, { key, min: 1 }) : undefined;\n\n  const dnsTooLong: ValidatorFactory = (label: string, length = 63): Validator => (val = '') => val.length > length ? t(`validation.dns.${ label }.tooLongLabel`, { key, max: length }) : undefined;\n\n  // eslint-disable-next-line no-unused-vars\n  const hostnameEmpty: Validator = (val = '') => val.length === 0 ? t('validation.dns.hostname.empty', { key }) : undefined;\n\n  const hostnameTooLong: Validator = (val = '') => val.length > 253 ? t('validation.dns.hostname.tooLong', { key, max: 253 }) : undefined;\n\n  const absolutePath: Validator = (val = '') => val[0] !== '/' && val.length > 0 ? t('validation.path', { key }) : undefined;\n\n  const required: Validator = (val: any) => !val && val !== false ? t('validation.required', { key }) : undefined;\n\n  const noUpperCase: Validator = (val = '') => val.toLowerCase() !== val ? t('validation.noUpperCase', { key }) : undefined;\n\n  const cronSchedule: Validator = (val: string) => {\n    try {\n      cronstrue.toString(val);\n    } catch (e) {\n      return t('validation.invalidCron');\n    }\n  };\n\n  const isHttps: ValidatorFactory = (key: string) => {\n    const isHttps: Validator = (val: string) => httpsKeys.includes(key) && !val.toLowerCase().startsWith('https://') ? t('validation.setting.serverUrl.https') : undefined;\n\n    return isHttps;\n  };\n\n  const interval: Validator = (val: string) => !/^\\d+[hms]$/.test(val) ? t('validation.monitoring.route.interval', { key }) : undefined;\n\n  const containerImage: Validator = (val: any) => !val?.image ? t('workload.validation.containerImage', { name: val.name }) : undefined;\n\n  const containerImages: Validator = (val: any | [any]) => {\n    const containers = val.jobTemplate ? val?.jobTemplate?.spec?.template?.spec?.containers : val?.template?.spec?.containers;\n\n    if (!containers || !containers.length) {\n      return t('validation.required', { key: t('workload.container.titles.containers') });\n    }\n\n    // making sure each container has an image name\n    return containers.map((container: any) => containerImage(container)).find((containerError: string) => containerError);\n  };\n\n  const dnsLabel: Validator = (val: string) => {\n    const validators = [\n      dnsChars,\n      startHyphen('label'),\n      endHyphen('label'),\n      dnsDoubleDash,\n      // dnsEmpty('label'), // questionable as to if this is needed if the field is also required...\n      dnsTooLong('label')\n    ];\n\n    return runValidators(val, validators);\n  };\n\n  const dnsLabelIanaServiceName: Validator = (val: string) => {\n    const validators = [\n      dnsChars,\n      startHyphen('label'),\n      endHyphen('label'),\n      dnsIanaServiceNameDoubleDash,\n      dnsEmpty('label'), // questionable as to if this is needed if the field is also required...\n      dnsTooLong('label', 15)\n    ];\n\n    return runValidators(val, validators);\n  };\n\n  const dnsLabelRestricted: Validator = (val: string) => {\n    const validators = [\n      dnsChars,\n      startNumber('label'),\n      startHyphen('label'),\n      endHyphen('label'),\n      dnsDoubleDash,\n      dnsEmpty('label'), // questionable as to if this is needed if the field is also required...\n      dnsTooLong('label')\n    ];\n\n    return runValidators(val, validators);\n  };\n\n  const hostname: Validator = (val: string) => {\n    if (val) {\n      const validators = [\n        startDot('hostname'),\n        hostnameTooLong,\n        endDot('hostname')\n      ];\n\n      const hostNameMessage = runValidators(val, validators);\n\n      if (hostNameMessage) {\n        return hostNameMessage;\n      }\n\n      const labels = val.split('.');\n      const labelValidators = [\n        dnsChars,\n        startHyphen('hostname'),\n        endHyphen('hostname'),\n        dnsDoubleDash,\n        dnsEmpty('hostname'),\n        dnsTooLong('hostname')\n      ];\n\n      for ( let i = 0; i < labels.length; i++ ) {\n        const labelMessage = runValidators(labels[i], labelValidators);\n\n        if (labelMessage) {\n          return labelMessage;\n        }\n      }\n    }\n  };\n\n  const wildcardHostname: Validator = (val: string) => {\n    // allow wildcard in first part of hostname\n    val = val ? val.replace(/^\\*\\./, '') : val;\n\n    return hostname(val);\n  };\n\n  const externalName: Validator = (val: string) => {\n    if (isEmpty(val)) {\n      return t('validation.service.externalName.none');\n    } else {\n      return hostname(val);\n    }\n  };\n\n  const testRule = (val: string | undefined) => {\n    return 'This is an error returned by the testRule validator';\n  };\n\n  const ruleGroups: Validator = (val: {groups?: any}) => isEmpty(val?.groups) ? t('validation.prometheusRule.groups.required') : undefined;\n\n  const clusterName: ValidatorFactory = (isRke2: boolean): Validator => (val: string | undefined) => isRke2 && (val || '')?.match(/^(c-.{5}|local)$/i) ? t('validation.cluster.name') : undefined;\n\n  const servicePort: Validator<string | Port | undefined> = (val: ServicePort) => {\n    const {\n      name,\n      idx\n    } = val;\n\n    const nodePort = new Port(val.nodePort);\n    const listeningPort = new Port(val.port);\n    const targetPort = new Port(val.targetPort);\n\n    if (isEmpty(name)) {\n      return t('validation.service.ports.name.required', { position: idx + 1 });\n    }\n\n    if (!nodePort.empty) {\n      if (!nodePort.isInt) {\n        return t('validation.service.ports.nodePort.requiredInt', { position: idx + 1 });\n      } else if (nodePort.int < 1 || nodePort.int > 65535) {\n        return t('validation.service.ports.nodePort.between', { position: idx + 1 });\n      }\n    }\n\n    if (!listeningPort.empty) {\n      if (!listeningPort.isInt) {\n        return t('validation.service.ports.port.requiredInt', { position: idx + 1 });\n      } else if (listeningPort.int < 1 || listeningPort.int > 65535) {\n        return t('validation.service.ports.port.between', { position: idx + 1 });\n      } else if (listeningPort.string?.includes('.')) {\n        return listeningPort;\n      }\n    } else {\n      return t('validation.service.ports.port.required', { position: idx + 1 });\n    }\n\n    if (!targetPort.empty) {\n      if (!targetPort.isInt) {\n        const ianaServiceNameErrors = dnsLabelIanaServiceName(targetPort.string);\n\n        if (ianaServiceNameErrors) {\n          return ianaServiceNameErrors;\n        }\n      } else if (targetPort.int < 1 || targetPort.int > 65535) {\n        return t('validation.service.ports.targetPort.between', { position: idx + 1 });\n      }\n    } else {\n      return t('validation.service.ports.targetPort.required', { position: idx + 1 });\n    }\n\n    return undefined;\n  };\n\n  const groupIsValid: Validator = (val, readableIndex) => {\n    let returnMessage: string | undefined;\n\n    if (isEmpty(val?.name)) {\n      return t('validation.prometheusRule.groups.valid.name', { index: readableIndex });\n    }\n\n    if (isEmpty(val.rules)) {\n      return t('validation.prometheusRule.groups.valid.singleEntry', { index: readableIndex });\n    } else {\n      val.rules.forEach((rule: any, idx: number) => {\n        const readableRuleIndex = idx + 1;\n\n        if (has(rule, 'alert') && isEmpty(rule?.alert) && !returnMessage) {\n          returnMessage = t('validation.prometheusRule.groups.valid.rule.alertName', { groupIndex: readableIndex, ruleIndex: readableRuleIndex });\n        } else if (has(rule, 'record') && isEmpty(rule?.record)) {\n          returnMessage = t('validation.prometheusRule.groups.valid.rule.recordName', { groupIndex: readableIndex, ruleIndex: readableRuleIndex });\n        }\n\n        if ((has(rule, 'expr') && isEmpty(rule.expr) && !returnMessage) || (!has(rule, 'expr') && !returnMessage)) {\n          returnMessage = t('validation.prometheusRule.groups.valid.rule.expr', { groupIndex: readableIndex, ruleIndex: readableRuleIndex });\n        }\n\n        if (has(rule, 'alert')) {\n          if (\n            (has(rule, 'labels') && isEmpty(rule.labels) && !returnMessage) ||\n            (!has(rule, 'labels') && !returnMessage)\n          ) {\n            returnMessage = t('validation.prometheusRule.groups.valid.rule.labels', { groupIndex: readableIndex, ruleIndex: readableRuleIndex });\n          }\n        }\n      });\n    }\n\n    return returnMessage;\n  };\n\n  const groupsAreValid: Validator = (val) => {\n    const groups = [...val]; // making a new array in the function because I'm gonna mutate it later...\n    let message;\n\n    groups.forEach((group, idx, arr) => {\n      message = groupIsValid(group, idx + 1);\n      if (!!message) {\n        arr.length = idx + 1; // this is a tricksy way of breaking a forEach loop since we just want the first message\n      }\n    });\n\n    return message;\n  };\n\n  const matching: Validator = (val) => {\n    if (isEmpty(val?.match) && isEmpty(val?.['match_re'])) {\n      return t('validation.monitoring.route.match');\n    }\n  };\n\n  const roleTemplateRules: ValidatorFactory = (type): Validator => (val = []) => {\n    if (val.some((rule: any) => isEmpty(rule.verbs))) {\n      return t('validation.roleTemplate.roleTemplateRules.missingVerb');\n    }\n\n    if (val.some((rule: any) => rule.resources?.length && rule.nonResourceURLs?.length)) {\n      return t('validation.roleTemplate.roleTemplateRules.noResourceAndNonResource');\n    }\n\n    if (type === RBAC.ROLE) {\n      if (val.some((rule: any) => isEmpty(rule.resources))) {\n        return t('validation.roleTemplate.roleTemplateRules.missingResource');\n      }\n\n      if (val.some((rule: any) => isEmpty(rule.apiGroups))) {\n        return t('validation.roleTemplate.roleTemplateRules.missingApiGroup');\n      }\n    } else if (val.some((rule: any) => isEmpty(rule.resources) && isEmpty(rule.nonResourceURLs) && isEmpty(rule.apiGroups))) {\n      return t('validation.roleTemplate.roleTemplateRules.missingOneResource');\n    }\n\n    return undefined;\n  };\n\n  // The existing validator for clusterIp never actually returns an error\n  const clusterIp: Validator = (val) => undefined;\n\n  const backupTarget: Validator = (val) => {\n    const parseValue = JSON.parse(val);\n    const type = parseValue.type;\n\n    if (!type) {\n      return t('validation.required', { key: 'Type' });\n    }\n\n    if (type === 's3') {\n      if (!parseValue.accessKeyId) {\n        return t('validation.required', { key: 'accessKeyId' });\n      }\n\n      if (!parseValue.secretAccessKey) {\n        return t('validation.required', { key: 'secretAccessKey' });\n      }\n\n      if (!parseValue.bucketRegion) {\n        return t('validation.required', { key: 'bucketRegion' });\n      }\n\n      if (!parseValue.bucketName) {\n        return t('validation.required', { key: 'bucketName' });\n      }\n    }\n\n    return undefined;\n  };\n\n  const imageUrl: Validator = (val) => {\n    const VM_IMAGE_FILE_FORMAT = ['qcow', 'qcow2', 'raw', 'img', 'iso'];\n\n    if (!val || val === '') {\n      return undefined;\n    }\n\n    const urlSlug = val.split('/').pop();\n    const fileExtension = urlSlug.split('.').pop().toLowerCase();\n\n    if (!VM_IMAGE_FILE_FORMAT.includes(fileExtension)) {\n      return t('harvester.validation.image.ruleTip');\n    }\n\n    return undefined;\n  };\n\n  const fileRequired: Validator = (val = {}) => {\n    if (!val[HCI.IMAGE_NAME]) {\n      return t('validation.required', { key: t('harvester.image.fileName') });\n    }\n  };\n\n  const subDomain: Validator = (val) => {\n    const matchedChars = val?.match(/[^a-z0-9.-]/g);\n\n    if (matchedChars) {\n      return t('validation.chars', {\n        key, count: matchedChars.length, chars: matchedChars.map((char: string) => char === ' ' ? 'Space' : `\"${ char }\"`).join(', ')\n      });\n    }\n\n    return runValidators(val, [startHyphen('label'), endHyphen('label'), startDot('label'), endDot('label'), required]);\n  };\n\n  return {\n    absolutePath,\n    backupTarget,\n    betweenLengths,\n    betweenValues,\n    clusterIp,\n    clusterName,\n    containerImage,\n    containerImages,\n    cronSchedule,\n    dnsLabel,\n    dnsLabelIanaServiceName,\n    dnsLabelRestricted,\n    externalName,\n    fileRequired,\n    groupsAreValid,\n    hostname,\n    imageUrl,\n    interval,\n    isHttps,\n    matching,\n    maxLength,\n    maxValue,\n    minLength,\n    minValue,\n    noUpperCase,\n    portNumber,\n    required,\n    requiredInt,\n    isInteger,\n    isPositive,\n    isOctal,\n    roleTemplateRules,\n    ruleGroups,\n    servicePort,\n    subDomain,\n    testRule,\n    wildcardHostname,\n  };\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,qBAAqB;AAC1C,SAASC,GAAG,QAAQ,kCAAkC;AACtD,OAAOC,OAAO,MAAM,gBAAgB;AACpC,OAAOC,GAAG,MAAM,YAAY;AAC5B;AACA,OAAOC,SAAS,MAAM,WAAW;AAgBjC,OAAM,MAAOC,IAAI;EAMfC,YAAYC,IAAiC;IAC3C,IAAI,CAACC,MAAM,GAAGC,MAAM,CAACF,IAAI,CAAC;IAC1B,IAAI,CAACG,GAAG,GAAGC,QAAQ,CAAC,IAAI,CAACH,MAAM,EAAE,EAAE,CAAC;IACpC,IAAI,CAACI,KAAK,GAAI,CAACL,IAAI,IAAI,IAAI,CAACG,GAAG,KAAK,CAAE;IACtC,IAAI,CAACG,QAAQ,GAAG,CAACC,KAAK,CAAC,IAAI,CAACJ,GAAG,CAAC,IAAI,CAAC,IAAI,CAACF,MAAM,CAACO,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IAChE,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,QAAQ,IAAI,CAAC,IAAI,CAACL,MAAM,CAACO,QAAQ,CAAC,GAAG,CAAC;EAC1D;;AAGF,MAAME,SAAS,GAAG,CAChB,YAAY,CACb;AAED,MAAMC,aAAa,GAAGA,CAACC,GAAQ,EAAEC,UAAuB,KAAI;EAC1D,KAAK,MAAMC,SAAS,IAAID,UAAU,EAAE;IAClC,MAAME,OAAO,GAAGD,SAAS,CAACF,GAAG,CAAC;IAE9B,IAAIG,OAAO,EAAE;MACX,OAAOA,OAAO;;;AAGpB,CAAC;AAMD;AACA,eAAc,UAAUC,CAAc,EAAE;EAAEC,GAAG,GAAG;AAAO,CAAqB;EAC1E;EACA,MAAMC,QAAQ,GAAsBC,KAAa,IAAiBP,GAAW,IAAK,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,KAAK,CAAC,CAAC,EAAE,CAAC,OAAM,GAAG,GAAGJ,CAAC,CAAC,kBAAmBG,KAAM,WAAW,EAAE;IAAEF;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEzK,MAAMC,MAAM,GAAIH,KAAa,IAAiBP,GAAW,IAAK,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,KAAK,CAAC,CAAC,CAAC,OAAM,GAAG,GAAGJ,CAAC,CAAC,kBAAmBG,KAAM,SAAS,EAAE;IAAEF;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEjJ,MAAME,WAAW,GAAsBJ,KAAa,IAAiBP,GAAW,IAAI;IAAA,IAAAY,EAAA;IAAC,SAAAA,EAAA,GAAAZ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,KAAK,CAAC,CAAC,EAAE,CAAC,eAAAI,EAAA,uBAAAA,EAAA,CAAGC,KAAK,CAAC,OAAO,KAAIT,CAAC,CAAC,kBAAmBG,KAAM,cAAc,EAAE;MAAEF;IAAG,CAAE,CAAC,GAAGI,SAAS;EAAA;EAEvL,MAAMK,WAAW,GAAsBP,KAAa,IAAiBP,GAAW,IAAK,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,KAAK,CAAC,CAAC,EAAE,CAAC,OAAM,GAAG,GAAGJ,CAAC,CAAC,kBAAmBG,KAAM,cAAc,EAAE;IAAEF;EAAG,CAAE,CAAC,GAAGI,SAAS;EAE/K,MAAMM,SAAS,GAAsBR,KAAa,IAAiBP,GAAW,IAAK,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEQ,KAAK,CAAC,CAAC,CAAC,OAAM,GAAG,GAAGJ,CAAC,CAAC,kBAAmBG,KAAM,YAAY,EAAE;IAAEF;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEzK,MAAMO,QAAQ,GAAsBC,GAAW,IAAMjB,GAAoB,IAAKkB,MAAM,CAAClB,GAAG,CAAC,GAAGkB,MAAM,CAACD,GAAG,CAAC,GAAGb,CAAC,CAAC,qBAAqB,EAAE;IAAEC,GAAG;IAAEY;EAAG,CAAE,CAAC,GAAGR,SAAS;EAE5J,MAAMU,QAAQ,GAAsBC,GAAW,IAAMpB,GAAoB,IAAKkB,MAAM,CAAClB,GAAG,CAAC,GAAGkB,MAAM,CAACE,GAAG,CAAC,GAAGhB,CAAC,CAAC,qBAAqB,EAAE;IAAEC,GAAG;IAAEe;EAAG,CAAE,CAAC,GAAGX,SAAS;EAE5J,MAAMY,aAAa,GAAqBA,CAAC,CAACJ,GAAG,EAAEG,GAAG,CAAW,KAAMpB,GAAoB,IAAKgB,QAAQ,CAACC,GAAG,CAAC,CAACjB,GAAG,CAAC,IAAImB,QAAQ,CAACC,GAAG,CAAC,CAACpB,GAAG,CAAC,GAAGI,CAAC,CAAC,0BAA0B,EAAE;IACnKC,GAAG;IAAEY,GAAG;IAAEG;GACX,CAAC,GAAGX,SAAS;EAEd,MAAMa,SAAS,GAAsBL,GAAW,IAAMjB,GAAW,IAAKA,GAAG,CAACuB,MAAM,GAAGL,MAAM,CAACD,GAAG,CAAC,GAAGb,CAAC,CAAC,sBAAsB,EAAE;IAAEC,GAAG;IAAEY;EAAG,CAAE,CAAC,GAAGR,SAAS;EAEpJ,MAAMe,SAAS,GAAsBJ,GAAW,IAAMpB,GAAW,IAAKA,GAAG,CAACuB,MAAM,GAAGL,MAAM,CAACE,GAAG,CAAC,GAAGhB,CAAC,CAAC,sBAAsB,EAAE;IAAEC,GAAG;IAAEe;EAAG,CAAE,CAAC,GAAGX,SAAS;EAEpJ,MAAMgB,cAAc,GAAqBA,CAAC,CAACR,GAAG,EAAEG,GAAG,CAAW,KAAMpB,GAAW,IAAKsB,SAAS,CAACL,GAAG,CAAC,CAACjB,GAAG,CAAC,IAAIwB,SAAS,CAACJ,GAAG,CAAC,CAACpB,GAAG,CAAC,GAAGI,CAAC,CAAC,2BAA2B,EAAE;IAC9JC,GAAG;IAAEY,GAAG;IAAEG;GACX,CAAC,GAAGX,SAAS;EAEd,MAAMiB,WAAW,GAAe1B,GAAW,IAAKL,KAAK,CAACH,QAAQ,CAACQ,GAAG,EAAE,EAAE,CAAC,CAAC,GAAGI,CAAC,CAAC,+BAA+B,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAElI,MAAMkB,SAAS,GAAe3B,GAAoB,IAAK,CAACkB,MAAM,CAACS,SAAS,CAAC,CAAC3B,GAAG,CAAC,IAAI,GAAIA,GAAI,EAAE,CAACa,KAAK,CAAC,MAAM,CAAC,GAAGT,CAAC,CAAC,+BAA+B,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEpK,MAAMmB,UAAU,GAAe5B,GAAoB,IAAK,CAACA,GAAG,GAAG,CAAC,GAAGI,CAAC,CAAC,8BAA8B,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEzH,MAAMoB,OAAO,GAAe7B,GAAoB,IAAI;IAClD,MAAM8B,WAAW,GAAG,GAAI9B,GAAI,EAAE;IAC9B,MAAM+B,OAAO,GAAGD,WAAW,CAACjB,KAAK,CAAC,WAAW,CAAC;IAE9C,OAAOkB,OAAO,GAAG3B,CAAC,CAAC,2BAA2B,EAAE;MAAEC;IAAG,CAAE,CAAC,GAAGI,SAAS;EACtE,CAAC;EAED,MAAMuB,UAAU,GAAehC,GAAW,IAAKR,QAAQ,CAACQ,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAIR,QAAQ,CAACQ,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGI,CAAC,CAAC,2BAA2B,EAAE;IACjIC,GAAG;IAAEY,GAAG,EAAE,GAAG;IAAEG,GAAG,EAAE;GACrB,CAAC,GAAGX,SAAS;EAEd,MAAMwB,QAAQ,GAAejC,GAAW,IAAI;IAC1C,MAAMkC,YAAY,GAAGlC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEa,KAAK,CAAC,qBAAqB,CAAC;IAEtD,IAAIqB,YAAY,EAAE;MAChB,OAAO9B,CAAC,CAAC,kBAAkB,EAAE;QAC3BC,GAAG;QAAE8B,KAAK,EAAED,YAAY,CAACX,MAAM;QAAEa,KAAK,EAAEF,YAAY,CAACG,GAAG,CAAEC,IAAI,IAAKA,IAAI,KAAK,GAAG,GAAG,OAAO,GAAG,IAAKA,IAAK,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI;OACrH,CAAC;;IAGJ,OAAO9B,SAAS;EAClB,CAAC;EAED;EACA;EACA,MAAM+B,aAAa,GAAexC,GAAW,IAAM,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEyC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAM,IAAI,IAAI,CAAAzC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEyC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAM,IAAI,GAAIrC,CAAC,CAAC,6BAA6B,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEpK,MAAMiC,4BAA4B,GAAe1C,GAAW,IAAM,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEyC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAM,IAAI,IAAI,CAAAzC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEyC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAM,IAAI,GAAIrC,CAAC,CAAC,6BAA6B,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEnL,MAAMkC,QAAQ,GAAsBpC,KAAa,IAAgB,CAACP,GAAG,GAAG,EAAE,KAAKA,GAAG,CAACuB,MAAM,KAAK,CAAC,GAAGnB,CAAC,CAAC,kBAAmBG,KAAM,aAAa,EAAE;IAAEF,GAAG;IAAEY,GAAG,EAAE;EAAC,CAAE,CAAC,GAAGR,SAAS;EAExK,MAAMmC,UAAU,GAAqBA,CAACrC,KAAa,EAAEgB,MAAM,GAAG,EAAE,KAAgB,CAACvB,GAAG,GAAG,EAAE,KAAKA,GAAG,CAACuB,MAAM,GAAGA,MAAM,GAAGnB,CAAC,CAAC,kBAAmBG,KAAM,eAAe,EAAE;IAAEF,GAAG;IAAEe,GAAG,EAAEG;EAAM,CAAE,CAAC,GAAGd,SAAS;EAEjM;EACA,MAAMoC,aAAa,GAAcA,CAAC7C,GAAG,GAAG,EAAE,KAAKA,GAAG,CAACuB,MAAM,KAAK,CAAC,GAAGnB,CAAC,CAAC,+BAA+B,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEzH,MAAMqC,eAAe,GAAcA,CAAC9C,GAAG,GAAG,EAAE,KAAKA,GAAG,CAACuB,MAAM,GAAG,GAAG,GAAGnB,CAAC,CAAC,iCAAiC,EAAE;IAAEC,GAAG;IAAEe,GAAG,EAAE;EAAG,CAAE,CAAC,GAAGX,SAAS;EAEvI,MAAMsC,YAAY,GAAcA,CAAC/C,GAAG,GAAG,EAAE,KAAKA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,GAAG,CAACuB,MAAM,GAAG,CAAC,GAAGnB,CAAC,CAAC,iBAAiB,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAE1H,MAAMuC,QAAQ,GAAehD,GAAQ,IAAK,CAACA,GAAG,IAAIA,GAAG,KAAK,KAAK,GAAGI,CAAC,CAAC,qBAAqB,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAE/G,MAAMwC,WAAW,GAAcA,CAACjD,GAAG,GAAG,EAAE,KAAKA,GAAG,CAACkD,WAAW,EAAE,KAAKlD,GAAG,GAAGI,CAAC,CAAC,wBAAwB,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAEzH,MAAM0C,YAAY,GAAenD,GAAW,IAAI;IAC9C,IAAI;MACFf,SAAS,CAACmE,QAAQ,CAACpD,GAAG,CAAC;KACxB,CAAC,OAAOqD,CAAC,EAAE;MACV,OAAOjD,CAAC,CAAC,wBAAwB,CAAC;;EAEtC,CAAC;EAED,MAAMkD,OAAO,GAAsBjD,GAAW,IAAI;IAChD,MAAMiD,OAAO,GAAetD,GAAW,IAAKF,SAAS,CAACF,QAAQ,CAACS,GAAG,CAAC,IAAI,CAACL,GAAG,CAACkD,WAAW,EAAE,CAACK,UAAU,CAAC,UAAU,CAAC,GAAGnD,CAAC,CAAC,oCAAoC,CAAC,GAAGK,SAAS;IAEtK,OAAO6C,OAAO;EAChB,CAAC;EAED,MAAME,QAAQ,GAAexD,GAAW,IAAK,CAAC,YAAY,CAACyD,IAAI,CAACzD,GAAG,CAAC,GAAGI,CAAC,CAAC,sCAAsC,EAAE;IAAEC;EAAG,CAAE,CAAC,GAAGI,SAAS;EAErI,MAAMiD,cAAc,GAAe1D,GAAQ,IAAK,EAACA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE2D,KAAK,IAAGvD,CAAC,CAAC,oCAAoC,EAAE;IAAEwD,IAAI,EAAE5D,GAAG,CAAC4D;EAAI,CAAE,CAAC,GAAGnD,SAAS;EAErI,MAAMoD,eAAe,GAAe7D,GAAgB,IAAI;;IACtD,MAAM8D,UAAU,GAAG9D,GAAG,CAAC+D,WAAW,GAAE,CAAAC,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAAtD,EAAA,GAACZ,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE+D,WAAW,cAAAnD,EAAA,uBAAAA,EAAA,CAAEuD,IAAI,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,QAAQ,cAAAH,EAAA,uBAAAA,EAAA,CAAEE,IAAI,cAAAH,EAAA,uBAAAA,EAAA,CAAEF,UAAU,GAAE,CAAAO,EAAA,IAAAC,EAAA,GAACtE,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEoE,QAAQ,cAAAE,EAAA,uBAAAA,EAAA,CAAEH,IAAI,cAAAE,EAAA,uBAAAA,EAAA,CAAEP,UAAU;IAEzH,IAAI,CAACA,UAAU,IAAI,CAACA,UAAU,CAACvC,MAAM,EAAE;MACrC,OAAOnB,CAAC,CAAC,qBAAqB,EAAE;QAAEC,GAAG,EAAED,CAAC,CAAC,sCAAsC;MAAC,CAAE,CAAC;;IAGrF;IACA,OAAO0D,UAAU,CAACzB,GAAG,CAAEkC,SAAc,IAAKb,cAAc,CAACa,SAAS,CAAC,CAAC,CAACC,IAAI,CAAEC,cAAsB,IAAKA,cAAc,CAAC;EACvH,CAAC;EAED,MAAMC,QAAQ,GAAe1E,GAAW,IAAI;IAC1C,MAAMC,UAAU,GAAG,CACjBgC,QAAQ,EACRnB,WAAW,CAAC,OAAO,CAAC,EACpBC,SAAS,CAAC,OAAO,CAAC,EAClByB,aAAa;IACb;IACAI,UAAU,CAAC,OAAO,CAAC,CACpB;IAED,OAAO7C,aAAa,CAACC,GAAG,EAAEC,UAAU,CAAC;EACvC,CAAC;EAED,MAAM0E,uBAAuB,GAAe3E,GAAW,IAAI;IACzD,MAAMC,UAAU,GAAG,CACjBgC,QAAQ,EACRnB,WAAW,CAAC,OAAO,CAAC,EACpBC,SAAS,CAAC,OAAO,CAAC,EAClB2B,4BAA4B,EAC5BC,QAAQ,CAAC,OAAO,CAAC,EACjBC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CACxB;IAED,OAAO7C,aAAa,CAACC,GAAG,EAAEC,UAAU,CAAC;EACvC,CAAC;EAED,MAAM2E,kBAAkB,GAAe5E,GAAW,IAAI;IACpD,MAAMC,UAAU,GAAG,CACjBgC,QAAQ,EACRtB,WAAW,CAAC,OAAO,CAAC,EACpBG,WAAW,CAAC,OAAO,CAAC,EACpBC,SAAS,CAAC,OAAO,CAAC,EAClByB,aAAa,EACbG,QAAQ,CAAC,OAAO,CAAC,EACjBC,UAAU,CAAC,OAAO,CAAC,CACpB;IAED,OAAO7C,aAAa,CAACC,GAAG,EAAEC,UAAU,CAAC;EACvC,CAAC;EAED,MAAM4E,QAAQ,GAAe7E,GAAW,IAAI;IAC1C,IAAIA,GAAG,EAAE;MACP,MAAMC,UAAU,GAAG,CACjBK,QAAQ,CAAC,UAAU,CAAC,EACpBwC,eAAe,EACfpC,MAAM,CAAC,UAAU,CAAC,CACnB;MAED,MAAMoE,eAAe,GAAG/E,aAAa,CAACC,GAAG,EAAEC,UAAU,CAAC;MAEtD,IAAI6E,eAAe,EAAE;QACnB,OAAOA,eAAe;;MAGxB,MAAMC,MAAM,GAAG/E,GAAG,CAACgF,KAAK,CAAC,GAAG,CAAC;MAC7B,MAAMC,eAAe,GAAG,CACtBhD,QAAQ,EACRnB,WAAW,CAAC,UAAU,CAAC,EACvBC,SAAS,CAAC,UAAU,CAAC,EACrByB,aAAa,EACbG,QAAQ,CAAC,UAAU,CAAC,EACpBC,UAAU,CAAC,UAAU,CAAC,CACvB;MAED,KAAM,IAAIsC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACxD,MAAM,EAAE2D,CAAC,EAAE,EAAG;QACxC,MAAMC,YAAY,GAAGpF,aAAa,CAACgF,MAAM,CAACG,CAAC,CAAC,EAAED,eAAe,CAAC;QAE9D,IAAIE,YAAY,EAAE;UAChB,OAAOA,YAAY;;;;EAI3B,CAAC;EAED,MAAMC,gBAAgB,GAAepF,GAAW,IAAI;IAClD;IACAA,GAAG,GAAGA,GAAG,GAAGA,GAAG,CAACqF,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,GAAGrF,GAAG;IAE1C,OAAO6E,QAAQ,CAAC7E,GAAG,CAAC;EACtB,CAAC;EAED,MAAMsF,YAAY,GAAetF,GAAW,IAAI;IAC9C,IAAIjB,OAAO,CAACiB,GAAG,CAAC,EAAE;MAChB,OAAOI,CAAC,CAAC,sCAAsC,CAAC;KACjD,MAAM;MACL,OAAOyE,QAAQ,CAAC7E,GAAG,CAAC;;EAExB,CAAC;EAED,MAAMuF,QAAQ,GAAIvF,GAAuB,IAAI;IAC3C,OAAO,qDAAqD;EAC9D,CAAC;EAED,MAAMwF,UAAU,GAAexF,GAAmB,IAAKjB,OAAO,CAACiB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEyF,MAAM,CAAC,GAAGrF,CAAC,CAAC,2CAA2C,CAAC,GAAGK,SAAS;EAExI,MAAMiF,WAAW,GAAsBC,MAAe,IAAiB3F,GAAuB,IAAI;IAAA,IAAAY,EAAA;IAAC,OAAA+E,MAAM,MAAA/E,EAAA,GAAKZ,GAAG,IAAI,EAAG,cAAAY,EAAA,uBAAAA,EAAA,CAAEC,KAAK,CAAC,mBAAmB,EAAC,GAAGT,CAAC,CAAC,yBAAyB,CAAC,GAAGK,SAAS;EAAA;EAE/L,MAAMmF,WAAW,GAA0C5F,GAAgB,IAAI;;IAC7E,MAAM;MACJ4D,IAAI;MACJiC;IAAG,CACJ,GAAG7F,GAAG;IAEP,MAAM8F,QAAQ,GAAG,IAAI5G,IAAI,CAACc,GAAG,CAAC8F,QAAQ,CAAC;IACvC,MAAMC,aAAa,GAAG,IAAI7G,IAAI,CAACc,GAAG,CAACZ,IAAI,CAAC;IACxC,MAAM4G,UAAU,GAAG,IAAI9G,IAAI,CAACc,GAAG,CAACgG,UAAU,CAAC;IAE3C,IAAIjH,OAAO,CAAC6E,IAAI,CAAC,EAAE;MACjB,OAAOxD,CAAC,CAAC,wCAAwC,EAAE;QAAE6F,QAAQ,EAAEJ,GAAG,GAAG;MAAC,CAAE,CAAC;;IAG3E,IAAI,CAACC,QAAQ,CAACrG,KAAK,EAAE;MACnB,IAAI,CAACqG,QAAQ,CAACjG,KAAK,EAAE;QACnB,OAAOO,CAAC,CAAC,+CAA+C,EAAE;UAAE6F,QAAQ,EAAEJ,GAAG,GAAG;QAAC,CAAE,CAAC;OACjF,MAAM,IAAIC,QAAQ,CAACvG,GAAG,GAAG,CAAC,IAAIuG,QAAQ,CAACvG,GAAG,GAAG,KAAK,EAAE;QACnD,OAAOa,CAAC,CAAC,2CAA2C,EAAE;UAAE6F,QAAQ,EAAEJ,GAAG,GAAG;QAAC,CAAE,CAAC;;;IAIhF,IAAI,CAACE,aAAa,CAACtG,KAAK,EAAE;MACxB,IAAI,CAACsG,aAAa,CAAClG,KAAK,EAAE;QACxB,OAAOO,CAAC,CAAC,2CAA2C,EAAE;UAAE6F,QAAQ,EAAEJ,GAAG,GAAG;QAAC,CAAE,CAAC;OAC7E,MAAM,IAAIE,aAAa,CAACxG,GAAG,GAAG,CAAC,IAAIwG,aAAa,CAACxG,GAAG,GAAG,KAAK,EAAE;QAC7D,OAAOa,CAAC,CAAC,uCAAuC,EAAE;UAAE6F,QAAQ,EAAEJ,GAAG,GAAG;QAAC,CAAE,CAAC;OACzE,MAAM,KAAAjF,EAAA,GAAImF,aAAa,CAAC1G,MAAM,cAAAuB,EAAA,uBAAAA,EAAA,CAAEhB,QAAQ,CAAC,GAAG,GAAG;QAC9C,OAAOmG,aAAa;;KAEvB,MAAM;MACL,OAAO3F,CAAC,CAAC,wCAAwC,EAAE;QAAE6F,QAAQ,EAAEJ,GAAG,GAAG;MAAC,CAAE,CAAC;;IAG3E,IAAI,CAACG,UAAU,CAACvG,KAAK,EAAE;MACrB,IAAI,CAACuG,UAAU,CAACnG,KAAK,EAAE;QACrB,MAAMqG,qBAAqB,GAAGvB,uBAAuB,CAACqB,UAAU,CAAC3G,MAAM,CAAC;QAExE,IAAI6G,qBAAqB,EAAE;UACzB,OAAOA,qBAAqB;;OAE/B,MAAM,IAAIF,UAAU,CAACzG,GAAG,GAAG,CAAC,IAAIyG,UAAU,CAACzG,GAAG,GAAG,KAAK,EAAE;QACvD,OAAOa,CAAC,CAAC,6CAA6C,EAAE;UAAE6F,QAAQ,EAAEJ,GAAG,GAAG;QAAC,CAAE,CAAC;;KAEjF,MAAM;MACL,OAAOzF,CAAC,CAAC,8CAA8C,EAAE;QAAE6F,QAAQ,EAAEJ,GAAG,GAAG;MAAC,CAAE,CAAC;;IAGjF,OAAOpF,SAAS;EAClB,CAAC;EAED,MAAM0F,YAAY,GAAcA,CAACnG,GAAG,EAAEoG,aAAa,KAAI;IACrD,IAAIC,aAAiC;IAErC,IAAItH,OAAO,CAACiB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAE4D,IAAI,CAAC,EAAE;MACtB,OAAOxD,CAAC,CAAC,6CAA6C,EAAE;QAAEkG,KAAK,EAAEF;MAAa,CAAE,CAAC;;IAGnF,IAAIrH,OAAO,CAACiB,GAAG,CAACuG,KAAK,CAAC,EAAE;MACtB,OAAOnG,CAAC,CAAC,oDAAoD,EAAE;QAAEkG,KAAK,EAAEF;MAAa,CAAE,CAAC;KACzF,MAAM;MACLpG,GAAG,CAACuG,KAAK,CAACC,OAAO,CAAC,CAACC,IAAS,EAAEZ,GAAW,KAAI;QAC3C,MAAMa,iBAAiB,GAAGb,GAAG,GAAG,CAAC;QAEjC,IAAI7G,GAAG,CAACyH,IAAI,EAAE,OAAO,CAAC,IAAI1H,OAAO,CAAC0H,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEE,KAAK,CAAC,IAAI,CAACN,aAAa,EAAE;UAChEA,aAAa,GAAGjG,CAAC,CAAC,uDAAuD,EAAE;YAAEwG,UAAU,EAAER,aAAa;YAAES,SAAS,EAAEH;UAAiB,CAAE,CAAC;SACxI,MAAM,IAAI1H,GAAG,CAACyH,IAAI,EAAE,QAAQ,CAAC,IAAI1H,OAAO,CAAC0H,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEK,MAAM,CAAC,EAAE;UACvDT,aAAa,GAAGjG,CAAC,CAAC,wDAAwD,EAAE;YAAEwG,UAAU,EAAER,aAAa;YAAES,SAAS,EAAEH;UAAiB,CAAE,CAAC;;QAG1I,IAAK1H,GAAG,CAACyH,IAAI,EAAE,MAAM,CAAC,IAAI1H,OAAO,CAAC0H,IAAI,CAACM,IAAI,CAAC,IAAI,CAACV,aAAa,IAAM,CAACrH,GAAG,CAACyH,IAAI,EAAE,MAAM,CAAC,IAAI,CAACJ,aAAc,EAAE;UACzGA,aAAa,GAAGjG,CAAC,CAAC,kDAAkD,EAAE;YAAEwG,UAAU,EAAER,aAAa;YAAES,SAAS,EAAEH;UAAiB,CAAE,CAAC;;QAGpI,IAAI1H,GAAG,CAACyH,IAAI,EAAE,OAAO,CAAC,EAAE;UACtB,IACGzH,GAAG,CAACyH,IAAI,EAAE,QAAQ,CAAC,IAAI1H,OAAO,CAAC0H,IAAI,CAAC1B,MAAM,CAAC,IAAI,CAACsB,aAAa,IAC7D,CAACrH,GAAG,CAACyH,IAAI,EAAE,QAAQ,CAAC,IAAI,CAACJ,aAAc,EACxC;YACAA,aAAa,GAAGjG,CAAC,CAAC,oDAAoD,EAAE;cAAEwG,UAAU,EAAER,aAAa;cAAES,SAAS,EAAEH;YAAiB,CAAE,CAAC;;;MAG1I,CAAC,CAAC;;IAGJ,OAAOL,aAAa;EACtB,CAAC;EAED,MAAMW,cAAc,GAAehH,GAAG,IAAI;IACxC,MAAMyF,MAAM,GAAG,CAAC,GAAGzF,GAAG,CAAC,CAAC,CAAC;IACzB,IAAIG,OAAO;IAEXsF,MAAM,CAACe,OAAO,CAAC,CAACS,KAAK,EAAEpB,GAAG,EAAEqB,GAAG,KAAI;MACjC/G,OAAO,GAAGgG,YAAY,CAACc,KAAK,EAAEpB,GAAG,GAAG,CAAC,CAAC;MACtC,IAAI,CAAC,CAAC1F,OAAO,EAAE;QACb+G,GAAG,CAAC3F,MAAM,GAAGsE,GAAG,GAAG,CAAC,CAAC,CAAC;;IAE1B,CAAC,CAAC;IAEF,OAAO1F,OAAO;EAChB,CAAC;EAED,MAAMgH,QAAQ,GAAenH,GAAG,IAAI;IAClC,IAAIjB,OAAO,CAACiB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEa,KAAK,CAAC,IAAI9B,OAAO,CAACiB,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAG,UAAU,EAAE,EAAE;MACrD,OAAOI,CAAC,CAAC,mCAAmC,CAAC;;EAEjD,CAAC;EAED,MAAMgH,iBAAiB,GAAsBC,IAAI,IAAgB,CAACrH,GAAG,GAAG,EAAE,KAAI;IAC5E,IAAIA,GAAG,CAACsH,IAAI,CAAEb,IAAS,IAAK1H,OAAO,CAAC0H,IAAI,CAACc,KAAK,CAAC,CAAC,EAAE;MAChD,OAAOnH,CAAC,CAAC,uDAAuD,CAAC;;IAGnE,IAAIJ,GAAG,CAACsH,IAAI,CAAEb,IAAS,IAAI;MAAA,IAAA7F,EAAA,EAAAsD,EAAA;MAAC,SAAAtD,EAAA,GAAA6F,IAAI,CAACe,SAAS,cAAA5G,EAAA,uBAAAA,EAAA,CAAEW,MAAM,OAAA2C,EAAA,GAAIuC,IAAI,CAACgB,eAAe,cAAAvD,EAAA,uBAAAA,EAAA,CAAE3C,MAAM;IAAA,EAAC,EAAE;MACnF,OAAOnB,CAAC,CAAC,oEAAoE,CAAC;;IAGhF,IAAIiH,IAAI,KAAKxI,IAAI,CAAC6I,IAAI,EAAE;MACtB,IAAI1H,GAAG,CAACsH,IAAI,CAAEb,IAAS,IAAK1H,OAAO,CAAC0H,IAAI,CAACe,SAAS,CAAC,CAAC,EAAE;QACpD,OAAOpH,CAAC,CAAC,2DAA2D,CAAC;;MAGvE,IAAIJ,GAAG,CAACsH,IAAI,CAAEb,IAAS,IAAK1H,OAAO,CAAC0H,IAAI,CAACkB,SAAS,CAAC,CAAC,EAAE;QACpD,OAAOvH,CAAC,CAAC,2DAA2D,CAAC;;KAExE,MAAM,IAAIJ,GAAG,CAACsH,IAAI,CAAEb,IAAS,IAAK1H,OAAO,CAAC0H,IAAI,CAACe,SAAS,CAAC,IAAIzI,OAAO,CAAC0H,IAAI,CAACgB,eAAe,CAAC,IAAI1I,OAAO,CAAC0H,IAAI,CAACkB,SAAS,CAAC,CAAC,EAAE;MACvH,OAAOvH,CAAC,CAAC,8DAA8D,CAAC;;IAG1E,OAAOK,SAAS;EAClB,CAAC;EAED;EACA,MAAMmH,SAAS,GAAe5H,GAAG,IAAKS,SAAS;EAE/C,MAAMoH,YAAY,GAAe7H,GAAG,IAAI;IACtC,MAAM8H,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAChI,GAAG,CAAC;IAClC,MAAMqH,IAAI,GAAGS,UAAU,CAACT,IAAI;IAE5B,IAAI,CAACA,IAAI,EAAE;MACT,OAAOjH,CAAC,CAAC,qBAAqB,EAAE;QAAEC,GAAG,EAAE;MAAM,CAAE,CAAC;;IAGlD,IAAIgH,IAAI,KAAK,IAAI,EAAE;MACjB,IAAI,CAACS,UAAU,CAACG,WAAW,EAAE;QAC3B,OAAO7H,CAAC,CAAC,qBAAqB,EAAE;UAAEC,GAAG,EAAE;QAAa,CAAE,CAAC;;MAGzD,IAAI,CAACyH,UAAU,CAACI,eAAe,EAAE;QAC/B,OAAO9H,CAAC,CAAC,qBAAqB,EAAE;UAAEC,GAAG,EAAE;QAAiB,CAAE,CAAC;;MAG7D,IAAI,CAACyH,UAAU,CAACK,YAAY,EAAE;QAC5B,OAAO/H,CAAC,CAAC,qBAAqB,EAAE;UAAEC,GAAG,EAAE;QAAc,CAAE,CAAC;;MAG1D,IAAI,CAACyH,UAAU,CAACM,UAAU,EAAE;QAC1B,OAAOhI,CAAC,CAAC,qBAAqB,EAAE;UAAEC,GAAG,EAAE;QAAY,CAAE,CAAC;;;IAI1D,OAAOI,SAAS;EAClB,CAAC;EAED,MAAM4H,QAAQ,GAAerI,GAAG,IAAI;IAClC,MAAMsI,oBAAoB,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IAEnE,IAAI,CAACtI,GAAG,IAAIA,GAAG,KAAK,EAAE,EAAE;MACtB,OAAOS,SAAS;;IAGlB,MAAM8H,OAAO,GAAGvI,GAAG,CAACgF,KAAK,CAAC,GAAG,CAAC,CAACwD,GAAG,EAAE;IACpC,MAAMC,aAAa,GAAGF,OAAO,CAACvD,KAAK,CAAC,GAAG,CAAC,CAACwD,GAAG,EAAE,CAACtF,WAAW,EAAE;IAE5D,IAAI,CAACoF,oBAAoB,CAAC1I,QAAQ,CAAC6I,aAAa,CAAC,EAAE;MACjD,OAAOrI,CAAC,CAAC,oCAAoC,CAAC;;IAGhD,OAAOK,SAAS;EAClB,CAAC;EAED,MAAMiI,YAAY,GAAcA,CAAC1I,GAAG,GAAG,EAAE,KAAI;IAC3C,IAAI,CAACA,GAAG,CAAClB,GAAG,CAAC6J,UAAU,CAAC,EAAE;MACxB,OAAOvI,CAAC,CAAC,qBAAqB,EAAE;QAAEC,GAAG,EAAED,CAAC,CAAC,0BAA0B;MAAC,CAAE,CAAC;;EAE3E,CAAC;EAED,MAAMwI,SAAS,GAAe5I,GAAG,IAAI;IACnC,MAAMkC,YAAY,GAAGlC,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEa,KAAK,CAAC,cAAc,CAAC;IAE/C,IAAIqB,YAAY,EAAE;MAChB,OAAO9B,CAAC,CAAC,kBAAkB,EAAE;QAC3BC,GAAG;QAAE8B,KAAK,EAAED,YAAY,CAACX,MAAM;QAAEa,KAAK,EAAEF,YAAY,CAACG,GAAG,CAAEC,IAAY,IAAKA,IAAI,KAAK,GAAG,GAAG,OAAO,GAAG,IAAKA,IAAK,GAAG,CAAC,CAACC,IAAI,CAAC,IAAI;OAC7H,CAAC;;IAGJ,OAAOxC,aAAa,CAACC,GAAG,EAAE,CAACc,WAAW,CAAC,OAAO,CAAC,EAAEC,SAAS,CAAC,OAAO,CAAC,EAAET,QAAQ,CAAC,OAAO,CAAC,EAAEI,MAAM,CAAC,OAAO,CAAC,EAAEsC,QAAQ,CAAC,CAAC;EACrH,CAAC;EAED,OAAO;IACLD,YAAY;IACZ8E,YAAY;IACZpG,cAAc;IACdJ,aAAa;IACbuG,SAAS;IACTlC,WAAW;IACXhC,cAAc;IACdG,eAAe;IACfV,YAAY;IACZuB,QAAQ;IACRC,uBAAuB;IACvBC,kBAAkB;IAClBU,YAAY;IACZoD,YAAY;IACZ1B,cAAc;IACdnC,QAAQ;IACRwD,QAAQ;IACR7E,QAAQ;IACRF,OAAO;IACP6D,QAAQ;IACR3F,SAAS;IACTL,QAAQ;IACRG,SAAS;IACTN,QAAQ;IACRiC,WAAW;IACXjB,UAAU;IACVgB,QAAQ;IACRtB,WAAW;IACXC,SAAS;IACTC,UAAU;IACVC,OAAO;IACPuF,iBAAiB;IACjB5B,UAAU;IACVI,WAAW;IACXgD,SAAS;IACTrD,QAAQ;IACRH;GACD;AACH"}]}