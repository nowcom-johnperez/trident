{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ConsumptionGauge.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ConsumptionGauge.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBQZXJjZW50YWdlQmFyIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1BlcmNlbnRhZ2VCYXInOwppbXBvcnQgeyBmb3JtYXRQZXJjZW50IH0gZnJvbSAnQHNoZWxsL3V0aWxzL3N0cmluZyc7CgovKioKICogQSBkZXRhaWxlZCB2aWV3IG9mIGhvdyBtdWNoIGEgcmVzb3VyY2UgaXMgYmVpbmcgY29uc3VtZWQuCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBQZXJjZW50YWdlQmFyIH0sCiAgcHJvcHM6ICAgICAgewogICAgLyoqCiAgICAgKiBUaGUgbmFtZSBvZiB0aGUgcmVzb3VyY2UgdG8gYmUgZGlzcGxheWVkLgogICAgICovCiAgICByZXNvdXJjZU5hbWU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8qKgogICAgICogVGhlIHRvdGFsIGFtb3VudCBvZiB0aGUgcmVzb3VyY2UgKGJvdGggdXNlZCBhbmQgdW51c2VkIGFtb3VudCkuCiAgICAgKi8KICAgIGNhcGFjaXR5OiB7CiAgICAgIHR5cGU6ICAgICBOdW1iZXIsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBUaGUgYW1vdW50IG9mIHRoZSByZXNvdXJjZSB0aGF0IGlzIGN1cnJlbnRseSBpbiB1c2UuCiAgICAgKi8KICAgIHVzZWQ6IHsKICAgICAgdHlwZTogICAgIE51bWJlciwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSB1bml0cyB0aGF0IHNob3VsZCBiZSBkaXNwbGF5ZWQgd2hlbiByZWZlcmVuY2luZyBhbW91bnRzIG9mIHRoZSByZXNvdXJjZS4KICAgICAqLwogICAgdW5pdHM6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8qKgogICAgICogQSBtZXRob2Qgd2hpY2ggY2FuIGJlIHVzZWQgdG8gZm9ybWF0IHRoZSAqY2FwYWNpdHkqIGFuZCAqdXNlZCogbnVtYmVycyBmb3IgZGlzcGxheS4KICAgICAqLwogICAgbnVtYmVyRm9ybWF0dGVyOiB7CiAgICAgIHR5cGU6ICAgIEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiAodmFsdWUpID0+IE51bWJlci5pc0ludGVnZXIodmFsdWUpID8gdmFsdWUgOiB2YWx1ZS50b0ZpeGVkKDIpCiAgICB9LAoKICAgIC8qKgogICAgICogT3B0aW9uYWwgbWFwIG9mIGNzcyBjb2xvciBjbGFzczogcGVyY2VudGFnZSBzdG9wcyB0byBhcHBseSB0byBiYXIKICAgICAqLwoKICAgIGNvbG9yU3RvcHM6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIC8qKgogICAgICogUmVkdWNlIHRoZSB2ZXJ0aWFsIGhlaWdodCBieSBjaGFuZ2VkICdVc2VkJyBmb3IgdGhlIHJlc291cmNlIG5hbWUKICAgICAqLwogICAgdXNlZEFzUmVzb3VyY2VOYW1lOiB7CiAgICAgIHR5cGU6ICAgQm9vbGVhbiwKICAgICAgZGVmYXV0OiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRpc3BsYXlVbml0cygpIHsKICAgICAgaWYgKCB0aGlzLnVuaXRzICkgewogICAgICAgIHJldHVybiBgICR7IHRoaXMudW5pdHMgfWA7CiAgICAgIH0KCiAgICAgIHJldHVybiAnJzsKICAgIH0sCiAgICBwZXJjZW50YWdlQmFyVmFsdWUoKSB7CiAgICAgIGlmICghdGhpcy51c2VkIHx8ICF0aGlzLmNhcGFjaXR5KSB7CiAgICAgICAgcmV0dXJuIDA7CiAgICAgIH0KCiAgICAgIHJldHVybiAodGhpcy51c2VkICogMTAwKSAvIHRoaXMuY2FwYWNpdHk7CiAgICB9LAogICAgYW1vdW50VGVtcGxhdGVWYWx1ZXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdXNlZDogIHRoaXMubnVtYmVyRm9ybWF0dGVyKHRoaXMudXNlZCB8fCAwKSwKICAgICAgICB0b3RhbDogdGhpcy5udW1iZXJGb3JtYXR0ZXIodGhpcy5jYXBhY2l0eSB8fCAwKSwKICAgICAgICB1bml0OiAgdGhpcy5kaXNwbGF5VW5pdHMKICAgICAgfTsKICAgIH0sCiAgICBmb3JtYXR0ZWRQZXJjZW50YWdlKCkgewogICAgICByZXR1cm4gZm9ybWF0UGVyY2VudCh0aGlzLnBlcmNlbnRhZ2VCYXJWYWx1ZSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["ConsumptionGauge.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ConsumptionGauge.vue","sourceRoot":"../../node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport PercentageBar from '@shell/components/PercentageBar';\nimport { formatPercent } from '@shell/utils/string';\n\n/**\n * A detailed view of how much a resource is being consumed.\n */\nexport default {\n  components: { PercentageBar },\n  props:      {\n    /**\n     * The name of the resource to be displayed.\n     */\n    resourceName: {\n      type:    String,\n      default: ''\n    },\n    /**\n     * The total amount of the resource (both used and unused amount).\n     */\n    capacity: {\n      type:     Number,\n      required: true\n    },\n    /**\n     * The amount of the resource that is currently in use.\n     */\n    used: {\n      type:     Number,\n      required: true\n    },\n    /**\n     * The units that should be displayed when referencing amounts of the resource.\n     */\n    units: {\n      type:    String,\n      default: ''\n    },\n    /**\n     * A method which can be used to format the *capacity* and *used* numbers for display.\n     */\n    numberFormatter: {\n      type:    Function,\n      default: (value) => Number.isInteger(value) ? value : value.toFixed(2)\n    },\n\n    /**\n     * Optional map of css color class: percentage stops to apply to bar\n     */\n\n    colorStops: {\n      type:    Object,\n      default: null\n    },\n\n    /**\n     * Reduce the vertial height by changed 'Used' for the resource name\n     */\n    usedAsResourceName: {\n      type:   Boolean,\n      defaut: false\n    }\n  },\n  computed: {\n    displayUnits() {\n      if ( this.units ) {\n        return ` ${ this.units }`;\n      }\n\n      return '';\n    },\n    percentageBarValue() {\n      if (!this.used || !this.capacity) {\n        return 0;\n      }\n\n      return (this.used * 100) / this.capacity;\n    },\n    amountTemplateValues() {\n      return {\n        used:  this.numberFormatter(this.used || 0),\n        total: this.numberFormatter(this.capacity || 0),\n        unit:  this.displayUnits\n      };\n    },\n    formattedPercentage() {\n      return formatPercent(this.percentageBarValue);\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"consumption-gauge\">\n    <h3 v-if=\"resourceName && !usedAsResourceName\">\n      {{ resourceName }}\n    </h3>\n    <div class=\"numbers\">\n      <!-- @slot Optional slot to use as the title rather than showing the resource name -->\n      <slot\n        name=\"title\"\n        :amountTemplateValues=\"amountTemplateValues\"\n        :formattedPercentage=\"formattedPercentage\"\n      >\n        <h4 v-if=\"usedAsResourceName\">\n          {{ resourceName }}\n        </h4>\n        <span v-else>{{ t('node.detail.glance.consumptionGauge.used') }}</span>\n        <span class=\"numbers-stats\">\n          {{ t('node.detail.glance.consumptionGauge.amount', amountTemplateValues) }}\n          <span class=\"percentage\"><i>/&nbsp;</i>{{ formattedPercentage }}</span>\n        </span>\n      </slot>\n    </div>\n    <div class=\"mt-10\">\n      <PercentageBar\n        :value=\"percentageBarValue\"\n        :color-stops=\"colorStops\"\n      />\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.consumption-gauge {\n  .numbers {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n\n    &-stats {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 10px;\n      align-self: baseline;\n\n    }\n\n    .percentage {\n      font-weight: bold;\n      i {\n        margin-right: 10px;\n      }\n    }\n  }\n}\n</style>\n"]}]}