{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/HardwareResourceGauge.vue?vue&type=style&index=0&id=4b8b50d5&prod&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/HardwareResourceGauge.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5oYXJkd2FyZS1yZXNvdXJjZS1nYXVnZSB7CiAgJHNwYWNpbmc6IDEwcHg7CiAgJGxhcmdlLXNwYWNpbmc6ICRzcGFjaW5nICogMS41OwoKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwoKICAuaHctZ2F1Z2U6bm90KDpmaXJzdC1vZi10eXBlKSB7CiAgICBtYXJnaW4tdG9wOiAyMHB4OwogIH0KCiAgLnZhbHVlcyB7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7CiAgfQp9Cg=="},{"version":3,"sources":["HardwareResourceGauge.vue"],"names":[],"mappings":";AAiKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"HardwareResourceGauge.vue","sourceRoot":"../../node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport ConsumptionGauge from '@shell/components/ConsumptionGauge';\nimport SimpleBox from '@shell/components/SimpleBox';\n\nexport default {\n  components: { ConsumptionGauge, SimpleBox },\n  props:      {\n    name: {\n      type:     String,\n      required: true\n    },\n\n    units: {\n      type:    String,\n      default: ''\n    },\n\n    used: {\n      type:    Object,\n      default: null\n    },\n\n    reserved: {\n      type:    Object,\n      default: null\n    }\n  },\n  computed: {\n    colorStops() {\n      return {\n        0: '--success', 30: '--warning', 70: '--error'\n      };\n    }\n  },\n  methods: {\n    maxDecimalPlaces(n) {\n      return Math.round(n * 100) / 100;\n    },\n\n    strokes(primary, secondary) {\n      return {\n        primaryStrokeColor:           this.rgba(primary, 1),\n        primaryStrokeGradientColor:   this.rgba(secondary, 1),\n        secondaryStrokeColor:         this.rgba(primary, 0.1),\n        secondaryStrokeGradientColor: this.rgba(secondary, 0.1)\n      };\n    },\n\n    rgba(variable, opacity) {\n      return `rgba(var(${ variable }), ${ opacity })`;\n    },\n\n    percentage(resource) {\n      if (resource.total === 0) {\n        return 0;\n      }\n\n      return `${ (resource.useful / resource.total * 100).toFixed(2) }%`;\n    }\n  }\n};\n</script>\n\n<template>\n  <SimpleBox class=\"hardware-resource-gauge\">\n    <div class=\"chart\">\n      <h3>\n        {{ name }}\n      </h3>\n      <div\n        v-if=\"reserved && (reserved.total !== undefined || reserved.useful !== undefined)\"\n        class=\"hw-gauge\"\n      >\n        <ConsumptionGauge\n          :capacity=\"reserved.total\"\n          :used=\"reserved.useful\"\n          :color-stops=\"colorStops\"\n        >\n          <template #title>\n            <span>\n              {{ t('clusterIndexPage.hardwareResourceGauge.reserved') }}\n              <span class=\"values text-muted\">\n                <span v-if=\"reserved.formattedUseful\">\n                  {{ reserved.formattedUseful }}\n                </span>\n                <span v-else>\n                  {{ maxDecimalPlaces(reserved.useful) }}\n                </span>\n                /\n                <span v-if=\"reserved.formattedTotal\">\n                  {{ reserved.formattedTotal }}\n                </span>\n                <span v-else>\n                  {{ maxDecimalPlaces(reserved.total) }} {{ reserved.units }}\n                </span>\n              </span>\n            </span>\n            <span>\n              {{ percentage(reserved) }}\n            </span>\n          </template>\n        </ConsumptionGauge>\n      </div>\n      <div\n        v-if=\"used && used.useful !== undefined\"\n        class=\"hw-gauge\"\n      >\n        <ConsumptionGauge\n          :capacity=\"used.total\"\n          :used=\"used.useful\"\n          :color-stops=\"colorStops\"\n        >\n          <template #title>\n            <span>\n              {{ t('clusterIndexPage.hardwareResourceGauge.used') }}\n              <span class=\"values text-muted\">\n                <span v-if=\"used.formattedUseful\">\n                  {{ used.formattedUseful }}\n                </span>\n                <span v-else>\n                  {{ maxDecimalPlaces(used.useful) }}\n                </span>\n                /\n                <span v-if=\"used.formattedTotal\">\n                  {{ used.formattedTotal }}\n                </span>\n                <span v-else>\n                  {{ maxDecimalPlaces(used.total) }} {{ used.units }}\n                </span>\n              </span>\n            </span>\n            <span>\n              {{ percentage(used) }}\n            </span>\n          </template>\n        </ConsumptionGauge>\n      </div>\n    </div>\n  </SimpleBox>\n</template>\n\n<style lang=\"scss\" scoped>\n  .hardware-resource-gauge {\n    $spacing: 10px;\n    $large-spacing: $spacing * 1.5;\n\n    position: relative;\n    display: flex;\n    flex-direction: column;\n\n    .hw-gauge:not(:first-of-type) {\n      margin-top: 20px;\n    }\n\n    .values {\n      font-size: 12px;\n      padding-left: 10px;\n    }\n  }\n</style>\n"]}]}