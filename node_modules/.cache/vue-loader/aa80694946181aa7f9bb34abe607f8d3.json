{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgRm9ybVZhbGlkYXRpb24gZnJvbSAnQHNoZWxsL21peGlucy9mb3JtLXZhbGlkYXRpb24nOwppbXBvcnQgV29ya0xvYWRNaXhpbiBmcm9tICdAc2hlbGwvZWRpdC93b3JrbG9hZC9taXhpbnMvd29ya2xvYWQnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICAgJ1dvcmtsb2FkJywKICBtaXhpbnM6IFtDcmVhdGVFZGl0VmlldywgRm9ybVZhbGlkYXRpb24sIFdvcmtMb2FkTWl4aW5dLCAvLyBUaGUgb3JkZXIgaGVyZSBpcyBpbXBvcnRhbnQgc2luY2UgV29ya0xvYWRNaXhpbiBjb250YWlucyBzb21lIEZvcm1WYWxpZGF0aW9uIGNvbmZpZ3VyYXRpb24KICBwcm9wczogIHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgICBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NyZWF0ZScsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7IHNlbGVjdGVkTmFtZTogbnVsbCB9OwogIH0sCiAgbWV0aG9kczogewogICAgY2hhbmdlZCh0YWIpIHsKICAgICAgY29uc3Qga2V5ID0gdGhpcy5pZEtleTsKCiAgICAgIHRoaXMuc2VsZWN0ZWROYW1lID0gdGFiLnNlbGVjdGVkTmFtZTsKICAgICAgY29uc3QgY29udGFpbmVyID0gdGhpcy5jb250YWluZXJPcHRpb25zLmZpbmQoIChjKSA9PiBjW2tleV0gPT09IHRhYi5zZWxlY3RlZE5hbWUpOwoKICAgICAgaWYgKCBjb250YWluZXIgKSB7CiAgICAgICAgdGhpcy5zZWxlY3RDb250YWluZXIoY29udGFpbmVyKTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIEZpbmQgZXJyb3IgZXhjZXB0aW9ucyB0byBiZSBtYXBwZWQgZm9yIGVhY2ggY2FzZQogICAgICovCiAgICBtYXBFcnJvcihlcnJvcikgewogICAgICBjb25zdCBpc09iamVjdCA9IGVycm9yICYmIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoZXJyb3IpOwogICAgICAvLyBXZSBoYXZlIGp1c3QgMiBjYXNlcywgc28gd2UnbGwgc2V0IGEgdGVybmFyeSBvcGVyYXRpb246CiAgICAgIC8vIC0gb25lIGlzIGZvciB3aGVuIHdlIHN1Ym1pdCBhIFlBTUwgZWRpdGVkIGZvcm0gKG9iamVjdCAtIFlBTUxleGNlcHRpb25zKQogICAgICAvLyAtIG90aGVyIGlzIGZvciBhIHN0cmluZyBtZXNzYWdlCiAgICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IGlzT2JqZWN0ID8gZXJyb3IubWVzc2FnZSB8fCAnJyA6IGVycm9yIHx8ICcnOwoKICAgICAgc3dpdGNoICh0cnVlKSB7CiAgICAgIGNhc2UgZXJyb3JNZXNzYWdlLmluY2x1ZGVzKCd2aW9sYXRlcyBQb2RTZWN1cml0eScpOiB7CiAgICAgICAgY29uc3QgbWF0Y2ggPSBlcnJvck1lc3NhZ2UubWF0Y2goL1wiKC4qPylcIi9naSk7CiAgICAgICAgY29uc3QgbmFtZSA9IG1hdGNoWzBdOwogICAgICAgIGNvbnN0IHBvbGljeSA9IG1hdGNoWzFdOwoKICAgICAgICByZXR1cm4gewogICAgICAgICAgbWVzc2FnZTogYFBvZCAkeyBuYW1lIH0gU2VjdXJpdHkgUG9saWN5IFZpb2xhdGlvbiAkeyBwb2xpY3kgfWAsCiAgICAgICAgICBpY29uOiAgICAnaWNvbi1wb2Rfc2VjdXJpdHknCiAgICAgICAgfTsKICAgICAgfQogICAgICBkZWZhdWx0OgogICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogTWFwIGFsbCB0aGUgZXJyb3IgdGV4dHMgdG8gYSBtZXNzYWdlIGFuZCBpY29uIG9iamVjdAogICAgICovCiAgICBnZXRFcnJvcnNNYXAoZXJyb3JzKSB7CiAgICAgIHJldHVybiAhZXJyb3JzIHx8ICFBcnJheS5pc0FycmF5KGVycm9ycykgPyB7fSA6IGVycm9ycy5yZWR1Y2UoKGFjYywgZXJyb3IpID0+ICh7CiAgICAgICAgLi4uYWNjLAogICAgICAgIFtlcnJvcl06IHRoaXMubWFwRXJyb3IoZXJyb3IpIHx8IHsKICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLAogICAgICAgICAgaWNvbjogICAgbnVsbAogICAgICAgIH0KICAgICAgfSksIHt9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport WorkLoadMixin from '@shell/edit/workload/mixins/workload';\n\nexport default {\n  name:   'Workload',\n  mixins: [CreateEditView, FormValidation, WorkLoadMixin], // The order here is important since WorkLoadMixin contains some FormValidation configuration\n  props:  {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n  },\n  data() {\n    return { selectedName: null };\n  },\n  methods: {\n    changed(tab) {\n      const key = this.idKey;\n\n      this.selectedName = tab.selectedName;\n      const container = this.containerOptions.find( (c) => c[key] === tab.selectedName);\n\n      if ( container ) {\n        this.selectContainer(container);\n      }\n    },\n\n    /**\n     * Find error exceptions to be mapped for each case\n     */\n    mapError(error) {\n      const isObject = error && typeof error === 'object' && !Array.isArray(error);\n      // We have just 2 cases, so we'll set a ternary operation:\n      // - one is for when we submit a YAML edited form (object - YAMLexceptions)\n      // - other is for a string message\n      const errorMessage = isObject ? error.message || '' : error || '';\n\n      switch (true) {\n      case errorMessage.includes('violates PodSecurity'): {\n        const match = errorMessage.match(/\\\"(.*?)\\\"/gi);\n        const name = match[0];\n        const policy = match[1];\n\n        return {\n          message: `Pod ${ name } Security Policy Violation ${ policy }`,\n          icon:    'icon-pod_security'\n        };\n      }\n      default:\n        break;\n      }\n    },\n\n    /**\n     * Map all the error texts to a message and icon object\n     */\n    getErrorsMap(errors) {\n      return !errors || !Array.isArray(errors) ? {} : errors.reduce((acc, error) => ({\n        ...acc,\n        [error]: this.mapError(error) || {\n          message: error,\n          icon:    null\n        }\n      }), {});\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <form\n    v-else\n    class=\"filled-height\"\n  >\n    <CruResource\n      :validation-passed=\"fvFormIsValid\"\n      :selected-subtype=\"type\"\n      :resource=\"value\"\n      :mode=\"mode\"\n      :errors=\"fvUnreportedValidationErrors\"\n      :done-route=\"doneRoute\"\n      :subtypes=\"workloadSubTypes\"\n      :apply-hooks=\"applyHooks\"\n      :value=\"value\"\n      :errors-map=\"getErrorsMap(fvUnreportedValidationErrors)\"\n      @finish=\"save\"\n      @select-type=\"selectType\"\n      @error=\"e=>errors = e\"\n    >\n      <!-- <pre>{{ JSON.stringify(allContainers, null, 2) }}</pre> -->\n      <NameNsDescription\n        :value=\"value\"\n        :mode=\"mode\"\n        :rules=\"{name: fvGetAndReportPathRules('metadata.name'), namespace: fvGetAndReportPathRules('metadata.namespace'), description: []}\"\n        @change=\"name=value.metadata.name\"\n        @isNamespaceNew=\"isNamespaceNew = $event\"\n      />\n      <div\n        v-if=\"isCronJob || isReplicable || isStatefulSet || containerOptions.length > 1\"\n        class=\"row mb-20\"\n      >\n        <div\n          v-if=\"isCronJob\"\n          class=\"col span-3\"\n        >\n          <LabeledInput\n            v-model=\"spec.schedule\"\n            type=\"cron\"\n            required\n            :mode=\"mode\"\n            :label=\"t('workload.cronSchedule')\"\n            :rules=\"fvGetAndReportPathRules('spec.schedule')\"\n            placeholder=\"0 * * * *\"\n          />\n        </div>\n        <div\n          v-if=\"isReplicable\"\n          class=\"col span-3\"\n        >\n          <LabeledInput\n            v-model.number=\"spec.replicas\"\n            type=\"number\"\n            min=\"0\"\n            required\n            :mode=\"mode\"\n            :label=\"t('workload.replicas')\"\n          />\n        </div>\n        <div\n          v-if=\"isStatefulSet\"\n          class=\"col span-3\"\n        >\n          <LabeledSelect\n            v-model=\"spec.serviceName\"\n            option-label=\"metadata.name\"\n            :reduce=\"service=>service.metadata.name\"\n            :mode=\"mode\"\n            :label=\"t('workload.serviceName')\"\n            :options=\"headlessServices\"\n            required\n          />\n        </div>\n      </div>\n      <Tabbed\n        ref=\"containersTabbed\"\n        class=\"deployment-tabs\"\n        :show-tabs-add-remove=\"true\"\n        :default-tab=\"defaultTab\"\n        :flat=\"true\"\n        @changed=\"changed\"\n      >\n        <Tab\n          v-for=\"(tab, i) in allContainers\"\n          :key=\"tab[idKey]\"\n          :label=\"tab.name\"\n          :name=\"tab[idKey]\"\n          :weight=\"tab.weight\"\n          :error=\"!!tab.error\"\n        >\n          <Tabbed\n            :side-tabs=\"true\"\n            :weight=\"99\"\n          >\n            <Tab\n              :label=\"t('workload.container.titles.general')\"\n              name=\"general\"\n              :weight=\"tabWeightMap['general']\"\n              :error=\"tabErrors.general\"\n            >\n              <template\n                #tab-header-right\n                class=\"tab-content-controls\"\n              >\n                <button\n                  v-if=\"allContainers.length > 1 && !isView\"\n                  type=\"button\"\n                  class=\"btn-sm role-link\"\n                  @click=\"removeContainer(tab)\"\n                >\n                  {{ t('workload.container.removeContainer') }}\n                </button>\n              </template>\n              <div>\n                <div\n                  :style=\"{'align-items':'center'}\"\n                  class=\"row mb-20\"\n                >\n                  <div class=\"col span-6\">\n                    <LabeledInput\n                      v-model=\"allContainers[i].name\"\n                      :mode=\"mode\"\n                      :label=\"t('workload.container.containerName')\"\n                    />\n                  </div>\n                  <div class=\"col span-6\">\n                    <RadioGroup\n                      :mode=\"mode\"\n                      :value=\"allContainers[i]._init\"\n                      name=\"initContainer\"\n                      :options=\"[true, false]\"\n                      :labels=\"[t('workload.container.init'), t('workload.container.standard')]\"\n                      @input=\"updateInitContainer($event, allContainers[i])\"\n                    />\n                  </div>\n                </div>\n                <h3>{{ t('workload.container.titles.image') }}</h3>\n                <div class=\"row mb-20\">\n                  <div class=\"col span-6\">\n                    <LabeledInput\n                      v-model.trim=\"allContainers[i].image\"\n                      :mode=\"mode\"\n                      :label=\"t('workload.container.image')\"\n                      :placeholder=\"t('generic.placeholder', {text: 'nginx:latest'}, true)\"\n                      :rules=\"fvGetAndReportPathRules('image')\"\n                    />\n                  </div>\n                  <div class=\"col span-6\">\n                    <LabeledSelect\n                      v-model=\"allContainers[i].imagePullPolicy\"\n                      :label=\"t('workload.container.imagePullPolicy')\"\n                      :options=\"pullPolicyOptions\"\n                      :mode=\"mode\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col span-6\">\n                    <LabeledSelect\n                      v-model=\"imagePullSecrets\"\n                      :label=\"t('workload.container.imagePullSecrets')\"\n                      :multiple=\"true\"\n                      :taggable=\"true\"\n                      :options=\"imagePullNamespacedSecrets\"\n                      :mode=\"mode\"\n                      option-label=\"metadata.name\"\n                      :reduce=\"service=>service.metadata.name\"\n                      :create-option=\"createOption\"\n                    />\n                  </div>\n                </div>\n              </div>\n              <div class=\"spacer\" />\n              <div>\n                <h3>\n                  {{ t('workload.container.ports.expose') }}\n                  <i\n                    v-clean-tooltip=\"t('workload.container.ports.toolTip')\"\n                    class=\"icon icon-info\"\n                  />\n                </h3>\n                <p class=\"padded\">\n                  {{ t('workload.container.ports.description') }}\n                </p>\n                <div class=\"row\">\n                  <WorkloadPorts\n                    v-model=\"allContainers[i].ports\"\n                    :name=\"value.metadata.name\"\n                    :services=\"servicesOwned\"\n                    :mode=\"mode\"\n                  />\n                </div>\n              </div>\n              <div class=\"spacer\" />\n              <div>\n                <h3>{{ t('workload.container.titles.command') }}</h3>\n                <Command\n                  v-model=\"allContainers[i]\"\n                  :secrets=\"namespacedSecrets\"\n                  :config-maps=\"namespacedConfigMaps\"\n                  :mode=\"mode\"\n                  :loading=\"isLoadingSecondaryResources\"\n                />\n              </div>\n              <ServiceNameSelect\n                :value=\"podTemplateSpec.serviceAccountName\"\n                :mode=\"mode\"\n                :select-label=\"t('workload.serviceAccountName.label')\"\n                :select-placeholder=\"t('workload.serviceAccountName.label')\"\n                :options=\"namespacedServiceNames\"\n                option-label=\"metadata.name\"\n                :loading=\"isLoadingSecondaryResources\"\n                @input=\"updateServiceAccount\"\n              />\n              <div class=\"spacer\" />\n              <div>\n                <h3>{{ t('workload.container.titles.lifecycle') }}</h3>\n                <LifecycleHooks\n                  v-model=\"allContainers[i].lifecycle\"\n                  :mode=\"mode\"\n                />\n              </div>\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.resources')\"\n              name=\"resources\"\n              :weight=\"tabWeightMap['resources']\"\n            >\n              <!-- Resources and Limitations -->\n              <ContainerResourceLimit\n                v-model=\"flatResources\"\n                :mode=\"mode\"\n                :show-tip=\"false\"\n              />\n            </Tab>\n\n            <Tab\n              v-if=\"!allContainers[i]._init\"\n              :label=\"t('workload.container.titles.healthCheck')\"\n              name=\"healthCheck\"\n              :weight=\"tabWeightMap['healthCheck']\"\n            >\n              <HealthCheck\n                :value=\"allContainers[i]\"\n                :mode=\"mode\"\n                @input=\"Object.assign(allContainers[i], $event)\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.securityContext')\"\n              name=\"securityContext\"\n              :weight=\"tabWeightMap['securityContext']\"\n            >\n              <Security\n                v-model=\"allContainers[i].securityContext\"\n                :mode=\"mode\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.storage.title')\"\n              name=\"storage\"\n              :weight=\"tabWeightMap['storage']\"\n            >\n              <ContainerMountPaths\n                v-model=\"podTemplateSpec\"\n                :namespace=\"value.metadata.namespace\"\n                :register-before-hook=\"registerBeforeHook\"\n                :mode=\"mode\"\n                :secrets=\"namespacedSecrets\"\n                :config-maps=\"namespacedConfigMaps\"\n                :container=\"allContainers[i]\"\n                :save-pvc-hook-name=\"savePvcHookName\"\n                @removePvcForm=\"clearPvcFormState\"\n              />\n            </Tab>\n          </Tabbed>\n        </Tab>\n        <Tab\n          v-if=\"!isPod\"\n          :label=\"nameDisplayFor(type)\"\n          :name=\"nameDisplayFor(type)\"\n          :weight=\"99\"\n        >\n          <Tabbed :side-tabs=\"true\">\n            <Tab\n              name=\"labels\"\n              label-key=\"generic.labelsAndAnnotations\"\n              :weight=\"tabWeightMap['labels']\"\n            >\n              <Labels\n                v-model=\"value\"\n                :mode=\"mode\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.upgrading')\"\n              name=\"upgrading\"\n              :weight=\"tabWeightMap['upgrading']\"\n            >\n              <Job\n                v-if=\"isJob || isCronJob\"\n                v-model=\"spec\"\n                :mode=\"mode\"\n                :type=\"type\"\n              />\n              <Upgrading\n                v-else\n                v-model=\"spec\"\n                :mode=\"mode\"\n                :type=\"type\"\n                :no-pod-spec=\"true\"\n              />\n            </Tab>\n          </Tabbed>\n        </Tab>\n        <Tab\n          :label=\"t('workload.tabs.labels.pod')\"\n          :name=\"'pod'\"\n          :weight=\"98\"\n        >\n          <Tabbed :side-tabs=\"true\">\n            <Tab\n              :label=\"t('workload.storage.title')\"\n              name=\"storage\"\n              :weight=\"tabWeightMap['storage']\"\n            >\n              <Storage\n                v-model=\"podTemplateSpec\"\n                :namespace=\"value.metadata.namespace\"\n                :register-before-hook=\"registerBeforeHook\"\n                :mode=\"mode\"\n                :secrets=\"namespacedSecrets\"\n                :config-maps=\"namespacedConfigMaps\"\n                :save-pvc-hook-name=\"savePvcHookName\"\n                :loading=\"isLoadingSecondaryResources\"\n                :namespaced-pvcs=\"pvcs\"\n                @removePvcForm=\"clearPvcFormState\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.resources')\"\n              name=\"resources\"\n              :weight=\"tabWeightMap['resources']\"\n            >\n              <template>\n                <div>\n                  <h3 class=\"mb-10\">\n                    <t k=\"workload.scheduling.titles.tolerations\" />\n                  </h3>\n                  <div class=\"row\">\n                    <Tolerations\n                      v-model=\"podTemplateSpec.tolerations\"\n                      :mode=\"mode\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <div class=\"spacer\" />\n                  <h3 class=\"mb-10\">\n                    <t k=\"workload.scheduling.titles.priority\" />\n                  </h3>\n                  <div class=\"row\">\n                    <div class=\"col span-6\">\n                      <LabeledInput\n                        v-model.number=\"podTemplateSpec.priority\"\n                        :mode=\"mode\"\n                        :label=\"t('workload.scheduling.priority.priority')\"\n                      />\n                    </div>\n                    <div class=\"col span-6\">\n                      <LabeledInput\n                        v-model=\"podTemplateSpec.priorityClassName\"\n                        :mode=\"mode\"\n                        :label=\"t('workload.scheduling.priority.className')\"\n                      />\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.podScheduling')\"\n              name=\"podScheduling\"\n              :weight=\"tabWeightMap['podScheduling']\"\n            >\n              <PodAffinity\n                :mode=\"mode\"\n                :value=\"podTemplateSpec\"\n                :nodes=\"allNodeObjects\"\n                :loading=\"isLoadingSecondaryResources\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.nodeScheduling')\"\n              name=\"nodeScheduling\"\n              :weight=\"tabWeightMap['nodeScheduling']\"\n            >\n              <NodeScheduling\n                :mode=\"mode\"\n                :value=\"podTemplateSpec\"\n                :nodes=\"allNodes\"\n                :loading=\"isLoadingSecondaryResources\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.upgrading')\"\n              name=\"upgrading\"\n              :weight=\"tabWeightMap['upgrading']\"\n            >\n              <Job\n                v-if=\"isJob || isCronJob\"\n                v-model=\"spec\"\n                :mode=\"mode\"\n                :type=\"type\"\n              />\n              <Upgrading\n                v-else\n                v-model=\"spec\"\n                :mode=\"mode\"\n                :type=\"type\"\n                :no-deployment-spec=\"true\"\n              />\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.securityContext')\"\n              name=\"securityContext\"\n              :weight=\"tabWeightMap['securityContext']\"\n            >\n              <div>\n                <h3>{{ t('workload.container.security.podFsGroup') }}</h3>\n                <div class=\"row\">\n                  <div class=\"col span-6\">\n                    <LabeledInput\n                      v-model.number=\"podFsGroup\"\n                      type=\"number\"\n                      :mode=\"mode\"\n                      :label=\"t('workload.container.security.fsGroup')\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </Tab>\n            <Tab\n              :label=\"t('workload.container.titles.networking')\"\n              name=\"networking\"\n              :weight=\"tabWeightMap['networking']\"\n            >\n              <Networking\n                v-model=\"podTemplateSpec\"\n                :mode=\"mode\"\n              />\n            </Tab>\n            <Tab\n              v-if=\"isStatefulSet\"\n              :label=\"t('workload.container.titles.volumeClaimTemplates')\"\n              name=\"volumeClaimTemplates\"\n              :weight=\"tabWeightMap['volumeClaimTemplates']\"\n            >\n              <VolumeClaimTemplate\n                v-model=\"spec\"\n                :mode=\"mode\"\n              />\n            </Tab>\n            <Tab\n              name=\"labels\"\n              label-key=\"generic.labelsAndAnnotations\"\n              :weight=\"tabWeightMap['labels']\"\n            >\n              <div>\n                <h3>{{ t('workload.container.titles.podLabels') }}</h3>\n                <div class=\"row mb-20\">\n                  <KeyValue\n                    key=\"labels\"\n                    v-model=\"podLabels\"\n                    :add-label=\"t('labels.addLabel')\"\n                    :mode=\"mode\"\n                    :read-allowed=\"false\"\n                    :protip=\"false\"\n                  />\n                </div>\n                <div class=\"spacer\" />\n                <h3>{{ t('workload.container.titles.podAnnotations') }}</h3>\n                <div class=\"row\">\n                  <KeyValue\n                    key=\"annotations\"\n                    v-model=\"podAnnotations\"\n                    :add-label=\"t('labels.addAnnotation')\"\n                    :mode=\"mode\"\n                    :read-allowed=\"false\"\n                    :protip=\"false\"\n                  />\n                </div>\n              </div>\n            </Tab>\n          </Tabbed>\n        </Tab>\n        <template #tab-row-extras>\n          <li class=\"tablist-controls\">\n            <button\n              v-if=\"!isView\"\n              type=\"button\"\n              class=\"btn-sm role-link\"\n              @click=\"addContainerBtn\"\n            >\n              <i class=\"icon icon-plus pr-5\" /> {{ t('workload.container.addContainer') }}\n            </button>\n          </li>\n        </template>\n      </Tabbed>\n    </CruResource>\n  </form>\n</template>\n\n<style lang='scss'>\n.container-row {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.type-placeholder {\n  color: white;\n  font-size: 2.5em;\n  height: 100%;\n  width: 100%;\n  background-color: var(--primary);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.type-description {\n  color: var(--input-label);\n}\n\n.next-dropdown {\n  display: inline-block;\n}\n\n.tab-external-controls {\n  display: flex;\n  justify-content: right;\n}\n\n.tab-content-controls {\n  display: flex;\n  justify-content: right;\n}\n\n.tablist-controls {\n  .role-link {\n    padding: 10px 15px;\n    min-height: unset;\n    line-height: unset;\n\n    &:focus {\n      background: none;\n      box-shadow: none;\n    }\n\n    &:hover {\n      border: none;\n    }\n  }\n\n}\n\n.deployment-tabs {\n  > .tabs.horizontal {\n    border-bottom: 1px solid var(--border);\n    margin-bottom: 10px;\n  }\n}\n.padded {\n  padding-bottom: 10px;\n}\n</style>\n"]}]}