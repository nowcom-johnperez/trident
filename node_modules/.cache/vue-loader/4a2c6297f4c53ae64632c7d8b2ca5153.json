{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/fleet.cattle.io.cluster.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/fleet.cattle.io.cluster.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgUmVzb3VyY2VzU3VtbWFyeSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mbGVldC9SZXNvdXJjZXNTdW1tYXJ5JzsKaW1wb3J0IEZsZWV0UmVwb3MgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZmxlZXQvRmxlZXRSZXBvcyc7CmltcG9ydCBSZXNvdXJjZVRhYnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9SZXNvdXJjZVRhYnMnOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWInOwppbXBvcnQgeyBNQU5BR0VNRU5ULCBGTEVFVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBGTEVFVCBhcyBGTEVFVF9MQUJFTFMgfSBmcm9tICdAc2hlbGwvY29uZmlnL2xhYmVscy1hbm5vdGF0aW9ucyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0RldGFpbENsdXN0ZXInLAoKICBjb21wb25lbnRzOiB7CiAgICBMb2FkaW5nLAogICAgUmVzb3VyY2VzU3VtbWFyeSwKICAgIEZsZWV0UmVwb3MsCiAgICBSZXNvdXJjZVRhYnMsCiAgICBUYWIsCiAgfSwKCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgICBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGNvbnN0IGNsdXN0ZXJJZCA9IHRoaXMudmFsdWU/Lm1ldGFkYXRhPy5sYWJlbHNbRkxFRVRfTEFCRUxTLkNMVVNURVJfTkFNRV07CgogICAgdGhpcy5yYW5jaGVyQ2x1c3RlciA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmQnLCB7CiAgICAgIHR5cGU6IE1BTkFHRU1FTlQuQ0xVU1RFUiwKICAgICAgaWQ6ICAgY2x1c3RlcklkCiAgICB9KTsKCiAgICB0aGlzLmFsbFJlcG9zID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsgdHlwZTogRkxFRVQuR0lUX1JFUE8gfSk7CgogICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsgdHlwZTogRkxFRVQuV09SS1NQQUNFIH0pOwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4geyByYW5jaGVyQ2x1c3RlcjogbnVsbCwgYWxsUmVwb3M6IFtdIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIHJlcG9zKCkgewogICAgICByZXR1cm4gdGhpcy5hbGxSZXBvcy5maWx0ZXIoKHgpID0+IHsKICAgICAgICByZXR1cm4geC50YXJnZXRDbHVzdGVycy5pbmNsdWRlcyh0aGlzLnZhbHVlKTsKICAgICAgfSk7CiAgICB9LAoKICAgIHJlcG9TY2hlbWEoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L3NjaGVtYUZvciddKEZMRUVULkdJVF9SRVBPKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["fleet.cattle.io.cluster.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"fleet.cattle.io.cluster.vue","sourceRoot":"node_modules/@rancher/shell/detail","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport ResourcesSummary from '@shell/components/fleet/ResourcesSummary';\nimport FleetRepos from '@shell/components/fleet/FleetRepos';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { MANAGEMENT, FLEET } from '@shell/config/types';\nimport { FLEET as FLEET_LABELS } from '@shell/config/labels-annotations';\n\nexport default {\n  name: 'DetailCluster',\n\n  components: {\n    Loading,\n    ResourcesSummary,\n    FleetRepos,\n    ResourceTabs,\n    Tab,\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    const clusterId = this.value?.metadata?.labels[FLEET_LABELS.CLUSTER_NAME];\n\n    this.rancherCluster = await this.$store.dispatch('management/find', {\n      type: MANAGEMENT.CLUSTER,\n      id:   clusterId\n    });\n\n    this.allRepos = await this.$store.dispatch('management/findAll', { type: FLEET.GIT_REPO });\n\n    await this.$store.dispatch('management/findAll', { type: FLEET.WORKSPACE });\n  },\n\n  data() {\n    return { rancherCluster: null, allRepos: [] };\n  },\n\n  computed: {\n    repos() {\n      return this.allRepos.filter((x) => {\n        return x.targetClusters.includes(this.value);\n      });\n    },\n\n    repoSchema() {\n      return this.$store.getters['management/schemaFor'](FLEET.GIT_REPO);\n    },\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <h2\n      v-t=\"'fleet.cluster.summary'\"\n      class=\"mt-20\"\n    />\n    <ResourcesSummary :value=\"value.status.resourceCounts\" />\n\n    <ResourceTabs\n      v-model=\"value\"\n      mode=\"view\"\n      class=\"mt-20\"\n    >\n      <Tab\n        label=\"Git Repos\"\n        name=\"repos\"\n        :weight=\"19\"\n      >\n        <FleetRepos\n          :rows=\"repos\"\n          :schema=\"repoSchema\"\n          :paging=\"true\"\n          paging-label=\"sortableTable.paging.resource\"\n        />\n      </Tab>\n    </ResourceTabs>\n  </div>\n</template>\n"]}]}