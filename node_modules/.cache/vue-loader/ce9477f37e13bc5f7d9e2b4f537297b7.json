{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/RulePath.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/RulePath.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBJbnB1dFdpdGhTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9JbnB1dFdpdGhTZWxlY3QnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9TZWxlY3QnOwppbXBvcnQgeyBnZXQsIHNldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgZGVib3VuY2UgZnJvbSAnbG9kYXNoL2RlYm91bmNlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBJbnB1dFdpdGhTZWxlY3QsIExhYmVsZWRJbnB1dCwgU2VsZWN0CiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgc2VydmljZVRhcmdldHM6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgaW5ncmVzczogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHJ1bGVzOiB7CiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7CiAgICAgICAgcGF0aDogICBbXSwKICAgICAgICBwb3J0OiAgIFtdLAogICAgICAgIHRhcmdldDogW10KICAgICAgfSksCiAgICAgIHR5cGU6IE9iamVjdCwKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICBjb25zdCBwYXRoVHlwZXMgPSBbCiAgICAgICdQcmVmaXgnLAogICAgICAnRXhhY3QnLAogICAgICAnSW1wbGVtZW50YXRpb25TcGVjaWZpYycKICAgIF07CgogICAgc2V0KHRoaXMudmFsdWUsICdiYWNrZW5kJywgdGhpcy52YWx1ZS5iYWNrZW5kIHx8IHt9KTsKICAgIHNldCh0aGlzLnZhbHVlLCAncGF0aCcsIHRoaXMudmFsdWUucGF0aCB8fCAnJyk7CiAgICBzZXQodGhpcy52YWx1ZSwgJ3BhdGhUeXBlJywgdGhpcy52YWx1ZS5wYXRoVHlwZSB8fCBwYXRoVHlwZXNbMF0pOwogICAgc2V0KHRoaXMudmFsdWUuYmFja2VuZCwgdGhpcy5pbmdyZXNzLnNlcnZpY2VOYW1lUGF0aCwgZ2V0KHRoaXMudmFsdWUuYmFja2VuZCwgdGhpcy5pbmdyZXNzLnNlcnZpY2VOYW1lUGF0aCkgfHwgJycpOwogICAgc2V0KHRoaXMudmFsdWUuYmFja2VuZCwgdGhpcy5pbmdyZXNzLnNlcnZpY2VQb3J0UGF0aCwgZ2V0KHRoaXMudmFsdWUuYmFja2VuZCwgdGhpcy5pbmdyZXNzLnNlcnZpY2VQb3J0UGF0aCkgfHwgJycpOwoKICAgIGNvbnN0IHNlcnZpY2VOYW1lID0gZ2V0KHRoaXMudmFsdWUuYmFja2VuZCwgdGhpcy5pbmdyZXNzLnNlcnZpY2VOYW1lUGF0aCk7CiAgICBjb25zdCBzZXJ2aWNlUG9ydCA9IGdldCh0aGlzLnZhbHVlLmJhY2tlbmQsIHRoaXMuaW5ncmVzcy5zZXJ2aWNlUG9ydFBhdGgpOwoKICAgIHJldHVybiB7CiAgICAgIHBhdGhUeXBlcywgc2VydmljZU5hbWUsIHNlcnZpY2VQb3J0LCBwYXRoVHlwZTogdGhpcy52YWx1ZS5wYXRoVHlwZSwgcGF0aDogdGhpcy52YWx1ZS5wYXRoCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHBvcnRPcHRpb25zKCkgewogICAgICBjb25zdCBzZXJ2aWNlID0gdGhpcy5zZXJ2aWNlVGFyZ2V0cy5maW5kKChzKSA9PiBzLmxhYmVsID09PSB0aGlzLnNlcnZpY2VOYW1lKTsKCiAgICAgIHJldHVybiBzZXJ2aWNlPy5wb3J0cyB8fCBbXTsKICAgIH0sCiAgICBzZXJ2aWNlVGFyZ2V0U3RhdHVzKCkgewogICAgICBjb25zdCBzZXJ2aWNlTmFtZSA9IHRoaXMuc2VydmljZU5hbWU/LmxhYmVsIHx8IHRoaXMuc2VydmljZU5hbWU7CiAgICAgIGNvbnN0IGlzVmFsdWVBbk9wdGlvbiA9ICFzZXJ2aWNlTmFtZSB8fCB0aGlzLnNlcnZpY2VUYXJnZXRzLmZpbmQoKHRhcmdldCkgPT4gc2VydmljZU5hbWUgPT09IHRhcmdldC52YWx1ZSk7CgogICAgICByZXR1cm4gaXNWYWx1ZUFuT3B0aW9uID8gbnVsbCA6ICd3YXJuaW5nJzsKICAgIH0sCiAgICBzZXJ2aWNlVGFyZ2V0VG9vbHRpcCgpIHsKICAgICAgaWYgKHRoaXMuc2VydmljZVRhcmdldFN0YXR1cyA9PT0gJ3dhcm5pbmcnICkgewogICAgICAgIHJldHVybiB0aGlzLnQoJ2luZ3Jlc3MucnVsZXMudGFyZ2V0LmRvZXNudEV4aXN0Jyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnQoJ2luZ3Jlc3MucnVsZXMudGFyZ2V0LnRvb2x0aXAnKTsKICAgIH0sCiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5xdWV1ZVVwZGF0ZSA9IGRlYm91bmNlKHRoaXMudXBkYXRlLCA1MDApOwogICAgdGhpcy5xdWV1ZVVwZGF0ZVBhdGhUeXBlQW5kUGF0aCA9IGRlYm91bmNlKHRoaXMudXBkYXRlUGF0aFR5cGVBbmRQYXRoLCA1MDApOwogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlKCkgewogICAgICBjb25zdCBzZXJ2aWNlUG9ydCA9IE51bWJlci5wYXJzZUludCh0aGlzLnNlcnZpY2VQb3J0KSB8fCB0aGlzLnNlcnZpY2VQb3J0OwogICAgICBjb25zdCBzZXJ2aWNlTmFtZSA9IHRoaXMuc2VydmljZU5hbWUubGFiZWwgfHwgdGhpcy5zZXJ2aWNlTmFtZTsKICAgICAgY29uc3Qgb3V0ID0gewogICAgICAgIGlkOiB0aGlzLnZhbHVlLmlkLCBiYWNrZW5kOiB7fSwgcGF0aDogdGhpcy5wYXRoLCBwYXRoVHlwZTogdGhpcy5wYXRoVHlwZQogICAgICB9OwoKICAgICAgc2V0KG91dC5iYWNrZW5kLCB0aGlzLmluZ3Jlc3Muc2VydmljZVBvcnRQYXRoLCBzZXJ2aWNlUG9ydCk7CiAgICAgIHNldChvdXQuYmFja2VuZCwgdGhpcy5pbmdyZXNzLnNlcnZpY2VOYW1lUGF0aCwgc2VydmljZU5hbWUpOwoKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBvdXQpOwogICAgfSwKICAgIHVwZGF0ZVBhdGhUeXBlQW5kUGF0aCh2YWx1ZXMpIHsKICAgICAgdGhpcy5wYXRoID0gdmFsdWVzLnRleHQ7CiAgICAgIHRoaXMucGF0aFR5cGUgPSB2YWx1ZXMuc2VsZWN0ZWQ7CiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9LAogICAgZm9jdXMoKSB7CiAgICAgIHRoaXMuJHJlZnMuZmlyc3QuZm9jdXMoKTsKICAgIH0sCiAgICByZW1vdmUoZXYpIHsKICAgICAgZXYucHJldmVudERlZmF1bHQoKTsKICAgICAgdGhpcy4kZW1pdCgncmVtb3ZlJyk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["RulePath.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RulePath.vue","sourceRoot":"node_modules/@rancher/shell/edit/networking.k8s.io.ingress","sourcesContent":["<script>\nimport InputWithSelect from '@shell/components/form/InputWithSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Select from '@shell/components/form/Select';\nimport { get, set } from '@shell/utils/object';\nimport debounce from 'lodash/debounce';\n\nexport default {\n  components: {\n    InputWithSelect, LabeledInput, Select\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    serviceTargets: {\n      type:    Array,\n      default: () => []\n    },\n    ingress: {\n      type:     Object,\n      required: true\n    },\n    rules: {\n      default: () => ({\n        path:   [],\n        port:   [],\n        target: []\n      }),\n      type: Object,\n    }\n  },\n  data() {\n    const pathTypes = [\n      'Prefix',\n      'Exact',\n      'ImplementationSpecific'\n    ];\n\n    set(this.value, 'backend', this.value.backend || {});\n    set(this.value, 'path', this.value.path || '');\n    set(this.value, 'pathType', this.value.pathType || pathTypes[0]);\n    set(this.value.backend, this.ingress.serviceNamePath, get(this.value.backend, this.ingress.serviceNamePath) || '');\n    set(this.value.backend, this.ingress.servicePortPath, get(this.value.backend, this.ingress.servicePortPath) || '');\n\n    const serviceName = get(this.value.backend, this.ingress.serviceNamePath);\n    const servicePort = get(this.value.backend, this.ingress.servicePortPath);\n\n    return {\n      pathTypes, serviceName, servicePort, pathType: this.value.pathType, path: this.value.path\n    };\n  },\n  computed: {\n    portOptions() {\n      const service = this.serviceTargets.find((s) => s.label === this.serviceName);\n\n      return service?.ports || [];\n    },\n    serviceTargetStatus() {\n      const serviceName = this.serviceName?.label || this.serviceName;\n      const isValueAnOption = !serviceName || this.serviceTargets.find((target) => serviceName === target.value);\n\n      return isValueAnOption ? null : 'warning';\n    },\n    serviceTargetTooltip() {\n      if (this.serviceTargetStatus === 'warning' ) {\n        return this.t('ingress.rules.target.doesntExist');\n      }\n\n      return this.t('ingress.rules.target.tooltip');\n    },\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n    this.queueUpdatePathTypeAndPath = debounce(this.updatePathTypeAndPath, 500);\n  },\n  methods: {\n    update() {\n      const servicePort = Number.parseInt(this.servicePort) || this.servicePort;\n      const serviceName = this.serviceName.label || this.serviceName;\n      const out = {\n        id: this.value.id, backend: {}, path: this.path, pathType: this.pathType\n      };\n\n      set(out.backend, this.ingress.servicePortPath, servicePort);\n      set(out.backend, this.ingress.serviceNamePath, serviceName);\n\n      this.$emit('input', out);\n    },\n    updatePathTypeAndPath(values) {\n      this.path = values.text;\n      this.pathType = values.selected;\n      this.update();\n    },\n    focus() {\n      this.$refs.first.focus();\n    },\n    remove(ev) {\n      ev.preventDefault();\n      this.$emit('remove');\n    }\n  }\n};\n</script>\n<template>\n  <div class=\"rule-path row\">\n    <div\n      v-if=\"ingress.showPathType\"\n      class=\"col span-6\"\n    >\n      <InputWithSelect\n        ref=\"first\"\n        class=\"path-type\"\n        :options=\"pathTypes\"\n        :placeholder=\"t('ingress.rules.path.placeholder', undefined, true)\"\n        :select-value=\"value.pathType\"\n        :text-value=\"value.path\"\n        :searchable=\"false\"\n        :text-rules=\"rules.path\"\n        @input=\"queueUpdatePathTypeAndPath\"\n      />\n    </div>\n    <div\n      v-else\n      class=\"col span-4\"\n    >\n      <input\n        ref=\"first\"\n        v-model=\"path\"\n        :placeholder=\"t('ingress.rules.path.placeholder', undefined, true)\"\n        @input=\"queueUpdate\"\n      >\n    </div>\n    <div\n      class=\"col\"\n      :class=\"{'span-3': ingress.showPathType, 'span-4': !ingress.showPathType}\"\n    >\n      <Select\n        v-model=\"serviceName\"\n        :options=\"serviceTargets\"\n        :status=\"serviceTargetStatus\"\n        :taggable=\"true\"\n        :searchable=\"true\"\n        :tooltip=\"serviceTargetTooltip\"\n        :hover-tooltip=\"true\"\n        @input=\"servicePort = ''; queueUpdate();\"\n      />\n    </div>\n    <div\n      class=\"col\"\n      :class=\"{'span-2': ingress.showPathType, 'span-3': !ingress.showPathType}\"\n      :style=\"{'margin-right': '0px'}\"\n    >\n      <LabeledInput\n        v-if=\"portOptions.length === 0\"\n        v-model=\"servicePort\"\n        class=\"fullHeightInput\"\n        :placeholder=\"t('ingress.rules.port.placeholder')\"\n        :rules=\"rules.port\"\n        @input=\"queueUpdate\"\n      />\n      <Select\n        v-else\n        v-model=\"servicePort\"\n        :options=\"portOptions\"\n        :placeholder=\"t('ingress.rules.port.placeholder')\"\n        :rules=\"rules.port\"\n        @input=\"queueUpdate\"\n      />\n    </div>\n    <button\n      class=\"btn btn-sm role-link col\"\n      @click=\"remove\"\n    >\n      {{ t('ingress.rules.removePath') }}\n    </button>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n$row-height: 40px;\n\n.labeled-input ::v-deep, ::v-deep .labeled-input {\n  padding: 0 !important;\n  height: 100%;\n  input.no-label {\n    height: calc($row-height - 2px);\n    padding: 10px;\n  }\n}\n.rule-path ::v-deep {\n  .col, INPUT {\n    height: $row-height;\n  }\n\n  .unlabeled-select {\n    height: 100%;\n  }\n\n  .path-type {\n    .unlabeled-select {\n      min-width: 200px;\n    }\n  }\n\n  &, .input-container {\n    height: $row-height;\n  }\n\n  .input-container .in-input.unlabeled-select {\n    width: initial;\n  }\n\n  button {\n    line-height: $row-height;\n  }\n\n  .v-select INPUT {\n    height: 50px;\n  }\n  .labeled-input {\n    padding-top: 6px;\n  }\n}\n</style>\n"]}]}