{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/fleet/FleetStatus.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/fleet/FleetStatus.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHNvcnRCeSB9IGZyb20gJ0BzaGVsbC91dGlscy9zb3J0JzsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IHN0YXRlU29ydCB9IGZyb20gJ0BzaGVsbC9wbHVnaW5zL2Rhc2hib2FyZC1zdG9yZS9yZXNvdXJjZS1jbGFzcyc7CgpleHBvcnQgZGVmYXVsdCB7CgogIG5hbWU6ICdGbGVldFN0YXR1cycsCgogIHByb3BzOiB7CiAgICB2YWx1ZXM6IHsKICAgICAgdHlwZTogICAgIEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICBjb2xvcktleTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdjb2xvcicsCiAgICB9LAogICAgbGFiZWxLZXk6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnbGFiZWwnLAogICAgfSwKICAgIHZhbHVlS2V5OiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ3ZhbHVlJywKICAgIH0sCiAgICBtaW46IHsKICAgICAgdHlwZTogICAgTnVtYmVyLAogICAgICBkZWZhdWx0OiAwCiAgICB9LAogICAgbWF4OiB7CiAgICAgIHR5cGU6ICAgIE51bWJlciwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCiAgICBtaW5QZXJjZW50OiB7CiAgICAgIHR5cGU6ICAgIE51bWJlciwKICAgICAgZGVmYXVsdDogNSwKICAgIH0sCiAgICBzaG93WmVyb3M6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAoKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ1Jlc291cmNlcycKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgbWV0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0b3RhbDogICAgICB0aGlzLnZhbHVlcy5tYXAoKHgpID0+IHgudmFsdWUpLnJlZHVjZSgoYSwgYikgPT4gYSArIGIpLAogICAgICAgIHJlYWR5Q291bnQ6IHRoaXMudmFsdWVzLmZpbHRlcigoeCkgPT4geC5sYWJlbCA9PT0gJ1N1Y2Nlc3MnIHx8IHgubGFiZWwgPT09ICdSZWFkeScpLm1hcCgoeCkgPT4geC52YWx1ZSkucmVkdWNlKChhLCBiKSA9PiBhICsgYikKICAgICAgfTsKICAgIH0sCgogICAgcGllY2VzKCkgewogICAgICBsZXQgb3V0ID0gWy4uLnRoaXMudmFsdWVzXS5yZWR1Y2UoKHByZXYsIG9iaikgPT4gewogICAgICAgIGNvbnN0IGNvbG9yID0gZ2V0KG9iaiwgdGhpcy5jb2xvcktleSk7CiAgICAgICAgY29uc3QgbGFiZWwgPSBnZXQob2JqLCB0aGlzLmxhYmVsS2V5KTsKICAgICAgICBjb25zdCB2YWx1ZSA9IGdldChvYmosIHRoaXMudmFsdWVLZXkpOwoKICAgICAgICBpZiAoIG9ialt0aGlzLnZhbHVlS2V5XSA9PT0gMCAmJiAhdGhpcy5zaG93WmVyb3MpIHsKICAgICAgICAgIHJldHVybiBwcmV2OwogICAgICAgIH0KCiAgICAgICAgcHJldi5wdXNoKHsKICAgICAgICAgIGNvbG9yLAogICAgICAgICAgbGFiZWwsCiAgICAgICAgICB2YWx1ZSwKICAgICAgICAgIHNvcnQ6IHN0YXRlU29ydChjb2xvciksCiAgICAgICAgfSk7CgogICAgICAgIHJldHVybiBwcmV2OwogICAgICB9LCBbXSk7CgogICAgICBjb25zdCBtaW5QZXJjZW50ID0gdGhpcy5taW5QZXJjZW50IHx8IDA7CiAgICAgIGNvbnN0IG1pbiA9IHRoaXMubWluIHx8IDA7CiAgICAgIGxldCBtYXggPSB0aGlzLm1heDsKICAgICAgbGV0IHN1bSA9IDA7CgogICAgICBpZiAoICF0aGlzLm1heCApIHsKICAgICAgICBtYXggPSAxMDA7CiAgICAgICAgaWYgKCBvdXQubGVuZ3RoICkgewogICAgICAgICAgbWF4ID0gb3V0Lm1hcCgoeCkgPT4geC52YWx1ZSkucmVkdWNlKChhLCBiKSA9PiBhICsgYik7CiAgICAgICAgfQogICAgICB9CgogICAgICBvdXQgPSB0aGlzLnZhbHVlcy5tYXAoKG9iaikgPT4gewogICAgICAgIGlmIChvYmoudmFsdWUgPT09IDAgKSB7CiAgICAgICAgICBvYmoucGVyY2VudCA9IDA7CgogICAgICAgICAgcmV0dXJuIG9iajsKICAgICAgICB9CiAgICAgICAgY29uc3QgcGVyY2VudCA9IE1hdGgubWF4KG1pblBlcmNlbnQsIHRvUGVyY2VudChvYmoudmFsdWUsIG1pbiwgbWF4KSk7CgogICAgICAgIG9iai5wZXJjZW50ID0gcGVyY2VudDsKICAgICAgICBzdW0gKz0gcGVyY2VudDsKCiAgICAgICAgcmV0dXJuIG9iajsKICAgICAgfSk7CgogICAgICAvLyBJZiB0aGUgc3VtIGlzIGJpZ2dlciB0aGFuIDEwMCUsIHRha2UgaXQgb3V0IG9mIHRoZSBiaWdnZXN0IHBpZWNlCiAgICAgIGlmICggc3VtID4gMTAwICkgewogICAgICAgIHNvcnRCeShvdXQsICdwZXJjZW50JywgdHJ1ZSlbMF0ucGVyY2VudCAtPSBzdW0gLSAxMDA7CiAgICAgIH0KCiAgICAgIG91dCA9IHRoaXMudmFsdWVzLm1hcCgob2JqKSA9PiB7CiAgICAgICAgb2JqLnN0eWxlID0gYHdpZHRoOiAkeyBvYmoucGVyY2VudCB9JTsgYmFja2dyb3VuZDogdmFyKC0tJHsgb2JqLmNvbG9yIH0pYDsKCiAgICAgICAgcmV0dXJuIG9iajsKICAgICAgfSk7CgogICAgICByZXR1cm4gWy4uLm91dF0uZmlsdGVyKChvYmopID0+IG9iai5wZXJjZW50KTsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgc2hvd01lbnUoc2hvdykgewogICAgICBpZiAodGhpcy4kcmVmcy5wb3BvdmVyKSB7CiAgICAgICAgaWYgKHNob3cpIHsKICAgICAgICAgIHRoaXMuJHJlZnMucG9wb3Zlci5zaG93KCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJHJlZnMucG9wb3Zlci5oaWRlKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogIH0KfTsKCmZ1bmN0aW9uIHRvUGVyY2VudCh2YWx1ZSwgbWluLCBtYXgpIHsKICB2YWx1ZSA9IE1hdGgubWF4KG1pbiwgTWF0aC5taW4obWF4LCB2YWx1ZSkpOwogIGxldCBwZXIgPSB2YWx1ZSAvIChtYXggLSBtaW4pICogMTAwOyAvLyBQZXJjZW50IDAtMTAwCgogIHBlciA9IE1hdGguZmxvb3IocGVyICogMTAwKSAvIDEwMDsgLy8gUm91bmQgdG8gMiBkZWNpbWFsIHBsYWNlcwoKICByZXR1cm4gcGVyOwp9Cgo="},{"version":3,"sources":["FleetStatus.vue"],"names":[],"mappingsfile":"FleetStatus.vue","sourceRoot":"node_modules/@rancher/shell/components/fleet","sourcesContent":["<script>\nimport { sortBy } from '@shell/utils/sort';\nimport { get } from '@shell/utils/object';\nimport { stateSort } from '@shell/plugins/dashboard-store/resource-class';\n\nexport default {\n\n  name: 'FleetStatus',\n\n  props: {\n    values: {\n      type:     Array,\n      required: true,\n    },\n    colorKey: {\n      type:    String,\n      default: 'color',\n    },\n    labelKey: {\n      type:    String,\n      default: 'label',\n    },\n    valueKey: {\n      type:    String,\n      default: 'value',\n    },\n    min: {\n      type:    Number,\n      default: 0\n    },\n    max: {\n      type:    Number,\n      default: null,\n    },\n    minPercent: {\n      type:    Number,\n      default: 5,\n    },\n    showZeros: {\n      type:    Boolean,\n      default: false,\n    },\n\n    title: {\n      type:    String,\n      default: 'Resources'\n    }\n  },\n\n  computed: {\n    meta() {\n      return {\n        total:      this.values.map((x) => x.value).reduce((a, b) => a + b),\n        readyCount: this.values.filter((x) => x.label === 'Success' || x.label === 'Ready').map((x) => x.value).reduce((a, b) => a + b)\n      };\n    },\n\n    pieces() {\n      let out = [...this.values].reduce((prev, obj) => {\n        const color = get(obj, this.colorKey);\n        const label = get(obj, this.labelKey);\n        const value = get(obj, this.valueKey);\n\n        if ( obj[this.valueKey] === 0 && !this.showZeros) {\n          return prev;\n        }\n\n        prev.push({\n          color,\n          label,\n          value,\n          sort: stateSort(color),\n        });\n\n        return prev;\n      }, []);\n\n      const minPercent = this.minPercent || 0;\n      const min = this.min || 0;\n      let max = this.max;\n      let sum = 0;\n\n      if ( !this.max ) {\n        max = 100;\n        if ( out.length ) {\n          max = out.map((x) => x.value).reduce((a, b) => a + b);\n        }\n      }\n\n      out = this.values.map((obj) => {\n        if (obj.value === 0 ) {\n          obj.percent = 0;\n\n          return obj;\n        }\n        const percent = Math.max(minPercent, toPercent(obj.value, min, max));\n\n        obj.percent = percent;\n        sum += percent;\n\n        return obj;\n      });\n\n      // If the sum is bigger than 100%, take it out of the biggest piece\n      if ( sum > 100 ) {\n        sortBy(out, 'percent', true)[0].percent -= sum - 100;\n      }\n\n      out = this.values.map((obj) => {\n        obj.style = `width: ${ obj.percent }%; background: var(--${ obj.color })`;\n\n        return obj;\n      });\n\n      return [...out].filter((obj) => obj.percent);\n    },\n  },\n\n  methods: {\n    showMenu(show) {\n      if (this.$refs.popover) {\n        if (show) {\n          this.$refs.popover.show();\n        } else {\n          this.$refs.popover.hide();\n        }\n      }\n    },\n  }\n};\n\nfunction toPercent(value, min, max) {\n  value = Math.max(min, Math.min(max, value));\n  let per = value / (max - min) * 100; // Percent 0-100\n\n  per = Math.floor(per * 100) / 100; // Round to 2 decimal places\n\n  return per;\n}\n\n</script>\n<template>\n  <div class=\"fleet-status\">\n    <div class=\"count\">\n      {{ meta.total }}\n    </div>\n    <div class=\"progress-container\">\n      <div class=\"header\">\n        <div class=\"title\">\n          {{ title }}\n        </div>\n        <div\n          class=\"dropdwon resources-dropdown\"\n          tabindex=\"0\"\n          @blur=\"showMenu(false)\"\n          @click=\"showMenu(true)\"\n          @focus.capture=\"showMenu(true)\"\n        >\n          <v-popover\n            ref=\"popover\"\n            placement=\"bottom-end\"\n            offset=\"-10\"\n            trigger=\"manual\"\n            :delay=\"{show: 0, hide: 0}\"\n            :popper-options=\"{modifiers: { flip: { enabled: false } } }\"\n            :container=\"false\"\n          >\n            <div class=\"meta-title\">\n              {{ meta.readyCount }} / {{ meta.total }} {{ title }} ready <i class=\"icon toggle icon-chevron-down\" />\n            </div>\n            <template\n              slot=\"popover\"\n              class=\"resources-status-list\"\n            >\n              <ul\n                class=\"list-unstyled dropdown\"\n                @click.stop=\"showMenu(false)\"\n              >\n                <li\n                  v-for=\"(val, idx) in values\"\n                  :key=\"idx\"\n                >\n                  <span>{{ val.label }}</span><span class=\"list-count\">{{ val.count }}</span>\n                </li>\n              </ul>\n            </template>\n          </v-popover>\n        </div>\n      </div>\n      <div\n        v-trim-whitespace\n        :class=\"{progress: true, multi: pieces.length > 1}\"\n      >\n        <div\n          v-for=\"(piece, idx) of pieces\"\n          :key=\"idx\"\n          v-trim-whitespace\n          :primary-color-var=\"piece.color\"\n          :class=\"{'piece': true, [piece.color]: true}\"\n          :style=\"piece.style\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $progress-divider-width: 1px;\n  $progress-border-radius: 90px;\n  $progress-height:        10px;\n  $progress-width:         100%;\n\n  .fleet-status {\n    display: flex;\n    width: 100%;\n    border: 1px solid var(--border);\n    border-radius: 10px\n  }\n\n  .header {\n    display: flex;\n    margin-bottom: 15px;\n    justify-content: space-between;\n  }\n\n  .progress-container {\n    width: 100%;\n    padding: 15px;\n\n  }\n\n  .count {\n    padding: 15px;\n    background-color: var(--tabbed-container-bg);\n    border-radius: 10px 0 0 10px;\n    display: flex;\n    align-items: center;\n    min-width: 60px;\n    justify-content: center;\n    font-size: $font-size-h2\n  }\n\n  .progress {\n    display: block;\n    border-radius: $progress-border-radius;\n    background-color: var(--progress-bg);\n    height: $progress-height;\n    width: $progress-width;\n\n    .piece {\n      display: inline-block;\n      vertical-align: top;\n      height: $progress-height;\n      border-radius: 0;\n      border-right: $progress-divider-width solid var(--progress-divider);\n      vertical-align: top;\n\n      &:first-child {\n        border-top-left-radius: $progress-border-radius;\n        border-bottom-left-radius: $progress-border-radius;\n      }\n\n      &:last-child {\n        border-top-right-radius: $progress-border-radius;\n        border-bottom-right-radius: $progress-border-radius;\n        border-right: 0;\n      }\n    }\n  }\n\n  .piece.bg-success:only-child {\n    opacity: 0.5;\n  }\n\n  .meta-title {\n    display: flex;\n    align-items: center;\n\n    &:hover {\n      cursor: pointer;\n      color: var(--link);\n    }\n\n    .icon {\n      margin: 4px 0 0 5px;\n      opacity: 0.3;\n    }\n  }\n\n  .resources-dropdown {\n    li {\n        display: flex;\n        justify-content: space-between;\n        margin: 10px 5px;\n    }\n\n    .list-count {\n        margin-left: 30px;\n    }\n }\n</style>\n"]}]}