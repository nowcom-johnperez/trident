{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/nav/Pinned.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/nav/Pinned.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8vIEFsbG93IHRoZSB1c2VyIHRvIHBpbiBhIGNsdXN0ZXIgYnkgY2xpY2tpbmcgaXQuCmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgY2x1c3RlcjogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgcGlubmVkKCkgewogICAgICByZXR1cm4gdGhpcy5jbHVzdGVyLnBpbm5lZDsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICB0b2dnbGUoKSB7CiAgICAgIGlmICggdGhpcy5waW5uZWQgKSB7CiAgICAgICAgdGhpcy5jbHVzdGVyLnVucGluKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jbHVzdGVyLnBpbigpOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Pinned.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pinned.vue","sourceRoot":"node_modules/@rancher/shell/components/nav","sourcesContent":["<script>\n// Allow the user to pin a cluster by clicking it.\nexport default {\n  props: {\n    cluster: {\n      type:     Object,\n      required: true,\n    }\n  },\n\n  computed: {\n    pinned() {\n      return this.cluster.pinned;\n    }\n  },\n\n  methods: {\n    toggle() {\n      if ( this.pinned ) {\n        this.cluster.unpin();\n      } else {\n        this.cluster.pin();\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <i\n    :tabindex=\"0\"\n    :aria-checked=\"!!pinned\"\n    class=\"pin icon\"\n    :class=\"{'icon-pin-outlined': !pinned, 'icon-pin': pinned}\"\n    aria-role=\"button\"\n    @click.stop.prevent=\"toggle\"\n    @keydown.enter.prevent=\"toggle\"\n    @keydown.space.prevent=\"toggle\"\n  />\n</template>\n\n<style lang=\"scss\" scoped>\n  .icon {\n    font-size: 14px;\n    transform: scaleX(-1);\n  }\n</style>\n"]}]}