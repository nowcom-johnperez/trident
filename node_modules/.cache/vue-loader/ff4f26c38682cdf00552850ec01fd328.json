{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/MoveModal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/MoveModal.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOw0KaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ0Bjb21wb25lbnRzL0NhcmQnOw0KaW1wb3J0IEFzeW5jQnV0dG9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FzeW5jQnV0dG9uJzsNCmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7DQppbXBvcnQgeyBNQU5BR0VNRU5UIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7DQppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nJzsNCmltcG9ydCB7IFBST0pFQ1QgfSBmcm9tICdAc2hlbGwvY29uZmlnL2xhYmVscy1hbm5vdGF0aW9ucyc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIEFzeW5jQnV0dG9uLCBDYXJkLCBMYWJlbGVkU2VsZWN0LCBMb2FkaW5nDQogIH0sDQoNCiAgYXN5bmMgZmV0Y2goKSB7DQogICAgdGhpcy5wcm9qZWN0cyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IE1BTkFHRU1FTlQuUFJPSkVDVCB9KTsNCiAgfSwNCg0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtb2RhbE5hbWU6ICdtb3ZlLW1vZGFsJywgcHJvamVjdHM6IFtdLCB0YXJnZXRQcm9qZWN0OiBudWxsDQogICAgfTsNCiAgfSwNCg0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKCdhY3Rpb24tbWVudScsIFsnc2hvd1Byb21wdE1vdmUnLCAndG9Nb3ZlJ10pLA0KICAgIC4uLm1hcEdldHRlcnMoWydjdXJyZW50Q2x1c3RlciddKSwNCg0KICAgIGV4Y2x1ZGVkUHJvamVjdHMoKSB7DQogICAgICByZXR1cm4gdGhpcy50b01vdmUuZmlsdGVyKChuYW1lc3BhY2UpID0+ICEhbmFtZXNwYWNlLnByb2plY3QpLm1hcCgobmFtZXNwYWNlKSA9PiBuYW1lc3BhY2UucHJvamVjdC5zaG9ydElkKTsNCiAgICB9LA0KDQogICAgcHJvamVjdE9wdGlvbnMoKSB7DQogICAgICByZXR1cm4gdGhpcy5wcm9qZWN0cy5yZWR1Y2UoKGluQ2x1c3RlciwgcHJvamVjdCkgPT4gew0KICAgICAgICBpZiAoIXRoaXMuZXhjbHVkZWRQcm9qZWN0cy5pbmNsdWRlcyhwcm9qZWN0LnNob3J0SWQpICYmIHByb2plY3Quc3BlYz8uY2x1c3Rlck5hbWUgPT09IHRoaXMuY3VycmVudENsdXN0ZXIuaWQpIHsNCiAgICAgICAgICBpbkNsdXN0ZXIucHVzaCh7DQogICAgICAgICAgICB2YWx1ZTogcHJvamVjdC5zaG9ydElkLA0KICAgICAgICAgICAgbGFiZWw6IHByb2plY3QubmFtZURpc3BsYXkNCiAgICAgICAgICB9KTsNCiAgICAgICAgfQ0KDQogICAgICAgIHJldHVybiBpbkNsdXN0ZXI7DQogICAgICB9LCBbXSk7DQogICAgfQ0KICB9LA0KDQogIHdhdGNoOiB7DQogICAgc2hvd1Byb21wdE1vdmUoc2hvdykgew0KICAgICAgaWYgKHNob3cpIHsNCiAgICAgICAgdGhpcy4kbW9kYWwuc2hvdyh0aGlzLm1vZGFsTmFtZSk7DQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLiRtb2RhbC5oaWRlKHRoaXMubW9kYWxOYW1lKTsNCiAgICAgIH0NCiAgICB9DQogIH0sDQoNCiAgbWV0aG9kczogew0KICAgIGNsb3NlKCkgew0KICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhY3Rpb24tbWVudS90b2dnbGVQcm9tcHRNb3ZlJyk7DQogICAgfSwNCg0KICAgIGFzeW5jIG1vdmUoZmluaXNoKSB7DQogICAgICBjb25zdCBjbHVzdGVyID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudENsdXN0ZXInXTsNCiAgICAgIGNvbnN0IGNsdXN0ZXJXaXRoUHJvamVjdElkID0gYCR7IGNsdXN0ZXIuaWQgfTokeyB0aGlzLnRhcmdldFByb2plY3QgfWA7DQoNCiAgICAgIGNvbnN0IHByb21pc2VzID0gdGhpcy50b01vdmUubWFwKChuYW1lc3BhY2UpID0+IHsNCiAgICAgICAgbmFtZXNwYWNlLnNldExhYmVsKFBST0pFQ1QsIHRoaXMudGFyZ2V0UHJvamVjdCk7DQogICAgICAgIG5hbWVzcGFjZS5zZXRBbm5vdGF0aW9uKFBST0pFQ1QsIGNsdXN0ZXJXaXRoUHJvamVjdElkKTsNCg0KICAgICAgICByZXR1cm4gbmFtZXNwYWNlLnNhdmUoKTsNCiAgICAgIH0pOw0KDQogICAgICB0cnkgew0KICAgICAgICB0aGlzLiRlbWl0KCdtb3ZpbmcnKTsNCiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwocHJvbWlzZXMpOw0KICAgICAgICBmaW5pc2godHJ1ZSk7DQogICAgICAgIHRoaXMudGFyZ2V0UHJvamVjdCA9IG51bGw7DQogICAgICAgIHRoaXMuY2xvc2UoKTsNCiAgICAgIH0gY2F0Y2ggKGV4KSB7DQogICAgICAgIGZpbmlzaChmYWxzZSk7DQogICAgICB9DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["MoveModal.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MoveModal.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\r\nimport { mapState, mapGetters } from 'vuex';\r\nimport { Card } from '@components/Card';\r\nimport AsyncButton from '@shell/components/AsyncButton';\r\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\r\nimport { MANAGEMENT } from '@shell/config/types';\r\nimport Loading from '@shell/components/Loading';\r\nimport { PROJECT } from '@shell/config/labels-annotations';\r\n\r\nexport default {\r\n  components: {\r\n    AsyncButton, Card, LabeledSelect, Loading\r\n  },\r\n\r\n  async fetch() {\r\n    this.projects = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT });\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      modalName: 'move-modal', projects: [], targetProject: null\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('action-menu', ['showPromptMove', 'toMove']),\r\n    ...mapGetters(['currentCluster']),\r\n\r\n    excludedProjects() {\r\n      return this.toMove.filter((namespace) => !!namespace.project).map((namespace) => namespace.project.shortId);\r\n    },\r\n\r\n    projectOptions() {\r\n      return this.projects.reduce((inCluster, project) => {\r\n        if (!this.excludedProjects.includes(project.shortId) && project.spec?.clusterName === this.currentCluster.id) {\r\n          inCluster.push({\r\n            value: project.shortId,\r\n            label: project.nameDisplay\r\n          });\r\n        }\r\n\r\n        return inCluster;\r\n      }, []);\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    showPromptMove(show) {\r\n      if (show) {\r\n        this.$modal.show(this.modalName);\r\n      } else {\r\n        this.$modal.hide(this.modalName);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    close() {\r\n      this.$store.commit('action-menu/togglePromptMove');\r\n    },\r\n\r\n    async move(finish) {\r\n      const cluster = this.$store.getters['currentCluster'];\r\n      const clusterWithProjectId = `${ cluster.id }:${ this.targetProject }`;\r\n\r\n      const promises = this.toMove.map((namespace) => {\r\n        namespace.setLabel(PROJECT, this.targetProject);\r\n        namespace.setAnnotation(PROJECT, clusterWithProjectId);\r\n\r\n        return namespace.save();\r\n      });\r\n\r\n      try {\r\n        this.$emit('moving');\r\n        await Promise.all(promises);\r\n        finish(true);\r\n        this.targetProject = null;\r\n        this.close();\r\n      } catch (ex) {\r\n        finish(false);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<template>\r\n  <modal\n    class=\"move-modal\"\n    :name=\"modalName\"\n    :width=\"440\"\n    height=\"auto\"\n    @closed=\"close\"\n  >\r\n    <Loading v-if=\"$fetchState.pending\" />\r\n    <Card\n      v-else\n      class=\"move-modal-card\"\n      :show-highlight-border=\"false\"\n    >\r\n      <h4\n        slot=\"title\"\n        class=\"text-default-text\"\n      >\r\n        {{ t('moveModal.title') }}\r\n      </h4>\r\n      <div slot=\"body\">\r\n        <div>\r\n          {{ t('moveModal.description') }}\r\n          <ul class=\"namespaces\">\r\n            <li\n              v-for=\"namespace in toMove\"\n              :key=\"namespace.id\"\n            >\r\n              {{ namespace.nameDisplay }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <LabeledSelect\n          v-model=\"targetProject\"\n          :options=\"projectOptions\"\n          :label=\"t('moveModal.targetProject')\"\n        />\r\n      </div>\r\n      <template #actions>\r\n        <button\n          class=\"btn role-secondary\"\n          @click=\"close\"\n        >\r\n          {{ t('generic.cancel') }}\r\n        </button>\r\n        <AsyncButton\n          :action-label=\"t('moveModal.moveButtonLabel')\"\n          class=\"btn bg-primary ml-10\"\n          :disabled=\"!targetProject\"\n          @click=\"move\"\n        />\r\n      </template>\r\n    </Card>\r\n  </modal>\r\n</template>\r\n\r\n<style lang='scss'>\r\n  .move-modal {\r\n    .namespaces {\r\n      max-height: 200px;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .move-modal-card {\r\n        box-shadow: none;\r\n\r\n        border-radius: var(--border-radius);\r\n    }\r\n\r\n    .actions {\r\n      text-align: right;\r\n    }\r\n    .card-actions {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n  }\r\n</style>\r\n"]}]}