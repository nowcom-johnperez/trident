{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/fleet.cattle.io.bundle.vue?vue&type=style&index=0&id=7fe22cca&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/fleet.cattle.io.bundle.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5idW5kbGUtdGl0bGUgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKCiAgaDIgewogICAgbWFyZ2luOiAwIDEwcHggMCAwOwogIH0KCiAgc3BhbiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kYXJrZXIpOwogICAgY29sb3I6IHZhcigtLWRlZmF1bHQpOwogICAgcGFkZGluZzogNXB4IDEwcHg7CiAgICBib3JkZXItcmFkaXVzOiAxNXB4OwogIH0KfQo="},{"version":3,"sources":["fleet.cattle.io.bundle.vue"],"names":[],"mappings":";AAuGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fleet.cattle.io.bundle.vue","sourceRoot":"node_modules/@rancher/shell/detail","sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport FleetBundleResources from '@shell/components/fleet/FleetBundleResources.vue';\nimport SortableTable from '@shell/components/SortableTable';\n\nexport default {\n  name: 'FleetBundleDetail',\n\n  components: {\n    FleetBundleResources,\n    SortableTable,\n  },\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    }\n  },\n\n  data() {\n    return { repo: null };\n  },\n\n  async fetch() {\n    const { namespace, labels } = this.value.metadata;\n    const repoName = `${ namespace }/${ labels['fleet.cattle.io/repo-name'] }`;\n\n    if (this.hasRepoLabel) {\n      this.repo = await this.$store.dispatch('management/find', { type: FLEET.GIT_REPO, id: repoName });\n    }\n  },\n\n  computed: {\n    hasRepoLabel() {\n      return !!(this.value?.metadata?.labels && this.value?.metadata?.labels['fleet.cattle.io/repo-name']);\n    },\n    bundleResources() {\n      if (this.hasRepoLabel) {\n        const bundleResourceIds = this.bundleResourceIds;\n\n        return this.repo?.status?.resources.filter((resource) => {\n          return bundleResourceIds.includes(resource.name);\n        });\n      } else if (this.value?.spec?.resources?.length) {\n        return this.value?.spec?.resources.map((item) => {\n          return {\n            content: item.content,\n            name:    item.name.includes('.') ? item.name.split('.')[0] : item.name\n          };\n        });\n      }\n\n      return [];\n    },\n    resourceHeaders() {\n      return [\n        {\n          name:     'name',\n          value:    'name',\n          sort:     ['name'],\n          labelKey: 'tableHeaders.name',\n        },\n      ];\n    },\n    resourceCount() {\n      return (this.bundleResources && this.bundleResources.length) || this.value?.spec?.resources?.length;\n    },\n    bundleResourceIds() {\n      if (this.value.status?.resourceKey) {\n        return this.value?.status?.resourceKey.map((item) => item.name);\n      }\n\n      return [];\n    }\n  }\n};\n\n</script>\n\n<template>\n  <div>\n    <div class=\"bundle-title mt-20 mb-20\">\n      <h2>{{ t('fleet.bundles.resources') }}</h2>\n      <span>{{ resourceCount }}</span>\n    </div>\n    <FleetBundleResources\n      v-if=\"hasRepoLabel\"\n      :value=\"bundleResources\"\n    />\n    <SortableTable\n      v-else\n      :rows=\"bundleResources\"\n      :headers=\"resourceHeaders\"\n      :table-actions=\"false\"\n      :row-actions=\"false\"\n      key-field=\"tableKey\"\n      default-sort-by=\"state\"\n      :paged=\"true\"\n    />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.bundle-title {\n  display: flex;\n  align-items: center;\n\n  h2 {\n    margin: 0 10px 0 0;\n  }\n\n  span {\n    background-color: var(--darker);\n    color: var(--default);\n    padding: 5px 10px;\n    border-radius: 15px;\n  }\n}\n</style>\n"]}]}