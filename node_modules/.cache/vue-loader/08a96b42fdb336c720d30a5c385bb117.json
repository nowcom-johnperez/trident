{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/PodsUsage.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/PodsUsage.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgJ1BvZHNVc2FnZScsCiAgcHJvcHM6IHsKICAgIHJvdzogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwb2RzVXNhZ2UoKSB7CiAgICAgIGNvbnN0IHVzZWRQb2RzID0gdGhpcy5yb3c/Lm1nbXQ/LnN0YXR1cz8ucmVxdWVzdGVkPy5wb2RzOwogICAgICBjb25zdCB0b3RhbFBvZHMgPSB0aGlzLnJvdz8ubWdtdD8uc3RhdHVzPy5hbGxvY2F0YWJsZT8ucG9kczsKCiAgICAgIGlmICghdGhpcy5yb3c/LmlzUmVhZHkgfHwgIXRvdGFsUG9kcykgewogICAgICAgIHJldHVybiAn4oCUJzsKICAgICAgfQoKICAgICAgcmV0dXJuIGAkeyB1c2VkUG9kcyB8fCAwIH0vJHsgdG90YWxQb2RzIH1gOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["PodsUsage.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"PodsUsage.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nexport default {\n  name:  'PodsUsage',\n  props: {\n    row: {\n      type:     Object,\n      required: true\n    },\n  },\n  computed: {\n    podsUsage() {\n      const usedPods = this.row?.mgmt?.status?.requested?.pods;\n      const totalPods = this.row?.mgmt?.status?.allocatable?.pods;\n\n      if (!this.row?.isReady || !totalPods) {\n        return 'â€”';\n      }\n\n      return `${ usedPods || 0 }/${ totalPods }`;\n    }\n  }\n};\n</script>\n\n<template>\n  <p>\n    <span>{{ podsUsage }}</span>\n  </p>\n</template>\n"]}]}