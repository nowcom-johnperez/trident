{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Certificates.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Certificates.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBTb3J0YWJsZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1NvcnRhYmxlVGFibGUnOwppbXBvcnQgeyBfRURJVCwgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IFNFQ1JFVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgQXJyYXlMaXN0R3JvdXBlZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0FycmF5TGlzdEdyb3VwZWQnOwppbXBvcnQgQ2VydGlmaWNhdGUgZnJvbSAnLi9DZXJ0aWZpY2F0ZSc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXJyYXlMaXN0R3JvdXBlZCwgQ2VydGlmaWNhdGUsIFNvcnRhYmxlVGFibGUKICB9LAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0sCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogX0VESVQKICAgIH0sCiAgICBjZXJ0aWZpY2F0ZXM6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAogICAgcnVsZXM6IHsKICAgICAgZGVmYXVsdDogKCkgPT4gKHsgaG9zdDogW10gfSksCiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZWZhdWx0QWRkVmFsdWU6IHsKICAgICAgICBzZWNyZXROYW1lOiBudWxsLAogICAgICAgIGhvc3RzOiAgICAgIFsnJ10KICAgICAgfQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKICAgIGNlcnRIZWFkZXJzKCkgewogICAgICByZXR1cm4gWwogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICAgICAgJ2NlcnRpZmljYXRlJywKICAgICAgICAgIGxhYmVsOiAgICAgdGhpcy50KCdpbmdyZXNzLmNlcnRpZmljYXRlcy5oZWFkZXJzLmNlcnRpZmljYXRlJyksCiAgICAgICAgICB2YWx1ZTogICAgICdsaW5rJywKICAgICAgICAgIGZvcm1hdHRlcjogJ0xpbmsnLAogICAgICAgICAgc29ydDogICAgICAnbGluay50ZXh0JwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogICAgICAnaG9zdHMnLAogICAgICAgICAgbGFiZWw6ICAgICB0aGlzLnQoJ2luZ3Jlc3MuY2VydGlmaWNhdGVzLmhlYWRlcnMuaG9zdHMnKSwKICAgICAgICAgIHZhbHVlOiAgICAgJ2hvc3RzJywKICAgICAgICAgIGZvcm1hdHRlcjogJ2xpc3QnCiAgICAgICAgfSwKICAgICAgXTsKICAgIH0sCiAgICBjZXJ0Um93cygpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWU/LnNwZWM/LnRscy5tYXAoKGNlcnQpID0+IHsKICAgICAgICBpZiAoY2VydC5zZWNyZXROYW1lKSB7CiAgICAgICAgICBjb25zdCBuYW1lID0gJ2MtY2x1c3Rlci1yZXNvdXJjZS1uYW1lc3BhY2UtaWQnOwogICAgICAgICAgY29uc3QgcGFyYW1zID0gewogICAgICAgICAgICBuYW1lc3BhY2U6IHRoaXMudmFsdWU/Lm1ldGFkYXRhPy5uYW1lc3BhY2UsCiAgICAgICAgICAgIGlkOiAgICAgICAgY2VydC5zZWNyZXROYW1lLAogICAgICAgICAgICByZXNvdXJjZTogIFNFQ1JFVAogICAgICAgICAgfTsKICAgICAgICAgIGNvbnN0IHVybCA9IHsgbmFtZSwgcGFyYW1zIH07CgogICAgICAgICAgY2VydC5saW5rID0geyB1cmwsIHRleHQ6IGNlcnQuc2VjcmV0TmFtZSB9OwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjZXJ0LmxpbmsgPSB7IHRleHQ6ICdkZWZhdWx0JyB9OwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIGNlcnQ7CiAgICAgIH0pOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Certificates.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Certificates.vue","sourceRoot":"node_modules/@rancher/shell/edit/networking.k8s.io.ingress","sourcesContent":["<script>\nimport SortableTable from '@shell/components/SortableTable';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { SECRET } from '@shell/config/types';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport Certificate from './Certificate';\n\nexport default {\n  components: {\n    ArrayListGrouped, Certificate, SortableTable\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n    certificates: {\n      type:    Array,\n      default: () => []\n    },\n    rules: {\n      default: () => ({ host: [] }),\n      type:    Object,\n    }\n  },\n  data() {\n    return {\n      defaultAddValue: {\n        secretName: null,\n        hosts:      ['']\n      }\n    };\n  },\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n    certHeaders() {\n      return [\n        {\n          name:      'certificate',\n          label:     this.t('ingress.certificates.headers.certificate'),\n          value:     'link',\n          formatter: 'Link',\n          sort:      'link.text'\n        },\n        {\n          name:      'hosts',\n          label:     this.t('ingress.certificates.headers.hosts'),\n          value:     'hosts',\n          formatter: 'list'\n        },\n      ];\n    },\n    certRows() {\n      return this.value?.spec?.tls.map((cert) => {\n        if (cert.secretName) {\n          const name = 'c-cluster-resource-namespace-id';\n          const params = {\n            namespace: this.value?.metadata?.namespace,\n            id:        cert.secretName,\n            resource:  SECRET\n          };\n          const url = { name, params };\n\n          cert.link = { url, text: cert.secretName };\n        } else {\n          cert.link = { text: 'default' };\n        }\n\n        return cert;\n      });\n    }\n  }\n};\n</script>\n<template>\n  <SortableTable\n    v-if=\"isView\"\n    :rows=\"certRows\"\n    :headers=\"certHeaders\"\n    key-field=\"_key\"\n    :search=\"false\"\n    :table-actions=\"false\"\n    :row-actions=\"false\"\n  />\n  <div v-else>\n    <ArrayListGrouped\n      v-model=\"value.spec.tls\"\n      :add-label=\"t('ingress.certificates.addCertificate')\"\n      :default-add-value=\"defaultAddValue\"\n      :mode=\"mode\"\n    >\n      <template #default=\"props\">\n        <Certificate\n          v-model=\"props.row.value\"\n          class=\"mb-20\"\n          :mode=\"mode\"\n          :certs=\"certificates\"\n          :rules=\"rules\"\n        />\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n"]}]}