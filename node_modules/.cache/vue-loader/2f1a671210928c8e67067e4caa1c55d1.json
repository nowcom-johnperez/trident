{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/Job.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/Job.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFdPUktMT0FEX1RZUEVTIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBVbml0SW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Vbml0SW5wdXQnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCB7IFJhZGlvR3JvdXAgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1JhZGlvJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFVuaXRJbnB1dCwgTGFiZWxlZElucHV0LCBSYWRpb0dyb3VwCiAgfSwKICBwcm9wczogewogICAgLy8gd29ya2xvYWQgc3BlYwogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgdHlwZTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IFdPUktMT0FEX1RZUEVTLkpPQgogICAgfSwKCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NyZWF0ZScKICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgY29uc3QgewogICAgICBmYWlsZWRKb2JzSGlzdG9yeUxpbWl0LAogICAgICBzdWNjZXNzZnVsSm9ic0hpc3RvcnlMaW1pdCwKICAgICAgc3VzcGVuZCA9IGZhbHNlLAogICAgICBzY2hlZHVsZSwKICAgIH0gPSB0aGlzLnZhbHVlOwoKICAgIGlmICh0aGlzLnR5cGUgPT09IFdPUktMT0FEX1RZUEVTLkNST05fSk9CKSB7CiAgICAgIC8vIEluaXRpYWxpemUgYm90aCB2YWx1ZSBzcGVjcyBpZiBlbXB0eQogICAgICBpZiAoIXRoaXMudmFsdWUuam9iVGVtcGxhdGUpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ2pvYlRlbXBsYXRlJywgeyBzcGVjOiB7fSB9KTsKICAgICAgfQogICAgICBpZiAoIXRoaXMudmFsdWUuam9iVGVtcGxhdGUuc3BlYy50ZW1wbGF0ZSkgewogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLmpvYlRlbXBsYXRlLnNwZWMsICd0ZW1wbGF0ZScsIHsgc3BlYzoge30gfSk7CiAgICAgIH0KICAgICAgY29uc3QgewogICAgICAgIGNvbmN1cnJlbmN5UG9saWN5ID0gJ0FsbG93JywKICAgICAgICBzdGFydGluZ0RlYWRsaW5lU2Vjb25kcwogICAgICB9ID0gdGhpcy52YWx1ZTsKICAgICAgY29uc3QgewogICAgICAgIGNvbXBsZXRpb25zLAogICAgICAgIHBhcmFsbGVsaXNtLAogICAgICAgIGJhY2tvZmZMaW1pdCwKICAgICAgICBhY3RpdmVEZWFkbGluZVNlY29uZHMsCiAgICAgICAgdGVtcGxhdGU6eyBzcGVjOiB7IHRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIH0gfQogICAgICB9ID0gdGhpcy52YWx1ZS5qb2JUZW1wbGF0ZS5zcGVjOwoKICAgICAgcmV0dXJuIHsKICAgICAgICBjb21wbGV0aW9ucywKICAgICAgICBwYXJhbGxlbGlzbSwKICAgICAgICBiYWNrb2ZmTGltaXQsCiAgICAgICAgYWN0aXZlRGVhZGxpbmVTZWNvbmRzLAogICAgICAgIGZhaWxlZEpvYnNIaXN0b3J5TGltaXQsCiAgICAgICAgc3VjY2Vzc2Z1bEpvYnNIaXN0b3J5TGltaXQsCiAgICAgICAgc3VzcGVuZCwKICAgICAgICBzY2hlZHVsZSwKICAgICAgICBjb25jdXJyZW5jeVBvbGljeSwKICAgICAgICBzdGFydGluZ0RlYWRsaW5lU2Vjb25kcywKICAgICAgICB0ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kcwogICAgICB9OwogICAgfSBlbHNlIHsKICAgICAgaWYgKCF0aGlzLnZhbHVlLnRlbXBsYXRlKSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICd0ZW1wbGF0ZScsIHsgc3BlYzoge30gfSk7CiAgICAgIH0KICAgICAgY29uc3QgewogICAgICAgIGNvbXBsZXRpb25zLAogICAgICAgIHBhcmFsbGVsaXNtLAogICAgICAgIGJhY2tvZmZMaW1pdCwKICAgICAgICBhY3RpdmVEZWFkbGluZVNlY29uZHMsCiAgICAgICAgdGVtcGxhdGU6eyBzcGVjOiB7IHRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIH0gfQogICAgICB9ID0gdGhpcy52YWx1ZTsKCiAgICAgIHJldHVybiB7CiAgICAgICAgY29tcGxldGlvbnMsCiAgICAgICAgcGFyYWxsZWxpc20sCiAgICAgICAgYmFja29mZkxpbWl0LAogICAgICAgIGFjdGl2ZURlYWRsaW5lU2Vjb25kcywKICAgICAgICBmYWlsZWRKb2JzSGlzdG9yeUxpbWl0LAogICAgICAgIHN1Y2Nlc3NmdWxKb2JzSGlzdG9yeUxpbWl0LAogICAgICAgIHN1c3BlbmQsCiAgICAgICAgc2NoZWR1bGUsCiAgICAgICAgdGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMKICAgICAgfTsKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgaXNDcm9uSm9iKCkgewogICAgICByZXR1cm4gdGhpcy50eXBlID09PSBXT1JLTE9BRF9UWVBFUy5DUk9OX0pPQjsKICAgIH0sCiAgICAuLi5tYXBHZXR0ZXJzKHsgdDogJ2kxOG4vdCcgfSkKICB9LAoKICBtZXRob2RzOiB7CiAgICB1cGRhdGUoKSB7CiAgICAgIGlmICh0aGlzLnR5cGUgPT09IFdPUktMT0FEX1RZUEVTLkpPQikgewogICAgICAgIGNvbnN0IHNwZWMgPSB7CiAgICAgICAgICAuLi50aGlzLnZhbHVlLAogICAgICAgICAgc3VzcGVuZDogICAgICAgICAgICAgICB0aGlzLnN1c3BlbmQsCiAgICAgICAgICBzY2hlZHVsZTogICAgICAgICAgICAgIHRoaXMuc2NoZWR1bGUsCiAgICAgICAgICBjb21wbGV0aW9uczogICAgICAgICAgIHRoaXMuY29tcGxldGlvbnMsCiAgICAgICAgICBwYXJhbGxlbGlzbTogICAgICAgICAgIHRoaXMucGFyYWxsZWxpc20sCiAgICAgICAgICBiYWNrb2ZmTGltaXQ6ICAgICAgICAgIHRoaXMuYmFja29mZkxpbWl0LAogICAgICAgICAgYWN0aXZlRGVhZGxpbmVTZWNvbmRzOiB0aGlzLmFjdGl2ZURlYWRsaW5lU2Vjb25kcywKICAgICAgICB9OwoKICAgICAgICBzcGVjLnRlbXBsYXRlLnNwZWMudGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMgPSB0aGlzLnRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzOwoKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHNwZWMpOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbnN0IHNwZWMgPSB7CiAgICAgICAgICAuLi50aGlzLnZhbHVlLAogICAgICAgICAgZmFpbGVkSm9ic0hpc3RvcnlMaW1pdDogICAgIHRoaXMuZmFpbGVkSm9ic0hpc3RvcnlMaW1pdCwKICAgICAgICAgIHN1Y2Nlc3NmdWxKb2JzSGlzdG9yeUxpbWl0OiB0aGlzLnN1Y2Nlc3NmdWxKb2JzSGlzdG9yeUxpbWl0LAogICAgICAgICAgc3VzcGVuZDogICAgICAgICAgICAgICAgICAgIHRoaXMuc3VzcGVuZCwKICAgICAgICAgIGNvbmN1cnJlbmN5UG9saWN5OiAgICAgICAgICB0aGlzLmNvbmN1cnJlbmN5UG9saWN5LAogICAgICAgICAgc3RhcnRpbmdEZWFkbGluZVNlY29uZHM6ICAgIHRoaXMuc3RhcnRpbmdEZWFkbGluZVNlY29uZHMsCiAgICAgICAgICBqb2JUZW1wbGF0ZTogICAgICAgICAgICAgICAgeyAuLi50aGlzLnZhbHVlLmpvYlRlbXBsYXRlIH0KICAgICAgICB9OwogICAgICAgIGNvbnN0IGpvYlNwZWMgPSB7CiAgICAgICAgICBjb21wbGV0aW9uczogICAgICAgICAgIHRoaXMuY29tcGxldGlvbnMsCiAgICAgICAgICBwYXJhbGxlbGlzbTogICAgICAgICAgIHRoaXMucGFyYWxsZWxpc20sCiAgICAgICAgICBiYWNrb2ZmTGltaXQ6ICAgICAgICAgIHRoaXMuYmFja29mZkxpbWl0LAogICAgICAgICAgYWN0aXZlRGVhZGxpbmVTZWNvbmRzOiB0aGlzLmFjdGl2ZURlYWRsaW5lU2Vjb25kcwogICAgICAgIH07CgogICAgICAgIE9iamVjdC5hc3NpZ24oc3BlYy5qb2JUZW1wbGF0ZS5zcGVjLCBqb2JTcGVjICk7CgogICAgICAgIHNwZWMuam9iVGVtcGxhdGUuc3BlYy50ZW1wbGF0ZS5zcGVjLnRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzID0gdGhpcy50ZXJtaW5hdGlvbkdyYWNlUGVyaW9kU2Vjb25kczsKCiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBzcGVjKTsKICAgICAgfQogICAgfSwKCiAgfQp9Owo="},{"version":3,"sources":["Job.vue"],"names":[],"mappingsfile":"Job.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload","sourcesContent":["<script>\nimport { WORKLOAD_TYPES } from '@shell/config/types';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    UnitInput, LabeledInput, RadioGroup\n  },\n  props: {\n    // workload spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    type: {\n      type:    String,\n      default: WORKLOAD_TYPES.JOB\n    },\n\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  data() {\n    const {\n      failedJobsHistoryLimit,\n      successfulJobsHistoryLimit,\n      suspend = false,\n      schedule,\n    } = this.value;\n\n    if (this.type === WORKLOAD_TYPES.CRON_JOB) {\n      // Initialize both value specs if empty\n      if (!this.value.jobTemplate) {\n        this.$set(this.value, 'jobTemplate', { spec: {} });\n      }\n      if (!this.value.jobTemplate.spec.template) {\n        this.$set(this.value.jobTemplate.spec, 'template', { spec: {} });\n      }\n      const {\n        concurrencyPolicy = 'Allow',\n        startingDeadlineSeconds\n      } = this.value;\n      const {\n        completions,\n        parallelism,\n        backoffLimit,\n        activeDeadlineSeconds,\n        template:{ spec: { terminationGracePeriodSeconds } }\n      } = this.value.jobTemplate.spec;\n\n      return {\n        completions,\n        parallelism,\n        backoffLimit,\n        activeDeadlineSeconds,\n        failedJobsHistoryLimit,\n        successfulJobsHistoryLimit,\n        suspend,\n        schedule,\n        concurrencyPolicy,\n        startingDeadlineSeconds,\n        terminationGracePeriodSeconds\n      };\n    } else {\n      if (!this.value.template) {\n        this.$set(this.value, 'template', { spec: {} });\n      }\n      const {\n        completions,\n        parallelism,\n        backoffLimit,\n        activeDeadlineSeconds,\n        template:{ spec: { terminationGracePeriodSeconds } }\n      } = this.value;\n\n      return {\n        completions,\n        parallelism,\n        backoffLimit,\n        activeDeadlineSeconds,\n        failedJobsHistoryLimit,\n        successfulJobsHistoryLimit,\n        suspend,\n        schedule,\n        terminationGracePeriodSeconds\n      };\n    }\n  },\n\n  computed: {\n    isCronJob() {\n      return this.type === WORKLOAD_TYPES.CRON_JOB;\n    },\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  methods: {\n    update() {\n      if (this.type === WORKLOAD_TYPES.JOB) {\n        const spec = {\n          ...this.value,\n          suspend:               this.suspend,\n          schedule:              this.schedule,\n          completions:           this.completions,\n          parallelism:           this.parallelism,\n          backoffLimit:          this.backoffLimit,\n          activeDeadlineSeconds: this.activeDeadlineSeconds,\n        };\n\n        spec.template.spec.terminationGracePeriodSeconds = this.terminationGracePeriodSeconds;\n\n        this.$emit('input', spec);\n      } else {\n        const spec = {\n          ...this.value,\n          failedJobsHistoryLimit:     this.failedJobsHistoryLimit,\n          successfulJobsHistoryLimit: this.successfulJobsHistoryLimit,\n          suspend:                    this.suspend,\n          concurrencyPolicy:          this.concurrencyPolicy,\n          startingDeadlineSeconds:    this.startingDeadlineSeconds,\n          jobTemplate:                { ...this.value.jobTemplate }\n        };\n        const jobSpec = {\n          completions:           this.completions,\n          parallelism:           this.parallelism,\n          backoffLimit:          this.backoffLimit,\n          activeDeadlineSeconds: this.activeDeadlineSeconds\n        };\n\n        Object.assign(spec.jobTemplate.spec, jobSpec );\n\n        spec.jobTemplate.spec.template.spec.terminationGracePeriodSeconds = this.terminationGracePeriodSeconds;\n\n        this.$emit('input', spec);\n      }\n    },\n\n  }\n};\n</script>\n\n<template>\n  <form>\n    <div class=\"row mb-20\">\n      <div\n        data-testid=\"input-job-completions\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"completions\"\n          :mode=\"mode\"\n          :suffix=\"t('suffix.times', {count: completions})\"\n          label-key=\"workload.job.completions.label\"\n          tooltip-key=\"workload.job.completions.tip\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        data-testid=\"input-job-parallelism\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"parallelism\"\n          :mode=\"mode\"\n          :suffix=\"t('suffix.times', {count: parallelism})\"\n          label-key=\"workload.job.parallelism.label\"\n          tooltip-key=\"workload.job.parallelism.tip\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div\n        data-testid=\"input-job-backoffLimit\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"backoffLimit\"\n          :mode=\"mode\"\n          :suffix=\"t('suffix.times', {count: backoffLimit})\"\n          label-key=\"workload.job.backoffLimit.label\"\n          tooltip-key=\"workload.job.backoffLimit.tip\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        data-testid=\"input-job-activeDeadlineSeconds\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"activeDeadlineSeconds\"\n          :mode=\"mode\"\n          :suffix=\"t('suffix.seconds', {count: activeDeadlineSeconds})\"\n          label-key=\"workload.job.activeDeadlineSeconds.label\"\n          tooltip-key=\"workload.job.activeDeadlineSeconds.tip\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n\n    <template v-if=\"isCronJob\">\n      <div class=\"row  mb-20\">\n        <div\n          data-testid=\"input-job-successful\"\n          class=\"col span-6\"\n        >\n          <LabeledInput\n            v-model.number=\"successfulJobsHistoryLimit\"\n            :mode=\"mode\"\n            label-key=\"workload.job.successfulJobsHistoryLimit.label\"\n            tooltip-key=\"workload.job.successfulJobsHistoryLimit.tip\"\n            @input=\"update\"\n          />\n        </div>\n        <div\n          data-testid=\"input-job-failed\"\n          class=\"col span-6\"\n        >\n          <LabeledInput\n            v-model.number=\"failedJobsHistoryLimit\"\n            :mode=\"mode\"\n            label-key=\"workload.job.failedJobsHistoryLimit.label\"\n            tooltip-key=\"workload.job.failedJobsHistoryLimit.tip\"\n            @input=\"update\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div\n          data-testid=\"input-job-startingDeadlineSeconds\"\n          class=\"col span-6\"\n        >\n          <UnitInput\n            v-model=\"startingDeadlineSeconds\"\n            :mode=\"mode\"\n            :suffix=\"t('suffix.seconds', {count: startingDeadlineSeconds})\"\n            label-key=\"workload.job.startingDeadlineSeconds.label\"\n            tooltip-key=\"workload.job.startingDeadlineSeconds.tip\"\n            @input=\"update\"\n          />\n        </div>\n        <div\n          data-testid=\"input-job-termination\"\n          class=\"col span-6\"\n        >\n          <UnitInput\n            v-model=\"terminationGracePeriodSeconds\"\n            :suffix=\"terminationGracePeriodSeconds == 1 ? 'Second' : 'Seconds'\"\n            :label=\"t('workload.upgrading.activeDeadlineSeconds.label')\"\n            :mode=\"mode\"\n            @input=\"update\"\n          >\n            <template #label>\n              <label\n                class=\"has-tooltip\"\n                :style=\"{'color':'var(--input-label)'}\"\n              >\n                {{ t('workload.upgrading.terminationGracePeriodSeconds.label') }}\n                <i\n                  v-clean-tooltip=\"t('workload.upgrading.terminationGracePeriodSeconds.tip')\"\n                  class=\"icon icon-info\"\n                />\n              </label>\n            </template>\n          </UnitInput>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div\n          data-testid=\"input-job-concurrencyPolicy\"\n\n          class=\"col span-6\"\n        >\n          <RadioGroup\n            v-model=\"concurrencyPolicy\"\n            :mode=\"mode\"\n            :label=\"t('workload.upgrading.concurrencyPolicy.label')\"\n            name=\"concurrency\"\n            :options=\"['Allow', 'Forbid', 'Replace']\"\n            :labels=\"[t('workload.upgrading.concurrencyPolicy.options.allow'), t('workload.upgrading.concurrencyPolicy.options.forbid'), t('workload.upgrading.concurrencyPolicy.options.replace')]\"\n            @input=\"update\"\n          />\n        </div>\n        <div\n          data-testid=\"input-job-suspend\"\n          class=\"col span-6\"\n        >\n          <RadioGroup\n            v-model=\"suspend\"\n            :mode=\"mode\"\n            :label=\"t('workload.job.suspend')\"\n            name=\"suspend\"\n            :options=\"[true, false]\"\n            :labels=\"['Yes', 'No']\"\n            @input=\"update\"\n          />\n        </div>\n      </div>\n    </template>\n    <div\n      v-else\n      class=\"row\"\n    >\n      <div\n        data-testid=\"input-job-termination\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"terminationGracePeriodSeconds\"\n          :suffix=\"terminationGracePeriodSeconds == 1 ? 'Second' : 'Seconds'\"\n          :label=\"t('workload.upgrading.activeDeadlineSeconds.label')\"\n          :mode=\"mode\"\n        >\n          <template #label>\n            <label\n              class=\"has-tooltip\"\n              :style=\"{'color':'var(--input-label)'}\"\n            >\n              {{ t('workload.upgrading.terminationGracePeriodSeconds.label') }}\n              <i\n                v-clean-tooltip=\"t('workload.upgrading.terminationGracePeriodSeconds.tip')\"\n                class=\"icon icon-info\"\n              />\n            </label>\n          </template>\n        </UnitInput>\n      </div>\n    </div>\n  </form>\n</template>\n"]}]}