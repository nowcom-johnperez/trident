{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/gatekeeper/constraints/index.vue?vue&type=style&index=0&id=0501ec0e&lang=scss","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/gatekeeper/constraints/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5nYXRla2VlcGVyLWNvbnN0cmFpbnRzIHsKICBidXR0b24uY3JlYXRlIHsKICAgIGhlaWdodDogMzVweDsKICAgIGxpbmUtaGVpZ2h0OiAwOwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAmFA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/gatekeeper/constraints","sourcesContent":["<script>\nimport { AGE, NAME, STATE } from '@shell/config/table-headers';\nimport SortableTable from '@shell/components/SortableTable';\nimport { DESCRIPTION } from '@shell/config/labels-annotations';\nimport { findAllConstraints } from '@shell/utils/gatekeeper/util';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { AS, _YAML } from '@shell/config/query-params';\n\nexport default {\n  components: { Masthead, SortableTable },\n  data(ctx) {\n    const createLocation = {\n      name:   'c-cluster-gatekeeper-constraints-create',\n      params: this.$route.params,\n    };\n\n    const yamlCreateLocation = {\n      ...createLocation,\n      query: { [AS]: _YAML }\n    };\n\n    return {\n      createLocation,\n      yamlCreateLocation,\n      headers: [\n        STATE,\n        NAME,\n        {\n          name:  'Description',\n          label: 'Description',\n          value: `description`,\n          sort:  `description`\n        },\n        {\n          name:  'Violations',\n          label: 'Violations',\n          value: 'status.totalViolations',\n          sort:  'status.totalViolations',\n          width: 120\n        },\n        AGE,\n      ],\n      templates:   [],\n      constraints: [],\n    };\n  },\n\n  async created() {\n    const rawConstraints = await findAllConstraints(this.$store);\n\n    this.constraints = rawConstraints\n      .flat()\n      .map((constraint) => {\n        constraint.description = (constraint?.metadata?.annotations || {})[DESCRIPTION];\n\n        return constraint;\n      });\n  }\n\n};\n</script>\n\n<template>\n  <div class=\"gatekeeper-constraints\">\n    <Masthead\n      resource=\"Constraint\"\n      :type-display=\"'Constraint'\"\n      :is-yaml-creatable=\"true\"\n      :is-creatable=\"true\"\n      :yaml-create-location=\"yamlCreateLocation\"\n      :create-location=\"createLocation\"\n    />\n\n    <SortableTable\n      :headers=\"headers\"\n      :rows=\"constraints\"\n      key-field=\"id\"\n      group-by=\"kind\"\n    />\n  </div>\n</template>\n\n<style lang=\"scss\">\n.gatekeeper-constraints {\n  button.create {\n    height: 35px;\n    line-height: 0;\n  }\n}\n</style>\n"]}]}