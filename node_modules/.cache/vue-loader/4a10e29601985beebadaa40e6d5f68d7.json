{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/pnap.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/pnap.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCB7IGJhc2U2NEVuY29kZSB9IGZyb20gJ0BzaGVsbC91dGlscy9jcnlwdG8nOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgTGFiZWxlZElucHV0IH0sCiAgbWl4aW5zOiAgICAgW0NyZWF0ZUVkaXRWaWV3XSwKCiAgd2F0Y2g6IHsKICAgICd2YWx1ZS5kZWNvZGVkRGF0YS5jbGllbnRJZGVudGlmaWVyJyhuZXUpIHsKICAgICAgdGhpcy4kZW1pdCgndmFsaWRhdGlvbkNoYW5nZWQnLCAhIW5ldSk7CiAgICB9LAogICAgJ3ZhbHVlLmRlY29kZWREYXRhLmNsaWVudFNlY3JldCcobmV1KSB7CiAgICAgIHRoaXMuJGVtaXQoJ3ZhbGlkYXRpb25DaGFuZ2VkJywgISFuZXUpOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGFzeW5jIHRlc3QoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgY3JlZGVudGlhbHMgPSBgJHsgdGhpcy52YWx1ZS5kZWNvZGVkRGF0YS5jbGllbnRJZGVudGlmaWVyIH06JHsgdGhpcy52YWx1ZS5kZWNvZGVkRGF0YS5jbGllbnRTZWNyZXQgfWA7CiAgICAgICAgY29uc3QgZW5jb2RlZCA9IGJhc2U2NEVuY29kZShjcmVkZW50aWFscyk7CgogICAgICAgIGNvbnN0IHJlcXVlc3RPcHRpb25zID0gewogICAgICAgICAgdXJsOiAgICAgICAgICAgICAgICAgICdtZXRhL3Byb3h5L2F1dGgucGhvZW5peG5hcC5jb20vYXV0aC9yZWFsbXMvQk1DL3Byb3RvY29sL29wZW5pZC1jb25uZWN0L3Rva2VuLycsCiAgICAgICAgICBtZXRob2Q6ICAgICAgICAgICAgICAgJ1BPU1QnLAogICAgICAgICAgaGVhZGVyczogICAgICAgICAgICAgIHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnLCAnWC1BUEktQXV0aC1IZWFkZXInOiBgQmFzaWMgJHsgZW5jb2RlZCB9YCB9LAogICAgICAgICAgZGF0YTogICAgICAgICAgICAgICAgICdncmFudF90eXBlPWNsaWVudF9jcmVkZW50aWFscycsCiAgICAgICAgICByZWRpcmVjdFVuYXV0aG9yaXplZDogZmFsc2UsCiAgICAgICAgfTsKCiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9yZXF1ZXN0JywgcmVxdWVzdE9wdGlvbnMpOwogICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZTsKCiAgICAgICAgaWYgKGRhdGEuYWNjZXNzX3Rva2VuICE9PSB1bmRlZmluZWQgJiYgZGF0YS5hY2Nlc3NfdG9rZW4gIT09IG51bGwgJiYgZGF0YS5hY2Nlc3NfdG9rZW4gIT09ICcnKSB7CiAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["pnap.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pnap.vue","sourceRoot":"node_modules/@rancher/shell/cloud-credential","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { base64Encode } from '@shell/utils/crypto';\n\nexport default {\n  components: { LabeledInput },\n  mixins:     [CreateEditView],\n\n  watch: {\n    'value.decodedData.clientIdentifier'(neu) {\n      this.$emit('validationChanged', !!neu);\n    },\n    'value.decodedData.clientSecret'(neu) {\n      this.$emit('validationChanged', !!neu);\n    }\n  },\n\n  methods: {\n    async test() {\n      try {\n        const credentials = `${ this.value.decodedData.clientIdentifier }:${ this.value.decodedData.clientSecret }`;\n        const encoded = base64Encode(credentials);\n\n        const requestOptions = {\n          url:                  'meta/proxy/auth.phoenixnap.com/auth/realms/BMC/protocol/openid-connect/token/',\n          method:               'POST',\n          headers:              { 'Content-Type': 'application/x-www-form-urlencoded', 'X-API-Auth-Header': `Basic ${ encoded }` },\n          data:                 'grant_type=client_credentials',\n          redirectUnauthorized: false,\n        };\n\n        const response = await this.$store.dispatch('management/request', requestOptions);\n        const data = await response;\n\n        if (data.access_token !== undefined && data.access_token !== null && data.access_token !== '') {\n          return true;\n        }\n\n        return false;\n      } catch (e) {\n        return false;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mt-20\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          :value=\"value.decodedData.clientIdentifier\"\n          label-key=\"cluster.credential.pnap.clientIdentifier.label\"\n          placeholder-key=\"cluster.credential.pnap.clientIdentifier.placeholder\"\n          type=\"text\"\n          :mode=\"mode\"\n          @input=\"value.setData('clientIdentifier', $event);\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          :value=\"value.decodedData.clientSecret\"\n          label-key=\"cluster.credential.pnap.clientSecret.label\"\n          placeholder-key=\"cluster.credential.pnap.clientSecret.placeholder\"\n          type=\"text\"\n          :mode=\"mode\"\n          @input=\"value.setData('clientSecret', $event);\"\n        />\n      </div>\n    </div>\n    <div class=\"row mt-5\">\n      <p\n        v-clean-html=\"t('cluster.credential.pnap.clientSecret.help', {}, true)\"\n        class=\"text-muted mt-10\"\n      />\n    </div>\n  </div>\n</template>\n"]}]}