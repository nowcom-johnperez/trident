{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/LabeledSelect.vue?vue&type=style&index=0&id=373043e7&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/LabeledSelect.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoubGFiZWxlZC1zZWxlY3QgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAvLyBQcmV2ZW50IG5hbWVzcGFjZSBmaWVsZCBmcm9tIHdpZ2dsaW5nIG9yIGNoYW5naW5nCiAgLy8gaGVpZ2h0IHdoZW4gaXQgaXMgdG9nZ2xlZCBmcm9tIGEgTGFiZWxlZElucHV0IHRvIGEKICAvLyBMYWJlbGVkU2VsZWN0LgogIHBhZGRpbmctYm90dG9tOiAxcHg7CgogICYubm8tbGFiZWwuY29tcGFjdC1pbnB1dCB7CiAgICA6OnYtZGVlcCAudnNfX2FjdGlvbnM6YWZ0ZXIgewogICAgICB0b3A6IC0ycHg7CiAgICB9CgogICAgLmxhYmVsZWQtY29udGFpbmVyIHsKICAgICAgcGFkZGluZzogNXB4IDAgMXB4IDEwcHg7CiAgICB9CiAgfQoKICAmLm5vLWxhYmVsOm5vdCguY29tcGFjdC1pbnB1dCkgewogICAgaGVpZ2h0OiAkaW5wdXQtaGVpZ2h0OwogICAgcGFkZGluZy10b3A6IDRweDsKCiAgICA6OnYtZGVlcCAudnNfX2FjdGlvbnM6YWZ0ZXIgewogICAgICB0b3A6IDA7CiAgICB9CiAgfQoKICAuaWNvbi1zcGlubmVyIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIGxlZnQ6IGNhbGMoNTAlIC0gLjVlbSk7CiAgICB0b3A6IGNhbGMoNTAlIC0gLjVlbSk7CiAgfQoKICAubGFiZWxlZC1jb250YWluZXIgewogICAgLy8gTWFrZSBMYWJlbGVkU2VsZWN0IGFuZCBMYWJlbGVkSW5wdXQgdGhlIHNhbWUgaGVpZ2h0IHNvIHRoZXkKICAgIC8vIGRvbid0IHdpZ2dsZSB3aGVuIHlvdSB0b2dnbGUgYmV0d2VlbiB0aGVtLgogICAgcGFkZGluZzogN3B4IDAgMCAkaW5wdXQtcGFkZGluZy1zbTsKICAgIHBhZGRpbmc6ICRpbnB1dC1wYWRkaW5nLXNtIDAgMCAkaW5wdXQtcGFkZGluZy1zbTsKCiAgICBsYWJlbCB7CiAgICAgIG1hcmdpbjogMDsKICAgIH0KCiAgICAuc2VsZWN0ZWQgewogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIH0KICB9CgogICYudmlldyB7CiAgICAmLmxhYmVsZWQtaW5wdXQgewogICAgICAubGFiZWxlZC1jb250YWluZXIgewogICAgICAgIHBhZGRpbmc6IDA7CiAgICAgIH0KICAgIH0KICB9CgogICYudGFnZ2FibGUuY29tcGFjdC1pbnB1dCB7CiAgICBtaW4taGVpZ2h0OiAkdW5sYWJlbGVkLWlucHV0LWhlaWdodDsKICAgIDo6di1kZWVwIC52c19fc2VsZWN0ZWQtb3B0aW9ucyB7CiAgICAgIHBhZGRpbmctdG9wOiA4cHggIWltcG9ydGFudDsKICAgIH0KICB9CgogICYudGFnZ2FibGU6bm90KC5jb21wYWN0LWlucHV0KSB7CiAgICBtaW4taGVpZ2h0OiAkaW5wdXQtaGVpZ2h0OwogICAgOjp2LWRlZXAgLnZzX19zZWxlY3RlZC1vcHRpb25zIHsKICAgICAgLy8gTmVlZCB0byBhZGp1c3QgbWFyZ2luIHdoZW4gdGhlcmUgaXMgYSBsYWJlbCBpbiB0aGUgY29udHJvbCB0byBhZGQgc3BhY2UgYmV0d2VlbiB0aGUgbGFiZWwgYW5kIHRoZSB0YWdzCiAgICAgIG1hcmdpbi10b3A6IDBweDsKICAgIH0KICB9CgogICY6bm90KC50YWdnYWJsZSkgewogICAgOjp2LWRlZXAgLnZzX19zZWxlY3RlZC1vcHRpb25zIHsKICAgICAgLy8gRW5zdXJlIHdob2xlIHNlbGVjdCBpcyBjbGlja2FibGUgdG8gY2xvc2UgdGhlIHNlbGVjdCB3aGVuIG9wZW4KICAgICAgLnZzX19zZWxlY3RlZCB7CiAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgIH0KICAgIH0KICB9CgogICYudGFnZ2FibGUgewogICAgOjp2LWRlZXAgLnZzX19zZWxlY3RlZC1vcHRpb25zIHsKICAgICAgcGFkZGluZzogM3B4IDA7CiAgICAgIC52c19fc2VsZWN0ZWQgewogICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0tYWNjZW50LWJ0bik7CiAgICAgICAgaGVpZ2h0OiAyMHB4OwogICAgICAgIG1pbi1oZWlnaHQ6IHVuc2V0ICFpbXBvcnRhbnQ7CiAgICAgICAgcGFkZGluZzogMCAwIDAgN3B4ICFpbXBvcnRhbnQ7CgogICAgICAgID4gYnV0dG9uIHsKICAgICAgICAgIGhlaWdodDogMjBweDsKICAgICAgICAgIGxpbmUtaGVpZ2h0OiAxNHB4OwogICAgICAgIH0KCiAgICAgICAgPiBidXR0b246aG92ZXIgewogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7CiAgICAgICAgICBib3JkZXItcmFkaXVzOiAwOwoKICAgICAgICAgICY6OmFmdGVyIHsKICAgICAgICAgICAgY29sb3I6ICNmZmY7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQoKICA6OnYtZGVlcCAudnNfX3NlbGVjdGVkLW9wdGlvbnMgewogICAgbWFyZ2luLXRvcDogLTVweDsKICB9CgogIDo6di1kZWVwIC52LXNlbGVjdDpub3QoLnZzLS1zaW5nbGUpIHsKICAgIC52c19fc2VsZWN0ZWQtb3B0aW9ucyB7CiAgICAgIHBhZGRpbmc6IDVweCAwOwogICAgfQogIH0KCiAgOjp2LWRlZXAgLnZzX19hY3Rpb25zIHsKICAgICY6YWZ0ZXIgewogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIHRvcDogLTEwcHg7CiAgICB9CiAgfQoKICA6OnYtZGVlcCAudi1zZWxlY3QudnMtLW9wZW4gewogICAgLnZzX19kcm9wZG93bi10b2dnbGUgewogICAgICBjb2xvcjogdmFyKC0tb3V0bGluZSkgIWltcG9ydGFudDsKICAgIH0KICB9CgogIDo6di1kZWVwICYuZGlzYWJsZWQgewogICAgLmxhYmVsZWQtY29udGFpbmVyLAogICAgLnZzX19kcm9wZG93bi10b2dnbGUsCiAgICBpbnB1dCwKICAgIGxhYmVsIHsKICAgICAgY3Vyc29yOiBub3QtYWxsb3dlZDsKICAgIH0KICB9CgogIC5uby1sYWJlbCA6OnYtZGVlcCB7CiAgICAmLnYtc2VsZWN0Om5vdCgudnMtLXNpbmdsZSkgewogICAgICBtaW4taGVpZ2h0OiAzM3B4OwogICAgfQoKICAgICYuc2VsZWN0ZWQgewogICAgICBwYWRkaW5nLXRvcDogOHB4OwogICAgICBwYWRkaW5nLWJvdHRvbTogOXB4OwogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgIG1heC1oZWlnaHQ6IDIuM2VtOwogICAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgfQoKICAgIC52c19fc2VsZWN0ZWQtb3B0aW9ucyB7CiAgICAgIHBhZGRpbmc6IDhweCAwIDdweCAwOwogICAgfQogIH0KfQoKLy8gU3R5bGluZyBmb3Igb3B0aW9uIGdyb3VwIGJhZGdlCi52c19fZHJvcGRvd24tbWVudSAudnNfX2Ryb3Bkb3duLW9wdGlvbiAudnNfX29wdGlvbi1raW5kLWdyb3VwIHsKICBkaXNwbGF5OiBmbGV4OwogID4gYiB7CiAgICBmbGV4OiAxOwogIH0KICA+IGRpdiB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5KTsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQpOwogICAgZm9udC1zaXplOiAxMnB4OwogICAgaGVpZ2h0OiAxOHB4OwogICAgbGluZS1oZWlnaHQ6IDE4cHg7CiAgICBtYXJnaW4tdG9wOiAxcHg7CiAgICBwYWRkaW5nOiAwIDEwcHg7CiAgfQp9CgovLyBTdHlsaW5nIGZvciBvcHRpb24gaGlnaGxpZ2h0ZWQKLnZzX19kcm9wZG93bi1vcHRpb24gewogID4gLm9wdGlvbi1raW5kLWhpZ2hsaWdodGVkIHsKICAgIGNvbG9yOiB2YXIoLS1kcm9wZG93bi1oaWdobGlnaHQtdGV4dCk7CgogICAgJjpob3ZlciB7CiAgICAgIGNvbG9yOiB2YXIoLS1kcm9wZG93bi1ob3Zlci10ZXh0KTsKICAgIH0KICB9CgogICYudnNfX2Ryb3Bkb3duLW9wdGlvbi0tc2VsZWN0ZWQsCiAgJi52c19fZHJvcGRvd24tb3B0aW9uLS1oaWdobGlnaHQgewogICAgPiAub3B0aW9uLWtpbmQtaGlnaGxpZ2h0ZWQgewogICAgICBjb2xvcjogdmFyKC0tZHJvcGRvd24taG92ZXItdGV4dCk7CiAgICB9CiAgfQp9Cgo="},{"version":3,"sources":["LabeledSelect.vue"],"names":[],"mappings":";;AAofile":"LabeledSelect.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport CompactInput from '@shell/mixins/compact-input';\nimport LabeledFormElement from '@shell/mixins/labeled-form-element';\nimport { get } from '@shell/utils/object';\nimport { LabeledTooltip } from '@components/LabeledTooltip';\nimport VueSelectOverrides from '@shell/mixins/vue-select-overrides';\nimport { onClickOption, calculatePosition } from '@shell/utils/select';\nimport isEqual from 'lodash/isEqual';\n\nexport default {\n  name: 'LabeledSelect',\n\n  components: { LabeledTooltip },\n  mixins:     [CompactInput, LabeledFormElement, VueSelectOverrides],\n\n  props: {\n    appendToBody: {\n      default: true,\n      type:    Boolean,\n    },\n    clearable: {\n      default: false,\n      type:    Boolean\n    },\n    disabled: {\n      default: false,\n      type:    Boolean\n    },\n    required: {\n      default: false,\n      type:    Boolean\n    },\n    hoverTooltip: {\n      default: true,\n      type:    Boolean\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n    localizedLabel: {\n      default: false,\n      type:    Boolean\n    },\n    optionKey: {\n      default: null,\n      type:    String\n    },\n    optionLabel: {\n      default: 'label',\n      type:    String\n    },\n    placement: {\n      default: null,\n      type:    String\n    },\n    reduce: {\n      default: (e) => {\n        if (e && typeof e === 'object' && e.value !== undefined) {\n          return e.value;\n        }\n\n        return e;\n      },\n      type: Function\n    },\n    selectable: {\n      default: (opt) => {\n        if ( opt ) {\n          if ( opt.disabled || opt.kind === 'group' || opt.kind === 'divider' || opt.loading ) {\n            return false;\n          }\n        }\n\n        return true;\n      },\n      type: Function\n    },\n    status: {\n      default: null,\n      type:    String\n    },\n    tooltip: {\n      default: null,\n      type:    [String, Object]\n    },\n    value: {\n      default: null,\n      type:    [String, Object, Number, Array, Boolean]\n    },\n    closeOnSelect: {\n      type:    Boolean,\n      default: true\n    },\n  },\n\n  data() {\n    return {\n      selectedVisibility: 'visible',\n      shouldOpen:         true\n    };\n  },\n\n  computed: {\n    hasLabel() {\n      return this.isCompact ? false : !!this.label || !!this.labelKey || !!this.$slots.label;\n    },\n  },\n\n  methods: {\n    // resizeHandler = in mixin\n    focusSearch() {\n      const blurredAgo = Date.now() - this.blurred;\n\n      if (!this.focused && blurredAgo < 250) {\n        return;\n      }\n\n      this.$nextTick(() => {\n        const el = this.$refs['select-input']?.searchEl;\n\n        if (el) {\n          el.focus();\n        }\n      });\n    },\n\n    onFocus() {\n      this.selectedVisibility = 'hidden';\n      this.onFocusLabeled();\n    },\n\n    onBlur() {\n      this.selectedVisibility = 'visible';\n      this.onBlurLabeled();\n    },\n\n    onOpen() {\n      this.$emit('on-open');\n      this.resizeHandler();\n    },\n\n    onClose() {\n      this.$emit('on-close');\n    },\n\n    getOptionLabel(option) {\n      if (!option) {\n        return;\n      }\n\n      // This check is only needed if its possible for an option's label to change without the option's value changing - we can skip this if options are just strings or numbers\n      // HOWEVER even if strings are passed to v-select the 'option' in the slot is normalized to {label: <option>} so we have to check the options prop here instead of the 'option' itself\n      if (typeof this.options[0] === 'object') {\n        const newOption = this.getUpdatedOption(option);\n\n        if (newOption) {\n          const label = get(newOption, this.optionLabel);\n\n          return this.localizedLabel ? this.$store.getters['i18n/t'](label) || label : label;\n        }\n      }\n\n      if (this.$attrs['get-option-label']) {\n        return this.$attrs['get-option-label'](option);\n      }\n      if (get(option, this.optionLabel)) {\n        if (this.localizedLabel) {\n          const label = get(option, this.optionLabel);\n\n          return this.$store.getters['i18n/t'](label) || label;\n        } else {\n          return get(option, this.optionLabel);\n        }\n      } else {\n        return option;\n      }\n    },\n\n    // If the option's label changed in parent but value did not, the label wont be automatically updated here\n    // Ensure that the label being shown is still present in the options prop and find the new one if not\n    getUpdatedOption(option) {\n      const isOutdated = this.options && !this.options.find((opt) => option[this.optionLabel] === opt[this.optionLabel]);\n\n      return isOutdated ? this.options.find((opt) => isEqual(this.reduce(option), this.reduce(opt))) : undefined;\n    },\n\n    positionDropdown(dropdownList, component, { width }) {\n      calculatePosition(dropdownList, component, width, this.placement);\n    },\n\n    get,\n\n    onClickOption(option, event) {\n      onClickOption.call(this, option, event);\n    },\n\n    dropdownShouldOpen(instance, forceOpen = false) {\n      const { noDrop, mutableLoading } = instance;\n      const { open } = instance;\n      const shouldOpen = this.shouldOpen;\n\n      if (forceOpen) {\n        instance.open = true;\n\n        return true;\n      }\n\n      if (shouldOpen === false) {\n        this.shouldOpen = true;\n        instance.closeSearchOptions();\n      }\n\n      return noDrop ? false : open && shouldOpen && !mutableLoading;\n    },\n\n    onSearch(newSearchString) {\n      if (newSearchString) {\n        this.dropdownShouldOpen(this.$refs['select-input'], true);\n      }\n    },\n\n    getOptionKey(opt) {\n      if (this.optionKey) {\n        return get(opt, this.optionKey);\n      }\n\n      return this.getOptionLabel(opt);\n    }\n  },\n};\n</script>\n\n<template>\n  <div\n    ref=\"select\"\n    class=\"labeled-select\"\n    :class=\"{\n      disabled: isView || disabled,\n      focused,\n      [mode]: true,\n      [status]: status,\n      taggable: $attrs.taggable,\n      taggable: $attrs.multiple,\n      hoverable: hoverTooltip,\n      'compact-input': isCompact,\n      'no-label': !hasLabel,\n    }\"\n    @click=\"focusSearch\"\n    @focus=\"focusSearch\"\n  >\n    <div\n      :class=\"{ 'labeled-container': true, raised, empty, [mode]: true }\"\n      :style=\"{ border: 'none' }\"\n    >\n      <label v-if=\"hasLabel\">\n        <t\n          v-if=\"labelKey\"\n          :k=\"labelKey\"\n        />\n        <template v-else-if=\"label\">{{ label }}</template>\n\n        <span\n          v-if=\"requiredField\"\n          class=\"required\"\n        >*</span>\n      </label>\n    </div>\n    <v-select\n      ref=\"select-input\"\n      v-bind=\"$attrs\"\n      class=\"inline\"\n      :append-to-body=\"appendToBody\"\n      :calculate-position=\"positionDropdown\"\n      :class=\"{ 'no-label': !(label || '').length }\"\n      :clearable=\"clearable\"\n      :disabled=\"isView || disabled || loading\"\n      :get-option-key=\"getOptionKey\"\n      :get-option-label=\"(opt) => getOptionLabel(opt)\"\n      :label=\"optionLabel\"\n      :options=\"options\"\n      :map-keydown=\"mappedKeys\"\n      :placeholder=\"placeholder\"\n      :reduce=\"(x) => reduce(x)\"\n      :searchable=\"isSearchable\"\n      :selectable=\"selectable\"\n      :value=\"value != null && !loading ? value : ''\"\n      :dropdown-should-open=\"dropdownShouldOpen\"\n      v-on=\"$listeners\"\n      @search:blur=\"onBlur\"\n      @search:focus=\"onFocus\"\n      @search=\"onSearch\"\n      @open=\"onOpen\"\n      @close=\"onClose\"\n      @option:selected=\"$emit('selecting', $event)\"\n    >\n      <template #option=\"option\">\n        <template v-if=\"option.kind === 'group'\">\n          <div class=\"vs__option-kind-group\">\n            <b>{{ getOptionLabel(option) }}</b>\n            <div v-if=\"option.badge\">\n              {{ option.badge }}\n            </div>\n          </div>\n        </template>\n        <template v-else-if=\"option.kind === 'divider'\">\n          <hr>\n        </template>\n        <template v-else-if=\"option.kind === 'highlighted'\">\n          <div class=\"option-kind-highlighted\">\n            {{ option.label }}\n          </div>\n        </template>\n        <div\n          v-else\n          @mousedown=\"(e) => onClickOption(option, e)\"\n        >\n          {{ getOptionLabel(option) }}\n          <i\n            v-if=\"option.error\"\n            class=\"icon icon-warning pull-right\"\n            style=\"font-size: 20px;\"\n          />\n        </div>\n      </template>\n      <!-- Pass down templates provided by the caller -->\n      <template\n        v-for=\"(_, slot) of $scopedSlots\"\n        #[slot]=\"scope\"\n      >\n        <slot\n          :name=\"slot\"\n          v-bind=\"scope\"\n        />\n      </template>\n    </v-select>\n    <i\n      v-if=\"loading\"\n      class=\"icon icon-spinner icon-spin icon-lg\"\n    />\n    <LabeledTooltip\n      v-if=\"tooltip && !focused\"\n      :hover=\"hoverTooltip\"\n      :value=\"tooltip\"\n      :status=\"status\"\n    />\n    <LabeledTooltip\n      v-if=\"!!validationMessage\"\n      :hover=\"hoverTooltip\"\n      :value=\"validationMessage\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n\n.labeled-select {\n  position: relative;\n  // Prevent namespace field from wiggling or changing\n  // height when it is toggled from a LabeledInput to a\n  // LabeledSelect.\n  padding-bottom: 1px;\n\n  &.no-label.compact-input {\n    ::v-deep .vs__actions:after {\n      top: -2px;\n    }\n\n    .labeled-container {\n      padding: 5px 0 1px 10px;\n    }\n  }\n\n  &.no-label:not(.compact-input) {\n    height: $input-height;\n    padding-top: 4px;\n\n    ::v-deep .vs__actions:after {\n      top: 0;\n    }\n  }\n\n  .icon-spinner {\n    position: absolute;\n    left: calc(50% - .5em);\n    top: calc(50% - .5em);\n  }\n\n  .labeled-container {\n    // Make LabeledSelect and LabeledInput the same height so they\n    // don't wiggle when you toggle between them.\n    padding: 7px 0 0 $input-padding-sm;\n    padding: $input-padding-sm 0 0 $input-padding-sm;\n\n    label {\n      margin: 0;\n    }\n\n    .selected {\n      background-color: transparent;\n    }\n  }\n\n  &.view {\n    &.labeled-input {\n      .labeled-container {\n        padding: 0;\n      }\n    }\n  }\n\n  &.taggable.compact-input {\n    min-height: $unlabeled-input-height;\n    ::v-deep .vs__selected-options {\n      padding-top: 8px !important;\n    }\n  }\n\n  &.taggable:not(.compact-input) {\n    min-height: $input-height;\n    ::v-deep .vs__selected-options {\n      // Need to adjust margin when there is a label in the control to add space between the label and the tags\n      margin-top: 0px;\n    }\n  }\n\n  &:not(.taggable) {\n    ::v-deep .vs__selected-options {\n      // Ensure whole select is clickable to close the select when open\n      .vs__selected {\n        width: 100%;\n      }\n    }\n  }\n\n  &.taggable {\n    ::v-deep .vs__selected-options {\n      padding: 3px 0;\n      .vs__selected {\n        border-color: var(--accent-btn);\n        height: 20px;\n        min-height: unset !important;\n        padding: 0 0 0 7px !important;\n\n        > button {\n          height: 20px;\n          line-height: 14px;\n        }\n\n        > button:hover {\n          background-color: var(--primary);\n          border-radius: 0;\n\n          &::after {\n            color: #fff;\n          }\n        }\n      }\n    }\n  }\n\n  ::v-deep .vs__selected-options {\n    margin-top: -5px;\n  }\n\n  ::v-deep .v-select:not(.vs--single) {\n    .vs__selected-options {\n      padding: 5px 0;\n    }\n  }\n\n  ::v-deep .vs__actions {\n    &:after {\n      position: relative;\n      top: -10px;\n    }\n  }\n\n  ::v-deep .v-select.vs--open {\n    .vs__dropdown-toggle {\n      color: var(--outline) !important;\n    }\n  }\n\n  ::v-deep &.disabled {\n    .labeled-container,\n    .vs__dropdown-toggle,\n    input,\n    label {\n      cursor: not-allowed;\n    }\n  }\n\n  .no-label ::v-deep {\n    &.v-select:not(.vs--single) {\n      min-height: 33px;\n    }\n\n    &.selected {\n      padding-top: 8px;\n      padding-bottom: 9px;\n      position: relative;\n      max-height: 2.3em;\n      overflow: hidden;\n    }\n\n    .vs__selected-options {\n      padding: 8px 0 7px 0;\n    }\n  }\n}\n\n// Styling for option group badge\n.vs__dropdown-menu .vs__dropdown-option .vs__option-kind-group {\n  display: flex;\n  > b {\n    flex: 1;\n  }\n  > div {\n    background-color: var(--primary);\n    border-radius: 4px;\n    color: var(--primary-text);\n    font-size: 12px;\n    height: 18px;\n    line-height: 18px;\n    margin-top: 1px;\n    padding: 0 10px;\n  }\n}\n\n// Styling for option highlighted\n.vs__dropdown-option {\n  > .option-kind-highlighted {\n    color: var(--dropdown-highlight-text);\n\n    &:hover {\n      color: var(--dropdown-hover-text);\n    }\n  }\n\n  &.vs__dropdown-option--selected,\n  &.vs__dropdown-option--highlight {\n    > .option-kind-highlighted {\n      color: var(--dropdown-hover-text);\n    }\n  }\n}\n\n</style>\n"]}]}