{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/CopyToClipboardText.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/CopyToClipboardText.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgdGV4dDogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICAvLyBTaG93IGFzIHBsYWluIC0gZG9uJ3Qgc2hvdyBpbiBsaW5rIHN0eWxlCiAgICBwbGFpbjogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4geyBjb3BpZWQ6IGZhbHNlIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgY2xpY2tlZChldmVudCkgewogICAgICBpZiAoIXRoaXMuY29waWVkKSB7CiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgICB0aGlzLiRjb3B5VGV4dCh0aGlzLnRleHQpOwogICAgICAgIHRoaXMuY29waWVkID0gdHJ1ZTsKCiAgICAgICAgbGV0IHQgPSBldmVudC50YXJnZXQ7CgogICAgICAgIGlmICh0LnRhZ05hbWUgPT09ICdJJykgewogICAgICAgICAgdCA9IHQucGFyZW50RWxlbWVudCB8fCB0OwogICAgICAgIH0KICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICAgIHRoaXMuY29waWVkID0gZmFsc2U7CiAgICAgICAgfSwgNTAwKTsKICAgICAgfQogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["CopyToClipboardText.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CopyToClipboardText.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nexport default {\n  props: {\n    text: {\n      type:     String,\n      required: true,\n    },\n    // Show as plain - don't show in link style\n    plain: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  data() {\n    return { copied: false };\n  },\n\n  methods: {\n    clicked(event) {\n      if (!this.copied) {\n        event.preventDefault();\n        this.$copyText(this.text);\n        this.copied = true;\n\n        let t = event.target;\n\n        if (t.tagName === 'I') {\n          t = t.parentElement || t;\n        }\n        setTimeout(() => {\n          this.copied = false;\n        }, 500);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <a\n    class=\"copy-to-clipboard-text\"\n    :class=\"{ 'copied': copied, 'plain': plain}\"\n    href=\"#\"\n    @click=\"clicked\"\n  >\n    {{ text }} <i\n      class=\"icon\"\n      :class=\"{ 'icon-copy': !copied, 'icon-checkmark': copied}\"\n    />\n  </a>\n</template>\n<style lang=\"scss\" scoped>\n  .copy-to-clipboard-text {\n    &.plain {\n      color: var(--body-text);\n\n      &:hover {\n        text-decoration: none;\n      }\n    }\n\n    &.copied {\n      pointer-events: none;\n      color: var(--success);\n    }\n  }\n</style>\n"]}]}