{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/fleet.cattle.io.bundle.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/fleet.cattle.io.bundle.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEZMRUVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgUmVzb3VyY2VGZXRjaCBmcm9tICdAc2hlbGwvbWl4aW5zL3Jlc291cmNlLWZldGNoJzsKaW1wb3J0IHsKICBBR0UsCiAgU1RBVEUsCiAgTkFNRSwKfSBmcm9tICdAc2hlbGwvY29uZmlnL3RhYmxlLWhlYWRlcnMnOwppbXBvcnQgeyBpc0hhcnZlc3RlckNsdXN0ZXIgfSBmcm9tICdAc2hlbGwvdXRpbHMvY2x1c3Rlcic7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogICAgICAgJ0xpc3RCdW5kbGUnLAogIGNvbXBvbmVudHM6IHsgQmFubmVyLCBSZXNvdXJjZVRhYmxlIH0sCiAgbWl4aW5zOiAgICAgW1Jlc291cmNlRmV0Y2hdLAogIHByb3BzOiAgICAgIHsKICAgIHJlc291cmNlOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIHNjaGVtYTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICB1c2VRdWVyeVBhcmFtc0ZvclNpbXBsZUZpbHRlcmluZzogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgYXdhaXQgdGhpcy4kZmV0Y2hUeXBlKHRoaXMucmVzb3VyY2UpOwogICAgaWYgKHRoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvc2NoZW1hRm9yJ10oIEZMRUVULkNMVVNURVIgKSkgewogICAgICB0aGlzLmFsbEZsZWV0ID0gYXdhaXQgdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9hbGwnXShGTEVFVC5DTFVTVEVSKTsKICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsgYWxsRmxlZXQ6IFtdIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGhhcnZlc3RlckNsdXN0ZXJzKCkgewogICAgICBjb25zdCBoYXJ2ZXN0ZXIgPSB7fTsKCiAgICAgIHRoaXMuYWxsRmxlZXQuZm9yRWFjaCgoYykgPT4gewogICAgICAgIGlmIChpc0hhcnZlc3RlckNsdXN0ZXIoYykpIHsKICAgICAgICAgIGhhcnZlc3RlcltjLm1ldGFkYXRhLm5hbWVdID0gYzsKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIGhhcnZlc3RlcjsKICAgIH0sCgogICAgYnVuZGxlcygpIHsKICAgICAgY29uc3QgaGFydmVzdGVyID0gdGhpcy5oYXJ2ZXN0ZXJDbHVzdGVyczsKCiAgICAgIHJldHVybiB0aGlzLnJvd3MuZmlsdGVyKChidW5kbGUpID0+IHsKICAgICAgICBjb25zdCB0YXJnZXRzID0gYnVuZGxlLnNwZWM/LnRhcmdldHMgfHwgW107CgogICAgICAgIC8vIEZpbHRlciBvdXQgYW55IGJ1bmRsZSB0aGF0IGhhcyBvbmUgdGFyZ2V0IHdob3NlIGNsdXN0ZXIgaXMgYSBoYXJ2ZXN0ZXIgY2x1c3RlcgogICAgICAgIGlmICh0YXJnZXRzLmxlbmd0aCA9PT0gMSkgewogICAgICAgICAgcmV0dXJuICFoYXJ2ZXN0ZXJbdGFyZ2V0c1swXS5jbHVzdGVyTmFtZV07CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfSk7CiAgICB9LAoKICAgIGhpZGRlbigpIHsKICAgICAgcmV0dXJuIHRoaXMucm93cy5sZW5ndGggLSB0aGlzLmJ1bmRsZXMubGVuZ3RoOwogICAgfSwKCiAgICBoZWFkZXJzKCkgewogICAgICBjb25zdCBvdXQgPSBbCiAgICAgICAgU1RBVEUsCiAgICAgICAgTkFNRSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAgICAgJ2RlcGxveW1lbnRzUmVhZHknLAogICAgICAgICAgbGFiZWxLZXk6ICd0YWJsZUhlYWRlcnMuYnVuZGxlRGVwbG95bWVudHNSZWFkeScsCiAgICAgICAgICB2YWx1ZTogICAgJ3N0YXR1cy5kaXNwbGF5LnJlYWR5Q2x1c3RlcnMnLAogICAgICAgICAgc29ydDogICAgICdzdGF0dXMuZGlzcGxheS5yZWFkeUNsdXN0ZXJzJywKICAgICAgICAgIHNlYXJjaDogICBbJ3N0YXR1cy5zdW1tYXJ5LnJlYWR5JywgJ3N0YXR1cy5zdW1tYXJ5LmRlc2lyZWRSZWFkeSddLAogICAgICAgIH0sCiAgICAgICAgQUdFCiAgICAgIF07CgogICAgICByZXR1cm4gb3V0OwogICAgfSwKICB9LAoKICAvLyBvdmVycmlkZSB3aXRoIHJlbGV2YW50IGluZm8gZm9yIHRoZSBsb2FkaW5nIGluZGljYXRvciBzaW5jZSB0aGlzIGRvZXNuJ3QgdXNlIGl0J3Mgb3duIG1hc3RoZWFkCiAgJGxvYWRpbmdSZXNvdXJjZXMoKSB7CiAgICAvLyByZXN1bHRzIGFyZSBmaWx0ZXJlZCBzbyB3ZSB3b3VsZG4ndCBnZXQgdGhlIGNvcnJlY3QgY291bnQgb24gaW5kaWNhdG9yLi4uCiAgICByZXR1cm4geyBsb2FkSW5kZXRlcm1pbmF0ZTogdHJ1ZSB9OwogIH0sCn07Cg=="},{"version":3,"sources":["fleet.cattle.io.bundle.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"fleet.cattle.io.bundle.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport { Banner } from '@components/Banner';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport {\n  AGE,\n  STATE,\n  NAME,\n} from '@shell/config/table-headers';\nimport { isHarvesterCluster } from '@shell/utils/cluster';\n\nexport default {\n  name:       'ListBundle',\n  components: { Banner, ResourceTable },\n  mixins:     [ResourceFetch],\n  props:      {\n    resource: {\n      type:     String,\n      required: true,\n    },\n    schema: {\n      type:     Object,\n      required: true,\n    },\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.allFleet = await this.$store.getters['management/all'](FLEET.CLUSTER);\n    }\n  },\n\n  data() {\n    return { allFleet: [] };\n  },\n\n  computed: {\n    harvesterClusters() {\n      const harvester = {};\n\n      this.allFleet.forEach((c) => {\n        if (isHarvesterCluster(c)) {\n          harvester[c.metadata.name] = c;\n        }\n      });\n\n      return harvester;\n    },\n\n    bundles() {\n      const harvester = this.harvesterClusters;\n\n      return this.rows.filter((bundle) => {\n        const targets = bundle.spec?.targets || [];\n\n        // Filter out any bundle that has one target whose cluster is a harvester cluster\n        if (targets.length === 1) {\n          return !harvester[targets[0].clusterName];\n        }\n\n        return true;\n      });\n    },\n\n    hidden() {\n      return this.rows.length - this.bundles.length;\n    },\n\n    headers() {\n      const out = [\n        STATE,\n        NAME,\n        {\n          name:     'deploymentsReady',\n          labelKey: 'tableHeaders.bundleDeploymentsReady',\n          value:    'status.display.readyClusters',\n          sort:     'status.display.readyClusters',\n          search:   ['status.summary.ready', 'status.summary.desiredReady'],\n        },\n        AGE\n      ];\n\n      return out;\n    },\n  },\n\n  // override with relevant info for the loading indicator since this doesn't use it's own masthead\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hidden\"\n      color=\"info\"\n      :label=\"t('fleet.bundles.harvester', {count: hidden} )\"\n    />\n    <ResourceTable\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :rows=\"bundles\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <template #cell:deploymentsReady=\"{row}\">\n        <span\n          v-if=\"row.status && (row.status.summary.desiredReady !== row.status.summary.ready)\"\n          class=\"text-warning\"\n        >\n          {{ row.status.summary.ready }}/{{ row.status.summary.desiredReady }}</span>\n        <span v-else-if=\"row.status\">{{ row.status.summary.desiredReady }}</span>\n        <span v-else>-</span>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"]}]}