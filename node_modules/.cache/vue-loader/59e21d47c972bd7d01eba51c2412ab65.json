{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/IngressTarget.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/IngressTarget.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFdPUktMT0FEX1RZUEVTIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBJbmdyZXNzRnVsbFBhdGggZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybWF0dGVyL0luZ3Jlc3NGdWxsUGF0aCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBJbmdyZXNzRnVsbFBhdGggfSwKICBwcm9wczogICAgICB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHJvdzogewogICAgICB0eXBlOiAgICBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGF3YWl0IFByb21pc2UuYWxsKE9iamVjdC52YWx1ZXMoV09SS0xPQURfVFlQRVMpLm1hcCgodHlwZSkgPT4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsgdHlwZSB9KSkpOwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICB3b3JrbG9hZHMoKSB7CiAgICAgIHJldHVybiBPYmplY3QudmFsdWVzKFdPUktMT0FEX1RZUEVTKS5mbGF0TWFwKCh0eXBlKSA9PiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL2FsbCddKHR5cGUpKTsKICAgIH0sCiAgICBwYXRocygpIHsKICAgICAgcmV0dXJuIHRoaXMucm93LmNyZWF0ZVJ1bGVzRm9yTGlzdFBhZ2UodGhpcy53b3JrbG9hZHMpOwogICAgfSwKICAgIGRlZmF1bHRTZXJ2aWNlKCkgewogICAgICByZXR1cm4gdGhpcy5yb3cuY3JlYXRlRGVmYXVsdFNlcnZpY2UodGhpcy53b3JrbG9hZHMpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["IngressTarget.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IngressTarget.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport { WORKLOAD_TYPES } from '@shell/config/types';\nimport IngressFullPath from '@shell/components/formatter/IngressFullPath';\n\nexport default {\n  components: { IngressFullPath },\n  props:      {\n    value: {\n      type:     Object,\n      required: true\n    },\n    row: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    await Promise.all(Object.values(WORKLOAD_TYPES).map((type) => this.$store.dispatch('cluster/findAll', { type })));\n  },\n\n  computed: {\n    workloads() {\n      return Object.values(WORKLOAD_TYPES).flatMap((type) => this.$store.getters['cluster/all'](type));\n    },\n    paths() {\n      return this.row.createRulesForListPage(this.workloads);\n    },\n    defaultService() {\n      return this.row.createDefaultService(this.workloads);\n    }\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"value\"\n    class=\"ingress-target\"\n    :reactivity=\"workloads.length\"\n  >\n    <div\n      v-for=\"(path, i) in paths\"\n      :key=\"i\"\n      class=\"target\"\n    >\n      <IngressFullPath :row=\"path\" />\n      <i class=\"icon icon-chevron-right\" />\n      <nuxt-link\n        v-if=\"path.serviceName && path.serviceTargetTo\"\n        :to=\"path.serviceTargetTo\"\n      >\n        {{ path.serviceName }}\n      </nuxt-link>\n      <span v-else-if=\"path.serviceName\">\n        {{ path.serviceName }}\n      </span>\n    </div>\n    <div\n      v-if=\"defaultService\"\n      class=\"target\"\n    >\n      {{ t('ingress.target.default') }} <i class=\"icon icon-chevron-right\" />\n      <nuxt-link\n        v-if=\"defaultService.targetTo\"\n        :to=\"defaultService.targetTo\"\n      >\n        {{ defaultService.name }}\n      </nuxt-link>\n      <span v-else>\n        {{ defaultService.name }}\n      </span>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.ingress-target {\n  .target:not(:last-child) {\n    margin-bottom: 5px;\n  }\n}\n</style>\n"]}]}