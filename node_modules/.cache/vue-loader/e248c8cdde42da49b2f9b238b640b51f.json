{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cis.cattle.io.clusterscan.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cis.cattle.io.clusterscan.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cis.cattle.io.clusterscan.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"cis.cattle.io.clusterscan.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport { CIS, CONFIG_MAP } from '@shell/config/types';\nimport { mapGetters } from 'vuex';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { allHash } from '@shell/utils/promise';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { get } from '@shell/utils/object';\nimport { _VIEW, _CREATE } from '@shell/config/query-params';\nimport { isValidCron } from 'cron-validator';\n\nconst semver = require('semver');\n\nexport default {\n  components: {\n    CruResource, LabeledSelect, Banner, Loading, Checkbox, LabeledInput, RadioGroup, UnitInput\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    const hash = await allHash({\n      profiles:   this.$store.dispatch('cluster/findAll', { type: CIS.CLUSTER_SCAN_PROFILE }),\n      benchmarks: this.$store.dispatch('cluster/findAll', { type: CIS.BENCHMARK }),\n    });\n\n    try {\n      this.defaultConfigMap = await this.$store.dispatch('cluster/find', { type: CONFIG_MAP, id: 'cis-operator-system/default-clusterscanprofiles' });\n    } catch {}\n\n    this.allProfiles = hash.profiles;\n    const { scanProfileName } = this.value.spec;\n\n    // if mode is _CREATE and scanProfileName is defined, this is a clone\n    // check if the profile referred to in the original spec still exists\n    if (scanProfileName && this.mode === _CREATE) {\n      const proxyObj = this.allProfiles.filter((profile) => profile.id === scanProfileName)[0];\n\n      if (!proxyObj) {\n        this.$set(this.value.spec, 'scanProfileName', '');\n      }\n    }\n  },\n\n  data() {\n    if (!this.value.metadata.name) {\n      this.value.metadata.generateName = 'scan-';\n    }\n    if (!this.value.spec.scheduledScanConfig) {\n      this.$set(this.value.spec, 'scheduledScanConfig', { scanAlertRule: {} });\n    }\n    if (!this.value.spec.scheduledScanConfig.scanAlertRule) {\n      this.$set(this.value.spec.scheduledScanConfig, 'scanAlertRule', { });\n    }\n    const isScheduled = !!get(this.value, 'spec.scheduledScanConfig.cronSchedule');\n\n    return {\n      allProfiles:         [],\n      defaultConfigMap:    null,\n      scheduledScanConfig: this.value.spec.scheduledScanConfig,\n      scanAlertRule:       this.value.spec.scheduledScanConfig.scanAlertRule,\n      hasAlertManager:     false,\n      isScheduled\n    };\n  },\n\n  computed: {\n    ...mapGetters({ currentCluster: 'currentCluster', t: 'i18n/t' }),\n\n    canBeScheduled() {\n      // check if scan was created and run with an older cis install that doesn't support scheduling/alerting/warn state\n      if (this.mode === _VIEW) {\n        const warn = get(this.value, 'status.summary.warn');\n\n        return !!warn || warn === 0;\n      }\n\n      return this.value.canBeScheduled();\n    },\n\n    validProfiles() {\n      const profileNames = this.allProfiles.filter((profile) => {\n        const benchmarkVersion = profile?.spec?.benchmarkVersion;\n        const benchmark = this.$store.getters['cluster/byId'](CIS.BENCHMARK, benchmarkVersion);\n\n        return this.validateBenchmark(benchmark, this.currentCluster );\n      }).map((profile) => {\n        return { label: profile.id, value: profile.id };\n      });\n\n      return profileNames;\n    },\n\n    defaultProfile() {\n      if (this.defaultConfigMap) {\n        const profiles = this.defaultConfigMap.data;\n        const provider = this.currentCluster.status.provider;\n\n        let name = profiles[provider] || profiles.default;\n\n        if (name.includes(':')) {\n          const pairs = name.split('\\n');\n          const clusterVersion = this.currentCluster.kubernetesVersion;\n\n          pairs.forEach((pair) => {\n            const version = (pair.match(/[<>=]+[-._a-zA-Z0-9]+/) || [])[0];\n\n            try {\n              if (semver.satisfies(clusterVersion, version)) {\n                name = pair.replace(/[<>=]+[-._a-zA-Z0-9]+: /, '');\n              }\n            } catch (e) {\n              // Ignore entries with invalid semver\n            }\n          });\n        }\n        if (name) {\n          const profile = this.allProfiles.find((profile) => profile.id === name);\n          const benchmarkVersion = profile?.spec?.benchmarkVersion;\n          const benchmark = this.$store.getters['cluster/byId'](CIS.BENCHMARK, benchmarkVersion);\n\n          if (this.validateBenchmark(benchmark, this.currentCluster )) {\n            return profile;\n          }\n        }\n        const cis16 = this.validProfiles.find((profile) => profile.value === 'cis-1.6-profile');\n\n        if (cis16) {\n          return this.allProfiles.find((profile) => profile.id === 'cis-1.6-profile');\n        } else {\n          return this.allProfiles.find((profile) => profile.id === 'cis-1.5-profile');\n        }\n      }\n\n      return null;\n    },\n\n    monitoringUrl() {\n      return this.$router.resolve({\n        name:   'c-cluster-monitoring',\n        params: { cluster: this.$route.params.cluster }\n      }).href;\n    },\n\n    validated() {\n      if (this.isScheduled) {\n        const schedule = get(this.value, 'spec.scheduledScanConfig.cronSchedule');\n\n        if (!schedule) {\n          return false;\n        } else {\n          return isValidCron(schedule) && !!this.value.spec.scanProfileName;\n        }\n      }\n\n      return !!this.value.spec.scanProfileName;\n    }\n\n  },\n\n  watch: {\n    defaultProfile(neu) {\n      if (neu && !this.value.spec.scanProfileName) {\n        const benchmarkVersion = neu?.spec?.benchmarkVersion;\n        const benchmark = this.$store.getters['cluster/byId'](CIS.BENCHMARK, benchmarkVersion);\n\n        if (!this.validateBenchmark(benchmark, this.currentCluster)) {\n          return;\n        }\n        this.value.spec.scanProfileName = neu?.id;\n      }\n    },\n  },\n\n  methods: {\n    validateBenchmark(benchmark, currentCluster) {\n      if (!!benchmark?.spec?.clusterProvider) {\n        if ( benchmark?.spec?.clusterProvider !== currentCluster.status.provider) {\n          return false;\n        }\n      }\n\n      try {\n        const clusterVersion = currentCluster.kubernetesVersionDisplay;\n\n        if (benchmark?.spec?.minKubernetesVersion) {\n          if (semver.gt(benchmark?.spec?.minKubernetesVersion, clusterVersion)) {\n            return false;\n          }\n        }\n        if (benchmark?.spec?.maxKubernetesVersion) {\n          if (semver.gt(clusterVersion, benchmark?.spec?.maxKubernetesVersion)) {\n            return false;\n          }\n        }\n      } catch (e) {\n        // Ignore error if something is invalid semver\n      }\n\n      return true;\n    },\n\n    saveScan(cb) {\n      if (!this.value.isScheduled || !this.isScheduled) {\n        delete this.value.spec.scheduledScanConfig;\n      }\n      this.save(cb);\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n\n  <CruResource\n    v-else\n    :validation-passed=\"validated\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :mode=\"mode\"\n    :errors=\"errors\"\n    @finish=\"saveScan\"\n    @error=\"e=>errors = e\"\n  >\n    <template>\n      <Banner\n        v-if=\"!validProfiles.length\"\n        color=\"warning\"\n        :label=\"t('cis.noProfiles')\"\n      />\n\n      <div\n        v-else\n        class=\"row mb-20\"\n      >\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"value.spec.scanProfileName\"\n            :mode=\"mode\"\n            :label=\"t('cis.profile')\"\n            :options=\"validProfiles\"\n          />\n        </div>\n        <div\n          v-if=\"canBeScheduled\"\n          class=\"col span-6\"\n        >\n          <span>{{ t('cis.scoreWarning.label') }}</span> <i\n            v-clean-tooltip=\"t('cis.scoreWarning.protip')\"\n            class=\"icon icon-info\"\n          />\n          <RadioGroup\n            v-model=\"value.spec.scoreWarning\"\n            :mode=\"mode\"\n            name=\"scoreWarning\"\n            :options=\"['pass', 'fail']\"\n            :labels=\"[t('cis.scan.pass'), t('cis.scan.fail')]\"\n          />\n        </div>\n      </div>\n      <template v-if=\"canBeScheduled\">\n        <h3>Scheduling</h3>\n        <div class=\"row mb-20\">\n          <div class=\"col\">\n            <RadioGroup\n              v-model=\"isScheduled\"\n              :mode=\"mode\"\n              name=\"scheduling\"\n              :options=\"[ {value: false, label: t('cis.scheduling.disable')}, {value: true, label: t('cis.scheduling.enable')}]\"\n            />\n          </div>\n        </div>\n        <template v-if=\"isScheduled\">\n          <div class=\"row mb-20\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"scheduledScanConfig.cronSchedule\"\n                required\n                :mode=\"mode\"\n                :label=\"t('cis.cronSchedule.label')\"\n                :placeholder=\"t('cis.cronSchedule.placeholder')\"\n                type=\"cron\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <UnitInput\n                v-model.number=\"scheduledScanConfig.retentionCount\"\n                :suffix=\"t('cis.reports')\"\n                type=\"number\"\n                :mode=\"mode\"\n                :label=\"t('cis.retention')\"\n              />\n            </div>\n          </div>\n          <h3>\n            Alerting\n          </h3>\n          <div class=\"row mb-20\">\n            <div class=\"col span-12\">\n              <Banner\n                v-if=\"scanAlertRule.alertOnFailure || scanAlertRule.alertOnComplete\"\n                class=\"mt-0\"\n                :color=\"hasAlertManager ? 'info' : 'warning'\"\n              >\n                <span v-clean-html=\"t('cis.alertNeeded', {link: monitoringUrl}, true)\" />\n              </banner>\n              <Checkbox\n                v-model=\"scanAlertRule.alertOnComplete\"\n                :mode=\"mode\"\n                :label=\"t('cis.alertOnComplete')\"\n              />\n              <Checkbox\n                v-model=\"scanAlertRule.alertOnFailure\"\n                :mode=\"mode\"\n                :label=\"t('cis.alertOnFailure')\"\n              />\n            </div>\n          </div>\n        </template>\n      </template>\n    </template>\n  </CruResource>\n</template>\n"]}]}