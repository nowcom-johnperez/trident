{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Networking.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Networking.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBBcnJheUxpc3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9BcnJheUxpc3QnOwppbXBvcnQgS2V5VmFsdWUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9LZXlWYWx1ZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwoKY29uc3QgQ0xVU1RFUl9GSVJTVCA9ICdDbHVzdGVyRmlyc3QnOwpjb25zdCBDTFVTVEVSX0ZJUlNUX0hPU1QgPSAnQ2x1c3RlckZpcnN0V2l0aEhvc3ROZXQnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFycmF5TGlzdCwgS2V5VmFsdWUsIExhYmVsZWRJbnB1dCwgTGFiZWxlZFNlbGVjdAogIH0sCgogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCgogICAgbW9kZTogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IHQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXTsKICAgIGNvbnN0IGhvc3RBbGlhc2VzID0gKHRoaXMudmFsdWUuaG9zdEFsaWFzZXMgfHwgW10pLm1hcCgoZW50cnkpID0+IHsKICAgICAgcmV0dXJuIHsKICAgICAgICBpcDogICAgICAgIGVudHJ5LmlwLAogICAgICAgIGhvc3RuYW1lczogZW50cnkuaG9zdG5hbWVzLmpvaW4oJywgJykKICAgICAgfTsKICAgIH0pOwogICAgY29uc3QgeyBkbnNDb25maWcgPSB7fSwgaG9zdG5hbWUsIHN1YmRvbWFpbiB9ID0gdGhpcy52YWx1ZTsKICAgIGNvbnN0IHsgbmFtZXNlcnZlcnMsIHNlYXJjaGVzLCBvcHRpb25zIH0gPSBkbnNDb25maWc7CgogICAgY29uc3Qgb3V0ID0gewogICAgICBkbnNQb2xpY3k6ICAgdGhpcy52YWx1ZS5kbnNQb2xpY3kgfHwgJ0NsdXN0ZXJGaXJzdCcsCiAgICAgIG5ldHdvcmtNb2RlOiB0aGlzLnZhbHVlLmhvc3ROZXR3b3JrID8geyBsYWJlbDogdCgnd29ya2xvYWQubmV0d29ya2luZy5uZXR3b3JrTW9kZS5vcHRpb25zLmhvc3ROZXR3b3JrJyksIHZhbHVlOiB0cnVlIH0gOiB7IGxhYmVsOiB0KCd3b3JrbG9hZC5uZXR3b3JraW5nLm5ldHdvcmtNb2RlLm9wdGlvbnMubm9ybWFsJyksIHZhbHVlOiBmYWxzZSB9LAogICAgICBob3N0QWxpYXNlcywKICAgICAgbmFtZXNlcnZlcnMsCiAgICAgIHNlYXJjaGVzLAogICAgICBob3N0bmFtZSwKICAgICAgc3ViZG9tYWluLAogICAgICBvcHRpb25zCiAgICB9OwoKICAgIHJldHVybiBvdXQ7CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGRuc1BvbGljeUNob2ljZXMoKSB7CiAgICAgIHJldHVybiBbCiAgICAgICAgewogICAgICAgICAgbGFiZWw6IHRoaXMudCgnd29ya2xvYWQubmV0d29ya2luZy5kbnNQb2xpY3kub3B0aW9ucy5kZWZhdWx0JyksCiAgICAgICAgICB2YWx1ZTogJ0RlZmF1bHQnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogdGhpcy50KCd3b3JrbG9hZC5uZXR3b3JraW5nLmRuc1BvbGljeS5vcHRpb25zLmNsdXN0ZXJGaXJzdCcpLAogICAgICAgICAgdmFsdWU6ICdDbHVzdGVyRmlyc3QnCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogdGhpcy50KCd3b3JrbG9hZC5uZXR3b3JraW5nLmRuc1BvbGljeS5vcHRpb25zLmNsdXN0ZXJGaXJzdFdpdGhIb3N0TmV0JyksCiAgICAgICAgICB2YWx1ZTogJ0NsdXN0ZXJGaXJzdFdpdGhIb3N0TmV0JwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6IHRoaXMudCgnd29ya2xvYWQubmV0d29ya2luZy5kbnNQb2xpY3kub3B0aW9ucy5ub25lJyksCiAgICAgICAgICB2YWx1ZTogJ05vbmUnCiAgICAgICAgfSwKICAgICAgXTsKICAgIH0sCgogICAgbmV0d29ya01vZGVDaG9pY2VzKCkgewogICAgICByZXR1cm4gWwogICAgICAgIHsgbGFiZWw6IHRoaXMudCgnd29ya2xvYWQubmV0d29ya2luZy5uZXR3b3JrTW9kZS5vcHRpb25zLm5vcm1hbCcpLCB2YWx1ZTogZmFsc2UgfSwKICAgICAgICB7IGxhYmVsOiB0aGlzLnQoJ3dvcmtsb2FkLm5ldHdvcmtpbmcubmV0d29ya01vZGUub3B0aW9ucy5ob3N0TmV0d29yaycpLCB2YWx1ZTogdHJ1ZSB9LAogICAgICBdOwogICAgfSwKCiAgICAuLi5tYXBHZXR0ZXJzKHsgdDogJ2kxOG4vdCcgfSkKICB9LAoKICB3YXRjaDogewogICAgbmV0d29ya01vZGUobmV1KSB7CiAgICAgIGNvbnN0IG9uID0gbmV1OwoKICAgICAgdGhpcy52YWx1ZS5ob3N0TmV0d29yayA9IG9uOwogICAgICBpZiAoIHRoaXMuZG5zUG9saWN5ID09PSBDTFVTVEVSX0ZJUlNUICkgewogICAgICAgIGlmICggb24gKSB7CiAgICAgICAgICB0aGlzLnZhbHVlLmRuc1BvbGljeSA9IENMVVNURVJfRklSU1RfSE9TVDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy52YWx1ZS5kbnNQb2xpY3kgPSBDTFVTVEVSX0ZJUlNUOwogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICBkbnNQb2xpY3kobmV1KSB7CiAgICAgIGlmICggbmV1ID09PSBDTFVTVEVSX0ZJUlNUICkgewogICAgICAgIGlmICggdGhpcy5uZXR3b3JrTW9kZSApIHsKICAgICAgICAgIHRoaXMudmFsdWUuZG5zUG9saWN5ID0gQ0xVU1RFUl9GSVJTVF9IT1NUOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnZhbHVlLmRuc1BvbGljeSA9IENMVVNURVJfRklSU1Q7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMudmFsdWUuZG5zUG9saWN5ID0gbmV1OwogICAgICB9CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXBkYXRlSG9zdEFsaWFzZXMobmV1KSB7CiAgICAgIHRoaXMuaG9zdEFsaWFzZXMgPSBuZXUubWFwKChlbnRyeSkgPT4gewogICAgICAgIGNvbnN0IGlwID0gZW50cnkuaXAudHJpbSgpOwogICAgICAgIGNvbnN0IGhvc3RuYW1lcyA9IGVudHJ5Lmhvc3RuYW1lcy50cmltKCkuc3BsaXQoL1tccyxdKy8pLmZpbHRlcigoeCkgPT4gISF4KTsKCiAgICAgICAgcmV0dXJuIHsgaXAsIGhvc3RuYW1lcyB9OwogICAgICB9KS5maWx0ZXIoKGVudHJ5KSA9PiBlbnRyeS5pcCAmJiBlbnRyeS5ob3N0bmFtZXMubGVuZ3RoKTsKICAgICAgdGhpcy51cGRhdGUoKTsKICAgIH0sCgogICAgdXBkYXRlKCkgewogICAgICBjb25zdCBkbnNDb25maWcgPSB7CiAgICAgICAgLi4udGhpcy5kbnNDb25maWcsCiAgICAgICAgbmFtZXNlcnZlcnM6IHRoaXMubmFtZXNlcnZlcnMsCiAgICAgICAgc2VhcmNoZXM6ICAgIHRoaXMuc2VhcmNoZXMsCiAgICAgICAgb3B0aW9uczogICAgIHRoaXMub3B0aW9ucwogICAgICB9OwogICAgICBjb25zdCBvdXQgPSB7CiAgICAgICAgLi4udGhpcy52YWx1ZSwKICAgICAgICBkbnNDb25maWcsCiAgICAgICAgZG5zUG9saWN5OiAgIHRoaXMuZG5zUG9saWN5LAogICAgICAgIGhvc3RuYW1lOiAgICB0aGlzLmhvc3RuYW1lLAogICAgICAgIGhvc3RBbGlhc2VzOiB0aGlzLmhvc3RBbGlhc2VzLAogICAgICAgIHN1YmRvbWFpbjogICB0aGlzLnN1YmRvbWFpbiwKICAgICAgICBob3N0TmV0d29yazogdGhpcy5uZXR3b3JrTW9kZS52YWx1ZQogICAgICB9OwoKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBvdXQpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["Networking.vue"],"names":[],"mappingsfile":"Networking.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport ArrayList from '@shell/components/form/ArrayList';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { mapGetters } from 'vuex';\n\nconst CLUSTER_FIRST = 'ClusterFirst';\nconst CLUSTER_FIRST_HOST = 'ClusterFirstWithHostNet';\n\nexport default {\n  components: {\n    ArrayList, KeyValue, LabeledInput, LabeledSelect\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    mode: {\n      type:     String,\n      required: true,\n    },\n  },\n\n  data() {\n    const t = this.$store.getters['i18n/t'];\n    const hostAliases = (this.value.hostAliases || []).map((entry) => {\n      return {\n        ip:        entry.ip,\n        hostnames: entry.hostnames.join(', ')\n      };\n    });\n    const { dnsConfig = {}, hostname, subdomain } = this.value;\n    const { nameservers, searches, options } = dnsConfig;\n\n    const out = {\n      dnsPolicy:   this.value.dnsPolicy || 'ClusterFirst',\n      networkMode: this.value.hostNetwork ? { label: t('workload.networking.networkMode.options.hostNetwork'), value: true } : { label: t('workload.networking.networkMode.options.normal'), value: false },\n      hostAliases,\n      nameservers,\n      searches,\n      hostname,\n      subdomain,\n      options\n    };\n\n    return out;\n  },\n\n  computed: {\n    dnsPolicyChoices() {\n      return [\n        {\n          label: this.t('workload.networking.dnsPolicy.options.default'),\n          value: 'Default'\n        },\n        {\n          label: this.t('workload.networking.dnsPolicy.options.clusterFirst'),\n          value: 'ClusterFirst'\n        },\n        {\n          label: this.t('workload.networking.dnsPolicy.options.clusterFirstWithHostNet'),\n          value: 'ClusterFirstWithHostNet'\n        },\n        {\n          label: this.t('workload.networking.dnsPolicy.options.none'),\n          value: 'None'\n        },\n      ];\n    },\n\n    networkModeChoices() {\n      return [\n        { label: this.t('workload.networking.networkMode.options.normal'), value: false },\n        { label: this.t('workload.networking.networkMode.options.hostNetwork'), value: true },\n      ];\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    networkMode(neu) {\n      const on = neu;\n\n      this.value.hostNetwork = on;\n      if ( this.dnsPolicy === CLUSTER_FIRST ) {\n        if ( on ) {\n          this.value.dnsPolicy = CLUSTER_FIRST_HOST;\n        } else {\n          this.value.dnsPolicy = CLUSTER_FIRST;\n        }\n      }\n    },\n\n    dnsPolicy(neu) {\n      if ( neu === CLUSTER_FIRST ) {\n        if ( this.networkMode ) {\n          this.value.dnsPolicy = CLUSTER_FIRST_HOST;\n        } else {\n          this.value.dnsPolicy = CLUSTER_FIRST;\n        }\n      } else {\n        this.value.dnsPolicy = neu;\n      }\n    }\n  },\n\n  methods: {\n    updateHostAliases(neu) {\n      this.hostAliases = neu.map((entry) => {\n        const ip = entry.ip.trim();\n        const hostnames = entry.hostnames.trim().split(/[\\s,]+/).filter((x) => !!x);\n\n        return { ip, hostnames };\n      }).filter((entry) => entry.ip && entry.hostnames.length);\n      this.update();\n    },\n\n    update() {\n      const dnsConfig = {\n        ...this.dnsConfig,\n        nameservers: this.nameservers,\n        searches:    this.searches,\n        options:     this.options\n      };\n      const out = {\n        ...this.value,\n        dnsConfig,\n        dnsPolicy:   this.dnsPolicy,\n        hostname:    this.hostname,\n        hostAliases: this.hostAliases,\n        subdomain:   this.subdomain,\n        hostNetwork: this.networkMode.value\n      };\n\n      this.$emit('input', out);\n    }\n  }\n};\n</script>\n<template>\n  <div>\n    <div>\n      <h3>{{ t('workload.container.titles.networkSettings') }}</h3>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"networkMode\"\n            :mode=\"mode\"\n            :options=\"networkModeChoices\"\n            :label=\"t('workload.networking.networkMode.label')\"\n            :placeholder=\"t('workload.networking.networkMode.placeholder')\"\n            @input=\"update\"\n          />\n        </div>\n\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"dnsPolicy\"\n            :mode=\"mode\"\n            :options=\"dnsPolicyChoices\"\n            :label=\"t('workload.networking.dnsPolicy.label')\"\n            :placeholder=\"t('workload.networking.dnsPolicy.placeholder')\"\n            @input=\"update\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"hostname\"\n            :mode=\"mode\"\n            :label=\"t('workload.networking.hostname.label')\"\n            :placeholder=\"t('workload.networking.hostname.placeholder')\"\n            @input=\"update\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"subdomain\"\n            :mode=\"mode\"\n            :label=\"t('workload.networking.subdomain.label')\"\n            :placeholder=\"t('workload.networking.subdomain.placeholder')\"\n            @input=\"update\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"spacer\" />\n\n    <div>\n      <h3>{{ t('workload.networking.dns') }}</h3>\n      <div class=\"row\">\n        <div class=\"col span-6\">\n          <ArrayList\n            key=\"dnsNameservers\"\n            v-model=\"nameservers\"\n            :title=\"t('workload.networking.nameservers.label')\"\n            :value-placeholder=\"t('workload.networking.nameservers.placeholder')\"\n            :add-label=\"t('workload.networking.nameservers.add')\"\n            :mode=\"mode\"\n            :protip=\"false\"\n            @input=\"update\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <ArrayList\n            key=\"dnsSearches\"\n            v-model=\"searches\"\n            :title=\"t('workload.networking.searches.label')\"\n            :value-placeholder=\"t('workload.networking.searches.placeholder')\"\n            :add-label=\"t('workload.networking.searches.add')\"\n            :mode=\"mode\"\n            :protip=\"false\"\n            @input=\"update\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"spacer\" />\n\n    <div class=\"mt-20\">\n      <div class=\"row\">\n        <KeyValue\n          v-model=\"options\"\n          :key-label=\"t('generic.name')\"\n          key-name=\"name\"\n          :mode=\"mode\"\n          :title=\"t('workload.networking.resolver.label')\"\n          :add-label=\"t('workload.networking.resolver.add')\"\n          :read-allowed=\"false\"\n          :as-map=\"false\"\n          :value-label=\"t('generic.value')\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div class=\"spacer\" />\n\n    <div class=\"row mt-20\">\n      <div class=\"col span-12\">\n        <KeyValue\n          key=\"hostAliases\"\n          v-model=\"hostAliases\"\n          :mode=\"mode\"\n          :title=\"t('workload.networking.hostAliases.label')\"\n          :protip=\"t('workload.networking.hostAliases.tip')\"\n          :read-allowed=\"false\"\n          :as-map=\"false\"\n          key-name=\"ip\"\n          :key-label=\"t('workload.networking.hostAliases.keyLabel')\"\n          :key-placeholder=\"t('workload.networking.hostAliases.keyPlaceholder')\"\n          value-name=\"hostnames\"\n          :value-label=\"t('workload.networking.hostAliases.valueLabel')\"\n          :value-placeholder=\"t('workload.networking.hostAliases.valuePlaceholder')\"\n          :add-label=\"t('workload.networking.hostAliases.add')\"\n          @input=\"updateHostAliases\"\n        >\n          <template #title>\n            <h3>{{ t('workload.networking.hostAliases.label') }}</h3>\n          </template>\n        </KeyValue>\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}