{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/HarvesterServiceAddOnConfig.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/HarvesterServiceAddOnConfig.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHNlbXZlciBmcm9tICdzZW12ZXInOwoKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgX0NSRUFURSB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IEhDSSBhcyBIQ0lfTEFCRUxTX0FOTk9UQVRJT05TIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9sYWJlbHMtYW5ub3RhdGlvbnMnOwppbXBvcnQgeyBTRVJWSUNFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7Cgpjb25zdCBIQVJWRVNURVJfQUREX09OX0NPTkZJRyA9IFt7CiAgdmFyaWFibGVOYW1lOiAnaXBhbScsCiAga2V5OiAgICAgICAgICBIQ0lfTEFCRUxTX0FOTk9UQVRJT05TLkNMT1VEX1BST1ZJREVSX0lQQU0sCiAgZGVmYXVsdDogICAgICAnZGhjcCcKfSwgewogIHZhcmlhYmxlTmFtZTogJ3NoYXJlZFNlcnZpY2UnLAogIGtleTogICAgICAgICAgSENJX0xBQkVMU19BTk5PVEFUSU9OUy5QUklNQVJZX1NFUlZJQ0UsCiAgZGVmYXVsdDogICAgICAnJwp9XTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IExhYmVsZWRTZWxlY3QgfSwKCiAgcHJvcHM6IHsKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBfQ1JFQVRFLAogICAgfSwKCiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0sCgogICAgcmVnaXN0ZXJCZWZvcmVIb29rOiB7CiAgICAgIHR5cGU6ICAgIEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICBpZiAodGhpcy5yZWdpc3RlckJlZm9yZUhvb2spIHsKICAgICAgdGhpcy5yZWdpc3RlckJlZm9yZUhvb2sodGhpcy53aWxsU2F2ZSwgJ2hhcnZlc3RlcldpbGxTYXZlJyk7CiAgICB9CiAgfSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBjb25zdCBpblN0b3JlID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudFByb2R1Y3QnXS5pblN0b3JlOwoKICAgIGNvbnN0IGhhc2ggPSB7CiAgICAgIHJrZTJWZXJzaW9uczogdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvcmVxdWVzdCcsIHsgdXJsOiAnL3YxLXJrZTItcmVsZWFzZS9yZWxlYXNlcycgfSksCiAgICAgIHNlcnZpY2VzOiAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goYCR7IGluU3RvcmUgfS9maW5kQWxsYCwgeyB0eXBlOiBTRVJWSUNFIH0pLAogICAgfTsKCiAgICBjb25zdCByZXMgPSBhd2FpdCBhbGxIYXNoKGhhc2gpOwoKICAgIHRoaXMucmtlMlZlcnNpb25zID0gcmVzLnJrZTJWZXJzaW9uczsKICB9LAoKICBkYXRhKCkgewogICAgY29uc3QgaGFydmVzdGVyQWRkT25Db25maWcgPSB7fTsKCiAgICBIQVJWRVNURVJfQUREX09OX0NPTkZJRy5mb3JFYWNoKChjKSA9PiB7CiAgICAgIGhhcnZlc3RlckFkZE9uQ29uZmlnW2MudmFyaWFibGVOYW1lXSA9IHRoaXMudmFsdWUubWV0YWRhdGEuYW5ub3RhdGlvbnNbYy5rZXldIHx8IGMuZGVmYXVsdDsKICAgIH0pOwoKICAgIGxldCBzaG93U2hhcmVJUDsKCiAgICBpZiAodGhpcy52YWx1ZS5tZXRhZGF0YS5hbm5vdGF0aW9uc1tIQ0lfTEFCRUxTX0FOTk9UQVRJT05TLlBSSU1BUllfU0VSVklDRV0pIHsKICAgICAgc2hvd1NoYXJlSVAgPSB0cnVlOwogICAgfSBlbHNlIHsKICAgICAgc2hvd1NoYXJlSVAgPSBmYWxzZTsKICAgIH0KCiAgICByZXR1cm4gewogICAgICAuLi5oYXJ2ZXN0ZXJBZGRPbkNvbmZpZywKICAgICAgc2hvd1NoYXJlSVAsCiAgICAgIHJrZTJWZXJzaW9uczoge30sCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsnYWxsb3dlZE5hbWVzcGFjZXMnLCAnbmFtZXNwYWNlcycsICdjdXJyZW50Q2x1c3RlciddKSwKCiAgICBpcGFtT3B0aW9ucygpIHsKICAgICAgcmV0dXJuIFt7CiAgICAgICAgbGFiZWw6ICdESENQJywKICAgICAgICB2YWx1ZTogJ2RoY3AnLAogICAgICB9LCB7CiAgICAgICAgbGFiZWw6ICdQb29sJywKICAgICAgICB2YWx1ZTogJ3Bvb2wnLAogICAgICB9XTsKICAgIH0sCgogICAgcG9ydE9wdGlvbnMoKSB7CiAgICAgIGNvbnN0IHBvcnRzID0gdGhpcy52YWx1ZT8uc3BlYz8ucG9ydHMgfHwgW107CgogICAgICByZXR1cm4gcG9ydHMuZmlsdGVyKChwKSA9PiBwLnBvcnQgJiYgcC5wcm90b2NvbCA9PT0gJ1RDUCcpLm1hcCgocCkgPT4gcC5wb3J0KSB8fCBbXTsKICAgIH0sCgogICAgc2VydmljZU9wdGlvbnMoKSB7CiAgICAgIGNvbnN0IGluU3RvcmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50UHJvZHVjdCddLmluU3RvcmU7CiAgICAgIGNvbnN0IHNlcnZpY2VzID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgJHsgaW5TdG9yZSB9L2FsbGBdKFNFUlZJQ0UpOwoKICAgICAgY29uc3QgbmFtZXNwYWNlcyA9IHRoaXMubmFtZXNwYWNlcygpOwoKICAgICAgY29uc3Qgb3V0ID0gc2VydmljZXMuZmlsdGVyKChzKSA9PiB7CiAgICAgICAgY29uc3QgaW5ncmVzcyA9IHM/LnN0YXR1cz8ubG9hZEJhbGFuY2VyPy5pbmdyZXNzIHx8IFtdOwoKICAgICAgICByZXR1cm4gaW5ncmVzcy5sZW5ndGggPiAwICYmCiAgICAgICAgICAgICAgICAhcz8ubWV0YWRhdGE/LmFubm90YXRpb25zPy5bJ2Nsb3VkcHJvdmlkZXIuaGFydmVzdGVyaGNpLmlvL3ByaW1hcnktc2VydmljZSddICYmCiAgICAgICAgICAgICAgICBzLnNwZWM/LnR5cGUgPT09ICdMb2FkQmFsYW5jZXInICYmCiAgICAgICAgICAgICAgICBuYW1lc3BhY2VzW3MubWV0YWRhdGEubmFtZXNwYWNlXTsKICAgICAgfSk7CgogICAgICByZXR1cm4gb3V0Lm1hcCgocykgPT4gcy5pZCk7CiAgICB9LAoKICAgIHNoYXJlSVBFbmFibGVkKCkgewogICAgICBjb25zdCBrdWJlcm5ldGVzVmVyc2lvbiA9IHRoaXMuY3VycmVudENsdXN0ZXIua3ViZXJuZXRlc1ZlcnNpb24gfHwgJyc7CiAgICAgIGNvbnN0IGt1YmVybmV0ZXNWZXJzaW9uRXh0ZW5zaW9uID0gdGhpcy5jdXJyZW50Q2x1c3Rlci5rdWJlcm5ldGVzVmVyc2lvbkV4dGVuc2lvbjsKCiAgICAgIGlmIChrdWJlcm5ldGVzVmVyc2lvbkV4dGVuc2lvbi5zdGFydHNXaXRoKCcrcmtlMicpKSB7CiAgICAgICAgY29uc3QgY2hhcnRzID0gKCh0aGlzLnJrZTJWZXJzaW9ucz8uZGF0YSB8fCBbXSkuZmluZCgodikgPT4gdi5pZCA9PT0ga3ViZXJuZXRlc1ZlcnNpb24pIHx8IHt9KS5jaGFydHM7CiAgICAgICAgbGV0IGNjbVZlcnNpb24gPSBjaGFydHM/LlsnaGFydmVzdGVyLWNsb3VkLXByb3ZpZGVyJ10/LnZlcnNpb24gfHwgJyc7CgogICAgICAgIGlmIChjY21WZXJzaW9uLmVuZHNXaXRoKCcwMCcpKSB7CiAgICAgICAgICBjY21WZXJzaW9uID0gY2NtVmVyc2lvbi5zbGljZSgwLCAtMik7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gc2VtdmVyLnNhdGlzZmllcyhjY21WZXJzaW9uLCAnPj0wLjIuMCcpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIHdpbGxTYXZlKCkgewogICAgICBjb25zdCBlcnJvcnMgPSBbXTsKCiAgICAgIGlmICh0aGlzLnNob3dTaGFyZUlQKSB7CiAgICAgICAgaWYgKCF0aGlzLnNoYXJlZFNlcnZpY2UpIHsKICAgICAgICAgIGVycm9ycy5wdXNoKHRoaXMudCgndmFsaWRhdGlvbi5yZXF1aXJlZCcsIHsga2V5OiB0aGlzLnQoJ3NlcnZpY2VzUGFnZS5oYXJ2ZXN0ZXIuc2hhcmVJUC5sYWJlbCcpIH0sIHRydWUpKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGlmIChlcnJvcnMubGVuZ3RoID4gMCkgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcnMpOwogICAgICB9CgogICAgICBIQVJWRVNURVJfQUREX09OX0NPTkZJRy5mb3JFYWNoKChjKSA9PiB7CiAgICAgICAgdGhpcy52YWx1ZS5tZXRhZGF0YS5hbm5vdGF0aW9uc1tjLmtleV0gPSBTdHJpbmcoZ2V0KHRoaXMsIGMudmFyaWFibGVOYW1lKSk7CiAgICAgIH0pOwoKICAgICAgaWYgKHRoaXMuc2hvd1NoYXJlSVApIHsKICAgICAgICBkZWxldGUgdGhpcy52YWx1ZS5tZXRhZGF0YS5hbm5vdGF0aW9uc1tIQ0lfTEFCRUxTX0FOTk9UQVRJT05TLkNMT1VEX1BST1ZJREVSX0lQQU1dOwogICAgICB9IGVsc2UgewogICAgICAgIGRlbGV0ZSB0aGlzLnZhbHVlLm1ldGFkYXRhLmFubm90YXRpb25zW0hDSV9MQUJFTFNfQU5OT1RBVElPTlMuUFJJTUFSWV9TRVJWSUNFXTsKICAgICAgfQogICAgfSwKCiAgICB0b2dnbGVTaGFyZUlQKCkgewogICAgICB0aGlzLnNob3dTaGFyZUlQID0gIXRoaXMuc2hvd1NoYXJlSVA7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["HarvesterServiceAddOnConfig.vue"],"names":[],"mappingsfile":"HarvesterServiceAddOnConfig.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport semver from 'semver';\n\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { _CREATE } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { HCI as HCI_LABELS_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { SERVICE } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\n\nconst HARVESTER_ADD_ON_CONFIG = [{\n  variableName: 'ipam',\n  key:          HCI_LABELS_ANNOTATIONS.CLOUD_PROVIDER_IPAM,\n  default:      'dhcp'\n}, {\n  variableName: 'sharedService',\n  key:          HCI_LABELS_ANNOTATIONS.PRIMARY_SERVICE,\n  default:      ''\n}];\n\nexport default {\n  components: { LabeledSelect },\n\n  props: {\n    mode: {\n      type:    String,\n      default: _CREATE,\n    },\n\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    registerBeforeHook: {\n      type:    Function,\n      default: null\n    },\n  },\n\n  created() {\n    if (this.registerBeforeHook) {\n      this.registerBeforeHook(this.willSave, 'harvesterWillSave');\n    }\n  },\n\n  async fetch() {\n    const inStore = this.$store.getters['currentProduct'].inStore;\n\n    const hash = {\n      rke2Versions: this.$store.dispatch('management/request', { url: '/v1-rke2-release/releases' }),\n      services:     this.$store.dispatch(`${ inStore }/findAll`, { type: SERVICE }),\n    };\n\n    const res = await allHash(hash);\n\n    this.rke2Versions = res.rke2Versions;\n  },\n\n  data() {\n    const harvesterAddOnConfig = {};\n\n    HARVESTER_ADD_ON_CONFIG.forEach((c) => {\n      harvesterAddOnConfig[c.variableName] = this.value.metadata.annotations[c.key] || c.default;\n    });\n\n    let showShareIP;\n\n    if (this.value.metadata.annotations[HCI_LABELS_ANNOTATIONS.PRIMARY_SERVICE]) {\n      showShareIP = true;\n    } else {\n      showShareIP = false;\n    }\n\n    return {\n      ...harvesterAddOnConfig,\n      showShareIP,\n      rke2Versions: {},\n    };\n  },\n\n  computed: {\n    ...mapGetters(['allowedNamespaces', 'namespaces', 'currentCluster']),\n\n    ipamOptions() {\n      return [{\n        label: 'DHCP',\n        value: 'dhcp',\n      }, {\n        label: 'Pool',\n        value: 'pool',\n      }];\n    },\n\n    portOptions() {\n      const ports = this.value?.spec?.ports || [];\n\n      return ports.filter((p) => p.port && p.protocol === 'TCP').map((p) => p.port) || [];\n    },\n\n    serviceOptions() {\n      const inStore = this.$store.getters['currentProduct'].inStore;\n      const services = this.$store.getters[`${ inStore }/all`](SERVICE);\n\n      const namespaces = this.namespaces();\n\n      const out = services.filter((s) => {\n        const ingress = s?.status?.loadBalancer?.ingress || [];\n\n        return ingress.length > 0 &&\n                !s?.metadata?.annotations?.['cloudprovider.harvesterhci.io/primary-service'] &&\n                s.spec?.type === 'LoadBalancer' &&\n                namespaces[s.metadata.namespace];\n      });\n\n      return out.map((s) => s.id);\n    },\n\n    shareIPEnabled() {\n      const kubernetesVersion = this.currentCluster.kubernetesVersion || '';\n      const kubernetesVersionExtension = this.currentCluster.kubernetesVersionExtension;\n\n      if (kubernetesVersionExtension.startsWith('+rke2')) {\n        const charts = ((this.rke2Versions?.data || []).find((v) => v.id === kubernetesVersion) || {}).charts;\n        let ccmVersion = charts?.['harvester-cloud-provider']?.version || '';\n\n        if (ccmVersion.endsWith('00')) {\n          ccmVersion = ccmVersion.slice(0, -2);\n        }\n\n        return semver.satisfies(ccmVersion, '>=0.2.0');\n      } else {\n        return true;\n      }\n    },\n  },\n\n  methods: {\n    willSave() {\n      const errors = [];\n\n      if (this.showShareIP) {\n        if (!this.sharedService) {\n          errors.push(this.t('validation.required', { key: this.t('servicesPage.harvester.shareIP.label') }, true));\n        }\n      }\n\n      if (errors.length > 0) {\n        return Promise.reject(errors);\n      }\n\n      HARVESTER_ADD_ON_CONFIG.forEach((c) => {\n        this.value.metadata.annotations[c.key] = String(get(this, c.variableName));\n      });\n\n      if (this.showShareIP) {\n        delete this.value.metadata.annotations[HCI_LABELS_ANNOTATIONS.CLOUD_PROVIDER_IPAM];\n      } else {\n        delete this.value.metadata.annotations[HCI_LABELS_ANNOTATIONS.PRIMARY_SERVICE];\n      }\n    },\n\n    toggleShareIP() {\n      this.showShareIP = !this.showShareIP;\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mt-30\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-if=\"showShareIP\"\n          v-model=\"sharedService\"\n          :mode=\"mode\"\n          :options=\"serviceOptions\"\n          :label=\"t('servicesPage.harvester.shareIP.label')\"\n          :disabled=\"mode === 'edit'\"\n        />\n        <LabeledSelect\n          v-else\n          v-model=\"ipam\"\n          :mode=\"mode\"\n          :options=\"ipamOptions\"\n          :label=\"t('servicesPage.harvester.ipam.label')\"\n          :disabled=\"mode === 'edit'\"\n        />\n        <div\n          v-if=\"mode === 'create'\"\n          class=\"mt-10\"\n        >\n          <a\n            role=\"button\"\n            @click=\"toggleShareIP\"\n          >\n            {{ showShareIP ? t('servicesPage.harvester.useIpam.label') : t('servicesPage.harvester.useShareIP.label') }}\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}