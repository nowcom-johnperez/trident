{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/IconOrSvg.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/IconOrSvg.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgovKioKICogVGhpcyBjb21wb25lbnQgcmVuZGVycyB0aGUgaWNvbiBpbiB0aGUgdG9wIGxldmVsIG1lbnUuCiAqIEljb24gY2FuIGVpdGhlciBiZSB2aWEgYSBmb250IHZpYSB0aGUgJ2ljb24nIHByb3BlcnR5IG9yIGFuIHN2ZyB2aWEgdGhlICdzcmMnIHByb3BlcnR5CiAqCiAqIFRoZSB0cmlja2luZXNzIGhlcmUgaXMgdGhhdCB3ZSB3YW50IHRoZSBpY29uIHRvIGJlIHRoZSBjb3JyZWN0IGNvbG9yIC0gYm90aCBub3JtYWxseSBhbmQgd2hlbiBob3ZlcmVkCiAqIEZvciBhIGZvbnQgaWNvbiwgdGhpcyBpcyBlYXN5LCBzaW5jZSB3ZSBqdXN0IHNldCB0aGUgY29sb3IgY3NzIHByb3BlcnR5CiAqIEZvciBhbiBzdmcgaWNvbiBpbmNsdWRlZCB3aXRoIHRoZSA8aW1nPiB0YWcgdGhpcyBpcyBoYXJkZXIgLSB0aGVyZSBpcyBubyB3YXkgdG8gYXBwbHkgY3NzIHRvCiAqIHRoZSBzdmcgYnJvdWdodCBpbiB0aGlzIHdheSAtIHRoZSB3b3JrYXJvdW5kIGlzIHRvIGFwcGx5IGEgY3NzIGZpbHRlciAtIGluIG9yZGVyIHRvIGRvIHRoaXMgd2UKICogbmVlZCB0byBnZW5lcmF0ZSB0aGUgY3NzIGZpbHRlciBmb3IgdGhlIHJlcXVpcmVkIGNvbG9yIC0gdGhlIGNvZGUgZm9yIHRoYXQgaXMgaW4gdGhlICdzdmctZmlsdGVyJyB1dGlsaXR5CiAqCiAqIFdlIGNhY2hlIGZpbHRlcnMgYW5kIGNzcyBmb3IgZ2l2ZW4gY29sb3JzLCBzbyB3ZSBvbmx5IGdlbmVyYXRlIHRoZW0gb25jZS4KICoKICogVGhpcyBtYWtlcyB0aGUgY29kZSBoZXJlIGxvb2sgY29tcGxleCAtIGJ1dCB3ZSBhcmUgZXNzZW50aWFsbHkgZ2VuZXJhdGluZyB0aGUgY3NzIGZpbHRlcnMKICogYW5kIHRoZW4gaW5qZWN0aW5nIGN1c3RvbSBjc3MgaW50byB0aGUgZG9jdW1lbnQgc28gdGhhdCBhbnkgaWNvbnMgaW5jbHVkZWQgdmlhIHN2ZyB3aWxsCiAqIHNob3cgd2l0aCB0aGUgZGVzaXJlZCBjb2xvcnMgZm9yIHRoZSB0aGVtZS4KICovCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgU29sdmVyIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3N2Zy1maWx0ZXInOwppbXBvcnQgeyBjb2xvclRvUmdiLCBtYXBTdGFuZGFyZENvbG9ycywgbm9ybWFsaXplSGV4IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2NvbG9yJzsKCmNvbnN0IGZpbHRlckNhY2hlID0ge307CmNvbnN0IGNzc0NhY2hlID0ge307Cgpjb25zdCBjb2xvcnMgPSB7CiAgaGVhZGVyOiB7CiAgICBjb2xvcjogJy0taGVhZGVyLWJ0bi10ZXh0JywKICAgIGhvdmVyOiAnLS1oZWFkZXItYnRuLXRleHQtaG92ZXInCiAgfSwKICBwcmltYXJ5OiB7CiAgICBjb2xvcjogJy0tbGluaycsCiAgICBob3ZlcjogJy0tcHJpbWFyeS1ob3Zlci10ZXh0JwogIH0KfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgJ0ljb25PclN2ZycsCiAgcHJvcHM6IHsKICAgIHNyYzogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHVuZGVmaW5lZCwKICAgIH0sCiAgICBpY29uOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gdW5kZWZpbmVkLAogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gJ3ByaW1hcnknLAogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4geyBjbGFzc05hbWU6ICcnIH07CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLnNyYykgewogICAgICB0aGlzLnNldENvbG9yKCk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgc2V0Q29sb3IoKSB7CiAgICAgIGNvbnN0IGN1cnJUaGVtZSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ3ByZWZzL3RoZW1lJ107CiAgICAgIGxldCB1aUNvbG9yLCBob3ZlckNvbG9yOwoKICAgICAgLy8gZ3JhYiBjc3MgdmFycyB2YWx1ZXMgYmFzZWQgb24gdGhlIGFjdHVhbCBzdHlsZXNoZWV0cywgZGVwZW5kaW5nIG9uIHRoZSB0aGVtZSBhcHBsaWVkCiAgICAgIC8vIHVzZSBmb3IgbG9vcHMgdG8gbWluaW1pemUgY29tcHV0YXRpb24KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBPYmplY3Qua2V5cyhkb2N1bWVudC5zdHlsZVNoZWV0cykubGVuZ3RoOyBpKyspIHsKICAgICAgICBsZXQgZm91bmQgPSBmYWxzZTsKICAgICAgICBjb25zdCBzdHlsZXNoZWV0ID0gZG9jdW1lbnQuc3R5bGVTaGVldHNbaV07CgogICAgICAgIGlmIChzdHlsZXNoZWV0ICYmIHN0eWxlc2hlZXQuY3NzUnVsZXMpIHsKICAgICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgT2JqZWN0LmtleXMoc3R5bGVzaGVldC5jc3NSdWxlcykubGVuZ3RoOyB4KyspIHsKICAgICAgICAgICAgY29uc3QgY3NzUnVsZXMgPSBzdHlsZXNoZWV0LmNzc1J1bGVzW3hdOwoKICAgICAgICAgICAgaWYgKGNzc1J1bGVzLnNlbGVjdG9yVGV4dCAmJiAoKGN1cnJUaGVtZSA9PT0gJ2xpZ2h0JyAmJiBjc3NSdWxlcy5zZWxlY3RvclRleHQuaW5jbHVkZXMoJ2JvZHknKSAmJgogICAgICAgICAgICAgIGNzc1J1bGVzLnNlbGVjdG9yVGV4dC5pbmNsdWRlcygnLnRoZW1lLWxpZ2h0JykgJiYgY3NzUnVsZXMuc3R5bGUuY3NzVGV4dC5pbmNsdWRlcygnLS1saW5rOicpKSB8fAogICAgICAgICAgICAgIChjdXJyVGhlbWUgPT09ICdkYXJrJyAmJiBjc3NSdWxlcy5zZWxlY3RvclRleHQuaW5jbHVkZXMoJy50aGVtZS1kYXJrJykpKSkgewogICAgICAgICAgICAgIC8vIGdyYWIgdGhlIGNvbG9ycyB0byBiZSB1c2VkIG9uIHRoZSBpY29uIGZyb20gdGhlIGNzcyBydWxlcwogICAgICAgICAgICAgIHVpQ29sb3IgPSBtYXBTdGFuZGFyZENvbG9ycyhjc3NSdWxlcy5zdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKGNvbG9yc1t0aGlzLmNvbG9yXS5jb2xvcikudHJpbSgpKTsKICAgICAgICAgICAgICBob3ZlckNvbG9yID0gbWFwU3RhbmRhcmRDb2xvcnMoY3NzUnVsZXMuc3R5bGUuZ2V0UHJvcGVydHlWYWx1ZShjb2xvcnNbdGhpcy5jb2xvcl0uaG92ZXIpLnRyaW0oKSk7CgogICAgICAgICAgICAgIC8vIG5vcm1hbGl6ZSBoZXggY29sb3JzICgjeHh4IHRvICN4eHh4eHgpCiAgICAgICAgICAgICAgdWlDb2xvciA9IG5vcm1hbGl6ZUhleCh1aUNvbG9yKTsKICAgICAgICAgICAgICBob3ZlckNvbG9yID0gbm9ybWFsaXplSGV4KGhvdmVyQ29sb3IpOwoKICAgICAgICAgICAgICBmb3VuZCA9IHRydWU7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgaWYgKGZvdW5kKSB7CiAgICAgICAgICBicmVhazsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY29udGludWU7CiAgICAgICAgfQogICAgICB9CgogICAgICBjb25zdCB1aUNvbG9yUkdCID0gY29sb3JUb1JnYih1aUNvbG9yKTsKICAgICAgY29uc3QgaG92ZXJDb2xvclJHQiA9IGNvbG9yVG9SZ2IoaG92ZXJDb2xvcik7CiAgICAgIGNvbnN0IHVpQ29sb3JTdHIgPSBgJHsgdWlDb2xvclJHQi5yIH0tJHsgdWlDb2xvclJHQi5nIH0tJHsgdWlDb2xvclJHQi5iIH1gOwogICAgICBjb25zdCBob3ZlckNvbG9yU3RyID0gYCR7IGhvdmVyQ29sb3JSR0IuciB9LSR7IGhvdmVyQ29sb3JSR0IuZyB9LSR7IGhvdmVyQ29sb3JSR0IuYiB9YDsKCiAgICAgIGNvbnN0IGNsYXNzTmFtZSA9IGBzdmctaWNvbi0keyB1aUNvbG9yU3RyIH0tJHsgaG92ZXJDb2xvclN0ciB9YDsKCiAgICAgIGlmICghY3NzQ2FjaGVbY2xhc3NOYW1lXSkgewogICAgICAgIGxldCBob3ZlckZpbHRlciA9IGZpbHRlckNhY2hlW2hvdmVyQ29sb3JdOwoKICAgICAgICBpZiAoIWhvdmVyRmlsdGVyKSB7CiAgICAgICAgICBjb25zdCBzb2x2ZXIgPSBuZXcgU29sdmVyKGhvdmVyQ29sb3JSR0IpOwogICAgICAgICAgY29uc3QgcmVzID0gc29sdmVyLnNvbHZlKCk7CgogICAgICAgICAgaG92ZXJGaWx0ZXIgPSByZXM/LmZpbHRlcjsKICAgICAgICAgIGZpbHRlckNhY2hlW2hvdmVyQ29sb3JdID0gaG92ZXJGaWx0ZXI7CiAgICAgICAgfQoKICAgICAgICBsZXQgbWFpbkZpbHRlciA9IGZpbHRlckNhY2hlW3VpQ29sb3JdOwoKICAgICAgICBpZiAoIW1haW5GaWx0ZXIpIHsKICAgICAgICAgIGNvbnN0IHNvbHZlciA9IG5ldyBTb2x2ZXIodWlDb2xvclJHQik7CiAgICAgICAgICBjb25zdCByZXMgPSBzb2x2ZXIuc29sdmUoKTsKCiAgICAgICAgICBtYWluRmlsdGVyID0gcmVzPy5maWx0ZXI7CiAgICAgICAgICBmaWx0ZXJDYWNoZVt1aUNvbG9yXSA9IG1haW5GaWx0ZXI7CiAgICAgICAgfQoKICAgICAgICAvLyBBZGQgc3R5bGVzaGVldCAoYWRkZWQgYXMgZ2xvYmFsIHN0eWxlcykKICAgICAgICBjb25zdCBzdHlsZXMgPSBgCiAgICAgICAgICBpbWcuJHsgY2xhc3NOYW1lIH0gewogICAgICAgICAgICAkeyBtYWluRmlsdGVyIH07CiAgICAgICAgICB9CiAgICAgICAgICBpbWcuJHsgY2xhc3NOYW1lIH06aG92ZXIgewogICAgICAgICAgICAkeyBob3ZlckZpbHRlciB9OwogICAgICAgICAgfQogICAgICAgICAgYnV0dG9uOmhvdmVyID4gaW1nLiR7IGNsYXNzTmFtZSB9IHsKICAgICAgICAgICAgJHsgaG92ZXJGaWx0ZXIgfTsKICAgICAgICAgIH0KICAgICAgICAgIGxpOmhvdmVyID4gaW1nLiR7IGNsYXNzTmFtZSB9IHsKICAgICAgICAgICAgJHsgaG92ZXJGaWx0ZXIgfTsKICAgICAgICAgIH0KICAgICAgICAgIGEub3B0aW9uOmhvdmVyID4gaW1nLiR7IGNsYXNzTmFtZSB9IHsKICAgICAgICAgICAgJHsgaG92ZXJGaWx0ZXIgfTsKICAgICAgICAgIH0gICAgICBgOwoKICAgICAgICBjb25zdCBzdHlsZVNoZWV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKCiAgICAgICAgc3R5bGVTaGVldC5pbm5lclRleHQgPSBzdHlsZXM7CiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZVNoZWV0KTsKCiAgICAgICAgY3NzQ2FjaGVbY2xhc3NOYW1lXSA9IHRydWU7CiAgICAgIH0KCiAgICAgIFZ1ZS5zZXQodGhpcywgJ2NsYXNzTmFtZScsIGNsYXNzTmFtZSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["IconOrSvg.vue"],"names":[],"mappingsfile":"IconOrSvg.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\n\n/**\n * This component renders the icon in the top level menu.\n * Icon can either be via a font via the 'icon' property or an svg via the 'src' property\n *\n * The trickiness here is that we want the icon to be the correct color - both normally and when hovered\n * For a font icon, this is easy, since we just set the color css property\n * For an svg icon included with the <img> tag this is harder - there is no way to apply css to\n * the svg brought in this way - the workaround is to apply a css filter - in order to do this we\n * need to generate the css filter for the required color - the code for that is in the 'svg-filter' utility\n *\n * We cache filters and css for given colors, so we only generate them once.\n *\n * This makes the code here look complex - but we are essentially generating the css filters\n * and then injecting custom css into the document so that any icons included via svg will\n * show with the desired colors for the theme.\n */\nimport Vue from 'vue';\nimport { Solver } from '@shell/utils/svg-filter';\nimport { colorToRgb, mapStandardColors, normalizeHex } from '@shell/utils/color';\n\nconst filterCache = {};\nconst cssCache = {};\n\nconst colors = {\n  header: {\n    color: '--header-btn-text',\n    hover: '--header-btn-text-hover'\n  },\n  primary: {\n    color: '--link',\n    hover: '--primary-hover-text'\n  }\n};\n\nexport default {\n  name:  'IconOrSvg',\n  props: {\n    src: {\n      type:    String,\n      default: () => undefined,\n    },\n    icon: {\n      type:    String,\n      default: () => undefined,\n    },\n    color: {\n      type:    String,\n      default: () => 'primary',\n    }\n  },\n\n  data() {\n    return { className: '' };\n  },\n\n  created() {\n    if (this.src) {\n      this.setColor();\n    }\n  },\n\n  methods: {\n    setColor() {\n      const currTheme = this.$store.getters['prefs/theme'];\n      let uiColor, hoverColor;\n\n      // grab css vars values based on the actual stylesheets, depending on the theme applied\n      // use for loops to minimize computation\n      for (let i = 0; i < Object.keys(document.styleSheets).length; i++) {\n        let found = false;\n        const stylesheet = document.styleSheets[i];\n\n        if (stylesheet && stylesheet.cssRules) {\n          for (let x = 0; x < Object.keys(stylesheet.cssRules).length; x++) {\n            const cssRules = stylesheet.cssRules[x];\n\n            if (cssRules.selectorText && ((currTheme === 'light' && cssRules.selectorText.includes('body') &&\n              cssRules.selectorText.includes('.theme-light') && cssRules.style.cssText.includes('--link:')) ||\n              (currTheme === 'dark' && cssRules.selectorText.includes('.theme-dark')))) {\n              // grab the colors to be used on the icon from the css rules\n              uiColor = mapStandardColors(cssRules.style.getPropertyValue(colors[this.color].color).trim());\n              hoverColor = mapStandardColors(cssRules.style.getPropertyValue(colors[this.color].hover).trim());\n\n              // normalize hex colors (#xxx to #xxxxxx)\n              uiColor = normalizeHex(uiColor);\n              hoverColor = normalizeHex(hoverColor);\n\n              found = true;\n              break;\n            }\n          }\n        }\n        if (found) {\n          break;\n        } else {\n          continue;\n        }\n      }\n\n      const uiColorRGB = colorToRgb(uiColor);\n      const hoverColorRGB = colorToRgb(hoverColor);\n      const uiColorStr = `${ uiColorRGB.r }-${ uiColorRGB.g }-${ uiColorRGB.b }`;\n      const hoverColorStr = `${ hoverColorRGB.r }-${ hoverColorRGB.g }-${ hoverColorRGB.b }`;\n\n      const className = `svg-icon-${ uiColorStr }-${ hoverColorStr }`;\n\n      if (!cssCache[className]) {\n        let hoverFilter = filterCache[hoverColor];\n\n        if (!hoverFilter) {\n          const solver = new Solver(hoverColorRGB);\n          const res = solver.solve();\n\n          hoverFilter = res?.filter;\n          filterCache[hoverColor] = hoverFilter;\n        }\n\n        let mainFilter = filterCache[uiColor];\n\n        if (!mainFilter) {\n          const solver = new Solver(uiColorRGB);\n          const res = solver.solve();\n\n          mainFilter = res?.filter;\n          filterCache[uiColor] = mainFilter;\n        }\n\n        // Add stylesheet (added as global styles)\n        const styles = `\n          img.${ className } {\n            ${ mainFilter };\n          }\n          img.${ className }:hover {\n            ${ hoverFilter };\n          }\n          button:hover > img.${ className } {\n            ${ hoverFilter };\n          }\n          li:hover > img.${ className } {\n            ${ hoverFilter };\n          }\n          a.option:hover > img.${ className } {\n            ${ hoverFilter };\n          }      `;\n\n        const styleSheet = document.createElement('style');\n\n        styleSheet.innerText = styles;\n        document.head.appendChild(styleSheet);\n\n        cssCache[className] = true;\n      }\n\n      Vue.set(this, 'className', className);\n    }\n  }\n};\n</script>\n\n<template>\n  <img\n    v-if=\"src\"\n    :src=\"src\"\n    class=\"svg-icon\"\n    :class=\"className\"\n  >\n  <i\n    v-else-if=\"icon\"\n    class=\"icon group-icon\"\n    :class=\"icon\"\n  />\n  <i\n    v-else\n    class=\"icon icon-extension\"\n  />\n</template>\n\n<style lang=\"scss\" scoped>\n  .svg-icon {\n    height: 24px;\n    width: 24px;\n  }\n</style>\n"]}]}