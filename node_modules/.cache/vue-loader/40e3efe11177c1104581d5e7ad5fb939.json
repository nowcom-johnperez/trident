{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/constraints.gatekeeper.sh.constraint/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/constraints.gatekeeper.sh.constraint/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/constraints.gatekeeper.sh.constraint","sourcesContent":["<script>\nimport Vue from 'vue';\nimport merge from 'lodash/merge';\nimport { ucFirst } from '@shell/utils/string';\nimport { isSimpleKeyValue } from '@shell/utils/object';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport { SCHEMA, NAMESPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { RadioGroup } from '@components/Form/Radio';\nimport RuleSelector from '@shell/components/form/RuleSelector';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport YamlEditor, { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport CruResource from '@shell/components/CruResource';\nimport { ENFORCEMENT_ACTION_VALUES } from '@shell/models/constraints.gatekeeper.sh.constraint';\nimport { saferDump } from '@shell/utils/create-yaml';\nimport NamespaceList, { NAMESPACE_FILTERS_HELPER } from './NamespaceList';\nimport MatchKinds from './MatchKinds';\nimport Scope, { SCOPE_OPTIONS } from './Scope';\n\nfunction findConstraintTypes(schemas) {\n  return schemas\n    .filter((schema) => schema?.attributes?.group === 'constraints.gatekeeper.sh');\n}\n\nfunction findConstraintTypesIds(schemas) {\n  return findConstraintTypes(schemas)\n    .map((schema) => schema.id);\n}\n\nconst CONSTRAINT_PREFIX = 'constraints.gatekeeper.sh.';\n\nexport default {\n  components: {\n    CruResource,\n    MatchKinds,\n    NameNsDescription,\n    NamespaceList,\n    RuleSelector,\n    RadioGroup,\n    Scope,\n    Tab,\n    Tabbed,\n    YamlEditor\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    }\n  },\n\n  data() {\n    const emptySpec = {\n      enforcementAction: ENFORCEMENT_ACTION_VALUES.DENY,\n      parameters:        {},\n      match:             {\n        kinds:              [{}],\n        namespaces:         [],\n        excludedNamespaces: [],\n        labelSelector:      { matchExpressions: [] },\n        namespaceSelector:  { matchExpressions: [] }\n      }\n    };\n\n    if (this.mode === _CREATE) {\n      this.$set(this.value, 'spec', merge(this.value.spec, emptySpec));\n\n      if (!this.value.spec.match.scope) {\n        this.$set(this.value.spec.match, 'scope', SCOPE_OPTIONS[0].value);\n      }\n    } else {\n      this.$set(this.value.spec, 'match', this.value.spec.match || {});\n      this.$set(this.value.spec.match, 'kinds', this.value.spec.match.kinds || [{}]);\n      this.$set(this.value.spec.match, 'labelSelector', this.value.spec.match.labelSelector || {});\n      this.$set(this.value.spec.match.labelSelector, 'matchExpressions', this.value.spec.match.labelSelector.matchExpressions || []);\n      this.$set(this.value.spec.match, 'namespaceSelector', this.value.spec.match.namespaceSelector || {});\n      this.$set(this.value.spec.match.namespaceSelector, 'labelSelector', this.value.spec.match.namespaceSelector.labelSelector || []);\n    }\n\n    const parametersYaml = saferDump(this.value?.spec?.parameters);\n\n    return {\n      emptySpec,\n      parametersYaml,\n      enforcementActionOptions: [\n        {\n          label: `${ ENFORCEMENT_ACTION_VALUES.DENY } - deny admission requests with any violation`,\n          value: ENFORCEMENT_ACTION_VALUES.DENY\n        },\n        {\n          label: `${ ENFORCEMENT_ACTION_VALUES.DRYRUN } - enables constraints to be deployed in the cluster without making actual changes`,\n          value: ENFORCEMENT_ACTION_VALUES.DRYRUN\n        }\n      ],\n      enforcementActionLabels: Object.values(ENFORCEMENT_ACTION_VALUES).map(ucFirst),\n      NAMESPACE_FILTERS_HELPER,\n    };\n  },\n\n  computed: {\n    templateOptions() {\n      const schemas = this.$store.getters['cluster/all'](SCHEMA);\n      const constraintTypes = findConstraintTypesIds(schemas);\n\n      constraintTypes.sort();\n\n      return constraintTypes.map((type) => {\n        return {\n          label: type.replace(CONSTRAINT_PREFIX, ''),\n          value: type\n        };\n      });\n    },\n    templateSubtypes() {\n      const schemas = this.$store.getters['cluster/all'](SCHEMA);\n      const constraintTypes = findConstraintTypes(schemas);\n\n      constraintTypes.sort();\n\n      return constraintTypes.map((type) => {\n        const splitId = type.id.split('.');\n\n        return {\n          label:       type.id.replace(CONSTRAINT_PREFIX, ''),\n          description: '',\n          id:          splitId[splitId.length - 1],\n          bannerAbbrv: 'CT'\n        };\n      });\n    },\n    editorMode() {\n      if ( this.mode === _VIEW ) {\n        return EDITOR_MODES.VIEW_CODE;\n      } else {\n        return EDITOR_MODES.EDIT_CODE;\n      }\n    },\n    canShowForm() {\n      return this.value?.spec?.parameters && isSimpleKeyValue(this.value.spec.parameters) && !this.isView;\n    },\n    systemNamespaceIds() {\n      return this.$store.getters['cluster/all'](NAMESPACE)\n        .filter((namespace) => namespace.isSystem)\n        .map((namespace) => namespace.id);\n    },\n    emptyDefaults() {\n      return {\n        type: this.templateOptions[0].value,\n        spec: this.emptySpec\n      };\n    },\n    isTemplateSelectorDisabled() {\n      return !this.isCreate;\n    },\n    showNamespaceLists() {\n      return this.value.spec.match.scope !== 'Cluster';\n    }\n  },\n\n  watch: {\n    value: {\n      handler(value) {\n        // We have to set the type for the CreateEditView mixin to know what the type is when creating\n        this.type = value.type;\n        this.purgeNamespacesField(this.value);\n      },\n      deep: true\n    },\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n    if (!this.value.save) {\n      this.$emit('input', merge(this.value, this.emptyDefaults));\n    }\n  },\n\n  methods: {\n    willSave() {\n      this.value.spec.match.kinds.forEach((kind) => {\n        const apiGroups = kind.apiGroups || [];\n\n        if (apiGroups.length === 0) {\n          kind.apiGroups = ['*'];\n        }\n      });\n    },\n    /**\n     * There's an upstream issue which prevents gatekeeper from processing namespaces with empty lists incorrectly.\n     * We need to remove the namespaces field if it's empty.\n     * https://github.com/open-policy-agent/gatekeeper/issues/508\n     */\n    purgeNamespacesField(value) {\n      if (value?.spec?.match?.namespaces && (value.spec.match.namespaces.length === 0)) {\n        Vue.delete(value.spec.match, 'namespaces');\n      }\n    },\n\n    updateType(type) {\n      this.$set(this.value, 'type', type);\n    },\n    onTabChanged({ tab }) {\n      // This is necessary to force the yamlEditor to adjust the size once it has space to fill.\n      if (tab.name === 'parameters' && this.$refs.yamlEditor?.refresh) {\n        this.$refs.yamlEditor.refresh();\n      }\n    },\n    selectTemplateSubtype(subType) {\n      this.$set(this.value, 'kind', subType);\n      this.$emit('set-subtype', subType);\n    },\n    onScopeChange(newScope) {\n      if (newScope === 'Cluster') {\n        this.value.spec.match.namespaces = [];\n        this.value.spec.match.excludedNamespaces = [];\n      }\n    }\n  }\n};\n</script>\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :selected-subtype=\"value.kind\"\n    :subtypes=\"templateSubtypes\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @select-type=\"selectTemplateSubtype\"\n  >\n    <div\n      v-if=\"value\"\n      class=\"gatekeeper-constraint\"\n    >\n      <div>\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :namespaced=\"false\"\n        />\n      </div>\n      <div class=\"row mb-40\">\n        <div class=\"col span-12\">\n          <h3>Enforcement Action</h3>\n          <RadioGroup\n            v-model=\"value.spec.enforcementAction\"\n            name=\"enforcementAction\"\n            class=\"enforcement-action\"\n            :options=\"enforcementActionOptions\"\n            :labels=\"enforcementActionLabels\"\n            :mode=\"mode\"\n          />\n        </div>\n      </div>\n      <Tabbed\n        :side-tabs=\"true\"\n        @changed=\"onTabChanged\"\n      >\n        <Tab\n          name=\"namespaces\"\n          :label=\"t('gatekeeperConstraint.tab.namespaces.title')\"\n          :weight=\"3\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-6\">\n              <Scope\n                v-model=\"value.spec.match.scope\"\n                :mode=\"mode\"\n                @input=\"onScopeChange($event)\"\n              />\n            </div>\n          </div>\n          <div\n            v-if=\"showNamespaceLists\"\n            class=\"row mt-20\"\n          >\n            <div class=\"col span-12\">\n              <NamespaceList\n                v-model=\"value.spec.match.namespaces\"\n                :label=\"t('gatekeeperConstraint.tab.namespaces.sub.namespaces')\"\n                tooltip=\"If defined, a constraint will only apply to resources in a listed namespace.\"\n                :mode=\"mode\"\n                :namespace-filter=\"NAMESPACE_FILTERS_HELPER.nonSystem\"\n                add-label=\"Add Namespace\"\n              />\n            </div>\n          </div>\n          <div\n            v-if=\"showNamespaceLists\"\n            class=\"row mt-20\"\n          >\n            <div class=\"col span-12\">\n              <NamespaceList\n                v-model=\"value.spec.match.excludedNamespaces\"\n                :label=\"t('gatekeeperConstraint.tab.namespaces.sub.excludedNamespaces')\"\n                tooltip=\"If defined, a constraint will only apply to resources not in a listed namespace.\"\n                :mode=\"mode\"\n                add-label=\"Add Excluded Namespace\"\n              />\n            </div>\n          </div>\n          <div class=\"row mt-40\">\n            <div class=\"col span-12\">\n              <h3>{{ t('gatekeeperConstraint.tab.namespaces.sub.namespaceSelector.title') }}</h3>\n              <RuleSelector\n                v-model=\"value.spec.match.namespaceSelector.matchExpressions\"\n                add-label=\"Add Namespace Selector\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n        </Tab>\n        <Tab\n          name=\"rules\"\n          :label=\"t('gatekeeperConstraint.tab.rules.title')\"\n          :weight=\"2\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <MatchKinds\n                v-model=\"value.spec.match.kinds\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n          <div class=\"row mt-40\">\n            <div class=\"col span-12\">\n              <h3>{{ t('gatekeeperConstraint.tab.rules.sub.labelSelector.title') }}</h3>\n              <RuleSelector\n                v-model=\"value.spec.match.labelSelector.matchExpressions\"\n                :add-label=\"t('gatekeeperConstraint.tab.rules.sub.labelSelector.addLabel')\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n        </Tab>\n        <Tab\n          name=\"parameters\"\n          :label=\"t('gatekeeperConstraint.tab.parameters.title')\"\n          :weight=\"1\"\n        >\n          <YamlEditor\n            ref=\"yamlEditor\"\n            v-model=\"parametersYaml\"\n            class=\"yaml-editor\"\n            :editor-mode=\"editorMode\"\n            @newObject=\"$set(value.spec, 'parameters', $event)\"\n          />\n        </Tab>\n      </Tabbed>\n    </div>\n  </CruResource>\n</template>\n"]}]}