{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.fleetworkspace.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.fleetworkspace.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgQ3J1UmVzb3VyY2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ3J1UmVzb3VyY2UnOwppbXBvcnQgTGFiZWxzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxzJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBOYW1lTnNEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05hbWVOc0Rlc2NyaXB0aW9uJzsKaW1wb3J0IHsgRkxFRVQsIE1BTkFHRU1FTlQsIFNDSEVNQSB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwovLyBpbXBvcnQgUm9sZUJpbmRpbmdzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1JvbGVCaW5kaW5ncyc7CmltcG9ydCBUYWJiZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkJzsKaW1wb3J0IFRhYiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQvVGFiJzsKaW1wb3J0IHsgU0NPUEVfTkFNRVNQQUNFLCBTQ09QRV9DTFVTVEVSIH0gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUm9sZUJpbmRpbmdzLnZ1ZSc7CmltcG9ydCB7IE5BTUUgYXMgRkxFRVRfTkFNRSB9IGZyb20gJ0BzaGVsbC9jb25maWcvcHJvZHVjdC9mbGVldCc7Ci8vIGltcG9ydCBLZXlWYWx1ZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0tleVZhbHVlLnZ1ZSc7CmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IExBU1RfTkFNRVNQQUNFLCBXT1JLU1BBQ0UgfSBmcm9tICdAc2hlbGwvc3RvcmUvcHJlZnMnOwppbXBvcnQgeyBleGNlcHRpb25Ub0Vycm9yc0FycmF5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Vycm9yJzsKaW1wb3J0IEJhbm5lciBmcm9tICdAY29tcG9uZW50cy9CYW5uZXIvQmFubmVyLnZ1ZSc7CmltcG9ydCBBcnJheUxpc3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9BcnJheUxpc3QudnVlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRmxlZXRDcnVXb3Jrc3BhY2UnLAoKICBjb21wb25lbnRzOiB7CiAgICBDcnVSZXNvdXJjZSwKICAgIExhYmVscywKICAgIExvYWRpbmcsCiAgICBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIFRhYmJlZCwKICAgIFRhYiwKICAgIEJhbm5lciwKICAgIEFycmF5TGlzdAogIH0sCgogIG1peGluczogW0NyZWF0ZUVkaXRWaWV3XSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICB0aGlzLnJhbmNoZXJDbHVzdGVycyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IE1BTkFHRU1FTlQuQ0xVU1RFUiB9KTsKCiAgICBpZiAodGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXSggRkxFRVQuQ0xVU1RFUiApKSB7CiAgICAgIHRoaXMuZmxlZXRDbHVzdGVycyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IEZMRUVULkNMVVNURVIgfSk7CiAgICB9CgogICAgaWYgKHRoaXMuaGFzUmVwb1Jlc3RyaWN0aW9uU2NoZW1hKSB7CiAgICAgIGNvbnN0IHJlc3RyaWN0aW9ucyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IEZMRUVULkdJVF9SRVBPX1JFU1RSSUNUSU9OIH0pOwoKICAgICAgY29uc3Qgd29ya1NwYWNlUmVzdHJpY3Rpb24gPSByZXN0cmljdGlvbnMuZmluZCgoaXRlbSkgPT4gewogICAgICAgIHJldHVybiBpdGVtLm1ldGFkYXRhLm5hbWVzcGFjZSA9PT0gdGhpcy52YWx1ZS5tZXRhZGF0YS5uYW1lICYmIGl0ZW0ubWV0YWRhdGEubmFtZS5zdGFydHNXaXRoKGByZXN0cmljdGlvbi0keyB0aGlzLnZhbHVlLm1ldGFkYXRhLm5hbWUgfWApOwogICAgICB9KTsKCiAgICAgIGlmICh3b3JrU3BhY2VSZXN0cmljdGlvbikgewogICAgICAgIHRoaXMud29ya1NwYWNlUmVzdHJpY3Rpb24gPSB3b3JrU3BhY2VSZXN0cmljdGlvbjsKICAgICAgfQogICAgfQoKICAgIHRoaXMucmVzdHJpY3Rpb25zT3B0aW9ucyA9IGF3YWl0IHRoaXMuJHN0b3JlLmdldHRlcnNbYHR5cGUtbWFwL29wdGlvbnNGb3JgXShGTEVFVC5HSVRfUkVQT19SRVNUUklDVElPTik7CiAgICB0aGlzLnJlc3RyaWN0aW9uc1NjaGVtYSA9IGF3YWl0IHRoaXMuJHN0b3JlLmdldHRlcnNbYG1hbmFnZW1lbnQvc2NoZW1hRm9yYF0oRkxFRVQuR0lUX1JFUE9fUkVTVFJJQ1RJT04pOwogIH0sCgogIGRhdGEoKSB7CiAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3NwZWMnLCB0aGlzLnZhbHVlLnNwZWMgfHwge30pOwoKICAgIHJldHVybiB7CiAgICAgIGZsZWV0Q2x1c3RlcnM6ICAgICAgICAgICAgbnVsbCwKICAgICAgcmFuY2hlckNsdXN0ZXJzOiAgICAgICAgICBudWxsLAogICAgICB3b3JrU3BhY2VSZXN0cmljdGlvbjogICAgIG51bGwsCiAgICAgIHJlc3RyaWN0aW9uczogICAgICAgICAgICAgW10sCiAgICAgIHRhcmdldE5hbWVzcGFjZXM6ICAgICAgICAgW10sCiAgICAgIHJlc3RyaWN0aW9uc1NjaGVtYTogICAgICAgeyBzcGVjOiB7fSB9LAogICAgICBuYW1lc3BhY2U6ICAgICAgICAgICAgICAgIHRoaXMuJHN0b3JlLmdldHRlcnNbJ3ByZWZzL2dldCddKExBU1RfTkFNRVNQQUNFKSwKICAgICAgaGFzUmVwb1Jlc3RyaWN0aW9uU2NoZW1hOiAhIXRoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvc2NoZW1hRm9yJ10oIEZMRUVULkdJVF9SRVBPX1JFU1RSSUNUSU9OICkKICAgIH07CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgc2F2ZUFsbChidXR0b25DYikgewogICAgICAvLyBBbnlvbmUgd2hvIGNhbiBlZGl0IHdvcmtzcGFjZQoKICAgICAgdHJ5IHsKICAgICAgICBhd2FpdCB0aGlzLnZhbHVlLnNhdmUoKTsKCiAgICAgICAgLy8gSUYgdGhlcmUgaXMgYSByZXN0cmljdGlvbiB1cGRhdGUgaXQKICAgICAgICBpZiAodGhpcy53b3JrU3BhY2VSZXN0cmljdGlvbikgewogICAgICAgICAgYXdhaXQgdGhpcy53b3JrU3BhY2VSZXN0cmljdGlvbi5zYXZlKCk7CiAgICAgICAgfQoKICAgICAgICAvLyBJZiB0aGVyZSBpcyBubyByZXN0cmljdGlvbiBhbmQgdGFyZ2V0bmFtZXNwYWNlIGlzIHNldCB0aGVuIGNyZWF0ZSBpdC4KICAgICAgICBpZiAoIXRoaXMud29ya1NwYWNlUmVzdHJpY3Rpb24gJiYgdGhpcy50YXJnZXROYW1lc3BhY2VzLmxlbmd0aCkgewogICAgICAgICAgLy8gRm9yIHVzZXJzIHdpdGggbW9yZSBsaW1pdGVkIHBlcm1pc3Npb25zIHRoZSBnaXRyZXBvcmVzdHJpY3Rpb24gc2NoZW1hIG1heSBub3QgYmUgdmlzaWJsZSB1bnRpbCB0aGV5IGNyZWF0ZSBhIHdvcmtzcGFjZQogICAgICAgICAgaWYgKCF0aGlzLmhhc1JlcG9SZXN0cmljdGlvblNjaGVtYSkgewogICAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kJywgeyB0eXBlOiBTQ0hFTUEsIGlkOiBGTEVFVC5HSVRfUkVQT19SRVNUUklDVElPTiB9LCB7IGZvcmNlOiB0cnVlIH0pOwogICAgICAgICAgfQogICAgICAgICAgY29uc3QgbW9kZWwgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaChgbWFuYWdlbWVudC9jcmVhdGVgLCB7CiAgICAgICAgICAgIHR5cGU6ICAgICAgICAgICAgICAgICAgICBGTEVFVC5HSVRfUkVQT19SRVNUUklDVElPTiwKICAgICAgICAgICAgYWxsb3dlZFRhcmdldE5hbWVzcGFjZXM6IHRoaXMudGFyZ2V0TmFtZXNwYWNlcywKICAgICAgICAgICAgbWV0YWRhdGE6ICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAvLyByZXN0cmljdGlvbi0gcHJlZml4IGlzIGFkZGVkIHRvIHRoZSB3b3Jrc3BhY2UgbmFtZQogICAgICAgICAgICAgIC8vIHRvIGlkZW50aWZ5IGF1dG9tYXRpY2FsbHkgY3JlYXRlZCBHaXRSZXBvUmVzdHJpY3Rpb25zCiAgICAgICAgICAgICAgLy8gd2hlbiBhZGRpbmcgdGFyZ2V0TmFtZXNwYWNlcyBhdCB0aGUgcG9pbnQgb2Ygd29ya3NwYWNlIGNyZWF0aW9uCiAgICAgICAgICAgICAgbmFtZTogICAgICBgcmVzdHJpY3Rpb24tJHsgdGhpcy52YWx1ZS5tZXRhZGF0YS5uYW1lIH0tJHsgRGF0ZS5ub3coKSB9YCwKICAgICAgICAgICAgICBuYW1lc3BhY2U6IHRoaXMudmFsdWUubWV0YWRhdGEubmFtZSAvLyB3aGF0IHRoZSB1c2VyIHR5cGVzCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwoKICAgICAgICAgIGF3YWl0IG1vZGVsLnNhdmUoKTsKICAgICAgICB9CgogICAgICAgIGF3YWl0IHRoaXMudmFsdWUud2FpdEZvcldvcmtzcGFjZVNjaGVtYSgyMDAwMCwgKHNjaGVtYSkgPT4gewogICAgICAgICAgLy8gRm9yIHN0YW5kYXJkIHVzZXIgaWYgdGhlcmUgYXJlIG5vIHdvcmtzcGFjZXMsIHVzZXIgY2FuJ3QgbGlzdCB3b3Jrc3BhY2VzCiAgICAgICAgICAvLyBUaGVyZWZvcmUgd2FpdCBmb3IgaXQuCiAgICAgICAgICByZXR1cm4gc2NoZW1hLmNvbGxlY3Rpb25NZXRob2RzPy5pbmNsdWRlcygnR0VUJyk7CiAgICAgICAgfSk7CgogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCAnbWFuYWdlbWVudC9maW5kQWxsJywgeyB0eXBlOiBGTEVFVC5XT1JLU1BBQ0UgfSk7CgogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgndXBkYXRlV29ya3NwYWNlJywgeyB2YWx1ZTogdGhpcy52YWx1ZS5tZXRhZGF0YS5uYW1lLCBnZXR0ZXJzOiB0aGlzLiRzdG9yZS5nZXR0ZXJzIH0gKTsKICAgICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgncHJlZnMvc2V0JywgeyBrZXk6IFdPUktTUEFDRSwgdmFsdWU6IHRoaXMudmFsdWUubWV0YWRhdGEubmFtZSB9KTsKCiAgICAgICAgYnV0dG9uQ2IodHJ1ZSk7CiAgICAgICAgdGhpcy5kb25lKCk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyKSA7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgIGJ1dHRvbkNiKGZhbHNlKTsKICAgICAgICB0aGlzLmVycm9ycyA9IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkoZXJyKTsKICAgICAgfQogICAgfSwKICB9LAoKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoWydhbGxXb3Jrc3BhY2VzJywgJ3dvcmtzcGFjZSddKSwKCiAgICBhbGxvd2VkVGFyZ2V0TmFtZXNwYWNlczogewogICAgICBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMud29ya1NwYWNlUmVzdHJpY3Rpb24/LmFsbG93ZWRUYXJnZXROYW1lc3BhY2VzIHx8IFtdOwogICAgICB9LAoKICAgICAgc2V0KHZhbHVlKSB7CiAgICAgICAgaWYgKHRoaXMud29ya1NwYWNlUmVzdHJpY3Rpb24pIHsKICAgICAgICAgIHRoaXMud29ya1NwYWNlUmVzdHJpY3Rpb24uYWxsb3dlZFRhcmdldE5hbWVzcGFjZXMgPSB2YWx1ZTsKICAgICAgICB9CgogICAgICAgIHRoaXMudGFyZ2V0TmFtZXNwYWNlcyA9IHZhbHVlOwogICAgICB9CiAgICB9LAoKICAgIFNDT1BFX05BTUVTUEFDRSgpIHsKICAgICAgcmV0dXJuIFNDT1BFX05BTUVTUEFDRTsKICAgIH0sCgogICAgU0NPUEVfQ0xVU1RFUigpIHsKICAgICAgcmV0dXJuIFNDT1BFX0NMVVNURVI7CiAgICB9LAoKICAgIEZMRUVUX05BTUUoKSB7CiAgICAgIHJldHVybiBGTEVFVF9OQU1FOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["management.cattle.io.fleetworkspace.vue"],"names":[],"mappingsfile":"management.cattle.io.fleetworkspace.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Loading from '@shell/components/Loading';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { FLEET, MANAGEMENT, SCHEMA } from '@shell/config/types';\n// import RoleBindings from '@shell/components/RoleBindings';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { SCOPE_NAMESPACE, SCOPE_CLUSTER } from '@shell/components/RoleBindings.vue';\nimport { NAME as FLEET_NAME } from '@shell/config/product/fleet';\n// import KeyValue from '@shell/components/form/KeyValue.vue';\nimport { mapState } from 'vuex';\nimport { LAST_NAMESPACE, WORKSPACE } from '@shell/store/prefs';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport Banner from '@components/Banner/Banner.vue';\nimport ArrayList from '@shell/components/form/ArrayList.vue';\n\nexport default {\n  name: 'FleetCruWorkspace',\n\n  components: {\n    CruResource,\n    Labels,\n    Loading,\n    NameNsDescription,\n    Tabbed,\n    Tab,\n    Banner,\n    ArrayList\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.rancherClusters = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.CLUSTER });\n\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.fleetClusters = await this.$store.dispatch('management/findAll', { type: FLEET.CLUSTER });\n    }\n\n    if (this.hasRepoRestrictionSchema) {\n      const restrictions = await this.$store.dispatch('management/findAll', { type: FLEET.GIT_REPO_RESTRICTION });\n\n      const workSpaceRestriction = restrictions.find((item) => {\n        return item.metadata.namespace === this.value.metadata.name && item.metadata.name.startsWith(`restriction-${ this.value.metadata.name }`);\n      });\n\n      if (workSpaceRestriction) {\n        this.workSpaceRestriction = workSpaceRestriction;\n      }\n    }\n\n    this.restrictionsOptions = await this.$store.getters[`type-map/optionsFor`](FLEET.GIT_REPO_RESTRICTION);\n    this.restrictionsSchema = await this.$store.getters[`management/schemaFor`](FLEET.GIT_REPO_RESTRICTION);\n  },\n\n  data() {\n    this.$set(this.value, 'spec', this.value.spec || {});\n\n    return {\n      fleetClusters:            null,\n      rancherClusters:          null,\n      workSpaceRestriction:     null,\n      restrictions:             [],\n      targetNamespaces:         [],\n      restrictionsSchema:       { spec: {} },\n      namespace:                this.$store.getters['prefs/get'](LAST_NAMESPACE),\n      hasRepoRestrictionSchema: !!this.$store.getters['management/schemaFor']( FLEET.GIT_REPO_RESTRICTION )\n    };\n  },\n\n  methods: {\n    async saveAll(buttonCb) {\n      // Anyone who can edit workspace\n\n      try {\n        await this.value.save();\n\n        // IF there is a restriction update it\n        if (this.workSpaceRestriction) {\n          await this.workSpaceRestriction.save();\n        }\n\n        // If there is no restriction and targetnamespace is set then create it.\n        if (!this.workSpaceRestriction && this.targetNamespaces.length) {\n          // For users with more limited permissions the gitreporestriction schema may not be visible until they create a workspace\n          if (!this.hasRepoRestrictionSchema) {\n            await this.$store.dispatch('management/find', { type: SCHEMA, id: FLEET.GIT_REPO_RESTRICTION }, { force: true });\n          }\n          const model = await this.$store.dispatch(`management/create`, {\n            type:                    FLEET.GIT_REPO_RESTRICTION,\n            allowedTargetNamespaces: this.targetNamespaces,\n            metadata:                {\n              // restriction- prefix is added to the workspace name\n              // to identify automatically created GitRepoRestrictions\n              // when adding targetNamespaces at the point of workspace creation\n              name:      `restriction-${ this.value.metadata.name }-${ Date.now() }`,\n              namespace: this.value.metadata.name // what the user types\n            }\n          });\n\n          await model.save();\n        }\n\n        await this.value.waitForWorkspaceSchema(20000, (schema) => {\n          // For standard user if there are no workspaces, user can't list workspaces\n          // Therefore wait for it.\n          return schema.collectionMethods?.includes('GET');\n        });\n\n        await this.$store.dispatch( 'management/findAll', { type: FLEET.WORKSPACE });\n\n        this.$store.commit('updateWorkspace', { value: this.value.metadata.name, getters: this.$store.getters } );\n        this.$store.dispatch('prefs/set', { key: WORKSPACE, value: this.value.metadata.name });\n\n        buttonCb(true);\n        this.done();\n      } catch (err) {\n        console.error(err) ; // eslint-disable-line no-console\n        buttonCb(false);\n        this.errors = exceptionToErrorsArray(err);\n      }\n    },\n  },\n\n  computed: {\n    ...mapState(['allWorkspaces', 'workspace']),\n\n    allowedTargetNamespaces: {\n      get() {\n        return this.workSpaceRestriction?.allowedTargetNamespaces || [];\n      },\n\n      set(value) {\n        if (this.workSpaceRestriction) {\n          this.workSpaceRestriction.allowedTargetNamespaces = value;\n        }\n\n        this.targetNamespaces = value;\n      }\n    },\n\n    SCOPE_NAMESPACE() {\n      return SCOPE_NAMESPACE;\n    },\n\n    SCOPE_CLUSTER() {\n      return SCOPE_CLUSTER;\n    },\n\n    FLEET_NAME() {\n      return FLEET_NAME;\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"saveAll\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-model=\"value\"\n      :mode=\"mode\"\n      :namespaced=\"false\"\n    />\n\n    <Tabbed\n      :side-tabs=\"true\"\n      default-tab=\"members\"\n    >\n      <!-- <Tab name=\"members\" label-key=\"generic.members\" :weight=\"2\">\n        <RoleBindings\n          ref=\"rb\"\n          :register-after-hook=\"registerAfterHook\"\n          :role-scope=\"SCOPE_CLUSTER\"\n          :binding-scope=\"SCOPE_NAMESPACE\"\n          :filter-role-value=\"FLEET_NAME\"\n          :namespace=\"value.name\"\n          :mode=\"mode\"\n          in-store=\"management\"\n        />\n      </Tab> -->\n\n      <Tab\n        name=\"labels\"\n        label-key=\"generic.labelsAndAnnotations\"\n      >\n        <Labels\n          v-model=\"value\"\n          :mode=\"mode\"\n        />\n      </Tab>\n      <Tab\n        name=\"allowedtargetnamespaces\"\n        label-key=\"fleet.workspaces.tabs.restrictions\"\n      >\n        <Banner\n          color=\"info\"\n        >\n          <div>\n            <t\n              k=\"fleet.restrictions.banner\"\n              :count=\"allowedTargetNamespaces.length\"\n              :raw=\"true\"\n            />\n            <a\n              v-if=\"!!allowedTargetNamespaces.length\"\n              @click=\"workSpaceRestriction.goToDetail()\"\n            >\n              {{ t('generic.here') }}\n            </a>\n          </div>\n        </Banner>\n\n        <ArrayList\n          key=\"labels\"\n          v-model=\"allowedTargetNamespaces\"\n          :add-label=\"t('fleet.restrictions.addLabel')\"\n          :mode=\"mode\"\n          :title=\"t('fleet.restrictions.addTitle')\"\n          :read-allowed=\"false\"\n          :value-can-be-empty=\"true\"\n        />\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n"]}]}