{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Wizard.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Wizard.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgppbXBvcnQgQXN5bmNCdXR0b24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQXN5bmNCdXR0b24nOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nJzsKaW1wb3J0IHsgc3RyaW5naWZ5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Vycm9yJzsKCi8qCldpemFyZCBhY2NlcHRzIGFuIGFycmF5IG9mIHN0ZXBzIChzZWUgcHJvcHMpLCBhbmQgY3JlYXRlcyBuYW1lZCBzbG90cyBmb3IgZWFjaCBzdGVwLgpJdCBhbHNvIGNvbnRhaW5zIHNsb3RzIGZvciBidXR0b25zOgogICAgbmV4dAogICAgY2FuY2VsCiAgICBmaW5pc2gKCldpemFyZCB3aWxsIGVtaXQgdGhlc2UgZXZlbnRzOgogICAgbmV4dCh7c3RlcH0pCiAgICBjYW5jZWwKICAgIGZpbmlzaAoqLwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdXaXphcmQnLAoKICBjb21wb25lbnRzOiB7CiAgICBBc3luY0J1dHRvbiwKICAgIEJhbm5lciwKICAgIExvYWRpbmcsCiAgfSwKCiAgcHJvcHM6IHsKICAgIC8qCiAgc3RlcHMgbmVlZDogewogICAgbmFtZTogU3RyaW5nIC0gdGhpcyB3aWxsIGJlIHRoZSBzbG90IG5hbWUKICAgIGxhYmVsOiBTdHJpbmcgLSB0aGlzIHdpbGwgYXBwZWFyIGluIHRoZSB0b3AgbmF2IGJhciBiZWxvdyBjaXJjbGVzCiAgICBzdWJ0ZXh0OiBTdHJpbmcgKG9wdGlvbmFsKSAtIElmIGRlZmluZWQsIGFwcGVhcnMgYmVsb3cgdGhlIHN0ZXAgbnVtYmVyIGluIHRoZSBiYW5uZXIuIElmIGJsYW5rLCBsYWJlbCBpcyB1c2VkCiAgICByZWFkeTogQm9vbGVhbiAtIHdoZXRoZXIgb3Igbm90IHRoZSBzdGVwIGlzIGNvbXBsZXRlZC93aXphcmQgaXMgYWJsZSB0byBnbyB0byBuZXh0IHN0ZXAKICAgICAgaWYgYSBzdGVwIGhhcyByZWFkeT10cnVlLCB0aGUgd2l6YXJkIGFsc28gYWxsb3dzIG5hdmlnYXRpb24gKmJhY2sqIHRvIGl0CiAgICBoaWRkZW46IERvbid0IHNob3cgc3RlcCwgdGhvdWdoIGluY2x1ZGUgaW4gRE9NIChkeW5hbWljIHN0ZXBzIG11c3QgYmUgaW4gRE9NIHRvIGRldGVybWluZSBpZiB0aGV5IHdpbGwgaW5jbHVkZSB0aGVtc2VsdmVzIGluIHdpemFyZCkKICAgIGxvYWRpbmc6IFdpemFyZCB3aWxsIGJsb2NrIHVudGlsIGFsbCBzdGVwcyBhcmUgbm90IGxvYWRpbmcKICAgIG5leHRCdXR0b24/OiB7CiAgICAgIGxhYmVsS2V5PzogZGVmYXVsdCB0byBgd2l6YXJkLm5leHRgCiAgICAgIHN0eWxlPzogIGRlZmF1bHRzIHRvIGBidG4gcm9sZS1wcmltYXJ5YAogICAgfSwKICAgIHByZXZpb3VzQnV0dG9uOiB7CiAgICAgIGRpc2FibGU6IGRlZmF1bHRzIHRvIGZhbHNlCiAgICB9CiAgfQogICovCiAgICBzdGVwczogewogICAgICB0eXBlOiAgICAgQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAoKICAgIC8vIEluaXRpYWwgc3RlcCB0byBzaG93IHdoZW4gV2l6YXJkIGxvYWRzLgogICAgaW5pdFN0ZXBJbmRleDogewogICAgICB0eXBlOiAgICBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCgogICAgLy8gaWYgdHJ1ZSwgYWxsb3cgdXNlcnMgdG8gbmF2aWdhdGUgYmFjayB0byB0aGUgZmlyc3Qgc3RlcCBvZiB0aGUgV2l6YXJkCiAgICAvLyBpZiBmYWxzZSwgb25seSB3YXkgYmFjayB0byBzdGVwIDEgaXMgdG8gY2FuY2VsIGFuZCB1bmRvIGFsbCBjb25maWd1cmF0aW9uCiAgICBlZGl0Rmlyc3RTdGVwOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAoKICAgIHNob3dCYW5uZXI6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0sCgogICAgLy8gd2hldGhlciBvciBub3QgdG8gc2hvdyB0aGUgb3ZlcmFsbCB0aXRsZS9pbWFnZSBvbiBsZWZ0IG9mIGJhbm5lciBoZWFkZXIgaW4gZmlyc3Qgc3RlcAogICAgaW5pdGlhbFRpdGxlOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCgogICAgLy8gcGxhY2UgdGhlIHNhbWUgdGl0bGUgKGUuZy4gdGhlIHR5cGUgb2YgdGhpbmcgYmVpbmcgY3JlYXRlZCBieSB3aXphcmQpIG9uIGV2ZXJ5IHBhZ2UKICAgIGJhbm5lclRpdGxlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKCiAgICAvLyBjaXJjdWxhciBpbWFnZSBsZWZ0IG9mIGJhbm5lciB0aXRsZQogICAgYmFubmVySW1hZ2U6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIGJhbm5lclRpdGxlU3VidGV4dDogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCgogICAgLy8gVmVyYiBzaG93biBpbiB0aGUgaGVhZGVyLCBkZWZhdWx0cyB0byBmaW5pc2hNb2RlCiAgICBoZWFkZXJNb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKCiAgICAvLyBUaGUgc2V0IG9mIGxhYmVscyB0byBkaXNwbGF5IGZvciB0aGUgZmluaXNoIEFzeW5jQnV0dG9uCiAgICBmaW5pc2hNb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2ZpbmlzaCcKICAgIH0sCgogICAgLy8gRXJyb3JzIHRvIGRpc3BsYXkgYWJvdmUgdGhlIGJ1dHRvbnMKICAgIGVycm9yczogewogICAgICB0eXBlOiAgICBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsgYWN0aXZlU3RlcDogbnVsbCB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBlcnJvclN0cmluZ3MoKSB7CiAgICAgIHJldHVybiAoIHRoaXMuZXJyb3JzIHx8IFtdICkubWFwKCh4KSA9PiBzdHJpbmdpZnkoeCkpOwogICAgfSwKCiAgICBhY3RpdmVTdGVwSW5kZXgoKSB7CiAgICAgIHJldHVybiB0aGlzLnZpc2libGVTdGVwcy5maW5kSW5kZXgoKHMpID0+IHMubmFtZSA9PT0gdGhpcy5hY3RpdmVTdGVwLm5hbWUpOwogICAgfSwKCiAgICBzaG93UHJldmlvdXMoKSB7CiAgICAgIC8vIElmIG9uIGZpcnN0IHN0ZXAuLi4KICAgICAgaWYgKHRoaXMuYWN0aXZlU3RlcEluZGV4ID09PSAwKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICAgIC8vIC4uIG9yIGFueSBwcmV2aW91cyBzdGVwIGlzbid0IGhpZGRlbgogICAgICBmb3IgKGxldCBzdGVwSW5kZXggPSAwOyBzdGVwSW5kZXggPCB0aGlzLmFjdGl2ZVN0ZXBJbmRleDsgc3RlcEluZGV4KyspIHsKICAgICAgICBjb25zdCBzdGVwID0gdGhpcy52aXNpYmxlU3RlcHNbc3RlcEluZGV4XTsKCiAgICAgICAgaWYgKCFzdGVwKSB7CiAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgICAgaWYgKCFzdGVwLmhpZGRlbikgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAoKICAgIGNhblByZXZpb3VzKCkgewogICAgICByZXR1cm4gIXRoaXMuYWN0aXZlU3RlcD8ucHJldmlvdXNCdXR0b24/LmRpc2FibGUgJiYgKHRoaXMuYWN0aXZlU3RlcEluZGV4ID4gMSB8fCB0aGlzLmVkaXRGaXJzdFN0ZXApOwogICAgfSwKCiAgICBjYW5OZXh0KCkgewogICAgICByZXR1cm4gKHRoaXMuYWN0aXZlU3RlcEluZGV4IDwgdGhpcy52aXNpYmxlU3RlcHMubGVuZ3RoIC0gMSkgJiYgdGhpcy5hY3RpdmVTdGVwLnJlYWR5OwogICAgfSwKCiAgICByZWFkeVN0ZXBzKCkgewogICAgICByZXR1cm4gdGhpcy52aXNpYmxlU3RlcHMuZmlsdGVyKChzdGVwKSA9PiBzdGVwLnJlYWR5KTsKICAgIH0sCgogICAgc2hvd1N0ZXBzKCkgewogICAgICByZXR1cm4gdGhpcy5hY3RpdmVTdGVwLnNob3dTdGVwcyAhPT0gZmFsc2UgJiYgdGhpcy52aXNpYmxlU3RlcHMubGVuZ3RoID4gMTsKICAgIH0sCgogICAgc3RlcHNMb2FkZWQoKSB7CiAgICAgIHJldHVybiAhdGhpcy5zdGVwcy5zb21lKChzdGVwKSA9PiBzdGVwLmxvYWRpbmcgPT09IHRydWUpOwogICAgfSwKCiAgICB2aXNpYmxlU3RlcHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnN0ZXBzLmZpbHRlcigoc3RlcCkgPT4gIXN0ZXAuaGlkZGVuKTsKICAgIH0sCgogICAgbmV4dEJ1dHRvblN0eWxlKCkgewogICAgICByZXR1cm4gdGhpcy5hY3RpdmVTdGVwLm5leHRCdXR0b24/LnN0eWxlIHx8IGBidG4gcm9sZS1wcmltYXJ5YDsKICAgIH0sCiAgICBuZXh0QnV0dG9uTGFiZWwoKSB7CiAgICAgIHJldHVybiB0aGlzLmFjdGl2ZVN0ZXAubmV4dEJ1dHRvbj8ubGFiZWxLZXkgfHwgYHdpemFyZC5uZXh0YDsKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgc3RlcHNMb2FkZWQobmV1LCBvbGQpIHsKICAgICAgaWYgKCFvbGQgJiYgbmV1KSB7CiAgICAgICAgdGhpcy5hY3RpdmVTdGVwID0gdGhpcy52aXNpYmxlU3RlcHNbdGhpcy5pbml0U3RlcEluZGV4XTsKICAgICAgICB0aGlzLmdvVG9TdGVwKHRoaXMuYWN0aXZlU3RlcEluZGV4ICsgMSk7CiAgICAgIH0KICAgIH0KICB9LAoKICBjcmVhdGVkKCkgewogICAgdGhpcy5hY3RpdmVTdGVwID0gdGhpcy52aXNpYmxlU3RlcHNbdGhpcy5pbml0U3RlcEluZGV4XTsKICAgIHRoaXMuZ29Ub1N0ZXAodGhpcy5hY3RpdmVTdGVwSW5kZXggKyAxKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBnb1RvU3RlcChudW1iZXIsIGZyb21OYXYpIHsKICAgICAgaWYgKG51bWJlciA8IDEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIC8vIGlmIGVkaXRGaXJzdFN0ZXAgaXMgZmFsc2UsIGRvIG5vdCBhbGxvdyByZXR1cm5pbmcgdG8gc3RlcCAxIChyZXN0YXJ0aW5nIHdpemFyZCkgZnJvbSB0b3AgbmF2CiAgICAgIGlmICghdGhpcy5lZGl0Rmlyc3RTdGVwICYmIChudW1iZXIgPT09IDEgJiYgZnJvbU5hdikpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGNvbnN0IHNlbGVjdGVkID0gdGhpcy52aXNpYmxlU3RlcHNbbnVtYmVyIC0gMV07CgogICAgICBpZiAoICFzZWxlY3RlZCB8fCAoIXRoaXMuaXNBdmFpbGFibGUoc2VsZWN0ZWQpICYmIG51bWJlciAhPT0gMSkpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuYWN0aXZlU3RlcCA9IHNlbGVjdGVkOwoKICAgICAgdGhpcy4kZW1pdCgnbmV4dCcsIHsgc3RlcDogc2VsZWN0ZWQgfSk7CiAgICB9LAoKICAgIGNhbmNlbCgpIHsKICAgICAgdGhpcy4kZW1pdCgnY2FuY2VsJyk7CiAgICB9LAoKICAgIGZpbmlzaChjYikgewogICAgICB0aGlzLiRlbWl0KCdmaW5pc2gnLCBjYik7CiAgICB9LAoKICAgIG5leHQoKSB7CiAgICAgIHRoaXMuZ29Ub1N0ZXAodGhpcy5hY3RpdmVTdGVwSW5kZXggKyAyKTsKICAgIH0sCgogICAgYmFjaygpIHsKICAgICAgdGhpcy5nb1RvU3RlcCh0aGlzLmFjdGl2ZVN0ZXBJbmRleCk7CiAgICB9LAoKICAgIC8vIGEgc3RlcCBpcyBub3QgYXZhaWxhYmxlIGlmIHJlYWR5PWZhbHNlIGZvciBhbnkgcHJldmlvdXMgc3RlcHMgT1IgaWYgdGhlIGVkaXRGaXJzdFN0ZXA9ZmFsc2UgYW5kIGl0IGlzIHRoZSBmaXJzdCBzdGVwCiAgICBpc0F2YWlsYWJsZShzdGVwKSB7CiAgICAgIGlmICghc3RlcCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgY29uc3QgaWR4ID0gdGhpcy52aXNpYmxlU3RlcHMuZmluZEluZGV4KChzKSA9PiBzLm5hbWUgPT09IHN0ZXAubmFtZSk7CgogICAgICBpZiAoaWR4ID09PSAwICYmICF0aGlzLmVkaXRGaXJzdFN0ZXApIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaWR4OyBpKyspIHsKICAgICAgICBpZiAoIHRoaXMudmlzaWJsZVN0ZXBzW2ldLnJlYWR5ID09PSBmYWxzZSApIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["Wizard.vue"],"names":[],"mappingsfile":"Wizard.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\n\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport { stringify } from '@shell/utils/error';\n\n/*\nWizard accepts an array of steps (see props), and creates named slots for each step.\nIt also contains slots for buttons:\n    next\n    cancel\n    finish\n\nWizard will emit these events:\n    next({step})\n    cancel\n    finish\n*/\n\nexport default {\n  name: 'Wizard',\n\n  components: {\n    AsyncButton,\n    Banner,\n    Loading,\n  },\n\n  props: {\n    /*\n  steps need: {\n    name: String - this will be the slot name\n    label: String - this will appear in the top nav bar below circles\n    subtext: String (optional) - If defined, appears below the step number in the banner. If blank, label is used\n    ready: Boolean - whether or not the step is completed/wizard is able to go to next step\n      if a step has ready=true, the wizard also allows navigation *back* to it\n    hidden: Don't show step, though include in DOM (dynamic steps must be in DOM to determine if they will include themselves in wizard)\n    loading: Wizard will block until all steps are not loading\n    nextButton?: {\n      labelKey?: default to `wizard.next`\n      style?:  defaults to `btn role-primary`\n    },\n    previousButton: {\n      disable: defaults to false\n    }\n  }\n  */\n    steps: {\n      type:     Array,\n      required: true\n    },\n\n    // Initial step to show when Wizard loads.\n    initStepIndex: {\n      type:    Number,\n      default: 0\n    },\n\n    // if true, allow users to navigate back to the first step of the Wizard\n    // if false, only way back to step 1 is to cancel and undo all configuration\n    editFirstStep: {\n      type:    Boolean,\n      default: false\n    },\n\n    showBanner: {\n      type:    Boolean,\n      default: true,\n    },\n\n    // whether or not to show the overall title/image on left of banner header in first step\n    initialTitle: {\n      type:    Boolean,\n      default: true\n    },\n\n    // place the same title (e.g. the type of thing being created by wizard) on every page\n    bannerTitle: {\n      type:    String,\n      default: null\n    },\n\n    // circular image left of banner title\n    bannerImage: {\n      type:    String,\n      default: null\n    },\n\n    bannerTitleSubtext: {\n      type:    String,\n      default: null\n    },\n\n    // Verb shown in the header, defaults to finishMode\n    headerMode: {\n      type:    String,\n      default: null\n    },\n\n    // The set of labels to display for the finish AsyncButton\n    finishMode: {\n      type:    String,\n      default: 'finish'\n    },\n\n    // Errors to display above the buttons\n    errors: {\n      type:    Array,\n      default: null,\n    }\n  },\n\n  data() {\n    return { activeStep: null };\n  },\n\n  computed: {\n    errorStrings() {\n      return ( this.errors || [] ).map((x) => stringify(x));\n    },\n\n    activeStepIndex() {\n      return this.visibleSteps.findIndex((s) => s.name === this.activeStep.name);\n    },\n\n    showPrevious() {\n      // If on first step...\n      if (this.activeStepIndex === 0) {\n        return false;\n      }\n      // .. or any previous step isn't hidden\n      for (let stepIndex = 0; stepIndex < this.activeStepIndex; stepIndex++) {\n        const step = this.visibleSteps[stepIndex];\n\n        if (!step) {\n          break;\n        }\n        if (!step.hidden) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    canPrevious() {\n      return !this.activeStep?.previousButton?.disable && (this.activeStepIndex > 1 || this.editFirstStep);\n    },\n\n    canNext() {\n      return (this.activeStepIndex < this.visibleSteps.length - 1) && this.activeStep.ready;\n    },\n\n    readySteps() {\n      return this.visibleSteps.filter((step) => step.ready);\n    },\n\n    showSteps() {\n      return this.activeStep.showSteps !== false && this.visibleSteps.length > 1;\n    },\n\n    stepsLoaded() {\n      return !this.steps.some((step) => step.loading === true);\n    },\n\n    visibleSteps() {\n      return this.steps.filter((step) => !step.hidden);\n    },\n\n    nextButtonStyle() {\n      return this.activeStep.nextButton?.style || `btn role-primary`;\n    },\n    nextButtonLabel() {\n      return this.activeStep.nextButton?.labelKey || `wizard.next`;\n    }\n  },\n\n  watch: {\n    stepsLoaded(neu, old) {\n      if (!old && neu) {\n        this.activeStep = this.visibleSteps[this.initStepIndex];\n        this.goToStep(this.activeStepIndex + 1);\n      }\n    }\n  },\n\n  created() {\n    this.activeStep = this.visibleSteps[this.initStepIndex];\n    this.goToStep(this.activeStepIndex + 1);\n  },\n\n  methods: {\n    goToStep(number, fromNav) {\n      if (number < 1) {\n        return;\n      }\n\n      // if editFirstStep is false, do not allow returning to step 1 (restarting wizard) from top nav\n      if (!this.editFirstStep && (number === 1 && fromNav)) {\n        return;\n      }\n\n      const selected = this.visibleSteps[number - 1];\n\n      if ( !selected || (!this.isAvailable(selected) && number !== 1)) {\n        return;\n      }\n\n      this.activeStep = selected;\n\n      this.$emit('next', { step: selected });\n    },\n\n    cancel() {\n      this.$emit('cancel');\n    },\n\n    finish(cb) {\n      this.$emit('finish', cb);\n    },\n\n    next() {\n      this.goToStep(this.activeStepIndex + 2);\n    },\n\n    back() {\n      this.goToStep(this.activeStepIndex);\n    },\n\n    // a step is not available if ready=false for any previous steps OR if the editFirstStep=false and it is the first step\n    isAvailable(step) {\n      if (!step) {\n        return false;\n      }\n\n      const idx = this.visibleSteps.findIndex((s) => s.name === step.name);\n\n      if (idx === 0 && !this.editFirstStep) {\n        return false;\n      }\n\n      for (let i = 0; i < idx; i++) {\n        if ( this.visibleSteps[i].ready === false ) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"outer-container\">\n    <Loading\n      v-if=\"!stepsLoaded\"\n      mode=\"relative\"\n    />\n    <!-- Note - Don't v-else this.... the steps need to be included in order to update 'stepsLoaded' -->\n    <div\n      class=\"outer-container\"\n      :class=\"{'hide': !stepsLoaded}\"\n    >\n      <div class=\"header\">\n        <div class=\"title\">\n          <div\n            v-if=\"showBanner\"\n            class=\"top choice-banner\"\n          >\n            <slot\n              v-if=\"!!bannerImage || !!bannerTitle\"\n              name=\"bannerTitle\"\n            >\n              <div\n                v-show=\"initialTitle || activeStepIndex > 0\"\n                class=\"title\"\n              >\n                <!-- Logo -->\n                <slot name=\"bannerTitleImage\">\n                  <div\n                    v-if=\"bannerImage\"\n                    class=\"round-image\"\n                  >\n                    <LazyImage\n                      :src=\"bannerImage\"\n                      class=\"logo\"\n                    />\n                  </div>\n                </slot>\n                <!-- Title with subtext -->\n                <div class=\"subtitle\">\n                  <h2 v-if=\"bannerTitle\">\n                    {{ bannerTitle }}\n                  </h2>\n                  <span\n                    v-if=\"bannerTitleSubtext\"\n                    class=\"subtext\"\n                  >{{ bannerTitleSubtext }}</span>\n                </div>\n              </div>\n            </slot>\n            <!-- Step number with subtext -->\n            <div\n              v-if=\"activeStep && showSteps\"\n              class=\"subtitle\"\n            >\n              <h2>{{ !!headerMode ? t(`wizard.${headerMode}`) : t(`asyncButton.${finishMode}.action`) }}: {{ t('wizard.step', {number:activeStepIndex+1}) }}</h2>\n              <slot name=\"bannerSubtext\">\n                <span\n                  v-if=\"activeStep.subtext !== null\"\n                  class=\"subtext\"\n                >{{ activeStep.subtext || activeStep.label }}</span>\n              </slot>\n            </div>\n          </div>\n          <div class=\"step-sequence\">\n            <ul\n              v-if=\"showSteps\"\n              class=\"steps\"\n              tabindex=\"0\"\n              @keyup.right.stop=\"selectNext(1)\"\n              @keyup.left.stop=\"selectNext(-1)\"\n            >\n              <template v-for=\"(step, idx ) in visibleSteps\">\n                <li\n\n                  :id=\"step.name\"\n                  :key=\"step.name+'li'\"\n                  :class=\"{step: true, active: step.name === activeStep.name, disabled: !isAvailable(step)}\"\n                  role=\"presentation\"\n                >\n                  <span\n                    :aria-controls=\"'step' + idx+1\"\n                    :aria-selected=\"step.name === activeStep.name\"\n                    role=\"tab\"\n                    class=\"controls\"\n                    @click.prevent=\"goToStep(idx+1, true)\"\n                  >\n                    <span\n                      class=\"icon icon-lg\"\n                      :class=\"{'icon-dot': step.name === activeStep.name, 'icon-dot-open':step.name !== activeStep.name}\"\n                    />\n                    <span>\n                      {{ step.label }}\n                    </span>\n                  </span>\n                </li>\n                <div\n                  v-if=\"idx!==visibleSteps.length-1\"\n                  :key=\"step.name\"\n                  class=\"divider\"\n                />\n              </template>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <slot\n        class=\"step-container\"\n        name=\"stepContainer\"\n        :activeStep=\"activeStep\"\n      >\n        <template v-for=\"step in steps\">\n          <div\n            v-if=\"step.name === activeStep.name || step.hidden\"\n            :key=\"step.name\"\n            class=\"step-container__step\"\n            :class=\"{'hide': step.name !== activeStep.name && step.hidden}\"\n          >\n            <slot\n              :step=\"step\"\n              :name=\"step.name\"\n            />\n          </div>\n        </template>\n      </slot>\n      <slot\n        name=\"controlsContainer\"\n        :showPrevious=\"showPrevious\"\n        :next=\"next\"\n        :back=\"back\"\n        :canNext=\"canNext\"\n        :activeStepIndex=\"activeStepIndex\"\n        :visibleSteps=\"visibleSteps\"\n        :errorStrings=\"errorStrings\"\n        :finish=\"finish\"\n        :cancel=\"cancel\"\n        :activeStep=\"activeStep\"\n      >\n        <div\n          v-for=\"(err,idx) in errorStrings\"\n          :key=\"idx\"\n        >\n          <Banner\n            color=\"error\"\n            :label=\"err\"\n            :closable=\"true\"\n            @close=\"errors.splice(idx, 1)\"\n          />\n        </div>\n        <div\n          id=\"wizard-footer-controls\"\n          class=\"controls-row pt-20\"\n        >\n          <slot\n            name=\"cancel\"\n            :cancel=\"cancel\"\n          >\n            <button\n              type=\"button\"\n              class=\"btn role-secondary\"\n              @click=\"cancel\"\n            >\n              <t k=\"generic.cancel\" />\n            </button>\n          </slot>\n          <div class=\"controls-steps\">\n            <slot\n              v-if=\"showPrevious\"\n              name=\"back\"\n              :back=\"back\"\n            >\n              <button\n                :disabled=\"!canPrevious || (!editFirstStep && activeStepIndex===1)\"\n                type=\"button\"\n                class=\"btn role-secondary\"\n                @click=\"back()\"\n              >\n                <t k=\"wizard.previous\" />\n              </button>\n            </slot>\n            <slot\n              v-if=\"activeStepIndex === visibleSteps.length-1\"\n              name=\"finish\"\n              :finish=\"finish\"\n            >\n              <AsyncButton\n                :disabled=\"!activeStep.ready\"\n                :mode=\"finishMode\"\n                @click=\"finish\"\n              />\n            </slot>\n            <slot\n              v-else\n              name=\"next\"\n              :next=\"next\"\n            >\n              <button\n                :disabled=\"!canNext\"\n                type=\"button\"\n                :class=\"nextButtonStyle\"\n                @click=\"next()\"\n              >\n                <t :k=\"nextButtonLabel\" />\n              </button>\n            </slot>\n          </div>\n        </div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n$spacer: 10px;\n\n.outer-container {\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  padding: 0;\n  justify-content: flex-start;\n}\n\n.header {\n  display: flex;\n  align-content: space-between;\n  align-items: center;\n  margin-bottom: 2*$spacer;\n\n  border-bottom: var(--header-border-size) solid var(--header-border);\n\n $minHeight: 60px;\n  & > .title {\n    flex: 1;\n    min-height: $minHeight;\n    display: flex;\n  }\n  .step-sequence {\n    flex:1;\n    min-height: $minHeight;\n    display: flex;\n\n    .steps {\n      flex: 1;\n      margin: 0 30px;\n      display:flex;\n      justify-content: space-between;\n      list-style-type:none;\n      padding: 0;\n\n      &:focus{\n          outline:none;\n          box-shadow: none;\n      }\n\n      & li.step{\n        display: flex;\n        flex-direction: row;\n        flex-grow: 1;\n        align-items: center;\n\n        & > span > span:last-of-type {\n          padding-bottom: 0;\n        }\n\n        &:last-of-type{\n          flex-grow: 0;\n        }\n\n        & .controls {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          width: 40px;\n          overflow: visible;\n          padding-top: 7px;\n\n          & > span {\n            padding-bottom: 3px;\n            margin-bottom: 5px;\n            white-space: nowrap;\n          }\n        }\n\n        &.active .controls{\n          color: var(--primary);\n        }\n\n        &:not(.disabled){\n          & .controls:hover>*{\n              color: var(--primary) !important;\n              cursor: pointer;\n          }\n        }\n\n        &:not(.active) {\n          & .controls>*{\n            color: var(--input-disabled-text);\n            text-decoration: none;\n          }\n        }\n      }\n\n      & .divider {\n        flex-basis: 100%;\n        border-top: 1px solid var(--border);\n        position: relative;\n        top: 17px;\n\n        .cru__content & {\n          top: 13px;\n        }\n      }\n    }\n  }\n\n  .choice-banner {\n\n    flex-basis: 40%;\n    display: flex;\n    align-items: center;\n    margin-bottom: $spacer;\n\n    &.selected{\n      background-color: var(--accent-btn);\n    }\n\n    &.top {\n\n      H2 {\n        margin: 0px;\n      }\n\n      .title{\n        display: flex;\n        align-items: center;\n        justify-content: space-evenly;\n        position: relative;\n\n        & > .subtitle {\n          margin-right: 20px;\n        }\n      }\n\n      .subtitle{\n        display: flex;\n        flex-direction: column;\n        & .subtext {\n          color: var(--input-label);\n        }\n      }\n\n    }\n\n    &:not(.top){\n      box-shadow: 0px 0px 12px 3px var(--box-bg);\n      flex-direction: row;\n      align-items: center;\n      justify-content: start;\n      &:hover{\n        outline: var(--outline-width) solid var(--outline);\n        cursor: pointer;\n      }\n    }\n\n    & .round-image {\n      min-width: 50px;\n      height: 50px;\n      margin: 10px 10px 10px 0;\n      border-radius: 50%;\n      overflow: hidden;\n      .logo {\n        min-width: 50px;\n        height: 50px;\n      }\n    }\n  }\n}\n\n.step-container {\n  position: relative; // Important for loading indicator in chart's with custom form components\n  flex: 1 1 auto;\n  height: 0;\n  overflow-y: auto;\n  padding: 20px 2px 2px 2px; // Handle borders flush against edge\n  display: flex;\n  flex-direction: column;\n\n  &__step {\n    overflow: hidden;\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n  }\n}\n\n  .controls-row {\n\n    // Overrides outlet padding\n    margin-left: -$space-m;\n    margin-right: -$space-m;\n    padding: $space-s $space-m;\n\n    display: flex;\n    justify-content: space-between;\n    padding-top: $spacer;\n\n    border-top: var(--header-border-size) solid var(--header-border);\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    background: var(--body-bg);\n    .controls-steps {\n\n      .btn {\n        margin-left: $spacer;\n      }\n    }\n  }\n\n</style>\n"]}]}