{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/DeveloperInstallDialog.vue?vue&type=style&index=0&id=57c6aa83&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/DeveloperInstallDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wbHVnaW4taW5zdGFsbC1kaWFsb2cgewogIHBhZGRpbmc6IDEwcHg7CgogIGg0IHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogIH0KCiAgLmRpYWxvZy1wYW5lbCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIG1pbi1oZWlnaHQ6IDEwMHB4OwoKICAgIHAgewogICAgICBtYXJnaW4tYm90dG9tOiA1cHg7CiAgICB9CgogICAgLmRpYWxvZy1pbmZvIHsKICAgICAgZmxleDogMTsKICAgIH0KCiAgICAudG9nZ2xlLWFkdmFuY2VkIHsKICAgICAgZGlzcGxheTogZmxleDsKICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICBtYXJnaW46IDEwcHggMDsKCiAgICAgICY6aG92ZXIgewogICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICAgICAgICBjb2xvcjogdmFyKC0tbGluayk7CiAgICAgIH0KICAgIH0KCiAgICAudmVyc2lvbi1zZWxlY3RvciB7CiAgICAgIG1hcmdpbjogMCAxMHB4IDEwcHggMTBweDsKICAgICAgd2lkdGg6IGF1dG87CiAgICB9CiAgfQoKICAuZGlhbG9nLWJ1dHRvbnMgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwoKICAgID4gKjpub3QoOmxhc3QtY2hpbGQpIHsKICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgfQogIH0KfQo="},{"version":3,"sources":["DeveloperInstallDialog.vue"],"names":[],"mappings":";AA0PA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"DeveloperInstallDialog.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/uiplugins","sourcesContent":["<script>\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport { UI_PLUGIN } from '@shell/config/types';\nimport { UI_PLUGIN_NAMESPACE } from '@shell/config/uiplugins';\n\nexport default {\n  components: {\n    AsyncButton,\n    Checkbox,\n    LabeledInput,\n  },\n\n  data() {\n    return {\n      name:              '',\n      location:          '',\n      persist:           false,\n      canModifyName:     true,\n      canModifyLocation: true,\n    };\n  },\n\n  watch: {\n    name(neu, old) {\n      if (this.canModifyLocation) {\n        this.location = `/pkg/${ neu }/${ neu }.umd.min.js`;\n      }\n    },\n    location(neu, old) {\n      if (this.canModifyName) {\n        const names = neu.split('/');\n        let last = names[names.length - 1];\n        let index = last.indexOf('.umd.min.js');\n\n        if (index !== -1) {\n          last = last.substr(0, index);\n        } else {\n          index = last.indexOf('.umd.js');\n          if (index !== -1) {\n            last = last.substr(0, index);\n          }\n        }\n\n        this.name = last;\n      }\n    }\n  },\n\n  methods: {\n    showDialog() {\n      this.$modal.show('developerInstallPluginDialog');\n    },\n    closeDialog(result) {\n      this.$modal.hide('developerInstallPluginDialog');\n      this.$emit('closed', result);\n    },\n\n    updateName(v) {\n      this.canModifyName = v.length === 0;\n    },\n\n    updateLocation(v) {\n      this.canModifyLocation = v.length === 0;\n    },\n\n    async loadPlugin(btnCb) {\n      let name = this.name;\n      const url = this.location;\n\n      if (!name) {\n        const parts = url.split('/');\n        const n = parts[parts.length - 1];\n\n        // Split on '.'\n        name = n.split('.')[0];\n      }\n\n      // Try and parse version number from the name\n      let version = '0.0.1';\n      let crdName = name;\n\n      const parts = name.split('-');\n\n      if (parts.length >= 2) {\n        version = parts.pop();\n        crdName = parts.join('-');\n      }\n\n      if (this.persist) {\n        const pluginCR = await this.$store.dispatch('management/create', {\n          type:     UI_PLUGIN,\n          metadata: {\n            name,\n            namespace: UI_PLUGIN_NAMESPACE\n          },\n          spec: {\n            plugin: {\n              name:     crdName,\n              version,\n              endpoint: url,\n              noCache:  true,\n              metadata: {\n                developer: 'true',\n                direct:    'true'\n              }\n            }\n          }\n        });\n\n        try {\n          await pluginCR.save({ url: `/v1/${ UI_PLUGIN }`, method: 'POST' });\n        } catch (e) {\n          console.error('Could not create CRD for plugin', e); // eslint-disable-line no-console\n          btnCb(false);\n        }\n      }\n\n      this.$plugin.loadAsync(name, url).then(() => {\n        this.closeDialog(true);\n        this.$store.dispatch('growl/success', {\n          title:   this.t('plugins.success.title', { name }),\n          message: this.t('plugins.success.message'),\n          timeout: 3000,\n        }, { root: true });\n        btnCb(true);\n      }).catch((error) => {\n        btnCb(false);\n        // this.closeDialog(false);\n        const message = typeof error === 'object' ? this.t('plugins.error.message') : error;\n\n        this.$store.dispatch('growl/error', {\n          title:   this.t('plugins.error.title'),\n          message,\n          timeout: 5000\n        }, { root: true });\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <modal\n    name=\"developerInstallPluginDialog\"\n    height=\"auto\"\n    :scrollable=\"true\"\n  >\n    <div class=\"plugin-install-dialog\">\n      <h4>\n        {{ t('plugins.developer.title') }}\n      </h4>\n      <p>\n        {{ t('plugins.developer.prompt') }}\n      </p>\n      <div class=\"custom mt-10\">\n        <div class=\"fields\">\n          <LabeledInput\n            v-model=\"location\"\n            v-focus\n            label-key=\"plugins.developer.fields.url\"\n            @input=\"updateLocation\"\n          />\n        </div>\n      </div>\n      <div class=\"custom mt-10\">\n        <div class=\"fields\">\n          <LabeledInput\n            v-model=\"name\"\n            label-key=\"plugins.developer.fields.name\"\n            @input=\"updateName\"\n          />\n        </div>\n        <div class=\"fields mt-10\">\n          <Checkbox\n            v-model=\"persist\"\n            label-key=\"plugins.developer.fields.persist\"\n          />\n        </div>\n        <div class=\"dialog-buttons mt-20\">\n          <button\n            class=\"btn role-secondary\"\n            data-testid=\"dev-install-ext-modal-cancel-btn\"\n            @click=\"closeDialog()\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n          <AsyncButton\n            mode=\"load\"\n            data-testid=\"dev-install-ext-modal-install-btn\"\n            @click=\"loadPlugin\"\n          />\n        </div>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style lang=\"scss\" scoped>\n  .plugin-install-dialog {\n    padding: 10px;\n\n    h4 {\n      font-weight: bold;\n    }\n\n    .dialog-panel {\n      display: flex;\n      flex-direction: column;\n      min-height: 100px;\n\n      p {\n        margin-bottom: 5px;\n      }\n\n      .dialog-info {\n        flex: 1;\n      }\n\n      .toggle-advanced {\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n        margin: 10px 0;\n\n        &:hover {\n          text-decoration: none;\n          color: var(--link);\n        }\n      }\n\n      .version-selector {\n        margin: 0 10px 10px 10px;\n        width: auto;\n      }\n    }\n\n    .dialog-buttons {\n      display: flex;\n      justify-content: flex-end;\n      margin-top: 10px;\n\n      > *:not(:last-child) {\n        margin-right: 10px;\n      }\n    }\n  }\n</style>\n"]}]}