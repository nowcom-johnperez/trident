{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/RuleSelector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/RuleSelector.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IF9WSUVXIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgQXJyYXlMaXN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vQXJyYXlMaXN0JzsKaW1wb3J0IHsgTGFiZWxlZElucHV0IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQnOwppbXBvcnQgU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vU2VsZWN0JzsKCmNvbnN0IE9QRVJBVE9SX1ZBTFVFUyA9IHsKICBJU19TRVQ6ICAgICAgJ0V4aXN0cycsCiAgSVNfTk9UX1NFVDogICdEb2VzTm90RXhpc3QnLAogIElOX0xJU1Q6ICAgICAnSW4nLAogIE5PVF9JTl9MSVNUOiAnTm90SW4nCn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXJyYXlMaXN0LAogICAgTGFiZWxlZElucHV0LAogICAgU2VsZWN0CiAgfSwKCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIEFycmF5LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgbW9kZTogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IF9WSUVXCiAgICB9LAogICAgYWRkTGFiZWw6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgb3BlcmF0b3JPcHRpb25zOiBbCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICdpcyBzZXQnLAogICAgICAgICAgdmFsdWU6IE9QRVJBVE9SX1ZBTFVFUy5JU19TRVQsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogJ2lzIG5vdCBzZXQnLAogICAgICAgICAgdmFsdWU6IE9QRVJBVE9SX1ZBTFVFUy5JU19OT1RfU0VULAogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbGFiZWw6ICdpbiBsaXN0JywKICAgICAgICAgIHZhbHVlOiBPUEVSQVRPUl9WQUxVRVMuSU5fTElTVCwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiAnbm90IGluIGxpc3QnLAogICAgICAgICAgdmFsdWU6IE9QRVJBVE9SX1ZBTFVFUy5OT1RfSU5fTElTVCwKICAgICAgICB9CiAgICAgIF0sCiAgICAgIG9wdGlvbnNXaXRoVmFsdWVEaXNhYmxlZDogWwogICAgICAgIE9QRVJBVE9SX1ZBTFVFUy5JU19TRVQsCiAgICAgICAgT1BFUkFUT1JfVkFMVUVTLklTX05PVF9TRVQKICAgICAgXSwKICAgICAgZGVmYXVsdEFkZFZhbHVlOiB7CiAgICAgICAga2V5OiAgICAgICcnLAogICAgICAgIG9wZXJhdG9yOiBPUEVSQVRPUl9WQUxVRVMuSVNfU0VULAogICAgICB9CiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBsb2NhbFZhbHVlOiB7CiAgICAgIGdldCgpIHsKICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTsKICAgICAgfSwKICAgICAgc2V0KGxvY2FsVmFsdWUpIHsKICAgICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIGxvY2FsVmFsdWUpOwogICAgICB9CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgb25PcGVyYXRvcklucHV0KHNjb3BlLCBvcGVyYXRvcikgewogICAgICBzY29wZS5yb3cudmFsdWUub3BlcmF0b3IgPSBvcGVyYXRvcjsKICAgICAgaWYgKHRoaXMub3B0aW9uc1dpdGhWYWx1ZURpc2FibGVkLmluY2x1ZGVzKG9wZXJhdG9yKSkgewogICAgICAgIGlmIChzY29wZS5yb3cudmFsdWUudmFsdWVzKSB7CiAgICAgICAgICBkZWxldGUgc2NvcGUucm93LnZhbHVlLnZhbHVlczsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc2NvcGUucm93LnZhbHVlLnZhbHVlcyA9IHNjb3BlLnJvdy52YWx1ZS52YWx1ZXMgfHwgW107CiAgICAgIH0KICAgICAgc2NvcGUucXVldWVVcGRhdGUoKTsKICAgIH0sCgogICAgaXNWYWx1ZURpc2FibGVkKHNjb3BlKSB7CiAgICAgIHJldHVybiB0aGlzLm9wdGlvbnNXaXRoVmFsdWVEaXNhYmxlZC5pbmNsdWRlcyhzY29wZS5yb3cudmFsdWUub3BlcmF0b3IpOwogICAgfSwKICAgIGdldFZhbHVlKHNjb3BlKSB7CiAgICAgIHJldHVybiBzY29wZS5yb3cudmFsdWUudmFsdWVzPy5qb2luKCcsJykgfHwgJyc7CiAgICB9LAogICAgb25WYWx1ZUlucHV0KHNjb3BlLCByYXdWYWx1ZSkgewogICAgICBzY29wZS5yb3cudmFsdWUudmFsdWVzID0gcmF3VmFsdWUuc3BsaXQoJywnKQogICAgICAgIC5tYXAoKGVudHJ5KSA9PiBlbnRyeS50cmltKCkpOwogICAgICBzY29wZS5xdWV1ZVVwZGF0ZSgpOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["RuleSelector.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RuleSelector.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport { _VIEW } from '@shell/config/query-params';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Select from '@shell/components/form/Select';\n\nconst OPERATOR_VALUES = {\n  IS_SET:      'Exists',\n  IS_NOT_SET:  'DoesNotExist',\n  IN_LIST:     'In',\n  NOT_IN_LIST: 'NotIn'\n};\n\nexport default {\n  components: {\n    ArrayList,\n    LabeledInput,\n    Select\n  },\n\n  props: {\n    value: {\n      type:    Array,\n      default: null\n    },\n    mode: {\n      type:    String,\n      default: _VIEW\n    },\n    addLabel: {\n      type:     String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      operatorOptions: [\n        {\n          label: 'is set',\n          value: OPERATOR_VALUES.IS_SET,\n        },\n        {\n          label: 'is not set',\n          value: OPERATOR_VALUES.IS_NOT_SET,\n        },\n        {\n          label: 'in list',\n          value: OPERATOR_VALUES.IN_LIST,\n        },\n        {\n          label: 'not in list',\n          value: OPERATOR_VALUES.NOT_IN_LIST,\n        }\n      ],\n      optionsWithValueDisabled: [\n        OPERATOR_VALUES.IS_SET,\n        OPERATOR_VALUES.IS_NOT_SET\n      ],\n      defaultAddValue: {\n        key:      '',\n        operator: OPERATOR_VALUES.IS_SET,\n      }\n    };\n  },\n\n  computed: {\n    localValue: {\n      get() {\n        return this.value;\n      },\n      set(localValue) {\n        this.$emit('input', localValue);\n      }\n    }\n  },\n\n  methods: {\n    onOperatorInput(scope, operator) {\n      scope.row.value.operator = operator;\n      if (this.optionsWithValueDisabled.includes(operator)) {\n        if (scope.row.value.values) {\n          delete scope.row.value.values;\n        }\n      } else {\n        scope.row.value.values = scope.row.value.values || [];\n      }\n      scope.queueUpdate();\n    },\n\n    isValueDisabled(scope) {\n      return this.optionsWithValueDisabled.includes(scope.row.value.operator);\n    },\n    getValue(scope) {\n      return scope.row.value.values?.join(',') || '';\n    },\n    onValueInput(scope, rawValue) {\n      scope.row.value.values = rawValue.split(',')\n        .map((entry) => entry.trim());\n      scope.queueUpdate();\n    }\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"rule-selector\"\n    :class=\"{[mode]: true}\"\n  >\n    <ArrayList\n      v-model=\"localValue\"\n      :protip=\"false\"\n      :show-header=\"true\"\n      :add-label=\"addLabel\"\n      :default-add-value=\"defaultAddValue\"\n      :mode=\"mode\"\n    >\n      <template v-slot:column-headers>\n        <div class=\"box\">\n          <div class=\"key\">\n            Key\n          </div>\n          <div class=\"operator\">\n            Operator\n          </div>\n          <div class=\"value\">\n            Value\n          </div>\n          <div />\n        </div>\n      </template>\n      <template v-slot:columns=\"scope\">\n        <div class=\"key\">\n          <LabeledInput\n            v-model=\"scope.row.value.key\"\n            :mode=\"mode\"\n          />\n        </div>\n        <div class=\"operator\">\n          <Select\n            :mode=\"mode\"\n            :value=\"scope.row.value.operator\"\n            :options=\"operatorOptions\"\n            @input=\"onOperatorInput(scope, $event)\"\n          />\n        </div>\n        <div class=\"value\">\n          <LabeledInput\n            :disabled=\"isValueDisabled(scope)\"\n            :value=\"getValue(scope)\"\n            :mode=\"mode\"\n            @input=\"onValueInput(scope, $event)\"\n          />\n        </div>\n      </template>\n    </ArrayList>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.rule-selector {\n  &:not(.view) table {\n    table-layout: initial;\n  }\n\n   ::v-deep .box {\n    display: grid;\n    grid-template-columns: 25% 25% 25% 15%;\n    column-gap: 1.75%;\n    align-items: center;\n    margin-bottom: 10px;\n\n    .key,\n    .value,\n    .operator {\n      height: 100%;\n    }\n  }\n}\n</style>\n"]}]}