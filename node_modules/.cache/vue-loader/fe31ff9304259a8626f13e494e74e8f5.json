{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgUGVyc2lzdGVudFZvbHVtZUNsYWltIGZyb20gJ0BzaGVsbC9lZGl0L3dvcmtsb2FkL3N0b3JhZ2UvcGVyc2lzdGVudFZvbHVtZUNsYWltL3BlcnNpc3RlbnR2b2x1bWVjbGFpbSc7CmltcG9ydCB7IFBWQyB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExhYmVsZWRJbnB1dCwKICAgIExhYmVsZWRTZWxlY3QsCiAgICBQZXJzaXN0ZW50Vm9sdW1lQ2xhaW0sCiAgICBDaGVja2JveAogIH0sCgogIHByb3BzOiB7CiAgICBwb2RTcGVjOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY3JlYXRlJwogICAgfSwKCiAgICBuYW1lc3BhY2U6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKCiAgICAvLyBhcnJheSBvZiBleGlzdGluZyBwZXJzaXN0ZW50IHZvbHVtZSBjbGFpbXMKICAgIHB2Y3M6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9LAoKICAgIHJlZ2lzdGVyQmVmb3JlSG9vazogewogICAgICB0eXBlOiAgICBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCgogICAgc2F2ZVB2Y0hvb2tOYW1lOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgbG9hZGluZzogewogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgICAgdHlwZTogICAgQm9vbGVhbgogICAgfSwKICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIC8vIENyZWF0ZSB0aGUgbmV3IFBWQyBmb3JtIHN0YXRlIGlmIGl0IGRvZXNuJ3QgZXhpc3QKICAgIGlmICh0aGlzLnZhbHVlLl9fbmV3UHZjKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIGNvbnN0IG5hbWVzcGFjZSA9IHRoaXMubmFtZXNwYWNlIHx8IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2RlZmF1bHROYW1lc3BhY2UnXTsKCiAgICBjb25zdCBkYXRhID0geyB0eXBlOiBQVkMgfTsKCiAgICBkYXRhLm1ldGFkYXRhID0geyBuYW1lc3BhY2UgfTsKCiAgICBjb25zdCBwdmMgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9jcmVhdGUnLCBkYXRhKTsKCiAgICBwdmMuYXBwbHlEZWZhdWx0cygpOwogICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdfX25ld1B2YycsIHB2Yyk7CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC8vIHdoZXRoZXIgdGhpcyBpcyBjcmVhdGluZyBhIG5ldyBQVkMgb3IgcmVmZXJlbmNpbmcgYW4gZXhpc3Rpbmcgb25lCiAgICBjcmVhdGVOZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLnZhbHVlLl90eXBlID09PSAnY3JlYXRlUFZDJzsKICAgIH0sCgogICAgLi4ubWFwR2V0dGVycyh7IHQ6ICdpMThuL3QnIH0pCiAgfSwKCiAgd2F0Y2g6IHsKICAgIG5hbWVzcGFjZShuZXUpIHsKICAgICAgdGhpcy52YWx1ZS5fX25ld1B2Yy5tZXRhZGF0YS5uYW1lc3BhY2UgPSBuZXU7CiAgICB9LAoKICAgICd2YWx1ZS5fX25ld1B2Yy5tZXRhZGF0YS5uYW1lJyhuZXUpIHsKICAgICAgdGhpcy52YWx1ZS5wZXJzaXN0ZW50Vm9sdW1lQ2xhaW0uY2xhaW1OYW1lID0gbmV1OwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHJlbW92ZVB2Y0Zvcm0oaG9va05hbWUpIHsKICAgICAgdGhpcy4kZW1pdCgncmVtb3ZlUHZjRm9ybScsIGhvb2tOYW1lKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim","sourcesContent":["<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { mapGetters } from 'vuex';\nimport PersistentVolumeClaim from '@shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim';\nimport { PVC } from '@shell/config/types';\n\nexport default {\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    PersistentVolumeClaim,\n    Checkbox\n  },\n\n  props: {\n    podSpec: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    namespace: {\n      type:    String,\n      default: null\n    },\n\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    // array of existing persistent volume claims\n    pvcs: {\n      type:    Array,\n      default: () => []\n    },\n\n    registerBeforeHook: {\n      type:    Function,\n      default: null,\n    },\n\n    savePvcHookName: {\n      type:     String,\n      required: true\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n  },\n\n  async fetch() {\n    // Create the new PVC form state if it doesn't exist\n    if (this.value.__newPvc) {\n      return;\n    }\n    const namespace = this.namespace || this.$store.getters['defaultNamespace'];\n\n    const data = { type: PVC };\n\n    data.metadata = { namespace };\n\n    const pvc = await this.$store.dispatch('cluster/create', data);\n\n    pvc.applyDefaults();\n    this.$set(this.value, '__newPvc', pvc);\n  },\n\n  computed: {\n    // whether this is creating a new PVC or referencing an existing one\n    createNew() {\n      return this.value._type === 'createPVC';\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    namespace(neu) {\n      this.value.__newPvc.metadata.namespace = neu;\n    },\n\n    'value.__newPvc.metadata.name'(neu) {\n      this.value.persistentVolumeClaim.claimName = neu;\n    }\n  },\n\n  methods: {\n    removePvcForm(hookName) {\n      this.$emit('removePvcForm', hookName);\n    }\n  }\n};\n</script>\n\n<template>\n  <div v-if=\"value.__newPvc\">\n    <div>\n      <div\n        v-if=\"createNew\"\n        class=\"bordered-section\"\n      >\n        <PersistentVolumeClaim\n          v-if=\"value.__newPvc\"\n          v-model=\"value.__newPvc\"\n          :mode=\"mode\"\n          :register-before-hook=\"registerBeforeHook\"\n          :save-pvc-hook-name=\"savePvcHookName\"\n          @removePvcForm=\"removePvcForm\"\n        />\n      </div>\n      <div class=\"row mb-10\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value.name\"\n            :required=\"true\"\n            :mode=\"mode\"\n            :label=\"t('workload.storage.volumeName')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-if=\"!createNew\"\n            v-model=\"value.persistentVolumeClaim.claimName\"\n            :required=\"true\"\n            :mode=\"mode\"\n            :label=\"t('workload.storage.subtypes.persistentVolumeClaim')\"\n            :options=\"pvcs\"\n            :loading=\"loading\"\n          />\n        </div>\n      </div>\n      <div class=\"row\">\n        <Checkbox\n          v-model=\"value.persistentVolumeClaim.readOnly\"\n          :mode=\"mode\"\n          :label=\"t('workload.storage.readOnly')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}