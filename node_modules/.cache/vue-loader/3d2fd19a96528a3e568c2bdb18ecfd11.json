{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/node.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/node.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgVGFnIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhZyc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCB7CiAgU1RBVEUsIE5BTUUsIFJPTEVTLCBWRVJTSU9OLCBJTlRFUk5BTF9FWFRFUk5BTF9JUCwgQ1BVLCBSQU0sIFBPRFMsIEFHRSwgS1VCRV9OT0RFX09TCn0gZnJvbSAnQHNoZWxsL2NvbmZpZy90YWJsZS1oZWFkZXJzJzsKaW1wb3J0IG1ldHJpY1BvbGxlciBmcm9tICdAc2hlbGwvbWl4aW5zL21ldHJpYy1wb2xsZXInOwoKaW1wb3J0IHsKICBDQVBJLAogIE1BTkFHRU1FTlQsIE1FVFJJQywgTk9ERSwgTk9STUFOLCBQT0QKfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgYWxsSGFzaCB9IGZyb20gJ0BzaGVsbC91dGlscy9wcm9taXNlJzsKaW1wb3J0IHsgR1JPVVBfUkVTT1VSQ0VTLCBtYXBQcmVmIH0gZnJvbSAnQHNoZWxsL3N0b3JlL3ByZWZzJzsKaW1wb3J0IHsgQ09MVU1OX0JSRUFLUE9JTlRTIH0gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvU29ydGFibGVUYWJsZS9pbmRleC52dWUnOwppbXBvcnQgUmVzb3VyY2VGZXRjaCBmcm9tICdAc2hlbGwvbWl4aW5zL3Jlc291cmNlLWZldGNoJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICAgICAgICdMaXN0Tm9kZScsCiAgY29tcG9uZW50czogewogICAgUmVzb3VyY2VUYWJsZSwKICAgIFRhZywKICAgIEJhbm5lcgogIH0sCiAgbWl4aW5zOiBbbWV0cmljUG9sbGVyLCBSZXNvdXJjZUZldGNoXSwKCiAgcHJvcHM6IHsKICAgIHJlc291cmNlOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIHNjaGVtYTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICB1c2VRdWVyeVBhcmFtc0ZvclNpbXBsZUZpbHRlcmluZzogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgdGhpcy4kaW5pdGlhbGl6ZUZldGNoRGF0YSh0aGlzLnJlc291cmNlKTsKCiAgICBjb25zdCBoYXNoID0geyBrdWJlTm9kZXM6IHRoaXMuJGZldGNoVHlwZSh0aGlzLnJlc291cmNlKSB9OwoKICAgIHRoaXMuY2FuVmlld1BvZHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzW2BjbHVzdGVyL3NjaGVtYUZvcmBdKFBPRCk7CgogICAgaWYgKHRoaXMuJHN0b3JlLmdldHRlcnNbYG1hbmFnZW1lbnQvc2NoZW1hRm9yYF0oTUFOQUdFTUVOVC5OT0RFKSkgewogICAgICAvLyBSZXF1aXJlZCBmb3IgRHJhaW4vQ29yZG9uIGFjdGlvbgogICAgICBoYXNoLm5vcm1hbk5vZGVzID0gdGhpcy4kZmV0Y2hUeXBlKE5PUk1BTi5OT0RFLCBbXSwgJ3JhbmNoZXInKTsKICAgIH0KCiAgICBpZiAodGhpcy4kc3RvcmUuZ2V0dGVyc1tgcmFuY2hlci9zY2hlbWFGb3JgXShOT1JNQU4uTk9ERSkpIHsKICAgICAgaGFzaC5tZ210Tm9kZXMgPSB0aGlzLiRmZXRjaFR5cGUoTUFOQUdFTUVOVC5OT0RFLCBbXSwgJ21hbmFnZW1lbnQnKTsKICAgIH0KCiAgICBpZiAodGhpcy4kc3RvcmUuZ2V0dGVyc1tgbWFuYWdlbWVudC9zY2hlbWFGb3JgXShDQVBJLk1BQ0hJTkUpKSB7CiAgICAgIC8vIFJlcXVpcmVkIGZvciBzc2ggLyBkb3dubG9hZCBrZXkgYWN0aW9ucwogICAgICBoYXNoLm1hY2hpbmVzID0gdGhpcy4kZmV0Y2hUeXBlKENBUEkuTUFDSElORSwgW10sICdtYW5hZ2VtZW50Jyk7CiAgICB9CgogICAgaWYgKHRoaXMuY2FuVmlld1BvZHMpIHsKICAgICAgLy8gVXNlZCBmb3IgcnVubmluZyBwb2RzIG1ldHJpY3MgLSB3ZSBkb24ndCBuZWVkIHRvIGJsb2NrIG9uIHRoaXMgdG8gc2hvdyB0aGUgbGlzdCBvZiBub2RlcwogICAgICB0aGlzLiRmZXRjaFR5cGUoUE9EKTsKICAgIH0KCiAgICBhd2FpdCBhbGxIYXNoKGhhc2gpOwogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4geyBjYW5WaWV3UG9kczogZmFsc2UgfTsKICB9LAoKICBiZWZvcmVEZXN0cm95KCkgewogICAgLy8gU3RvcCB3YXRjaGluZyBwb2RzLCBub2RlcyBhbmQgbm9kZSBtZXRyaWNzCiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9mb3JnZXRUeXBlJywgUE9EKTsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZvcmdldFR5cGUnLCBOT0RFKTsKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZvcmdldFR5cGUnLCBNRVRSSUMuTk9ERSk7CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGhhc1dpbmRvd3NOb2RlcygpIHsKICAgICAgcmV0dXJuICh0aGlzLnJvd3MgfHwgW10pLnNvbWUoKG5vZGUpID0+IG5vZGUuc3RhdHVzLm5vZGVJbmZvLm9wZXJhdGluZ1N5c3RlbSA9PT0gJ3dpbmRvd3MnKTsKICAgIH0sCgogICAgdGFibGVHcm91cDogbWFwUHJlZihHUk9VUF9SRVNPVVJDRVMpLAoKICAgIHBhcnNlZFJvd3MoKSB7CiAgICAgIHRoaXMucm93cy5mb3JFYWNoKChyb3cpID0+IHsKICAgICAgICByb3cuZGlzcGxheVRhaW50c0FuZExhYmVscyA9IChyb3cuc3BlYy50YWludHMgJiYgcm93LnNwZWMudGFpbnRzLmxlbmd0aCkgfHwgISFyb3cuY3VzdG9tTGFiZWxDb3VudDsKICAgICAgfSk7CgogICAgICByZXR1cm4gdGhpcy5yb3dzOwogICAgfSwKCiAgICBoZWFkZXJzKCkgewogICAgICBjb25zdCBoZWFkZXJzID0gWwogICAgICAgIFNUQVRFLAogICAgICAgIE5BTUUsCiAgICAgICAgUk9MRVMsCiAgICAgICAgVkVSU0lPTiwKICAgICAgICBJTlRFUk5BTF9FWFRFUk5BTF9JUCwKICAgICAgICB7CiAgICAgICAgICAuLi5LVUJFX05PREVfT1MsCiAgICAgICAgICBicmVha3BvaW50OiBDT0xVTU5fQlJFQUtQT0lOVFMuTEFQVE9QLAogICAgICAgICAgZ2V0VmFsdWU6ICAgKHJvdykgPT4gcm93LnN0YXR1cz8ubm9kZUluZm8/Lm9wZXJhdGluZ1N5c3RlbQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgLi4uQ1BVLAogICAgICAgICAgYnJlYWtwb2ludDogQ09MVU1OX0JSRUFLUE9JTlRTLkxBUFRPUCwKICAgICAgICAgIGdldFZhbHVlOiAgIChyb3cpID0+IHJvdy5jcHVVc2FnZVBlcmNlbnRhZ2UKICAgICAgICB9LCB7CiAgICAgICAgICAuLi5SQU0sCiAgICAgICAgICBicmVha3BvaW50OiBDT0xVTU5fQlJFQUtQT0lOVFMuTEFQVE9QLAogICAgICAgICAgZ2V0VmFsdWU6ICAgKHJvdykgPT4gcm93LnJhbVVzYWdlUGVyY2VudGFnZQogICAgICAgIH1dOwoKICAgICAgaWYgKHRoaXMuY2FuVmlld1BvZHMpIHsKICAgICAgICBoZWFkZXJzLnB1c2goewogICAgICAgICAgLi4uUE9EUywKICAgICAgICAgIGJyZWFrcG9pbnQ6IENPTFVNTl9CUkVBS1BPSU5UUy5ERVNLVE9QLAogICAgICAgICAgZ2V0VmFsdWU6ICAgKHJvdykgPT4gcm93LnBvZENvbnN1bWVkVXNhZ2UKICAgICAgICB9KTsKICAgICAgfQogICAgICBoZWFkZXJzLnB1c2goQUdFKTsKCiAgICAgIHJldHVybiBoZWFkZXJzOwogICAgfSwKICB9LAoKICBtZXRob2RzOiB7CiAgICBhc3luYyBsb2FkTWV0cmljcygpIHsKICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY2x1c3Rlci9zY2hlbWFGb3InXShNRVRSSUMuTk9ERSk7CgogICAgICBpZiAoc2NoZW1hKSB7CiAgICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsKICAgICAgICAgIHR5cGU6IE1FVFJJQy5OT0RFLAogICAgICAgICAgb3B0OiAgeyBmb3JjZTogdHJ1ZSB9CiAgICAgICAgfSk7CgogICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCk7CiAgICAgIH0KICAgIH0sCgogICAgdG9nZ2xlTGFiZWxzKHJvdykgewogICAgICB0aGlzLiRzZXQocm93LCAnZGlzcGxheUxhYmVscycsICFyb3cuZGlzcGxheUxhYmVscyk7CiAgICB9LAogIH0KCn07Cg=="},{"version":3,"sources":["node.vue"],"names":[],"mappingsfile":"node.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Tag from '@shell/components/Tag';\nimport { Banner } from '@components/Banner';\nimport {\n  STATE, NAME, ROLES, VERSION, INTERNAL_EXTERNAL_IP, CPU, RAM, PODS, AGE, KUBE_NODE_OS\n} from '@shell/config/table-headers';\nimport metricPoller from '@shell/mixins/metric-poller';\n\nimport {\n  CAPI,\n  MANAGEMENT, METRIC, NODE, NORMAN, POD\n} from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { GROUP_RESOURCES, mapPref } from '@shell/store/prefs';\nimport { COLUMN_BREAKPOINTS } from '@shell/components/SortableTable/index.vue';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nexport default {\n  name:       'ListNode',\n  components: {\n    ResourceTable,\n    Tag,\n    Banner\n  },\n  mixins: [metricPoller, ResourceFetch],\n\n  props: {\n    resource: {\n      type:     String,\n      required: true,\n    },\n    schema: {\n      type:     Object,\n      required: true,\n    },\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    this.$initializeFetchData(this.resource);\n\n    const hash = { kubeNodes: this.$fetchType(this.resource) };\n\n    this.canViewPods = this.$store.getters[`cluster/schemaFor`](POD);\n\n    if (this.$store.getters[`management/schemaFor`](MANAGEMENT.NODE)) {\n      // Required for Drain/Cordon action\n      hash.normanNodes = this.$fetchType(NORMAN.NODE, [], 'rancher');\n    }\n\n    if (this.$store.getters[`rancher/schemaFor`](NORMAN.NODE)) {\n      hash.mgmtNodes = this.$fetchType(MANAGEMENT.NODE, [], 'management');\n    }\n\n    if (this.$store.getters[`management/schemaFor`](CAPI.MACHINE)) {\n      // Required for ssh / download key actions\n      hash.machines = this.$fetchType(CAPI.MACHINE, [], 'management');\n    }\n\n    if (this.canViewPods) {\n      // Used for running pods metrics - we don't need to block on this to show the list of nodes\n      this.$fetchType(POD);\n    }\n\n    await allHash(hash);\n  },\n\n  data() {\n    return { canViewPods: false };\n  },\n\n  beforeDestroy() {\n    // Stop watching pods, nodes and node metrics\n    this.$store.dispatch('cluster/forgetType', POD);\n    this.$store.dispatch('cluster/forgetType', NODE);\n    this.$store.dispatch('cluster/forgetType', METRIC.NODE);\n  },\n\n  computed: {\n    hasWindowsNodes() {\n      return (this.rows || []).some((node) => node.status.nodeInfo.operatingSystem === 'windows');\n    },\n\n    tableGroup: mapPref(GROUP_RESOURCES),\n\n    parsedRows() {\n      this.rows.forEach((row) => {\n        row.displayTaintsAndLabels = (row.spec.taints && row.spec.taints.length) || !!row.customLabelCount;\n      });\n\n      return this.rows;\n    },\n\n    headers() {\n      const headers = [\n        STATE,\n        NAME,\n        ROLES,\n        VERSION,\n        INTERNAL_EXTERNAL_IP,\n        {\n          ...KUBE_NODE_OS,\n          breakpoint: COLUMN_BREAKPOINTS.LAPTOP,\n          getValue:   (row) => row.status?.nodeInfo?.operatingSystem\n        },\n        {\n          ...CPU,\n          breakpoint: COLUMN_BREAKPOINTS.LAPTOP,\n          getValue:   (row) => row.cpuUsagePercentage\n        }, {\n          ...RAM,\n          breakpoint: COLUMN_BREAKPOINTS.LAPTOP,\n          getValue:   (row) => row.ramUsagePercentage\n        }];\n\n      if (this.canViewPods) {\n        headers.push({\n          ...PODS,\n          breakpoint: COLUMN_BREAKPOINTS.DESKTOP,\n          getValue:   (row) => row.podConsumedUsage\n        });\n      }\n      headers.push(AGE);\n\n      return headers;\n    },\n  },\n\n  methods: {\n    async loadMetrics() {\n      const schema = this.$store.getters['cluster/schemaFor'](METRIC.NODE);\n\n      if (schema) {\n        await this.$store.dispatch('cluster/findAll', {\n          type: METRIC.NODE,\n          opt:  { force: true }\n        });\n\n        this.$forceUpdate();\n      }\n    },\n\n    toggleLabels(row) {\n      this.$set(row, 'displayLabels', !row.displayLabels);\n    },\n  }\n\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hasWindowsNodes\"\n      color=\"info\"\n      :label=\"t('cluster.custom.registrationCommand.windowsWarning')\"\n    />\n    <ResourceTable\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :rows=\"parsedRows\"\n      :sub-rows=\"true\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n      v-on=\"$listeners\"\n    >\n      <template #sub-row=\"{fullColspan, row, onRowMouseEnter, onRowMouseLeave}\">\n        <tr\n          class=\"taints sub-row\"\n          :class=\"{'empty-taints': ! row.displayTaintsAndLabels}\"\n          @mouseenter=\"onRowMouseEnter\"\n          @mouseleave=\"onRowMouseLeave\"\n        >\n          <template v-if=\"row.displayTaintsAndLabels\">\n            <td>&nbsp;</td>\n            <td>&nbsp;</td>\n            <td :colspan=\"fullColspan-2\">\n              <span v-if=\"row.spec.taints && row.spec.taints.length\">\n                {{ t('node.list.nodeTaint') }}:\n                <Tag\n                  v-for=\"taint in row.spec.taints\"\n                  :key=\"taint.key + taint.value + taint.effect\"\n                  class=\"mr-5 mt-2\"\n                >\n                  {{ taint.key }}={{ taint.value }}:{{ taint.effect }}\n                </Tag>\n              </span>\n              <span\n                v-if=\"!!row.customLabelCount\"\n                class=\"mt-5\"\n              > {{ t('node.list.nodeLabels') }}:\n                <span\n                  v-for=\"(label, i) in row.customLabels\"\n                  :key=\"i\"\n                  class=\"mt-5 labels\"\n                >\n                  <Tag\n                    v-if=\"i < 7\"\n                    class=\"mr-2 label\"\n                  >\n                    {{ label }}\n                  </Tag>\n                  <Tag\n                    v-else-if=\"i > 6 && row.displayLabels\"\n                    class=\"mr-2 label\"\n                  >\n                    {{ label }}\n                  </Tag>\n                </span>\n                <a\n                  v-if=\"row.customLabelCount > 7\"\n                  href=\"#\"\n                  @click.prevent=\"toggleLabels(row)\"\n                >\n                  {{ t(`node.list.${row.displayLabels? 'hideLabels' : 'showLabels'}`) }}\n                </a>\n              </span>\n            </td>\n          </template>\n          <td\n            v-else\n            :colspan=\"fullColspan\"\n          >\n&nbsp;\n          </td>\n        </tr>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n\n.labels {\n    display: inline;\n    flex-wrap: wrap;\n\n    .label {\n      display: inline-block;\n      margin-top: 2px;\n    }\n\n}\n.taints {\n  td {\n    padding-top:0;\n    .tag {\n      margin-right: 5px;\n      display: inline-block;\n      margin-top: 2px;\n    }\n  }\n  &.empty-taints {\n    // No taints... so hide sub-row (but not bottom-border)\n    height: 0;\n    line-height: 0;\n    td {\n      padding: 0;\n    }\n  }\n}\n\n</style>\n"]}]}