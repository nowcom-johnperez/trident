{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/logging/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/logging/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgTGFiZWxlZElucHV0IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQnOwppbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vQ2hlY2tib3gnOwppbXBvcnQgQ2hhcnRQc3AgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ2hhcnRQc3AnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENoZWNrYm94LCBMYWJlbGVkSW5wdXQsIENoYXJ0UHNwCiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydjdXJyZW50Q2x1c3RlciddKSwKICAgIHByb3ZpZGVyKCkgewogICAgICByZXR1cm4gKHRoaXMuY3VycmVudENsdXN0ZXIuc3RhdHVzLnByb3ZpZGVyIHx8ICcnKS5zcGxpdCgnLicpWzBdOwogICAgfQogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICBjb25zdCBwcm92aWRlciA9IHRoaXMucHJvdmlkZXI7CgogICAgaWYgKCAhdGhpcy52YWx1ZS5fc2V0U291cmNlcyApIHsKICAgICAgLy8gU2F2ZSBhIG5vdGUgc28gdGhhdCBmb3JtIC0+IHlhbWwgLT4gZm9ybSBkb2Vzbid0IHJlc2V0IHRoZXNlCiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLnZhbHVlLCAnX3NldFNvdXJjZXMnLCB7IGVudW1lcmFibGU6IGZhbHNlLCB2YWx1ZTogdHJ1ZSB9KTsKCiAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAnYWRkaXRpb25hbExvZ2dpbmdTb3VyY2VzJywgdGhpcy52YWx1ZS5hZGRpdGlvbmFsTG9nZ2luZ1NvdXJjZXMgfHwge30pOwogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5hZGRpdGlvbmFsTG9nZ2luZ1NvdXJjZXMsIHByb3ZpZGVyLCB0aGlzLnZhbHVlLmFkZGl0aW9uYWxMb2dnaW5nU291cmNlc1twcm92aWRlcl0gfHwge30pOwogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5hZGRpdGlvbmFsTG9nZ2luZ1NvdXJjZXNbcHJvdmlkZXJdLCAnZW5hYmxlZCcsIHRydWUpOwogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ2dsb2JhbCcsIHRoaXMudmFsdWUuZ2xvYmFsIHx8IHt9KTsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/chart/logging","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport ChartPsp from '@shell/components/ChartPsp';\n\nexport default {\n  components: {\n    Checkbox, LabeledInput, ChartPsp\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    provider() {\n      return (this.currentCluster.status.provider || '').split('.')[0];\n    }\n  },\n\n  created() {\n    const provider = this.provider;\n\n    if ( !this.value._setSources ) {\n      // Save a note so that form -> yaml -> form doesn't reset these\n      Object.defineProperty(this.value, '_setSources', { enumerable: false, value: true });\n\n      this.$set(this.value, 'additionalLoggingSources', this.value.additionalLoggingSources || {});\n      this.$set(this.value.additionalLoggingSources, provider, this.value.additionalLoggingSources[provider] || {});\n      this.$set(this.value.additionalLoggingSources[provider], 'enabled', true);\n      this.$set(this.value, 'global', this.value.global || {});\n    }\n  },\n};\n</script>\n\n<template>\n  <div class=\"logging\">\n    <div\n      v-if=\"provider === 'k3s'\"\n      class=\"row mb-20\"\n    >\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.additionalLoggingSources.k3s.container_engine\"\n          :label=\"t('logging.install.k3sContainerEngine')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.global.dockerRootDirectory\"\n          :label=\"t('logging.install.dockerRootDirectory')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.systemdLogPath\"\n          :placeholder=\"t('logging.install.default')\"\n          :label=\"t('logging.install.systemdLogPath')\"\n          :tooltip=\"t('logging.install.tooltip', {}, true)\"\n        />\n        <p\n          v-clean-html=\"t('logging.install.url', {}, true)\"\n          class=\"mt-6\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <Checkbox\n          v-model=\"value.additionalLoggingSources[provider].enabled\"\n          :label=\"t('logging.install.enableAdditionalLoggingSources')\"\n        />\n      </div>\n    </div>\n\n    <!-- Conditionally display PSP checkbox -->\n    <ChartPsp\n      :value=\"value\"\n      :cluster=\"currentCluster\"\n    />\n  </div>\n</template>\n"]}]}