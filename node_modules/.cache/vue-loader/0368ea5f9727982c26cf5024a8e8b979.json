{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgQ0xVU1RFUl9CQURHRSB9IGZyb20gJ0BzaGVsbC9jb25maWcvbGFiZWxzLWFubm90YXRpb25zJzsKaW1wb3J0IEFzeW5jQnV0dG9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FzeW5jQnV0dG9uJzsKaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ0Bjb21wb25lbnRzL0NhcmQnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgQ2x1c3RlckJhZGdlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NsdXN0ZXJCYWRnZSc7CmltcG9ydCBDbHVzdGVyUHJvdmlkZXJJY29uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NsdXN0ZXJQcm92aWRlckljb24nOwppbXBvcnQgeyBleGNlcHRpb25Ub0Vycm9yc0FycmF5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Vycm9yJzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKaW1wb3J0IHsgTGFiZWxlZElucHV0IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQnOwppbXBvcnQgQ29sb3JJbnB1dCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0NvbG9ySW5wdXQnOwppbXBvcnQgeyBwYXJzZUNvbG9yLCB0ZXh0Q29sb3IgfSBmcm9tICdAc2hlbGwvdXRpbHMvY29sb3InOwppbXBvcnQgeyBOT1JNQU4gfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgICAgICAnQWRkQ3VzdG9tQmFkZ2VEaWFsb2cnLAogIGNvbXBvbmVudHM6IHsKICAgIENhcmQsCiAgICBBc3luY0J1dHRvbiwKICAgIEJhbm5lciwKICAgIENoZWNrYm94LAogICAgTGFiZWxlZElucHV0LAogICAgQ29sb3JJbnB1dCwKICAgIENsdXN0ZXJCYWRnZSwKICAgIENsdXN0ZXJQcm92aWRlckljb24sCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVzZUN1c3RvbUJhZGdlOiAgIG51bGwsCiAgICAgIGVycm9yczogICAgICAgICAgIFtdLAogICAgICBiYWRnZUJnQ29sb3I6ICAgICAnJywKICAgICAgYmFkZ2VEZXNjcmlwdGlvbjogJycsCiAgICAgIGJhZGdlQXNJY29uOiAgICAgIG51bGwsCiAgICAgIGxldHRlcjogICAgICAgICAgICcnLAogICAgfTsKICB9LAoKICBmZXRjaCgpIHsKICAgIGlmICh0aGlzLmN1cnJlbnRDbHVzdGVyLm1ldGFkYXRhPy5hbm5vdGF0aW9ucykgewogICAgICB0aGlzLmJhZGdlRGVzY3JpcHRpb24gPSB0aGlzLmN1cnJlbnRDbHVzdGVyLm1ldGFkYXRhPy5hbm5vdGF0aW9uc1tDTFVTVEVSX0JBREdFLlRFWFRdOwogICAgICB0aGlzLnVzZUN1c3RvbUJhZGdlID0gdGhpcy5iYWRnZURlc2NyaXB0aW9uPy5sZW5ndGggPiAwOwogICAgICB0aGlzLmJhZGdlRGVzY3JpcHRpb24gPSB0aGlzLmJhZGdlRGVzY3JpcHRpb24gfHwgJ0V4YW1wbGUgVGV4dCc7CiAgICAgIHRoaXMuYmFkZ2VCZ0NvbG9yID0gdGhpcy5jdXJyZW50Q2x1c3Rlci5tZXRhZGF0YT8uYW5ub3RhdGlvbnNbQ0xVU1RFUl9CQURHRS5DT0xPUl0gfHwgJyNmZjAwMDAnOwoKICAgICAgdGhpcy5iYWRnZUFzSWNvbiA9ICEhdGhpcy5jdXJyZW50Q2x1c3Rlci5tZXRhZGF0YT8uYW5ub3RhdGlvbnNbQ0xVU1RFUl9CQURHRS5JQ09OX1RFWFRdIHx8IGZhbHNlOwoKICAgICAgdGhpcy5sZXR0ZXIgPSB0aGlzLmN1cnJlbnRDbHVzdGVyLm1ldGFkYXRhPy5hbm5vdGF0aW9uc1tDTFVTVEVSX0JBREdFLklDT05fVEVYVF0gfHwgdGhpcy5iYWRnZURlc2NyaXB0aW9uLnN1YnN0cmluZygwLCAyKTsKICAgIH0KICB9LAoKICBjb21wdXRlZDogewogICAgLi4ubWFwR2V0dGVycyhbJ2N1cnJlbnRDbHVzdGVyJ10pLAoKICAgIHByZXZpZXdDb2xvcigpIHsKICAgICAgcmV0dXJuIHRleHRDb2xvcihwYXJzZUNvbG9yKHRoaXMuYmFkZ2VCZ0NvbG9yKSkgfHwgJyNmZmZmZmYnOwogICAgfSwKICAgIGNhblN1Ym1pdCgpIHsKICAgICAgcmV0dXJuIHRoaXMuYmFkZ2VEZXNjcmlwdGlvbi5sZW5ndGggPj0gMTsKICAgIH0sCiAgICAvLyBGYWtlIGNsdXN0ZXIgb2JqZWN0IGZvciB1c2Ugd2l0aCBiYWRnZSBjb21wb25lbnQKICAgIHByZXZpZXdDbHVzdGVyKCkgewogICAgICAvLyBNYWtlIGNsdXN0ZXIgb2JqZWN0IHRoYXQgaXMgZW5vdWdoIGZvciB0aGUgYmFkZ2UgY29tcG9uZW50IHRvIHdvcmsKICAgICAgcmV0dXJuIHsKICAgICAgICBpc0xvY2FsOiAgICAgICAgIHRoaXMuY3VycmVudENsdXN0ZXIuaXNMb2NhbCwKICAgICAgICBwcm92aWRlck5hdkxvZ286IHRoaXMuY3VycmVudENsdXN0ZXIucHJvdmlkZXJOYXZMb2dvLAogICAgICAgIGJhZGdlOiAgICAgICAgICAgewogICAgICAgICAgdGV4dDogICAgICB0aGlzLmJhZGdlRGVzY3JpcHRpb24sCiAgICAgICAgICBjb2xvcjogICAgIHRoaXMuYmFkZ2VCZ0NvbG9yLAogICAgICAgICAgdGV4dENvbG9yOiB0ZXh0Q29sb3IocGFyc2VDb2xvcih0aGlzLmJhZGdlQmdDb2xvcikpLAogICAgICAgICAgaWNvblRleHQ6ICB0aGlzLmJhZGdlQXNJY29uID8gdGhpcy5sZXR0ZXIudG9VcHBlckNhc2UoKSA6ICcnLAogICAgICAgIH0KICAgICAgfTsKICAgIH0sCgogICAgbW9kZSgpIHsKICAgICAgcmV0dXJuICEhdGhpcy51c2VDdXN0b21CYWRnZSA/ICdlZGl0JyA6ICd2aWV3JzsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2Nsb3NlJyk7CiAgICB9LAoKICAgIGFzeW5jIGFwcGx5KGJ1dHRvbkRvbmUpIHsKICAgICAgdHJ5IHsKICAgICAgICAvLyBGZXRjaCB0aGUgTm9ybWFuIGNsdXN0ZXIgb2JqZWN0CiAgICAgICAgY29uc3Qgbm9ybWFuID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvZmluZCcsIHsgdHlwZTogTk9STUFOLkNMVVNURVIsIGlkOiB0aGlzLmN1cnJlbnRDbHVzdGVyLmlkIH0pOwoKICAgICAgICBkZWxldGUgbm9ybWFuLmFubm90YXRpb25zW0NMVVNURVJfQkFER0UuVEVYVF07CiAgICAgICAgZGVsZXRlIG5vcm1hbi5hbm5vdGF0aW9uc1tDTFVTVEVSX0JBREdFLkNPTE9SXTsKICAgICAgICBkZWxldGUgbm9ybWFuLmFubm90YXRpb25zW0NMVVNURVJfQkFER0UuSUNPTl9URVhUXTsKCiAgICAgICAgaWYgKHRoaXMudXNlQ3VzdG9tQmFkZ2UpIHsKICAgICAgICAgIHRoaXMuJHNldChub3JtYW4uYW5ub3RhdGlvbnMsIENMVVNURVJfQkFER0UuVEVYVCwgdGhpcy5iYWRnZURlc2NyaXB0aW9uKTsKICAgICAgICAgIHRoaXMuJHNldChub3JtYW4uYW5ub3RhdGlvbnMsIENMVVNURVJfQkFER0UuQ09MT1IsIHRoaXMuYmFkZ2VCZ0NvbG9yKTsKICAgICAgICAgIGlmICh0aGlzLmJhZGdlQXNJY29uKSB7CiAgICAgICAgICAgIHRoaXMuJHNldChub3JtYW4uYW5ub3RhdGlvbnMsIENMVVNURVJfQkFER0UuSUNPTl9URVhULCB0aGlzLmxldHRlci50b1VwcGVyQ2FzZSgpKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGF3YWl0IG5vcm1hbi5zYXZlKCk7CgogICAgICAgIGJ1dHRvbkRvbmUodHJ1ZSk7CiAgICAgICAgdGhpcy5jbG9zZSgpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICB0aGlzLmVycm9ycyA9IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkoZXJyKTsKICAgICAgICBidXR0b25Eb25lKGZhbHNlKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["AddCustomBadgeDialog.vue"],"names":[],"mappingsfile":"AddCustomBadgeDialog.vue","sourceRoot":"node_modules/@rancher/shell/dialog","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { CLUSTER_BADGE } from '@shell/config/labels-annotations';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport { Banner } from '@components/Banner';\nimport ClusterBadge from '@shell/components/ClusterBadge';\nimport ClusterProviderIcon from '@shell/components/ClusterProviderIcon';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport ColorInput from '@shell/components/form/ColorInput';\nimport { parseColor, textColor } from '@shell/utils/color';\nimport { NORMAN } from '@shell/config/types';\n\nexport default {\n  name:       'AddCustomBadgeDialog',\n  components: {\n    Card,\n    AsyncButton,\n    Banner,\n    Checkbox,\n    LabeledInput,\n    ColorInput,\n    ClusterBadge,\n    ClusterProviderIcon,\n  },\n\n  data() {\n    return {\n      useCustomBadge:   null,\n      errors:           [],\n      badgeBgColor:     '',\n      badgeDescription: '',\n      badgeAsIcon:      null,\n      letter:           '',\n    };\n  },\n\n  fetch() {\n    if (this.currentCluster.metadata?.annotations) {\n      this.badgeDescription = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.TEXT];\n      this.useCustomBadge = this.badgeDescription?.length > 0;\n      this.badgeDescription = this.badgeDescription || 'Example Text';\n      this.badgeBgColor = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.COLOR] || '#ff0000';\n\n      this.badgeAsIcon = !!this.currentCluster.metadata?.annotations[CLUSTER_BADGE.ICON_TEXT] || false;\n\n      this.letter = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.ICON_TEXT] || this.badgeDescription.substring(0, 2);\n    }\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n\n    previewColor() {\n      return textColor(parseColor(this.badgeBgColor)) || '#ffffff';\n    },\n    canSubmit() {\n      return this.badgeDescription.length >= 1;\n    },\n    // Fake cluster object for use with badge component\n    previewCluster() {\n      // Make cluster object that is enough for the badge component to work\n      return {\n        isLocal:         this.currentCluster.isLocal,\n        providerNavLogo: this.currentCluster.providerNavLogo,\n        badge:           {\n          text:      this.badgeDescription,\n          color:     this.badgeBgColor,\n          textColor: textColor(parseColor(this.badgeBgColor)),\n          iconText:  this.badgeAsIcon ? this.letter.toUpperCase() : '',\n        }\n      };\n    },\n\n    mode() {\n      return !!this.useCustomBadge ? 'edit' : 'view';\n    },\n  },\n\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n\n    async apply(buttonDone) {\n      try {\n        // Fetch the Norman cluster object\n        const norman = await this.$store.dispatch('rancher/find', { type: NORMAN.CLUSTER, id: this.currentCluster.id });\n\n        delete norman.annotations[CLUSTER_BADGE.TEXT];\n        delete norman.annotations[CLUSTER_BADGE.COLOR];\n        delete norman.annotations[CLUSTER_BADGE.ICON_TEXT];\n\n        if (this.useCustomBadge) {\n          this.$set(norman.annotations, CLUSTER_BADGE.TEXT, this.badgeDescription);\n          this.$set(norman.annotations, CLUSTER_BADGE.COLOR, this.badgeBgColor);\n          if (this.badgeAsIcon) {\n            this.$set(norman.annotations, CLUSTER_BADGE.ICON_TEXT, this.letter.toUpperCase());\n          }\n        }\n\n        await norman.save();\n\n        buttonDone(true);\n        this.close();\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-badge\"\n    :show-highlight-border=\"false\"\n  >\n    <h4\n      slot=\"title\"\n      class=\"text-default-text\"\n    >\n      {{ t('clusterBadge.modal.title') }}\n    </h4>\n\n    <div\n      slot=\"body\"\n      class=\"pl-10 pr-10 cluster-badge-body\"\n    >\n      <div>{{ t('clusterBadge.modal.previewTitle') }}</div>\n\n      <div class=\"mt-10 pl-20 row preview-row\">\n        <div class=\"badge-preview col span-12\">\n          <ClusterProviderIcon\n            v-if=\"useCustomBadge\"\n            :cluster=\"previewCluster\"\n          />\n          <ClusterProviderIcon\n            v-else\n            :cluster=\"currentCluster\"\n          />\n          <div class=\"cluster-name\">\n            {{ currentCluster.nameDisplay }}\n          </div>\n          <ClusterBadge\n            v-if=\"useCustomBadge\"\n            :cluster=\"previewCluster\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col\">\n          <Checkbox\n            v-model=\"useCustomBadge\"\n            :label=\"t('clusterBadge.modal.checkbox')\"\n            class=\"mt-10\"\n          />\n        </div>\n      </div>\n\n      <div class=\"options\">\n        <div class=\"row mt-10\">\n          <div class=\"col span-12\">\n            <LabeledInput\n              v-model.trim=\"badgeDescription\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.description')\"\n              :maxlength=\"32\"\n              :required=\"true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mt-10\">\n          <div class=\"col span-12\">\n            <ColorInput\n              v-model=\"badgeBgColor\"\n              :mode=\"mode\"\n              :default-value=\"badgeBgColor\"\n              :label=\"t('clusterBadge.modal.badgeBgColor')\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mt-10\">\n          <div class=\"col\">\n            <Checkbox\n              v-model=\"badgeAsIcon\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.badgeAsIcon')\"\n              class=\"mt-10\"\n              :tooltip=\"t('clusterBadge.modal.maxCharsTooltip')\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-10\">\n          <div class=\"col\">\n            <LabeledInput\n              v-model.trim=\"letter\"\n              :disabled=\"!badgeAsIcon\"\n              class=\"badge-icon-text\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.iconText')\"\n              :maxlength=\"2\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      slot=\"actions\"\n      class=\"bottom\"\n    >\n      <Banner\n        v-for=\"(err, i) in errors\"\n        :key=\"i\"\n        color=\"error\"\n        :label=\"err\"\n      />\n      <div class=\"buttons\">\n        <button\n          class=\"btn role-secondary mr-10\"\n          @click=\"close\"\n        >\n          {{ t('generic.cancel') }}\n        </button>\n        <AsyncButton\n          :action-label=\"t('clusterBadge.modal.buttonAction')\"\n          :disabled=\"!canSubmit\"\n          @click=\"apply\"\n        />\n      </div>\n    </div>\n  </Card>\n</template>\n<style lang='scss' scoped>\n  .prompt-badge {\n    margin: 0;\n\n    .cluster-badge-body {\n      min-height: 50px;\n      display: flex;\n      flex-direction: column;\n\n      .preview-row {\n        height: 32px;\n\n        .badge-preview {\n          align-items: center;\n          display: flex;\n          height: 32px;\n          white-space: nowrap;\n\n          .cluster-name {\n            margin: 0 10px;\n            font-size: 16px;\n          }\n\n          .cluster-badge-icon-preview {\n            width: 32px;\n            height: 32px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 5px;\n            font-weight: bold;\n          }\n\n          .cluster-badge-preview {\n            cursor: default;\n            border-radius: 10px;\n            font-size: 12px;\n            padding: 2px 10px;\n          }\n        }\n      }\n\n      ::v-deep .badge-icon-text input {\n        text-transform: uppercase;\n      }\n    }\n  }\n\n  .bottom {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .banner {\n      margin-top: 0;\n    }\n\n    .buttons {\n      display: flex;\n      justify-content: flex-end;\n      width: 100%;\n    }\n  }\n\n</style>\n"]}]}