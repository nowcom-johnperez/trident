{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Probe.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Probe.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IF9FRElULCBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgY2xvbmUgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IFVuaXRJbnB1dCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL1VuaXRJbnB1dCc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IFNoZWxsSW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9TaGVsbElucHV0JzsKaW1wb3J0IEtleVZhbHVlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vS2V5VmFsdWUnOwoKY29uc3QgS0lORFMgPSBbCiAgJ25vbmUnLAogICdIVFRQJywKICAnSFRUUFMnLAogICd0Y3AnLAogICdleGVjJywKXTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBMYWJlbGVkSW5wdXQsIExhYmVsZWRTZWxlY3QsIFVuaXRJbnB1dCwgU2hlbGxJbnB1dCwgS2V5VmFsdWUsCiAgfSwKCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIFtPYmplY3QsIG51bGxdLAogICAgICBkZWZhdWx0OiBudWxsLAogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBfRURJVCwKICAgIH0sCgogICAgbGFiZWw6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnUHJvYmUnLAogICAgfSwKCiAgICBkZXNjcmlwdGlvbjogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICB9LAoKICBkYXRhKCkgewogICAgbGV0IGtpbmQgPSAnbm9uZSc7CiAgICBsZXQgcHJvYmUgPSBudWxsOwogICAgbGV0IGV4ZWMgPSBudWxsOwogICAgbGV0IGh0dHBHZXQgPSBudWxsOwogICAgbGV0IHRjcFNvY2tldCA9IG51bGw7CgogICAgaWYgKCB0aGlzLnZhbHVlICkgewogICAgICBwcm9iZSA9IGNsb25lKHRoaXMudmFsdWUpOwoKICAgICAgaWYgKCBwcm9iZS5leGVjICkgewogICAgICAgIGtpbmQgPSAnZXhlYyc7CiAgICAgIH0gZWxzZSBpZiAoIHByb2JlLmh0dHBHZXQgKSB7CiAgICAgICAgaWYgKCAocHJvYmUuaHR0cEdldC5zY2hlbWUgfHwgJycpLnRvTG93ZXJDYXNlKCkgPT09ICdodHRwcycgKSB7CiAgICAgICAgICBraW5kID0gJ0hUVFBTJzsKICAgICAgICB9IGVsc2UgewogICAgICAgICAga2luZCA9ICdIVFRQJzsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoIHByb2JlLnRjcFNvY2tldCApIHsKICAgICAgICBraW5kID0gJ3RjcCc7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIHByb2JlID0gewogICAgICAgIGZhaWx1cmVUaHJlc2hvbGQ6ICAgIDMsCiAgICAgICAgc3VjY2Vzc1RocmVzaG9sZDogICAgMSwKICAgICAgICBpbml0aWFsRGVsYXlTZWNvbmRzOiAwLAogICAgICAgIHRpbWVvdXRTZWNvbmRzOiAgICAgIDEsCiAgICAgICAgcGVyaW9kU2Vjb25kczogICAgICAgMTAsCiAgICAgICAgZXhlYzogICAgICAgICAgICAgICAgbnVsbCwKICAgICAgICBodHRwR2V0OiAgICAgICAgICAgICBudWxsLAogICAgICAgIHRjcFNvY2tldDogICAgICAgICAgIG51bGwsCiAgICAgIH07CiAgICB9CgogICAgZXhlYyA9IHByb2JlLmV4ZWMgfHwge307CiAgICBodHRwR2V0ID0gcHJvYmUuaHR0cEdldCB8fCB7fTsKICAgIHRjcFNvY2tldCA9IHByb2JlLnRjcFNvY2tldCB8fCB7fTsKCiAgICByZXR1cm4gewogICAgICBwcm9iZSwga2luZCwgZXhlYywgaHR0cEdldCwgdGNwU29ja2V0CiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKCiAgICBpc05vbmUoKSB7CiAgICAgIHJldHVybiB0aGlzLmtpbmQgPT09ICdub25lJzsKICAgIH0sCgogICAga2luZE9wdGlvbnMoKSB7CiAgICAgIHJldHVybiBLSU5EUy5tYXAoKGspID0+IHsKICAgICAgICByZXR1cm4geyBsYWJlbDogdGhpcy50KGB3b3JrbG9hZC5jb250YWluZXIuaGVhbHRoQ2hlY2sua2luZC4keyBrIH1gKSwgdmFsdWU6IGsgfTsKICAgICAgfSk7CiAgICB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgIGtpbmQoKSB7CiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXBkYXRlKCkgewogICAgICBjb25zdCBwcm9iZSA9IHRoaXMucHJvYmU7CgogICAgICBpZiAoIHRoaXMuaXNOb25lICkgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgbnVsbCk7CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgc3dpdGNoICggdGhpcy5raW5kICkgewogICAgICBjYXNlICdIVFRQJzoKICAgICAgY2FzZSAnSFRUUFMnOgogICAgICAgIHRoaXMuaHR0cEdldC5zY2hlbWUgPSB0aGlzLmtpbmQ7CiAgICAgICAgcHJvYmUuaHR0cEdldCA9IHRoaXMuaHR0cEdldDsKICAgICAgICBwcm9iZS50Y3BTb2NrZXQgPSBudWxsOwogICAgICAgIHByb2JlLmV4ZWMgPSBudWxsOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICd0Y3AnOgogICAgICAgIHByb2JlLmh0dHBHZXQgPSBudWxsOwogICAgICAgIHByb2JlLnRjcFNvY2tldCA9IHRoaXMudGNwU29ja2V0OwogICAgICAgIHByb2JlLmV4ZWMgPSBudWxsOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICdleGVjJzoKICAgICAgICBwcm9iZS5odHRwR2V0ID0gbnVsbDsKICAgICAgICBwcm9iZS50Y3BTb2NrZXQgPSBudWxsOwogICAgICAgIHByb2JlLmV4ZWMgPSB0aGlzLmV4ZWM7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgcHJvYmUpOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["Probe.vue"],"names":[],"mappingsfile":"Probe.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { clone } from '@shell/utils/object';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport ShellInput from '@shell/components/form/ShellInput';\nimport KeyValue from '@shell/components/form/KeyValue';\n\nconst KINDS = [\n  'none',\n  'HTTP',\n  'HTTPS',\n  'tcp',\n  'exec',\n];\n\nexport default {\n  components: {\n    LabeledInput, LabeledSelect, UnitInput, ShellInput, KeyValue,\n  },\n\n  props: {\n    value: {\n      type:    [Object, null],\n      default: null,\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    label: {\n      type:    String,\n      default: 'Probe',\n    },\n\n    description: {\n      type:    String,\n      default: '',\n    },\n  },\n\n  data() {\n    let kind = 'none';\n    let probe = null;\n    let exec = null;\n    let httpGet = null;\n    let tcpSocket = null;\n\n    if ( this.value ) {\n      probe = clone(this.value);\n\n      if ( probe.exec ) {\n        kind = 'exec';\n      } else if ( probe.httpGet ) {\n        if ( (probe.httpGet.scheme || '').toLowerCase() === 'https' ) {\n          kind = 'HTTPS';\n        } else {\n          kind = 'HTTP';\n        }\n      } else if ( probe.tcpSocket ) {\n        kind = 'tcp';\n      }\n    } else {\n      probe = {\n        failureThreshold:    3,\n        successThreshold:    1,\n        initialDelaySeconds: 0,\n        timeoutSeconds:      1,\n        periodSeconds:       10,\n        exec:                null,\n        httpGet:             null,\n        tcpSocket:           null,\n      };\n    }\n\n    exec = probe.exec || {};\n    httpGet = probe.httpGet || {};\n    tcpSocket = probe.tcpSocket || {};\n\n    return {\n      probe, kind, exec, httpGet, tcpSocket\n    };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    isNone() {\n      return this.kind === 'none';\n    },\n\n    kindOptions() {\n      return KINDS.map((k) => {\n        return { label: this.t(`workload.container.healthCheck.kind.${ k }`), value: k };\n      });\n    }\n  },\n\n  watch: {\n    kind() {\n      this.update();\n    }\n  },\n\n  methods: {\n    update() {\n      const probe = this.probe;\n\n      if ( this.isNone ) {\n        this.$emit('input', null);\n\n        return;\n      }\n\n      switch ( this.kind ) {\n      case 'HTTP':\n      case 'HTTPS':\n        this.httpGet.scheme = this.kind;\n        probe.httpGet = this.httpGet;\n        probe.tcpSocket = null;\n        probe.exec = null;\n        break;\n      case 'tcp':\n        probe.httpGet = null;\n        probe.tcpSocket = this.tcpSocket;\n        probe.exec = null;\n        break;\n      case 'exec':\n        probe.httpGet = null;\n        probe.tcpSocket = null;\n        probe.exec = this.exec;\n        break;\n      }\n\n      this.$emit('input', probe);\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"title clearfix\">\n      <h3>\n        {{ label }}\n        <i\n          v-if=\"description\"\n          v-clean-tooltip=\"description\"\n          class=\"icon icon-info\"\n        />\n      </h3>\n    </div>\n    <div class=\"row\">\n      <div\n        data-testid=\"input-probe-kind\"\n        class=\"col span-11-of-23\"\n      >\n        <LabeledSelect\n          v-model=\"kind\"\n          :mode=\"mode\"\n          :label=\"t('probe.type.label')\"\n          :options=\"kindOptions\"\n          :placeholder=\"t('probe.type.placeholder')\"\n          @input=\"update\"\n        />\n\n        <div\n          v-if=\"kind && kind!=='none'\"\n          class=\"spacer-small\"\n        />\n\n        <!-- HTTP/HTTPS -->\n        <div\n          v-if=\"kind === 'HTTP' || kind === 'HTTPS'\"\n          data-testid=\"input-probe-port\"\n        >\n          <LabeledInput\n            v-model.number=\"httpGet.port\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            :mode=\"mode\"\n            :label=\"t('probe.httpGet.port.label')\"\n            :placeholder=\"t('probe.httpGet.port.placeholder')\"\n            @input=\"update\"\n          />\n\n          <div class=\"spacer-small\" />\n\n          <div data-testid=\"input-probe-path\">\n            <LabeledInput\n              v-model=\"httpGet.path\"\n              :mode=\"mode\"\n              :label=\"t('probe.httpGet.path.label')\"\n              :placeholder=\"t('probe.httpGet.path.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n        </div>\n\n        <!-- TCP -->\n        <div\n          v-if=\"kind === 'tcp'\"\n          data-testid=\"input-probe-socket\"\n        >\n          <LabeledInput\n            v-model.number=\"tcpSocket.port\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            :mode=\"mode\"\n            :label=\"t('probe.httpGet.port.label')\"\n            :placeholder=\"t('probe.httpGet.port.placeholderDeux')\"\n            @input=\"update\"\n          />\n          <div class=\"spacer-small\" />\n        </div>\n\n        <!-- Exec -->\n        <div\n          v-if=\"kind === 'exec'\"\n          data-testid=\"input-probe-command\"\n        >\n          <div class=\"col span-12\">\n            <ShellInput\n              v-model=\"exec.command\"\n              :label=\"t('probe.command.label')\"\n              :placeholder=\"t('probe.command.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n          <div class=\"spacer-small\" />\n        </div>\n      </div>\n\n      <div class=\"col span-1-of-13\">\n        <hr\n          v-if=\"kind && kind!=='none'\"\n          :style=\"{'position':'relative', 'margin':'0px'}\"\n          class=\"vertical\"\n        >\n      </div>\n\n      <!-- none -->\n      <div\n        v-if=\"!isNone\"\n        class=\"col span-11-of-23\"\n      >\n        <div class=\"row\">\n          <div\n            data-testid=\"input-probe-periodSeconds\"\n            class=\"col span-4\"\n          >\n            <UnitInput\n              v-model=\"probe.periodSeconds\"\n              :mode=\"mode\"\n              :label=\"t('probe.checkInterval.label')\"\n              min=\"1\"\n              :suffix=\"t('suffix.sec')\"\n              :placeholder=\"t('probe.checkInterval.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n          <div\n            data-testid=\"input-probe-initialDelaySeconds\"\n            class=\"col span-4\"\n          >\n            <UnitInput\n              v-model=\"probe.initialDelaySeconds\"\n              :mode=\"mode\"\n              :suffix=\"t('suffix.sec')\"\n              :label=\"t('probe.initialDelay.label')\"\n              min=\"0\"\n              :placeholder=\"t('probe.initialDelay.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n          <div\n            data-testid=\"input-probe-timeoutSeconds\"\n            class=\"col span-4\"\n          >\n            <UnitInput\n              v-model=\"probe.timeoutSeconds\"\n              min=\"0\"\n              :mode=\"mode\"\n              :suffix=\"t('suffix.sec')\"\n              :label=\"t('probe.timeout.label')\"\n              :placeholder=\"t('probe.timeout.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n        </div>\n\n        <div class=\"spacer-small\" />\n\n        <div class=\"row\">\n          <div\n            data-testid=\"input-probe-successThreshold\"\n            class=\"col span-6\"\n          >\n            <LabeledInput\n              v-model.number=\"probe.successThreshold\"\n              type=\"number\"\n              min=\"1\"\n              :mode=\"mode\"\n              :label=\"t('probe.successThreshold.label')\"\n              :placeholder=\"t('probe.successThreshold.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n          <div\n            data-testid=\"input-probe-failureThreshold\"\n            class=\"col span-6\"\n          >\n            <LabeledInput\n              v-model.number=\"probe.failureThreshold\"\n              type=\"number\"\n              min=\"1\"\n              :mode=\"mode\"\n              :label=\"t('probe.failureThreshold.label')\"\n              :placeholder=\"t('probe.failureThreshold.placeholder')\"\n              @input=\"update\"\n            />\n          </div>\n        </div>\n\n        <template v-if=\"kind === 'HTTP' || kind === 'HTTPS'\">\n          <div class=\"spacer-small\" />\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <KeyValue\n                v-model=\"httpGet.httpHeaders\"\n                key-name=\"name\"\n                :mode=\"mode\"\n                :as-map=\"false\"\n                :read-allowed=\"false\"\n                :title=\"t('probe.httpGet.headers.label')\"\n                :key-label=\"t('generic.name')\"\n                :value-label=\"t('generic.value')\"\n                :add-label=\"t('generic.add')\"\n              >\n                <template #title>\n                  <h3>\n                    {{ t('workload.container.healthCheck.httpGet.headers') }}\n                  </h3>\n                </template>\n              </KeyValue>\n            </div>\n          </div>\n        </template>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n\n  .title {\n    margin-bottom: 10px;\n  }\n  ::v-deep .labeled-select {\n    height: auto;\n  }\n\n</style>\n"]}]}