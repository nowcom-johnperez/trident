{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/monitoring.coreos.com.alertmanagerconfig.vue?vue&type=style&index=0&id=0d75d720&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/monitoring.coreos.com.alertmanagerconfig.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbXB0eSB7CiAgZmxleDogMTsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBtYXJnaW4tdG9wOiA2ZW07CiAgbWluLWhlaWdodDogMTAwJTsKfQoKaSB7CiAgZm9udC1zaXplOiAxMGVtOwogIG9wYWNpdHk6IDUwJTsKICBtYXJnaW46IDA7Cn0KCmgyIHsKICBtYXJnaW46IDA7Cn0KCmgzIHsKICBtYXJnaW4tdG9wOiAyZW07Cn0KCg=="},{"version":3,"sources":["monitoring.coreos.com.alertmanagerconfig.vue"],"names":[],"mappings":";AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"monitoring.coreos.com.alertmanagerconfig.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { Banner } from '@components/Banner';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nexport default {\n  name:       'ListApps',\n  components: { Banner, ResourceTable },\n  mixins:     [ResourceFetch],\n  props:      {\n    resource: {\n      type:     String,\n      required: true,\n    },\n\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n  }\n};\n</script>\n\n<template>\n  <div v-if=\"rows.length || loading\">\n    <Banner color=\"info\">\n      {{ t('monitoring.alertmanagerConfig.description') }}\n    </Banner>\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"rows\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    />\n  </div>\n\n  <div\n    v-else\n    class=\"empty\"\n  >\n    <i class=\"icon icon-monitoring mb-10\" />\n    <h2>{{ t('monitoring.alertmanagerConfig.empty') }}</h2>\n    <h3 class=\"mb-30\">\n      {{ t('monitoring.alertmanagerConfig.getStarted') }}\n    </h3>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.empty {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  margin-top: 6em;\n  min-height: 100%;\n}\n\ni {\n  font-size: 10em;\n  opacity: 50%;\n  margin: 0;\n}\n\nh2 {\n  margin: 0;\n}\n\nh3 {\n  margin-top: 2em;\n}\n\n</style>\n"]}]}