{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cis.cattle.io.clusterscan.vue"],"names":[],"mappingsfile":"cis.cattle.io.clusterscan.vue","sourceRoot":"node_modules/@rancher/shell/detail","sourcesContent":["<script>\nimport Date from '@shell/components/formatter/Date';\nimport SortableTable from '@shell/components/SortableTable';\nimport { Banner } from '@components/Banner';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Loading from '@shell/components/Loading';\nimport day from 'dayjs';\nimport { DATE_FORMAT, TIME_FORMAT } from '@shell/store/prefs';\nimport { escapeHtml, randomStr } from '@shell/utils/string';\nimport { CIS } from '@shell/config/types';\nimport { STATE } from '@shell/config/table-headers';\nimport { get } from '@shell/utils/object';\n\nexport default {\n  components: {\n    Date,\n    SortableTable,\n    Banner,\n    LabeledSelect,\n    Loading,\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    this.clusterReports = await this.value.getReports();\n  },\n\n  data() {\n    return { clusterReports: [], clusterReport: null };\n  },\n\n  computed: {\n    parsedReport() {\n      return this.clusterReport?.parsedReport || null;\n    },\n\n    canBeScheduled() {\n      return this.value.canBeScheduled();\n    },\n\n    reportNodes() {\n      return this.clusterReport?.nodes || null;\n    },\n\n    results() {\n      if (!this.clusterReport || !this.clusterReport.aggregatedTests) {\n        return [];\n      }\n\n      return this.clusterReport.aggregatedTests.map((check) => {\n        check.testStateSort = this.testStateSort(check.state);\n        check.testIdSort = this.testIdSort(check);\n        if (!!check.node_type) {\n          const nodeRows = check.node_type.reduce((nodes, type) => {\n            if (this.reportNodes[type]) {\n              this.reportNodes[type].forEach((name) => nodes.push({\n                type, name, id: randomStr(4), state: this.nodeState(check, name, check.nodes), testStateSort: this.testStateSort(this.nodeState(check, name, check.nodes))\n              })\n              );\n            }\n\n            return nodes;\n          }, []);\n\n          check.nodeRows = nodeRows;\n        }\n\n        return check;\n      });\n    },\n\n    details() {\n      if (!this.parsedReport) {\n        return [];\n      }\n\n      const out = [\n        {\n          label: this.t('cis.profile'),\n          value: this.value.status.lastRunScanProfileName,\n          to:    {\n            name:   'c-cluster-product-resource-id',\n            params: {\n              ...this.$route.params,\n              resource: CIS.CLUSTER_SCAN_PROFILE,\n              id:       this.value.status.lastRunScanProfileName\n            }\n          }\n        },\n        {\n          label: this.t('cis.scan.total'),\n          value: this.parsedReport.total\n        },\n        {\n          label: this.t('cis.scan.pass'),\n          value: this.parsedReport.pass\n        },\n        {\n          label: this.t('cis.scan.warn'),\n          value: this.parsedReport.warn\n        },\n        {\n          label: this.t('cis.scan.skip'),\n          value: this.parsedReport.skip\n        },\n        {\n          label: this.t('cis.scan.fail'),\n          value: this.parsedReport.fail\n        },\n        {\n          label: this.t('cis.scan.notApplicable'),\n          value: this.parsedReport.notApplicable\n        },\n        {\n          label:     this.canBeScheduled ? this.t('cis.scan.lastScanTime') : this.t('cis.scan.scanDate'),\n          value:     this.value.status.lastRunTimestamp,\n          component: 'Date'\n        },\n      ];\n\n      if (!this.canBeScheduled) {\n        return out.filter((each) => each.label !== this.t('cis.scan.warn'));\n      }\n\n      return out;\n    },\n\n    reportCheckHeaders() {\n      return [\n        {\n          ...STATE,\n          value:         'state',\n          formatterOpts: { arbitrary: true },\n          sort:          ['testStateSort', 'testIdSort']\n        },\n        {\n          name:  'number',\n          label: this.t('cis.scan.number'),\n          value: 'id',\n          sort:  'testIdSort',\n          width: 100\n        },\n        {\n          name:  'description',\n          label: this.t('cis.scan.description'),\n          value: 'description',\n        }\n      ];\n    },\n\n    nodeTableHeaders() {\n      return [\n        {\n          ...STATE,\n          value:         'state',\n          formatterOpts: { arbitrary: true },\n          sort:          'testStateSort'\n        },\n        {\n          name:  'node',\n          label: this.t('tableHeaders.name'),\n          value: 'name',\n        },\n        {\n          name:  'type',\n          label: this.t('tableHeaders.type'),\n          value: 'type',\n        },\n      ];\n    },\n  },\n\n  watch: {\n    value(neu) {\n      try {\n        neu.getReports().then((reports) => {\n          this.clusterReports = reports;\n        });\n      } catch {}\n    },\n\n    clusterReports(neu) {\n      if (!this.clusterReport) {\n        this.clusterReport = neu[0];\n      }\n    }\n  },\n\n  methods: {\n    reportLabel(report = {}) {\n      const { creationTimestamp } = report.metadata;\n      const dateFormat = escapeHtml( this.$store.getters['prefs/get'](DATE_FORMAT));\n      const timeFormat = escapeHtml( this.$store.getters['prefs/get'](TIME_FORMAT));\n\n      const name = report.id.replace(/^scan-report-/, '');\n\n      return `${ name } ${ day(creationTimestamp).format(`${ dateFormat } ${ timeFormat }`) }`;\n    },\n\n    nodeState(check, node, nodes = []) {\n      if (check.state === 'mixed') {\n        return nodes.includes(node) ? 'fail' : 'pass';\n      }\n\n      return check.state;\n    },\n\n    testStateSort(state) {\n      const SORT_ORDER = {\n        other:         7,\n        notApplicable: 6,\n        skip:          5,\n        pass:          4,\n        warn:          3,\n        mixed:         2,\n        fail:          1,\n      };\n\n      return `${ SORT_ORDER[state] || SORT_ORDER['other'] } ${ state }`;\n    },\n\n    testIdSort(test) {\n      const { id = '' } = test;\n\n      return id.split('.').map((n) => +n + 1000).join('.');\n    },\n\n    remediationDisplay(row) {\n      const { remediation } = row;\n\n      if (!remediation) {\n\n      } else {\n        return `${ this.t('cis.scan.remediation') }: ${ remediation }`;\n      }\n    },\n    get\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <div class=\"detail mb-20\">\n      <div\n        v-for=\"item in details\"\n        :key=\"item.label\"\n      >\n        <span class=\"text-label\">{{ item.label }}</span>:\n        <component\n          :is=\"item.component\"\n          v-if=\"item.component\"\n          :value=\"item.value\"\n        />\n        <nuxt-link\n          v-else-if=\"item.to\"\n          :to=\"item.to\"\n        >\n          {{ item.value }}\n        </nuxt-link>\n        <span v-else>{{ item.value }}</span>\n      </div>\n    </div>\n    <div\n      v-if=\"clusterReports.length > 1\"\n      class=\"table-header row mb-20\"\n    >\n      <div class=\"col span-8\">\n        <h3>\n          {{ t('cis.scan.scanReport') }}\n        </h3>\n      </div>\n      <div class=\"col span-4\">\n        <LabeledSelect\n          v-model=\"clusterReport\"\n          :label=\"t('cis.reports')\"\n          :options=\"clusterReports\"\n          :get-option-label=\"reportLabel\"\n          :get-option-key=\"report=>report.id\"\n        />\n      </div>\n    </div>\n    <div v-if=\"results && !!get(value, 'status.summary')\">\n      <SortableTable\n        no-rows-key=\"cis.noReportFound\"\n        default-sort-by=\"state\"\n        :search=\"false\"\n        :row-actions=\"false\"\n        :table-actions=\"false\"\n        :rows=\"results\"\n        :sub-rows=\"true\"\n        :sub-expandable=\"true\"\n        :sub-expand-column=\"true\"\n        :headers=\"reportCheckHeaders\"\n        key-field=\"id\"\n      >\n        <template #sub-row=\"{row, fullColspan, onRowMouseEnter, onRowMouseLeave}\">\n          <tr\n            class=\"sub-row\"\n            @mouseenter=\"onRowMouseEnter\"\n            @mouseleave=\"onRowMouseLeave\"\n          >\n            <td :colspan=\"fullColspan\">\n              <Banner\n                v-if=\"(row.state==='fail' || row.state==='warn')&& row.remediation\"\n                class=\"sub-banner\"\n                :label=\"remediationDisplay(row)\"\n                color=\"warning\"\n              />\n              <SortableTable\n                class=\"sub-table\"\n                :rows=\"row.nodeRows\"\n                :headers=\"nodeTableHeaders\"\n                :search=\"false\"\n                :row-actions=\"false\"\n                :table-actions=\"false\"\n                key-field=\"id\"\n              />\n            </td>\n          </tr>\n        </template>\n      </SortableTable>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.detail {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    border-bottom: 1px solid var(--border);\n\n    & .div {\n        padding: 0px 10px 0px 10px;\n    }\n}\n\n.sub-table {\n  padding: 0px 40px 0px 40px;\n}\n\n.sub-banner{\n  margin: 0px 40px 0px 40px;\n  width: auto;\n}\n\n.table-header {\n  align-items: flex-end;\n}\n</style>\n"]}]}