{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/harvester.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/harvester.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgTGFiZWxlZFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVsZWRTZWxlY3QnOwoKaW1wb3J0IHsgZ2V0LCBzZXQgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IHsgTUFOQUdFTUVOVCwgVklSVFVBTF9IQVJWRVNURVJfUFJPVklERVIgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IExhYmVsZWRTZWxlY3QgfSwKICBtaXhpbnM6ICAgICBbQ3JlYXRlRWRpdFZpZXddLAoKICBhc3luYyBmZXRjaCgpIHsKICAgIHRoaXMuY2x1c3RlcnMgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kQWxsJywgeyB0eXBlOiBNQU5BR0VNRU5ULkNMVVNURVIgfSk7CiAgfSwKCiAgZGF0YSgpIHsKICAgIHRoaXMuJGVtaXQoJ3ZhbGlkYXRpb25DaGFuZ2VkJywgdHJ1ZSk7CgogICAgY29uc3QgY2x1c3RlciA9IGdldCh0aGlzLnZhbHVlLCAnaGFydmVzdGVyY3JlZGVudGlhbENvbmZpZy5jbHVzdGVySWQnKSB8fCAnJzsKCiAgICByZXR1cm4gewogICAgICBjbHVzdGVyczogW10sCiAgICAgIGNsdXN0ZXIsCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBjbHVzdGVyT3B0aW9ucygpIHsKICAgICAgcmV0dXJuIHRoaXMuY2x1c3RlcnMuZmlsdGVyKChjKSA9PiBjLnN0YXR1cz8ucHJvdmlkZXIgPT09IFZJUlRVQUxfSEFSVkVTVEVSX1BST1ZJREVSKS5tYXAoIChjbHVzdGVyKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHZhbHVlOiBjbHVzdGVyLmlkLAogICAgICAgICAgbGFiZWw6IGNsdXN0ZXIubmFtZURpc3BsYXkKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgfSwKCiAgd2F0Y2g6IHsKICAgIGFzeW5jIGNsdXN0ZXIobmV1KSB7CiAgICAgIGlmICghbmV1KSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBpZiAodGhpcy5pc0NyZWF0ZSkgewogICAgICAgIHNldCh0aGlzLnZhbHVlLCAnaGFydmVzdGVyY3JlZGVudGlhbENvbmZpZy5jbHVzdGVySWQnLCBuZXUpOwogICAgICB9CgogICAgICBjb25zdCBjdXJyZW50Q2x1c3RlciA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvYWxsJ10oTUFOQUdFTUVOVC5DTFVTVEVSKS5maW5kKCh4KSA9PiB4LmlkID09PSBuZXUpOwoKICAgICAgdGhpcy4kbnV4dC4kbG9hZGluZy5zdGFydCgpOwoKICAgICAgY29uc3Qga3ViZWNvbmZpZ0NvbnRlbnQgPSBhd2FpdCBjdXJyZW50Q2x1c3Rlci5nZW5lcmF0ZUt1YmVDb25maWcoKTsKCiAgICAgIHRoaXMuJG51eHQuJGxvYWRpbmcuZmluaXNoKCk7CgogICAgICB0aGlzLnZhbHVlLnNldERhdGEoJ2t1YmVjb25maWdDb250ZW50Jywga3ViZWNvbmZpZ0NvbnRlbnQpOwogICAgfSwKCiAgICAndmFsdWUuZGVjb2RlZERhdGEuY2x1c3RlcklkJzogewogICAgICBoYW5kbGVyKCkgewogICAgICAgIHRoaXMuZW1pdFZhbGlkYXRpb24oKTsKICAgICAgfSwKICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgfSwKICAgICd2YWx1ZS5kZWNvZGVkRGF0YS5rdWJlY29uZmlnQ29udGVudCc6IHsKICAgICAgaGFuZGxlcigpIHsKICAgICAgICB0aGlzLmVtaXRWYWxpZGF0aW9uKCk7CiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZSwKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgdGVzdCgpIHsKICAgICAgY29uc3QgdCA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vdCddOwoKICAgICAgaWYgKCF0aGlzLmNsdXN0ZXIpIHsKICAgICAgICBjb25zdCBjbHVzdGVyID0gdCgnY2x1c3Rlci5jcmVkZW50aWFsLmhhcnZlc3Rlci5jbHVzdGVyJyk7CiAgICAgICAgY29uc3QgZXJyb3JzID0gW3QoJ3ZhbGlkYXRpb24ucmVxdWlyZWQnLCB7IGtleTogY2x1c3RlciB9KV07CgogICAgICAgIHJldHVybiB7IGVycm9ycyB9OwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9LAoKICAgIGVtaXRWYWxpZGF0aW9uKCkgewogICAgICBpZiAodGhpcy50ZXN0KCkgPT09IHRydWUpIHsKICAgICAgICB0aGlzLiRlbWl0KCd2YWxpZGF0aW9uQ2hhbmdlZCcsIHRydWUpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGVtaXQoJ3ZhbGlkYXRpb25DaGFuZ2VkJywgZmFsc2UpOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["harvester.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"harvester.vue","sourceRoot":"node_modules/@rancher/shell/cloud-credential","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\n\nimport { get, set } from '@shell/utils/object';\nimport { MANAGEMENT, VIRTUAL_HARVESTER_PROVIDER } from '@shell/config/types';\n\nexport default {\n  components: { LabeledSelect },\n  mixins:     [CreateEditView],\n\n  async fetch() {\n    this.clusters = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.CLUSTER });\n  },\n\n  data() {\n    this.$emit('validationChanged', true);\n\n    const cluster = get(this.value, 'harvestercredentialConfig.clusterId') || '';\n\n    return {\n      clusters: [],\n      cluster,\n    };\n  },\n\n  computed: {\n    clusterOptions() {\n      return this.clusters.filter((c) => c.status?.provider === VIRTUAL_HARVESTER_PROVIDER).map( (cluster) => {\n        return {\n          value: cluster.id,\n          label: cluster.nameDisplay\n        };\n      });\n    },\n  },\n\n  watch: {\n    async cluster(neu) {\n      if (!neu) {\n        return;\n      }\n\n      if (this.isCreate) {\n        set(this.value, 'harvestercredentialConfig.clusterId', neu);\n      }\n\n      const currentCluster = this.$store.getters['management/all'](MANAGEMENT.CLUSTER).find((x) => x.id === neu);\n\n      this.$nuxt.$loading.start();\n\n      const kubeconfigContent = await currentCluster.generateKubeConfig();\n\n      this.$nuxt.$loading.finish();\n\n      this.value.setData('kubeconfigContent', kubeconfigContent);\n    },\n\n    'value.decodedData.clusterId': {\n      handler() {\n        this.emitValidation();\n      },\n      immediate: true,\n    },\n    'value.decodedData.kubeconfigContent': {\n      handler() {\n        this.emitValidation();\n      },\n      immediate: true,\n    },\n  },\n\n  methods: {\n    test() {\n      const t = this.$store.getters['i18n/t'];\n\n      if (!this.cluster) {\n        const cluster = t('cluster.credential.harvester.cluster');\n        const errors = [t('validation.required', { key: cluster })];\n\n        return { errors };\n      } else {\n        return true;\n      }\n    },\n\n    emitValidation() {\n      if (this.test() === true) {\n        this.$emit('validationChanged', true);\n      } else {\n        this.$emit('validationChanged', false);\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <div\n        class=\"col span-6\"\n      >\n        <LabeledSelect\n          v-model=\"cluster\"\n          :mode=\"mode\"\n          :disabled=\"isEdit\"\n          :options=\"clusterOptions\"\n          :required=\"true\"\n          :label=\"t('cluster.credential.harvester.cluster')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}