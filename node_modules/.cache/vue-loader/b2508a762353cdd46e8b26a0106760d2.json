{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/prometheus/index.vue?vue&type=template&id=30047cad","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/prometheus/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPGRpdiBjbGFzcz0idGl0bGUiPgogICAgPGgzPnt7IHQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy50aXRsZScpIH19PC9oMz4KICA8L2Rpdj4KICA8QmFubmVyCiAgICB2LWlmPSJmaWx0ZXJlZFdvcmtsb2FkcyAmJiB3YXJuVXNlciIKICAgIGNvbG9yPSJ3YXJuaW5nIgogID4KICAgIDx0ZW1wbGF0ZSAjZGVmYXVsdD4KICAgICAgPHQKICAgICAgICBrPSJtb25pdG9yaW5nLnByb21ldGhldXMud2FybmluZ0luc3RhbGxlZCIKICAgICAgICA6cmF3PSJ0cnVlIgogICAgICAvPgogICAgICA8ZGl2CiAgICAgICAgdi1mb3I9IndsIGluIGZpbHRlcmVkV29ya2xvYWRzIgogICAgICAgIDprZXk9IndsLmlkIgogICAgICAgIGNsYXNzPSJtdC0xMCIKICAgICAgPgogICAgICAgIDxudXh0LWxpbmsKICAgICAgICAgIDp0bz0id2wubGluayIKICAgICAgICAgIGNsYXNzPSJidG4gcm9sZS10ZXJ0aWFyeSIKICAgICAgICA+CiAgICAgICAgICB7eyB3bC5sYWJlbCB9fQogICAgICAgIDwvbnV4dC1saW5rPgogICAgICA8L2Rpdj4KICAgIDwvdGVtcGxhdGU+CiAgPC9CYW5uZXI+CiAgPGRpdiBjbGFzcz0icHJvbWV0aGV1cy1jb25maWciPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tNiBjb2wtZnVsbC1oZWlnaHQiPgogICAgICAgIDxDaGVja2JveAogICAgICAgICAgdi1tb2RlbD0idmFsdWUucHJvbWV0aGV1cy5wcm9tZXRoZXVzU3BlYy5lbmFibGVBZG1pbkFQSSIKICAgICAgICAgIDpsYWJlbD0idCgnbW9uaXRvcmluZy5wcm9tZXRoZXVzLmNvbmZpZy5hZG1pbkFwaScpIgogICAgICAgIC8+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wgc3Bhbi02IGNvbC1mdWxsLWhlaWdodCI+CiAgICAgICAgPFJhZGlvR3JvdXAKICAgICAgICAgIHYtbW9kZWw9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMuaWdub3JlTmFtZXNwYWNlU2VsZWN0b3JzIgogICAgICAgICAgOm1vZGU9Im1vZGUiCiAgICAgICAgICBuYW1lPSJpZ25vcmVOYW1lc3BhY2VTZWxlY3RvcnMiCiAgICAgICAgICBsYWJlbC1rZXk9Im1vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcuaWdub3JlTmFtZXNwYWNlU2VsZWN0b3JzLmxhYmVsIgogICAgICAgICAgOnRvb2x0aXA9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcuaWdub3JlTmFtZXNwYWNlU2VsZWN0b3JzLmhlbHAnLCB7fSwgdHJ1ZSkiCiAgICAgICAgICA6bGFiZWxzPSJbdCgnbW9uaXRvcmluZy5wcm9tZXRoZXVzLmNvbmZpZy5pZ25vcmVOYW1lc3BhY2VTZWxlY3RvcnMucmFkaW8uZW5mb3JjZWQnKSx0KCdtb25pdG9yaW5nLnByb21ldGhldXMuY29uZmlnLmlnbm9yZU5hbWVzcGFjZVNlbGVjdG9ycy5yYWRpby5pZ25vcmVkJyldIgogICAgICAgICAgOm9wdGlvbnM9IltmYWxzZSwgdHJ1ZV0iCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzcGFuLTYiPgogICAgICAgIDxMYWJlbGVkSW5wdXQKICAgICAgICAgIHYtbW9kZWw9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMuc2NyYXBlSW50ZXJ2YWwiCiAgICAgICAgICA6bGFiZWw9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcuc2NyYXBlJykiCiAgICAgICAgICA6bW9kZT0ibW9kZSIKICAgICAgICAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tNiI+CiAgICAgICAgPExhYmVsZWRJbnB1dAogICAgICAgICAgdi1tb2RlbD0idmFsdWUucHJvbWV0aGV1cy5wcm9tZXRoZXVzU3BlYy5ldmFsdWF0aW9uSW50ZXJ2YWwiCiAgICAgICAgICA6bGFiZWw9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcuZXZhbHVhdGlvbicpIgogICAgICAgICAgOm1vZGU9Im1vZGUiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzcGFuLTYiPgogICAgICAgIDxMYWJlbGVkSW5wdXQKICAgICAgICAgIHYtbW9kZWw9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMucmV0ZW50aW9uIgogICAgICAgICAgOmxhYmVsPSJ0KCdtb25pdG9yaW5nLnByb21ldGhldXMuY29uZmlnLnJldGVudGlvbicpIgogICAgICAgICAgOm1vZGU9Im1vZGUiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzcGFuLTYiPgogICAgICAgIDxMYWJlbGVkSW5wdXQKICAgICAgICAgIHYtbW9kZWw9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMucmV0ZW50aW9uU2l6ZSIKICAgICAgICAgIDpsYWJlbD0idCgnbW9uaXRvcmluZy5wcm9tZXRoZXVzLmNvbmZpZy5yZXRlbnRpb25TaXplJykiCiAgICAgICAgICA6bW9kZT0ibW9kZSIKICAgICAgICAvPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tMTIgbXQtNSI+CiAgICAgICAgPGg0IGNsYXNzPSJtYi0wIj4KICAgICAgICAgIHt7IHQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcucmVzb3VyY2VMaW1pdHMnKSB9fQogICAgICAgIDwvaDQ+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wgc3Bhbi02Ij4KICAgICAgICA8TGFiZWxlZElucHV0CiAgICAgICAgICB2LW1vZGVsPSJ2YWx1ZS5wcm9tZXRoZXVzLnByb21ldGhldXNTcGVjLnJlc291cmNlcy5yZXF1ZXN0cy5jcHUiCiAgICAgICAgICA6bGFiZWw9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcucmVxdWVzdHMuY3B1JykiCiAgICAgICAgICA6bW9kZT0ibW9kZSIKICAgICAgICAvPgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tNiI+CiAgICAgICAgPExhYmVsZWRJbnB1dAogICAgICAgICAgdi1tb2RlbD0idmFsdWUucHJvbWV0aGV1cy5wcm9tZXRoZXVzU3BlYy5yZXNvdXJjZXMucmVxdWVzdHMubWVtb3J5IgogICAgICAgICAgOmxhYmVsPSJ0KCdtb25pdG9yaW5nLnByb21ldGhldXMuY29uZmlnLnJlcXVlc3RzLm1lbW9yeScpIgogICAgICAgICAgOm1vZGU9Im1vZGUiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzcGFuLTYiPgogICAgICAgIDxMYWJlbGVkSW5wdXQKICAgICAgICAgIHYtbW9kZWw9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMucmVzb3VyY2VzLmxpbWl0cy5jcHUiCiAgICAgICAgICA6bGFiZWw9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcubGltaXRzLmNwdScpIgogICAgICAgICAgOm1vZGU9Im1vZGUiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzcGFuLTYiPgogICAgICAgIDxMYWJlbGVkSW5wdXQKICAgICAgICAgIHYtbW9kZWw9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMucmVzb3VyY2VzLmxpbWl0cy5tZW1vcnkiCiAgICAgICAgICA6bGFiZWw9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5jb25maWcubGltaXRzLm1lbW9yeScpIgogICAgICAgICAgOm1vZGU9Im1vZGUiCiAgICAgICAgLz4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYKICAgICAgY2xhc3M9InJvdyByb3ctZnVsbC1oZWlnaHQgY29udGFpbmVyLWZsZXgtY2VudGVyIgogICAgICBzdHlsZT0ibWluLWhlaWdodDogNTVweDsiCiAgICA+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBzcGFuLTYiPgogICAgICAgIDxDaGVja2JveAogICAgICAgICAgdi1tb2RlbD0iZW5hYmxlUGVyc2lzdGVudFN0b3JhZ2UiCiAgICAgICAgICBkYXRhLXRlc3RpZD0iY2hlY2tib3gtY2hhcnQtZW5hYmxlLXBlcnNpc3RlbnQtc3RvcmFnZSIKICAgICAgICAgIDpsYWJlbD0idCgnbW9uaXRvcmluZy5wcm9tZXRoZXVzLnN0b3JhZ2UubGFiZWwnKSIKICAgICAgICAvPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPHRlbXBsYXRlIHYtaWY9ImVuYWJsZVBlcnNpc3RlbnRTdG9yYWdlIj4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgc3Bhbi02Ij4KICAgICAgICAgIDxMYWJlbGVkSW5wdXQKICAgICAgICAgICAgdi1tb2RlbD0idmFsdWUucHJvbWV0aGV1cy5wcm9tZXRoZXVzU3BlYy5zdG9yYWdlU3BlYy52b2x1bWVDbGFpbVRlbXBsYXRlLnNwZWMucmVzb3VyY2VzLnJlcXVlc3RzLnN0b3JhZ2UiCiAgICAgICAgICAgIDpsYWJlbD0idCgnbW9uaXRvcmluZy5wcm9tZXRoZXVzLnN0b3JhZ2Uuc2l6ZScpIgogICAgICAgICAgICA6bW9kZT0ibW9kZSIKICAgICAgICAgIC8+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tNiI+CiAgICAgICAgICA8ZGl2CiAgICAgICAgICAgIHYtaWY9InNob3dTdG9yYWdlQ2xhc3NlcyIKICAgICAgICAgICAgZGF0YS10ZXN0aWQ9InNlbGVjdC1jaGFydC1wcm9tZXRoZXVzLXN0b3JhZ2UtY2xhc3MiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxTdG9yYWdlQ2xhc3NTZWxlY3RvcgogICAgICAgICAgICAgIDptb2RlPSJtb2RlIgogICAgICAgICAgICAgIDpvcHRpb25zPSJzdG9yYWdlQ2xhc3NlcyIKICAgICAgICAgICAgICA6dmFsdWU9InZhbHVlLnByb21ldGhldXMucHJvbWV0aGV1c1NwZWMuc3RvcmFnZVNwZWMudm9sdW1lQ2xhaW1UZW1wbGF0ZS5zcGVjLnN0b3JhZ2VDbGFzc05hbWUiCiAgICAgICAgICAgICAgOmxhYmVsPSJ0KCdtb25pdG9yaW5nLnByb21ldGhldXMuc3RvcmFnZS5jbGFzc05hbWUnKSIKICAgICAgICAgICAgICBAdXBkYXRlTmFtZT0iKG5hbWUpID0+ICRzZXQodmFsdWUucHJvbWV0aGV1cy5wcm9tZXRoZXVzU3BlYy5zdG9yYWdlU3BlYy52b2x1bWVDbGFpbVRlbXBsYXRlLnNwZWMsICdzdG9yYWdlQ2xhc3NOYW1lJywgbmFtZSkiCiAgICAgICAgICAgIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tNiI+CiAgICAgICAgICA8TGFiZWxlZFNlbGVjdAogICAgICAgICAgICB2LW1vZGVsPSJ2YWx1ZS5wcm9tZXRoZXVzLnByb21ldGhldXNTcGVjLnN0b3JhZ2VTcGVjLnZvbHVtZUNsYWltVGVtcGxhdGUuc3BlYy5hY2Nlc3NNb2RlcyIKICAgICAgICAgICAgOmxhYmVsPSJ0KCdtb25pdG9yaW5nLnByb21ldGhldXMuc3RvcmFnZS5tb2RlJykiCiAgICAgICAgICAgIDpsb2NhbGl6ZWQtbGFiZWw9InRydWUiCiAgICAgICAgICAgIDptb2RlPSJtb2RlIgogICAgICAgICAgICA6bXVsdGlwbGU9InRydWUiCiAgICAgICAgICAgIDpvcHRpb25zPSJhY2Nlc3NNb2RlcyIKICAgICAgICAgICAgOnJlZHVjZT0iKHtpZH0pPT4gaWQiCiAgICAgICAgICAvPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgc3Bhbi0xMiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi01IG10LTUiPgogICAgICAgICAgICA8aDQgY2xhc3M9IiBtYi0xMCI+CiAgICAgICAgICAgICAge3sgdCgnbW9uaXRvcmluZy5wcm9tZXRoZXVzLnN0b3JhZ2Uuc2VsZWN0b3InKSB9fQogICAgICAgICAgICA8L2g0PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8QmFubmVyCiAgICAgICAgICAgIGNvbG9yPSJ3YXJuaW5nIgogICAgICAgICAgICA6bGFiZWw9InQoJ21vbml0b3JpbmcucHJvbWV0aGV1cy5zdG9yYWdlLnNlbGVjdG9yV2FybmluZycsIHt9LCB0cnVlKSIKICAgICAgICAgIC8+CiAgICAgICAgICA8TWF0Y2hFeHByZXNzaW9ucwogICAgICAgICAgICA6aW5pdGlhbC1lbXB0eS1yb3c9ImZhbHNlIgogICAgICAgICAgICA6bW9kZT0ibW9kZSIKICAgICAgICAgICAgOnZhbHVlPSJtYXRjaEV4cHJlc3Npb25zIgogICAgICAgICAgICA6c2hvdy1yZW1vdmU9ImZhbHNlIgogICAgICAgICAgICBAaW5wdXQ9Im1hdGNoQ2hhbmdlZCgkZXZlbnQpIgogICAgICAgICAgLz4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L3RlbXBsYXRlPgogIDwvZGl2Pgo8L2Rpdj4K"},null]}