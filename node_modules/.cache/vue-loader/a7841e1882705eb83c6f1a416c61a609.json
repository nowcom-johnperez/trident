{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/monitoring/route-receiver/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/monitoring/route-receiver/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qKgogKiBUaGUgUm91dGUgYW5kIFJlY2VpdmVyIHJlc291cmNlcyBhcmUgZGVwcmVjYXRlZC4gR29pbmcgZm9yd2FyZCwKICogcm91dGVzIGFuZCByZWNlaXZlcnMgc2hvdWxkIGJlIGNvbmZpZ3VyZWQgd2l0aGluIEFsZXJ0bWFuYWdlckNvbmZpZ3MuCiAqIEFueSB1cGRhdGVzIHRvIHJlY2VpdmVyIGNvbmZpZ3VyYXRpb24gZm9ybXMsIHN1Y2ggYXMgU2xhY2svZW1haWwvUGFnZXJEdXR5CiAqIGV0Yywgc2hvdWxkIGJlIG1hZGUgdG8gdGhlIHJlY2VpdmVyIGZvcm1zIHRoYXQgYXJlIGJhc2VkIG9uIHRoZQogKiBBbGVydG1hbmFnZXJDb25maWcgcmVzb3VyY2UsIHdoaWNoIGhhcyBhIGRpZmZlcmVudCBBUEkuIFRoZSBuZXcgZm9ybXMgYXJlCiAqIGxvY2F0ZWQgaW4gQHNoZWxsL2VkaXQvbW9uaXRvcmluZy5jb3Jlb3MuY29tLmFsZXJ0bWFuYWdlcmNvbmZpZy90eXBlcy4KICovCmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nJzsKaW1wb3J0IFRhYmJlZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQnOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWInOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgeyBNT05JVE9SSU5HIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IGFyZVJvdXRlc1N1cHBvcnRlZEZvcm1hdCwgZ2V0U2VjcmV0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FsZXJ0bWFuYWdlcmNvbmZpZyc7CmltcG9ydCB7IE1PREUsIF9FRElUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICAgICAgICdMaXN0Um91dGUnLAogIGNvbXBvbmVudHM6IHsKICAgIEJhbm5lciwKICAgIExvYWRpbmcsCiAgICBSZXNvdXJjZVRhYmxlLAogICAgVGFiLAogICAgVGFiYmVkLAogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgdGhpcy5yb3V0ZVNjaGVtYSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NsdXN0ZXIvc2NoZW1hRm9yJ10oTU9OSVRPUklORy5TUE9PRkVELlJPVVRFKTsKICAgIHRoaXMucmVjZWl2ZXJTY2hlbWEgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL3NjaGVtYUZvciddKE1PTklUT1JJTkcuU1BPT0ZFRC5SRUNFSVZFUik7CgogICAgY29uc3Qgcm91dGVzID0gdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsgdHlwZTogTU9OSVRPUklORy5TUE9PRkVELlJPVVRFIH0pOwoKICAgIHRoaXMucmVjZWl2ZXJzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsgdHlwZTogTU9OSVRPUklORy5TUE9PRkVELlJFQ0VJVkVSIH0pOwoKICAgIGNvbnN0IHNlY3JldCA9IGF3YWl0IGdldFNlY3JldCh0aGlzLiRzdG9yZS5kaXNwYXRjaCk7CiAgICBjb25zdCBhcmVTb21lUm91dGVzSW52YWxpZEZvcm1hdCA9IGFyZVJvdXRlc1N1cHBvcnRlZEZvcm1hdChzZWNyZXQpOwoKICAgIGlmIChhcmVTb21lUm91dGVzSW52YWxpZEZvcm1hdCkgewogICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgndHlwZS1tYXAvY29uZmlndXJlVHlwZScsIHsgbWF0Y2g6IE1PTklUT1JJTkcuU1BPT0ZFRC5ST1VURSwgaXNDcmVhdGFibGU6IHRydWUgfSk7CiAgICAgIHRoaXMucm91dGVzID0gYXdhaXQgcm91dGVzOwogICAgfSBlbHNlIHsKICAgICAgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3R5cGUtbWFwL2NvbmZpZ3VyZVR5cGUnLCB7IG1hdGNoOiBNT05JVE9SSU5HLlNQT09GRUQuUk9VVEUsIGlzQ3JlYXRhYmxlOiBmYWxzZSB9KTsKICAgICAgdGhpcy5zZWNyZXRUbyA9IHsgLi4uc2VjcmV0LmRldGFpbExvY2F0aW9uIH07CiAgICAgIHRoaXMuc2VjcmV0VG8ucXVlcnkgPSB7IFtNT0RFXTogX0VESVQgfTsKICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgY29uc3QgaW5pdFRhYiA9IHRoaXMuJHJvdXRlLnF1ZXJ5LnJlc291cmNlIHx8IE1PTklUT1JJTkcuU1BPT0ZFRC5SRUNFSVZFUjsKCiAgICByZXR1cm4gewogICAgICByb3V0ZXM6IFtdLCByZWNlaXZlcnM6IFtdLCBzZWNyZXRUbzogbnVsbCwgcm91dGVTY2hlbWE6IG51bGwsIHJlY2VpdmVyU2NoZW1hOiBudWxsLCBpbml0VGFiCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKCiAgICBjcmVhdGVSb3V0ZSgpIHsKICAgICAgY29uc3QgYWN0aXZlUmVzb3VyY2UgPSB0aGlzLiRyZWZzPy50YWJzPy5hY3RpdmVUYWJOYW1lIHx8IHRoaXMucm91dGVTY2hlbWEuaWQ7CgogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICAgJ2MtY2x1c3Rlci1tb25pdG9yaW5nLXJvdXRlLXJlY2VpdmVyLWNyZWF0ZScsCiAgICAgICAgcGFyYW1zOiB7IGNsdXN0ZXI6IHRoaXMuJHJvdXRlLnBhcmFtcy5jbHVzdGVyIH0sCiAgICAgICAgcXVlcnk6ICB7IHJlc291cmNlOiBhY3RpdmVSZXNvdXJjZSB9CiAgICAgIH07CiAgICB9LAogIH0sCgp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/monitoring/route-receiver","sourcesContent":["<script>\n/**\n * The Route and Receiver resources are deprecated. Going forward,\n * routes and receivers should be configured within AlertmanagerConfigs.\n * Any updates to receiver configuration forms, such as Slack/email/PagerDuty\n * etc, should be made to the receiver forms that are based on the\n * AlertmanagerConfig resource, which has a different API. The new forms are\n * located in @shell/edit/monitoring.coreos.com.alertmanagerconfig/types.\n */\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Loading from '@shell/components/Loading';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { Banner } from '@components/Banner';\nimport { MONITORING } from '@shell/config/types';\nimport { areRoutesSupportedFormat, getSecret } from '@shell/utils/alertmanagerconfig';\nimport { MODE, _EDIT } from '@shell/config/query-params';\n\nexport default {\n  name:       'ListRoute',\n  components: {\n    Banner,\n    Loading,\n    ResourceTable,\n    Tab,\n    Tabbed,\n  },\n\n  async fetch() {\n    this.routeSchema = this.$store.getters['cluster/schemaFor'](MONITORING.SPOOFED.ROUTE);\n    this.receiverSchema = this.$store.getters['cluster/schemaFor'](MONITORING.SPOOFED.RECEIVER);\n\n    const routes = this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.ROUTE });\n\n    this.receivers = await this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.RECEIVER });\n\n    const secret = await getSecret(this.$store.dispatch);\n    const areSomeRoutesInvalidFormat = areRoutesSupportedFormat(secret);\n\n    if (areSomeRoutesInvalidFormat) {\n      this.$store.dispatch('type-map/configureType', { match: MONITORING.SPOOFED.ROUTE, isCreatable: true });\n      this.routes = await routes;\n    } else {\n      this.$store.dispatch('type-map/configureType', { match: MONITORING.SPOOFED.ROUTE, isCreatable: false });\n      this.secretTo = { ...secret.detailLocation };\n      this.secretTo.query = { [MODE]: _EDIT };\n    }\n  },\n\n  data() {\n    const initTab = this.$route.query.resource || MONITORING.SPOOFED.RECEIVER;\n\n    return {\n      routes: [], receivers: [], secretTo: null, routeSchema: null, receiverSchema: null, initTab\n    };\n  },\n  computed: {\n\n    createRoute() {\n      const activeResource = this.$refs?.tabs?.activeTabName || this.routeSchema.id;\n\n      return {\n        name:   'c-cluster-monitoring-route-receiver-create',\n        params: { cluster: this.$route.params.cluster },\n        query:  { resource: activeResource }\n      };\n    },\n  },\n\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <div class=\"row header mb-10\">\n      <h1>  {{ t('monitoring.routesAndReceivers') }}</h1>\n      <div>\n        <button\n          class=\"btn btn-lg role-primary float right\"\n          @click=\"$router.push(createRoute)\"\n        >\n          {{ t('resourceList.head.create') }}\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <Banner\n        color=\"info\"\n        :label=\"t('monitoring.alertmanagerConfig.deprecationWarning')\"\n      />\n    </div>\n    <Tabbed\n      ref=\"tabs\"\n      :default-tab=\"initTab\"\n    >\n      <Tab\n        :name=\"routeSchema.id\"\n        :label=\"$store.getters['type-map/labelFor'](routeSchema, 2)\"\n      >\n        <div v-if=\"secretTo\">\n          We don't support the current route format stored in alertmanager.yaml. Click\n          <nuxt-link :to=\"secretTo\">\n            here\n          </nuxt-link> to update manually.\n        </div>\n        <ResourceTable\n          v-else\n          :schema=\"routeSchema\"\n          :rows=\"routes\"\n        />\n      </Tab>\n      <Tab\n        :name=\"receiverSchema.id\"\n        :label=\"$store.getters['type-map/labelFor'](receiverSchema, 2)\"\n      >\n        <ResourceTable\n          :schema=\"receiverSchema\"\n          :rows=\"receivers\"\n        />\n      </Tab>\n    </Tabbed>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.header{\n  display: flex;\n  H1{\n    flex: 1;\n  }\n}\n</style>\n"]}]}