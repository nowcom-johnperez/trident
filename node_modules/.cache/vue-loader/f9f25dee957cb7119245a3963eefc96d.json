{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/FixedBanner.vue?vue&type=style&index=0&id=ecabaee6&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/FixedBanner.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5iYW5uZXIgewogIHRleHQtYWxpZ246IGNlbnRlcjsKICBsaW5lLWhlaWdodDogMmVtOwogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmc6IDAgMjBweDsKCiAgJi5iYW5uZXItY29uc2VudCB7CiAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICBoZWlnaHQ6IHVuc2V0OwogICAgbWluLWhlaWdodDogMmVtOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICB9Cn0KLmJhbm5lci1kaWFsb2csIC5iYW5uZXItZGlhbG9nLWdsYXNzIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwcHg7CiAgbGVmdDogMHB4OwogIHdpZHRoOiAxMDB2dzsKICBoZWlnaHQ6IDEwMHZoOwp9Ci5iYW5uZXItZGlhbG9nLWdsYXNzIHsKICB6LWluZGV4OiA1MDAwOwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWRlZmF1bHQpOwogIG9wYWNpdHk6IDAuNzU7Cn0KLmJhbm5lci1kaWFsb2cgewogIHotaW5kZXg6IDUwMDE7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwoKICAuYmFubmVyLWRpYWxvZy1mcmFtZSB7CiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1ib3JkZXIpOwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogICAgcGFkZGluZzogMjBweDsKICAgIGhlaWdodDogZml0LWNvbnRlbnQ7CiAgICB3aWR0aDogZml0LWNvbnRlbnQ7CiAgICBtaW4td2lkdGg6IDUwJTsKICAgIG1heC13aWR0aDogODAlOwogICAgbWF4LWhlaWdodDogOTAlOwoKICAgIC5iYW5uZXIgewogICAgICBoZWlnaHQ6IGluaXRpYWw7CiAgICAgIG92ZXJmbG93LXk6IGF1dG87CiAgICB9CgogICAgYnV0dG9uIHsKICAgICAgbWFyZ2luLXRvcDogMTBweDsKICAgICAgbWF4LXdpZHRoOiA1MCU7CiAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgICB3aWR0aDogZml0LWNvbnRlbnQ7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["FixedBanner.vue"],"names":[],"mappings":";AAyQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FixedBanner.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport isEmpty from 'lodash/isEmpty';\n\nexport default {\n  props: {\n    header: {\n      type:    Boolean,\n      default: false\n    },\n    consent: {\n      type:    Boolean,\n      default: false\n    },\n    footer: {\n      type:    Boolean,\n      default: false\n    },\n  },\n\n  async fetch() {\n    this.bannerSetting = await this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.BANNERS);\n  },\n\n  data() {\n    return {\n      showDialog:    true,\n      showHeader:    false,\n      showFooter:    false,\n      showConsent:   false,\n      banner:        {},\n      bannerSetting: null\n    };\n  },\n\n  methods: {\n    hideDialog() {\n      this.showDialog = false;\n    },\n    handleLineBreaksConsentText(banner) {\n      if (banner.text?.length) {\n        // split text by newline char\n        const textArray = banner.text.split(/\\\\n/).filter((element) => element);\n\n        if (textArray.length > 1) {\n          textArray.forEach((str, i) => {\n            textArray[i] = str.trim();\n          });\n          banner.text = textArray;\n        }\n      }\n\n      return banner;\n    }\n  },\n\n  computed: {\n    bannerStyle() {\n      return {\n        color:              this.banner.color,\n        'background-color': this.banner.background,\n        'text-align':       this.banner.textAlignment,\n        'font-weight':      this.banner.fontWeight ? 'bold' : '',\n        'font-style':       this.banner.fontStyle ? 'italic' : '',\n        'font-size':        this.banner.fontSize,\n        'text-decoration':  this.banner.textDecoration ? 'underline' : ''\n      };\n    },\n    dialogStyle() {\n      return {\n        color:              this.banner.color,\n        'background-color': this.banner.background\n      };\n    },\n    showBanner() {\n      if (!this.banner.text && !this.banner.background) {\n        return false;\n      }\n\n      if (this.header) {\n        return this.showHeader;\n      } else if (this.consent) {\n        return this.showConsent;\n      } else if (this.footer) {\n        return this.showFooter;\n      }\n\n      return null;\n    },\n    isTextAnArray() {\n      return Array.isArray(this.banner?.text);\n    },\n    showAsDialog() {\n      return this.consent && !!this.banner.button;\n    },\n\n    // ID to place on the Banner DIV\n    id() {\n      if (this.header) {\n        return 'banner-header';\n      } else if (this.consent) {\n        return 'banner-consent';\n      } else if (this.footer) {\n        return 'banner-footer';\n      }\n\n      return 'banner';\n    }\n  },\n\n  watch: {\n    bannerSetting(neu) {\n      if (neu?.value && neu.value !== '') {\n        try {\n          const parsed = JSON.parse(neu.value);\n          const {\n            bannerHeader, bannerFooter, bannerConsent, banner, showHeader, showFooter, showConsent\n          } = parsed;\n          let bannerContent = parsed?.banner || {};\n\n          if (isEmpty(banner)) {\n            if (showHeader && this.header) {\n              bannerContent = bannerHeader || {};\n            } else if (showConsent && this.consent) {\n              bannerContent = this.handleLineBreaksConsentText(bannerConsent) || {};\n            } else if (showFooter && this.footer) {\n              bannerContent = bannerFooter || {};\n            } else {\n              bannerContent = {};\n            }\n          }\n\n          this.showHeader = showHeader === 'true';\n          this.showFooter = showFooter === 'true';\n          this.showConsent = showConsent === 'true';\n          this.banner = bannerContent;\n        } catch {}\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <div\n    v-if=\"showBanner\"\n    :id=\"id\"\n  >\n    <div\n      v-if=\"!showAsDialog\"\n      class=\"banner\"\n      :style=\"bannerStyle\"\n      :class=\"{'banner-consent': consent}\"\n    >\n      <!-- text as array to support line breaks programmatically rather than just exposing HTML -->\n      <div v-if=\"isTextAnArray\">\n        <p\n          v-for=\"(text, index) in banner.text\"\n          :key=\"index\"\n        >\n          {{ text }}\n        </p>\n      </div>\n      <p v-else>\n        {{ banner.text }}\n      </p>\n    </div>\n    <div v-else-if=\"showDialog\">\n      <div class=\"banner-dialog-glass\" />\n      <div class=\"banner-dialog\">\n        <div\n          class=\"banner-dialog-frame\"\n          :style=\"dialogStyle\"\n        >\n          <div\n            class=\"banner\"\n            :style=\"bannerStyle\"\n          >\n            <!-- text as array to support line breaks programmatically rather than just exposing HTML -->\n            <div v-if=\"isTextAnArray\">\n              <p\n                v-for=\"(text, index) in banner.text\"\n                :key=\"index\"\n              >\n                {{ text }}\n              </p>\n            </div>\n            <p v-else>\n              {{ banner.text }}\n            </p>\n          </div>\n          <button\n            class=\"btn role-primary\"\n            @click=\"hideDialog()\"\n          >\n            {{ banner.button }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .banner {\n    text-align: center;\n    line-height: 2em;\n    width: 100%;\n    padding: 0 20px;\n\n    &.banner-consent {\n      position: absolute;\n      height: unset;\n      min-height: 2em;\n      overflow: hidden;\n    }\n  }\n  .banner-dialog, .banner-dialog-glass {\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    width: 100vw;\n    height: 100vh;\n  }\n  .banner-dialog-glass {\n    z-index: 5000;\n    background-color: var(--default);\n    opacity: 0.75;\n  }\n  .banner-dialog {\n    z-index: 5001;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    .banner-dialog-frame {\n      border: 2px solid var(--border);\n      display: flex;\n      align-items: center;\n      flex-direction: column;\n      padding: 20px;\n      height: fit-content;\n      width: fit-content;\n      min-width: 50%;\n      max-width: 80%;\n      max-height: 90%;\n\n      .banner {\n        height: initial;\n        overflow-y: auto;\n      }\n\n      button {\n        margin-top: 10px;\n        max-width: 50%;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n        width: fit-content;\n      }\n    }\n  }\n</style>\n"]}]}