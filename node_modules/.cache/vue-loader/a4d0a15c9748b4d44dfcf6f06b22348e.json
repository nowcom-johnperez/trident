{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/vmwarevsphere.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/vmwarevsphere.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCB7IE5PUk1BTiB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgTGFiZWxlZElucHV0IH0sCiAgbWl4aW5zOiAgICAgW0NyZWF0ZUVkaXRWaWV3XSwKCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGhhbmRsZXIobmV1KSB7CiAgICAgICAgdGhpcy4kZW1pdCgndmFsaWRhdGlvbkNoYW5nZWQnLCAhIW5ldSk7CiAgICAgIH0KICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBhc3luYyB0ZXN0KCkgewogICAgICAvLyBUaGUgdnNwaGVyZSBhcGlzIHJlcXVpcmUgdGhhdCBhbiBleGlzdGluZyBjbG91ZENyZWRlbnRpYWxJZCBiZSBwYXNzZWQgaW4gb3JkZXIgdG8gdXNlIHRoZSBBUEkuCiAgICAgIC8vIFdlIGNyZWF0ZSBhIHRlbXBvcmFyeSBjcmVkZW50aWFsIGFuZCBhdHRlbXB0IHRvIGludm9rZSBvbmUgb2YgdGhlIGJhc2ljIEFQSXMgdG8gYXV0aGVudGljYXRlIHRoZSB1c2VyLgogICAgICAvLyBXZSB0aGVuIGRlbGV0ZSB0aGUgdGVtcG9yYXJ5IGNyZWRlbnRpYWwgc2luY2UgdGhlIGV4aXN0aW5nIHN5c3RlbSB3aWxsIGNyZWF0ZSBvbmUgYWZ0ZXIgd2UgYXV0aGVudGljYXRlLgogICAgICBjb25zdCB0ZW1wb3JhcnlDcmVkZW50aWFsID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvY3JlYXRlJywgewogICAgICAgIHR5cGU6ICAgICAgICAgICAgICAgICAgICAgICAgICBOT1JNQU4uQ0xPVURfQ1JFREVOVElBTCwKICAgICAgICB2bXdhcmV2c3BoZXJlY3JlZGVudGlhbENvbmZpZzogdGhpcy52YWx1ZS5kZWNvZGVkRGF0YQogICAgICB9KTsKCiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGVtcG9yYXJ5Q3JlZGVudGlhbC5zYXZlKCk7CgogICAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L3JlcXVlc3QnLCB7CiAgICAgICAgICB1cmw6ICAgICAgICAgICAgICAgICAgYC9tZXRhL3ZzcGhlcmUvZGF0YS1jZW50ZXJzP2Nsb3VkQ3JlZGVudGlhbElkPSR7IHRlbXBvcmFyeUNyZWRlbnRpYWwuaWQgfWAsCiAgICAgICAgICByZWRpcmVjdFVuYXV0aG9yaXplZDogZmFsc2UsCiAgICAgICAgfSwgeyByb290OiB0cnVlIH0pOwogICAgICB9IGNhdGNoIChleCkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBhd2FpdCB0ZW1wb3JhcnlDcmVkZW50aWFsLnJlbW92ZSgpOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["vmwarevsphere.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"vmwarevsphere.vue","sourceRoot":"node_modules/@rancher/shell/cloud-credential","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { NORMAN } from '@shell/config/types';\n\nexport default {\n  components: { LabeledInput },\n  mixins:     [CreateEditView],\n\n  watch: {\n    value: {\n      deep: true,\n      handler(neu) {\n        this.$emit('validationChanged', !!neu);\n      }\n    }\n  },\n\n  methods: {\n    async test() {\n      // The vsphere apis require that an existing cloudCredentialId be passed in order to use the API.\n      // We create a temporary credential and attempt to invoke one of the basic APIs to authenticate the user.\n      // We then delete the temporary credential since the existing system will create one after we authenticate.\n      const temporaryCredential = await this.$store.dispatch('rancher/create', {\n        type:                          NORMAN.CLOUD_CREDENTIAL,\n        vmwarevspherecredentialConfig: this.value.decodedData\n      });\n\n      try {\n        await temporaryCredential.save();\n\n        await this.$store.dispatch('management/request', {\n          url:                  `/meta/vsphere/data-centers?cloudCredentialId=${ temporaryCredential.id }`,\n          redirectUnauthorized: false,\n        }, { root: true });\n      } catch (ex) {\n        return false;\n      } finally {\n        await temporaryCredential.remove();\n      }\n\n      return true;\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          :value=\"value.decodedData.vcenter\"\n          label-key=\"cluster.credential.vmwarevsphere.server.label\"\n          placeholder-key=\"cluster.credential.vmwarevsphere.server.placeholder\"\n          :required=\"true\"\n          :mode=\"mode\"\n          @input=\"value.setData('vcenter', $event);\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          :value=\"value.decodedData.vcenterPort\"\n          label-key=\"cluster.credential.vmwarevsphere.port.label\"\n          :required=\"true\"\n          type=\"number\"\n          min=\"1\"\n          max=\"65535\"\n          :mode=\"mode\"\n          @input=\"value.setData('vcenterPort', $event);\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          :value=\"value.decodedData.username\"\n          label-key=\"cluster.credential.vmwarevsphere.username.label\"\n          :required=\"true\"\n          :mode=\"mode\"\n          @input=\"value.setData('username', $event);\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          :value=\"value.decodedData.password\"\n          label-key=\"cluster.credential.vmwarevsphere.password.label\"\n          :required=\"true\"\n          type=\"password\"\n          :mode=\"mode\"\n          @input=\"value.setData('password', $event);\"\n        />\n      </div>\n    </div>\n    <p class=\"text-muted\">\n      {{ t('cluster.credential.vmwarevsphere.note', {}, true) }}\n    </p>\n  </div>\n</template>\n"]}]}