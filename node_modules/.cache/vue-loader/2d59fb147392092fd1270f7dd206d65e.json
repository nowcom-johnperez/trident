{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/settings/links.vue?vue&type=style&index=0&id=3d8a7474&scoped=true&lang=scss","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/settings/links.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5vdmVybGF5IHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHRvcDogMDsKICBsZWZ0OiAwOwogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW92ZXJsYXktYmcpOwogIHotaW5kZXg6IDE7Cn0KLnVpLWxpbmtzLXNldHRpbmcgewogIFAgewogICAgbGluZS1oZWlnaHQ6IDEuMjU7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KCiAgLnVuZGVybGluZSB7CiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsKICB9Cn0KLmFjdGlvbiB7CiAgZGlzcGxheTogZmxleDsKICBpbnB1dCB7CiAgICBtYXJnaW4tcmlnaHQ6IDVweDsKICB9Cn0K"},{"version":3,"sources":["links.vue"],"names":[],"mappings":";AA0IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"links.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/settings","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport Banner from '@components/Banner/Banner.vue';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { fetchOrCreateSetting } from '@shell/utils/settings';\nimport { SETTING } from '@shell/config/settings';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { mapGetters } from 'vuex';\nimport { isRancherPrime } from '@shell/config/version';\nimport DefaultLinksEditor from './DefaultLinksEditor';\nimport { CUSTOM_LINKS_VERSION, fetchLinks } from '@shell/config/home-links';\n\nexport default {\n  layout:     'authenticated',\n  components: {\n    KeyValue,\n    Loading,\n    AsyncButton,\n    Banner,\n    DefaultLinksEditor,\n  },\n  async fetch() {\n    this.value = await fetchLinks(this.$store, this.hasSupport, false, (str) => this.t(str));\n  },\n\n  data() {\n    return {\n      defaultsDisabled: true,\n      isRancherPrime:   isRancherPrime(),\n      uiCustomLinks:    {},\n      bannerVal:        {},\n      value:            [],\n      errors:           [],\n    };\n  },\n  computed: {\n    ...mapGetters({ multiWithFallback: 'i18n/multiWithFallback' }),\n\n    mode() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.SETTING);\n\n      return schema?.resourceMethods?.includes('PUT') ? _EDIT : _VIEW;\n    },\n\n    allValues() {\n      return {\n        version:  CUSTOM_LINKS_VERSION,\n        defaults: this.value.defaults.filter((obj) => obj.enabled).map((obj) => obj.key),\n        custom:   this.value.custom\n      };\n    },\n\n    hasSupport() {\n      return isRancherPrime() || this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.SUPPORTED )?.value === 'true';\n    },\n  },\n  methods: {\n    deprecateIssueLinks() {\n      if (this.uiIssuesSetting.value || this.uiIssuesSetting.value) {\n        this.uiIssuesSetting.value = '';\n        this.uiCommunitySetting.value = '';\n\n        return this.uiIssuesSetting.save();\n      }\n    },\n\n    async save(btnCB) {\n      this.errors = [];\n      try {\n        const uiCustomLinks = await fetchOrCreateSetting(this.$store, SETTING.UI_CUSTOM_LINKS, '');\n\n        uiCustomLinks.value = JSON.stringify(this.allValues);\n\n        await uiCustomLinks.save();\n\n        this.value = await fetchLinks(this.$store, this.hasSupport, false, (str) => this.t(str));\n        btnCB(true);\n      } catch (err) {\n        this.errors.push(err);\n        btnCB(false);\n      }\n    },\n  }\n};\n</script>\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <h1 class=\"mb-20\">\n      {{ t(\"customLinks.label\") }}\n    </h1>\n    <div>\n      <label class=\"text-label\">\n        {{ t(`customLinks.description`, {}, true) }}\n      </label>\n    </div>\n    <div class=\"mt-20\">\n      <KeyValue\n        v-model=\"value.custom\"\n        :title=\"'Custom Links'\"\n        :as-map=\"false\"\n        key-name=\"label\"\n        :key-label=\"t('customLinks.settings.keyLabel')\"\n        :value-label=\"t('customLinks.settings.valueLabel')\"\n        :add-label=\"t('customLinks.addLink')\"\n        :read-allowed=\"false\"\n        :protip=\"false\"\n        :mode=\"mode\"\n      />\n    </div>\n    <div class=\"ui-links-setting mt-20\">\n      <DefaultLinksEditor\n        v-model=\"value.defaults\"\n        :mode=\"mode\"\n      />\n    </div>\n    <template v-for=\"err in errors\">\n      <Banner\n        :key=\"err\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </template>\n    <div\n      v-if=\"mode === 'edit'\"\n      class=\"mt-20\"\n    >\n      <AsyncButton\n        class=\"pull-right\"\n        mode=\"apply\"\n        @click=\"save\"\n      />\n    </div>\n  </div>\n</template>\n<style scoped lang='scss'>\n.overlay {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--overlay-bg);\n  z-index: 1;\n}\n.ui-links-setting {\n  P {\n    line-height: 1.25;\n    margin-bottom: 10px;\n  }\n\n  .underline {\n    text-decoration: underline;\n  }\n}\n.action {\n  display: flex;\n  input {\n    margin-right: 5px;\n  }\n}\n</style>\n"]}]}