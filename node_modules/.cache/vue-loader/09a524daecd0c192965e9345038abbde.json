{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/ClusterLink.vue?vue&type=style&index=0&id=62b68e5c&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/ClusterLink.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jbHVzdGVyLWxpbmsgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKfQouY29uZGl0aW9ucy1hbGVydC1pY29uIHsKICBjb2xvcjogdmFyKC0tZXJyb3IpOwogIG1hcmdpbi1sZWZ0OiA0cHg7Cn0KOjp2LWRlZXAgewogIC5sYWJlbGVkLXRvb2x0aXAsIC5zdGF0dXMtaWNvbiB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBkaXNwbGF5OiBpbmxpbmU7CiAgICBsZWZ0OiBhdXRvOwogICAgcmlnaHQ6IGF1dG87CiAgICB0b3A6IDJweDsKICAgIGJvdHRvbTogYXV0bzsKICB9Cn0KLm15dG9vbHRpcCB1bCB7CiAgb3V0bGluZTogMXB4IGRhc2hlZCByZWQ7Cn0KLnRlbXBsYXRlLXVwZ3JhZGUtaWNvbiB7CiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0td2FybmluZyk7CiAgYm9yZGVyLXJhZGl1czogNTAlOwogIGNvbG9yOiB2YXIoLS13YXJuaW5nKTsKICBtYXJnaW4tbGVmdDogNHB4OwogIGZvbnQtc2l6ZTogMTRweDsKICBwYWRkaW5nOiAycHg7Cn0K"},{"version":3,"sources":["ClusterLink.vue"],"names":[],"mappings":";AAsHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ClusterLink.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport { get } from '@shell/utils/object';\nimport { isConditionReadyAndWaiting } from '@shell/plugins/dashboard-store/resource-class';\n\nexport default {\n  props: {\n    value: {\n      type:    String,\n      default: ''\n    },\n    row: {\n      type:     Object,\n      required: true\n    },\n    reference: {\n      type:    String,\n      default: null,\n    }\n  },\n  computed: {\n    to() {\n      if ( this.row && this.reference ) {\n        return get(this.row, this.reference);\n      }\n\n      return this.row?.detailLocation;\n    },\n\n    statusErrorConditions() {\n      if (this.row.hasError) {\n        return this.row?.status.conditions.filter((cond) => cond.error === true && !isConditionReadyAndWaiting(cond));\n      }\n\n      return [];\n    },\n\n    formattedConditions() {\n      if (this.row.hasError) {\n        const filteredConditions = this.statusErrorConditions;\n        const formattedTooltip = [];\n\n        filteredConditions\n          .forEach((c) => {\n            formattedTooltip.push(`<p>${ [c.type] } (${ c.status })</p>`);\n          });\n\n        return formattedTooltip.toString().replaceAll(',', '');\n      }\n\n      return '';\n    },\n  },\n\n};\n\n</script>\n<template>\n  <span class=\"cluster-link\">\n    <n-link\n      v-if=\"to\"\n      :to=\"to\"\n    >\n      {{ value }}\n    </n-link>\n    <span v-else>{{ value }}</span>\n    <i\n      v-if=\"row.unavailableMachines\"\n      v-clean-tooltip=\"row.unavailableMachines\"\n      class=\"conditions-alert-icon icon-alert icon\"\n      data-testid=\"unavailable-machines-alert-icon\"\n    />\n    <i\n      v-if=\"row.rkeTemplateUpgrade\"\n      v-clean-tooltip=\"t('cluster.rkeTemplateUpgrade', { name: row.rkeTemplateUpgrade })\"\n      class=\"template-upgrade-icon icon-alert icon\"\n      data-testid=\"rke-template-upgrade-alert-icon\"\n    />\n    <i\n      v-if=\"row.hasError && statusErrorConditions.length > 0\"\n      v-clean-tooltip=\"{ content: `<div>${formattedConditions}</div>`, html: true }\"\n      class=\"conditions-alert-icon icon-error icon-lg\"\n      data-testid=\"conditions-has-error-icon\"\n    />\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n  .cluster-link {\n    display: flex;\n    align-items: center;\n  }\n  .conditions-alert-icon {\n    color: var(--error);\n    margin-left: 4px;\n  }\n  ::v-deep {\n    .labeled-tooltip, .status-icon {\n      position: relative;\n      display: inline;\n      left: auto;\n      right: auto;\n      top: 2px;\n      bottom: auto;\n    }\n  }\n  .mytooltip ul {\n    outline: 1px dashed red;\n  }\n  .template-upgrade-icon {\n    border: 1px solid var(--warning);\n    border-radius: 50%;\n    color: var(--warning);\n    margin-left: 4px;\n    font-size: 14px;\n    padding: 2px;\n  }\n</style>\n"]}]}