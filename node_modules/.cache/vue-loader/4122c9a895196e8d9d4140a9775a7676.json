{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/ServiceTargets.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/ServiceTargets.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBpc0VtcHR5IGZyb20gJ2xvZGFzaC9pc0VtcHR5JzsKaW1wb3J0IHsgQ0FUVExFX1BVQkxJQ19FTkRQT0lOVFMgfSBmcm9tICdAc2hlbGwvY29uZmlnL2xhYmVscy1hbm5vdGF0aW9ucyc7CmltcG9ydCBFbmRwb2ludHMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybWF0dGVyL0VuZHBvaW50cyc7CmltcG9ydCBoYXMgZnJvbSAnbG9kYXNoL2hhcyc7CmltcG9ydCB7IGlzTWF5YmVTZWN1cmUgfSBmcm9tICdAc2hlbGwvdXRpbHMvdXJsJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IEVuZHBvaW50cyB9LAogIHByb3BzOiAgICAgIHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIFtBcnJheSwgU3RyaW5nXSwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCiAgICByb3c6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgY29sOiB7CiAgICAgIHR5cGU6ICAgICBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICB9LAoKICBjb21wdXRlZDogewogICAgaGFzUHVibGljKCkgewogICAgICBjb25zdCB7IG1ldGFkYXRhOiB7IGFubm90YXRpb25zID0ge30gfSB9ID0gdGhpcy5yb3c7CgogICAgICBpZiAoIWlzRW1wdHkoYW5ub3RhdGlvbnMpICYmIGhhcyhhbm5vdGF0aW9ucywgQ0FUVExFX1BVQkxJQ19FTkRQT0lOVFMpKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCgogICAgcGFyc2VkKCkgewogICAgICBjb25zdCB7IHJvdywgaGFzUHVibGljIH0gPSB0aGlzOwogICAgICBjb25zdCB7CiAgICAgICAgbWV0YWRhdGE6IHsgYW5ub3RhdGlvbnMgPSB7fSB9LAogICAgICAgIHNwZWM6IHsKICAgICAgICAgIGNsdXN0ZXJJUCA9IG51bGwsIHBvcnRzID0gW10sIHR5cGU6IHNlcnZpY2VUeXBlLCBleHRlcm5hbE5hbWUKICAgICAgICB9LAogICAgICB9ID0gcm93OwogICAgICBjb25zdCBvdXQgPSBbXTsKICAgICAgY29uc3QgaXNIZWFkbGVzcyA9IHNlcnZpY2VUeXBlID09PSAnQ2x1c3RlcklQJyAmJiBjbHVzdGVySVAgPT09ICdOb25lJzsKICAgICAgY29uc3QgcGFyc2VkQ2x1c3RlcklwID0KICAgICAgICAhaXNFbXB0eShjbHVzdGVySVApICYmICFpc0hlYWRsZXNzID8gYCR7IGNsdXN0ZXJJUCB9OmAgOiAnJzsKICAgICAgbGV0IGxhYmVsID0gJyc7CiAgICAgIGNvbnN0IGxpbmsgPSAnJzsKCiAgICAgIGlmIChoYXNQdWJsaWMpIHsKICAgICAgICByZXR1cm4gYW5ub3RhdGlvbnNbQ0FUVExFX1BVQkxJQ19FTkRQT0lOVFNdOwogICAgICB9CgogICAgICAvLyA8Q0xVU1RFUl9JUD46PFBPUlQ+LzxQUk9UT0NPTD4gPiA8VEFSR0VUIFBPUlQ+CiAgICAgIGlmIChpc0VtcHR5KHBvcnRzKSkgewogICAgICAgIGlmICghaXNFbXB0eShwYXJzZWRDbHVzdGVySXApKSB7CiAgICAgICAgICBsYWJlbCA9IHBhcnNlZENsdXN0ZXJJcDsKICAgICAgICB9IGVsc2UgaWYgKHNlcnZpY2VUeXBlID09PSAnRXh0ZXJuYWxOYW1lJyAmJiAhaXNFbXB0eShleHRlcm5hbE5hbWUpKSB7CiAgICAgICAgICBsYWJlbCA9IGV4dGVybmFsTmFtZTsKICAgICAgICB9CgogICAgICAgIG91dC5wdXNoKHsKICAgICAgICAgIGxhYmVsLAogICAgICAgICAgbGluaywKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBwb3J0cy5mb3JFYWNoKChwKSA9PiB7CiAgICAgICAgICBsZXQgcHJveHlVcmw7CgogICAgICAgICAgY29uc3Qgc3RyaW5nUG9ydCA9IHAucG9ydC50b1N0cmluZygpOwoKICAgICAgICAgIGlmIChwPy5wcm90b2NvbCA9PT0gJ1RDUCcgJiYgKHN0cmluZ1BvcnQuZW5kc1dpdGgoJzgwJykgfHwgc3RyaW5nUG9ydC5lbmRzV2l0aCgnNDQzJykpKSB7CiAgICAgICAgICAgIGlmIChpc01heWJlU2VjdXJlKHAucG9ydCwgcD8ucHJvdG9jb2wpKSB7CiAgICAgICAgICAgICAgcHJveHlVcmwgPSByb3cucHJveHlVcmwoJ2h0dHBzJywgcC5wb3J0KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBwcm94eVVybCA9IHJvdy5wcm94eVVybCgnaHR0cCcsIHAucG9ydCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICBjb25zdCBjbHVzdGVySXBBbmRQb3J0ID0gcHJveHlVcmwgPyBgPGEgaHJlZj0iJHsgcHJveHlVcmwgfSIgdGFyZ2V0PSJfYmxhbmsiIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciBub2ZvbGxvdyI+JHsgcD8ubmFtZSA/IHAubmFtZSA6IGAkeyBwYXJzZWRDbHVzdGVySXAgfSR7IHAucG9ydCB9YCB9PC9hPmAgOiBgJHsgcGFyc2VkQ2x1c3RlcklwIH0keyBwLnBvcnQgfWA7CiAgICAgICAgICBjb25zdCB0YXJnZXRQb3J0ID0gcD8udGFyZ2V0UG9ydCA/IGAgPHNwYW4gY2xhc3M9Imljb24gaWNvbi1lbmRwb2ludHNfY29ubmVjdGVkIGljb24tbGciPjwvc3Bhbj4gJHsgcC50YXJnZXRQb3J0IH1gIDogJyc7CiAgICAgICAgICBjb25zdCBwcm90b2NvbCA9IHA/LnByb3RvY29sID8gYC8keyBwLnByb3RvY29sIH1gIDogJyc7CgogICAgICAgICAgbGFiZWwgPSBgJHsgY2x1c3RlcklwQW5kUG9ydCB9JHsgdGFyZ2V0UG9ydCB9JHsgcHJvdG9jb2wgfWA7CgogICAgICAgICAgb3V0LnB1c2goewogICAgICAgICAgICBsYWJlbCwKICAgICAgICAgICAgbGluaywKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gb3V0OwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["ServiceTargets.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ServiceTargets.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\nimport { CATTLE_PUBLIC_ENDPOINTS } from '@shell/config/labels-annotations';\nimport Endpoints from '@shell/components/formatter/Endpoints';\nimport has from 'lodash/has';\nimport { isMaybeSecure } from '@shell/utils/url';\n\nexport default {\n  components: { Endpoints },\n  props:      {\n    value: {\n      type:    [Array, String],\n      default: null,\n    },\n    row: {\n      type:     Object,\n      required: true,\n    },\n    col: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  computed: {\n    hasPublic() {\n      const { metadata: { annotations = {} } } = this.row;\n\n      if (!isEmpty(annotations) && has(annotations, CATTLE_PUBLIC_ENDPOINTS)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    parsed() {\n      const { row, hasPublic } = this;\n      const {\n        metadata: { annotations = {} },\n        spec: {\n          clusterIP = null, ports = [], type: serviceType, externalName\n        },\n      } = row;\n      const out = [];\n      const isHeadless = serviceType === 'ClusterIP' && clusterIP === 'None';\n      const parsedClusterIp =\n        !isEmpty(clusterIP) && !isHeadless ? `${ clusterIP }:` : '';\n      let label = '';\n      const link = '';\n\n      if (hasPublic) {\n        return annotations[CATTLE_PUBLIC_ENDPOINTS];\n      }\n\n      // <CLUSTER_IP>:<PORT>/<PROTOCOL> > <TARGET PORT>\n      if (isEmpty(ports)) {\n        if (!isEmpty(parsedClusterIp)) {\n          label = parsedClusterIp;\n        } else if (serviceType === 'ExternalName' && !isEmpty(externalName)) {\n          label = externalName;\n        }\n\n        out.push({\n          label,\n          link,\n        });\n      } else {\n        ports.forEach((p) => {\n          let proxyUrl;\n\n          const stringPort = p.port.toString();\n\n          if (p?.protocol === 'TCP' && (stringPort.endsWith('80') || stringPort.endsWith('443'))) {\n            if (isMaybeSecure(p.port, p?.protocol)) {\n              proxyUrl = row.proxyUrl('https', p.port);\n            } else {\n              proxyUrl = row.proxyUrl('http', p.port);\n            }\n          }\n\n          const clusterIpAndPort = proxyUrl ? `<a href=\"${ proxyUrl }\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">${ p?.name ? p.name : `${ parsedClusterIp }${ p.port }` }</a>` : `${ parsedClusterIp }${ p.port }`;\n          const targetPort = p?.targetPort ? ` <span class=\"icon icon-endpoints_connected icon-lg\"></span> ${ p.targetPort }` : '';\n          const protocol = p?.protocol ? `/${ p.protocol }` : '';\n\n          label = `${ clusterIpAndPort }${ targetPort }${ protocol }`;\n\n          out.push({\n            label,\n            link,\n          });\n        });\n      }\n\n      return out;\n    },\n  },\n};\n</script>>\n\n<template>\n  <div>\n    <div\n      v-if=\"hasPublic\"\n      class=\"text-small\"\n    >\n      <Endpoints\n        v-model=\"parsed\"\n        :row=\"{}\"\n        :col=\"{}\"\n      />\n    </div>\n    <div\n      v-for=\"(port, index) in parsed\"\n      v-else\n      :key=\"index\"\n      class=\"text-small\"\n    >\n      <span v-clean-html=\"port.label\" />\n    </div>\n  </div>\n</template>\n"]}]}