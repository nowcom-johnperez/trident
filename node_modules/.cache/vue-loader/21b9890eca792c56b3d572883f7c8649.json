{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/fleet/FleetRepos.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/fleet/FleetRepos.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgTGluayBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtYXR0ZXIvTGluayc7CmltcG9ydCBTaG9ydGVuZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybWF0dGVyL1Nob3J0ZW5lZCc7CmltcG9ydCBGbGVldEludHJvIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2ZsZWV0L0ZsZWV0SW50cm8nOwoKaW1wb3J0IHsKICBBR0UsCiAgU1RBVEUsCiAgTkFNRSwKICBGTEVFVF9TVU1NQVJZCn0gZnJvbSAnQHNoZWxsL2NvbmZpZy90YWJsZS1oZWFkZXJzJzsKCmV4cG9ydCBkZWZhdWx0IHsKCiAgbmFtZTogJ0ZsZWV0UmVwb3MnLAoKICBjb21wb25lbnRzOiB7CiAgICBSZXNvdXJjZVRhYmxlLCBMaW5rLCBTaG9ydGVuZWQsIEZsZWV0SW50cm8KICB9LAogIHByb3BzOiB7CiAgICByb3dzOiB7CiAgICAgIHR5cGU6ICAgICBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIHNjaGVtYTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCgogICAgbG9hZGluZzogewogICAgICB0eXBlOiAgICAgQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgfSwKCiAgICB1c2VRdWVyeVBhcmFtc0ZvclNpbXBsZUZpbHRlcmluZzogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBmaWx0ZXJlZFJvd3MoKSB7CiAgICAgIGlmICghdGhpcy5yb3dzKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CgogICAgICAvLyBSZXR1cm5zIGJvb2xlYW4geyBbbmFtZXNwYWNlXTogdHJ1ZSB9CiAgICAgIGNvbnN0IHNlbGVjdGVkV29ya3NwYWNlID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbmFtZXNwYWNlcyddKCk7CgogICAgICByZXR1cm4gdGhpcy5yb3dzLmZpbHRlcigocm93KSA9PiB7CiAgICAgICAgcmV0dXJuICEhc2VsZWN0ZWRXb3Jrc3BhY2Vbcm93Lm1ldGFkYXRhLm5hbWVzcGFjZV07CiAgICAgIH0pOwogICAgfSwKCiAgICBub1Jvd3MoKSB7CiAgICAgIHJldHVybiAhdGhpcy5maWx0ZXJlZFJvd3MubGVuZ3RoOwogICAgfSwKCiAgICBoZWFkZXJzKCkgewogICAgICBjb25zdCBvdXQgPSBbCiAgICAgICAgU1RBVEUsCiAgICAgICAgTkFNRSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAgICAgJ3JlcG8nLAogICAgICAgICAgbGFiZWxLZXk6ICd0YWJsZUhlYWRlcnMucmVwbycsCiAgICAgICAgICB2YWx1ZTogICAgJ3JlcG9EaXNwbGF5JywKICAgICAgICAgIHNvcnQ6ICAgICAncmVwb0Rpc3BsYXknLAogICAgICAgICAgc2VhcmNoOiAgIFsnc3BlYy5yZXBvJywgJ3N0YXR1cy5jb21taXQnXSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICAgICAndGFyZ2V0JywKICAgICAgICAgIGxhYmVsS2V5OiAndGFibGVIZWFkZXJzLnRhcmdldCcsCiAgICAgICAgICB2YWx1ZTogICAgJ3RhcmdldEluZm8ubW9kZURpc3BsYXknLAogICAgICAgICAgc29ydDogICAgIFsndGFyZ2V0SW5mby5tb2RlRGlzcGxheScsICd0YXJnZXRJbmZvLmNsdXN0ZXInLCAndGFyZ2V0SW5mby5jbHVzdGVyR3JvdXAnXSwKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICAgICAnY2x1c3RlcnNSZWFkeScsCiAgICAgICAgICBsYWJlbEtleTogJ3RhYmxlSGVhZGVycy5jbHVzdGVyc1JlYWR5JywKICAgICAgICAgIHZhbHVlOiAgICAnc3RhdHVzLnJlYWR5Q2x1c3RlcnMnLAogICAgICAgICAgc29ydDogICAgICdzdGF0dXMucmVhZHlDbHVzdGVycycsCiAgICAgICAgICBzZWFyY2g6ICAgZmFsc2UsCiAgICAgICAgfSwKICAgICAgICBGTEVFVF9TVU1NQVJZLAogICAgICAgIEFHRQogICAgICBdOwoKICAgICAgcmV0dXJuIG91dDsKICAgIH0sCiAgfSwKICBtZXRob2RzOiB7CiAgICBwYXJzZVRhcmdldE1vZGUocm93KSB7CiAgICAgIHJldHVybiByb3cudGFyZ2V0SW5mbz8ubW9kZSA9PT0gJ2NsdXN0ZXJHcm91cCcgPyB0aGlzLnQoJ2ZsZWV0LmdpdFJlcG8ud2FybmluZ1Rvb2x0aXAuY2x1c3Rlckdyb3VwJykgOiB0aGlzLnQoJ2ZsZWV0LmdpdFJlcG8ud2FybmluZ1Rvb2x0aXAuY2x1c3RlcicpOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["FleetRepos.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FleetRepos.vue","sourceRoot":"node_modules/@rancher/shell/components/fleet","sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Link from '@shell/components/formatter/Link';\nimport Shortened from '@shell/components/formatter/Shortened';\nimport FleetIntro from '@shell/components/fleet/FleetIntro';\n\nimport {\n  AGE,\n  STATE,\n  NAME,\n  FLEET_SUMMARY\n} from '@shell/config/table-headers';\n\nexport default {\n\n  name: 'FleetRepos',\n\n  components: {\n    ResourceTable, Link, Shortened, FleetIntro\n  },\n  props: {\n    rows: {\n      type:     Array,\n      required: true,\n    },\n\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    loading: {\n      type:     Boolean,\n      required: false,\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  computed: {\n    filteredRows() {\n      if (!this.rows) {\n        return [];\n      }\n\n      // Returns boolean { [namespace]: true }\n      const selectedWorkspace = this.$store.getters['namespaces']();\n\n      return this.rows.filter((row) => {\n        return !!selectedWorkspace[row.metadata.namespace];\n      });\n    },\n\n    noRows() {\n      return !this.filteredRows.length;\n    },\n\n    headers() {\n      const out = [\n        STATE,\n        NAME,\n        {\n          name:     'repo',\n          labelKey: 'tableHeaders.repo',\n          value:    'repoDisplay',\n          sort:     'repoDisplay',\n          search:   ['spec.repo', 'status.commit'],\n        },\n        {\n          name:     'target',\n          labelKey: 'tableHeaders.target',\n          value:    'targetInfo.modeDisplay',\n          sort:     ['targetInfo.modeDisplay', 'targetInfo.cluster', 'targetInfo.clusterGroup'],\n        },\n        {\n          name:     'clustersReady',\n          labelKey: 'tableHeaders.clustersReady',\n          value:    'status.readyClusters',\n          sort:     'status.readyClusters',\n          search:   false,\n        },\n        FLEET_SUMMARY,\n        AGE\n      ];\n\n      return out;\n    },\n  },\n  methods: {\n    parseTargetMode(row) {\n      return row.targetInfo?.mode === 'clusterGroup' ? this.t('fleet.gitRepo.warningTooltip.clusterGroup') : this.t('fleet.gitRepo.warningTooltip.cluster');\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <FleetIntro v-if=\"noRows && !loading\" />\n    <ResourceTable\n      v-if=\"!noRows\"\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :headers=\"headers\"\n      :rows=\"rows\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      key-field=\"_key\"\n      v-on=\"$listeners\"\n    >\n      <template #cell:repo=\"{row}\">\n        <Link\n          :row=\"row\"\n          :value=\"row.spec.repo\"\n          label-key=\"repoDisplay\"\n          before-icon-key=\"repoIcon\"\n          url-key=\"spec.repo\"\n        />\n        <template v-if=\"row.commitDisplay\">\n          <div class=\"text-muted\">\n            <Shortened\n              long-value-key=\"status.commit\"\n              :row=\"row\"\n              :value=\"row.commitDisplay\"\n            />\n          </div>\n        </template>\n      </template>\n\n      <template #cell:clustersReady=\"{row}\">\n        <span\n          v-if=\"!row.clusterInfo\"\n          class=\"text-muted\"\n        >&mdash;</span>\n        <span\n          v-else-if=\"row.clusterInfo.unready\"\n          class=\"text-warning\"\n        >{{ row.clusterInfo.ready }}/{{ row.clusterInfo.total }}</span>\n        <span\n          v-else\n          class=\"cluster-count-info\"\n        >\n          {{ row.clusterInfo.ready }}/{{ row.clusterInfo.total }}\n          <i\n            v-if=\"!row.clusterInfo.total\"\n            v-clean-tooltip.bottom=\"parseTargetMode(row)\"\n            class=\"icon icon-warning\"\n          />\n        </span>\n      </template>\n\n      <template #cell:target=\"{row}\">\n        {{ row.targetInfo.modeDisplay }}\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.cluster-count-info {\n  display: flex;\n  align-items: center;\n\n  i {\n    margin-left: 5px;\n    font-size: 22px;\n    color: var(--warning);\n  }\n}\n</style>\n"]}]}