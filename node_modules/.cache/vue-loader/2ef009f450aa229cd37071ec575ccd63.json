{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/management.cattle.io.feature.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/management.cattle.io.feature.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCBBc3luY0J1dHRvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Bc3luY0J1dHRvbic7CmltcG9ydCB7IENhcmQgfSBmcm9tICdAY29tcG9uZW50cy9DYXJkJzsKaW1wb3J0IFJlc291cmNlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VUYWJsZSc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IHsgTUFOQUdFTUVOVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBTRVRUSU5HIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9zZXR0aW5ncyc7CmltcG9ydCBSZXNvdXJjZUZldGNoIGZyb20gJ0BzaGVsbC9taXhpbnMvcmVzb3VyY2UtZmV0Y2gnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFzeW5jQnV0dG9uLAogICAgQmFubmVyLAogICAgQ2FyZCwKICAgIFJlc291cmNlVGFibGUsCiAgICBMYWJlbGVkSW5wdXQKICB9LAogIG1peGluczogW1Jlc291cmNlRmV0Y2hdLAogIHByb3BzOiAgewogICAgcmVzb3VyY2U6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIHNjaGVtYTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCgogICAgdXNlUXVlcnlQYXJhbXNGb3JTaW1wbGVGaWx0ZXJpbmc6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGF3YWl0IHRoaXMuJGZldGNoVHlwZSh0aGlzLnJlc291cmNlKTsKCiAgICB0aGlzLnNlcnZlclVybFNldHRpbmcgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2J5SWQnXShNQU5BR0VNRU5ULlNFVFRJTkcsIFNFVFRJTkcuU0VSVkVSX1VSTCk7CgogICAgaWYgKHRoaXMuc2VydmVyVXJsU2V0dGluZz8udmFsdWUpIHsKICAgICAgdGhpcy5zZXJ2ZXJVcmwgPSB0aGlzLnNlcnZlclVybFNldHRpbmcudmFsdWU7CiAgICB9IGVsc2UgewogICAgICB0aGlzLm5vVXJsU2V0ID0gdHJ1ZTsKICAgICAgaWYgKCBwcm9jZXNzLnNlcnZlciApIHsKICAgICAgICBjb25zdCB7IHJlcSB9ID0gdGhpcy4kbnV4dC5jb250ZXh0OwoKICAgICAgICB0aGlzLnNlcnZlclVybCA9IHJlcS5oZWFkZXJzLmhvc3Q7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5zZXJ2ZXJVcmwgPSB3aW5kb3cubG9jYXRpb24ub3JpZ2luOwogICAgICB9CiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVwZGF0ZTogICAgICAgICAgIFtdLAogICAgICB1cGRhdGVNb2RlOiAgICAgICAnYWN0aXZhdGUnLAogICAgICBlcnJvcjogICAgICAgICAgICBudWxsLAogICAgICBlbmFibGluZzogICAgICAgICBmYWxzZSwKICAgICAgcmVzdGFydDogICAgICAgICAgZmFsc2UsCiAgICAgIHdhaXRpbmc6ICAgICAgICAgIGZhbHNlLAogICAgICB0aW1lcjogICAgICAgICAgICBudWxsLAogICAgICBzZXJ2ZXJVcmxTZXR0aW5nOiB7fSwKICAgICAgc2VydmVyVXJsOiAgICAgICAgJycsCiAgICAgIG5vVXJsU2V0OiAgICAgICAgIGZhbHNlLAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgLi4ubWFwU3RhdGUoJ2FjdGlvbi1tZW51JywgWydzaG93UHJvbXB0VXBkYXRlJywgJ3RvVXBkYXRlJ10pLAogICAgLi4ubWFwR2V0dGVycyh7IHQ6ICdpMThuL3QnIH0pLAoKICAgIGZpbHRlcmVkUm93cygpIHsKICAgICAgcmV0dXJuIHRoaXMucm93cy5maWx0ZXIoKHgpID0+IHgubmFtZSAhPT0gJ2ZsZWV0Jyk7CiAgICB9LAoKICAgIHByb21wdEZvclVybCgpIHsKICAgICAgcmV0dXJuIHRoaXMudXBkYXRlPy5pZCA9PT0gJ211bHRpLWNsdXN0ZXItbWFuYWdlbWVudCcgJiYgdGhpcy5ub1VybFNldDsKICAgIH0sCgogICAgZW5hYmxlUm93QWN0aW9ucygpIHsKICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgbWFuYWdlbWVudC9zY2hlbWFGb3JgXShNQU5BR0VNRU5ULkZFQVRVUkUpOwoKICAgICAgcmV0dXJuIHNjaGVtYT8ucmVzb3VyY2VNZXRob2RzPy5pbmNsdWRlcygnUFVUJyk7CiAgICB9LAogIH0sCgogICRsb2FkaW5nUmVzb3VyY2VzKCkgewogICAgLy8gcmVzdWx0cyBhcmUgZmlsdGVyZWQgc28gd2Ugd291bGRuJ3QgZ2V0IHRoZSBjb3JyZWN0IGNvdW50IG9uIGluZGljYXRvci4uLgogICAgcmV0dXJuIHsgbG9hZEluZGV0ZXJtaW5hdGU6IHRydWUgfTsKICB9LAoKICB3YXRjaDogewogICAgc2hvd1Byb21wdFVwZGF0ZShzaG93KSB7CiAgICAgIGlmIChzaG93KSB7CiAgICAgICAgdGhpcy4kbW9kYWwuc2hvdygndG9nZ2xlRmxhZycpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1vZGFsLmhpZGUoJ3RvZ2dsZUZsYWcnKTsKICAgICAgfQogICAgfSwKCiAgICB0b1VwZGF0ZShuZXUpIHsKICAgICAgLy8gT25seSBzdXBwb3J0IHVwZGF0aW5nIG9uZSBhdCBhIHRpbWUgLSBidWxrIGRvZXMgbm90IG1ha2Ugc2Vuc2UsIGFzIHRoZXkgbWF5CiAgICAgIC8vIGJlIGluIGRpZmZlcmVudCBzdGF0ZXMgYW5kIHdpdGggZGlmZmVyZW50IHJlc3RhcnQgdmFsdWVzCiAgICAgIHRoaXMudXBkYXRlID0gQXJyYXkuaXNBcnJheShuZXUpID8gbmV1WzBdIDogbmV1OwogICAgICBpZiAodGhpcy51cGRhdGUpIHsKICAgICAgICB0aGlzLnJlc3RhcnQgPSB0aGlzLnVwZGF0ZS5yZXN0YXJ0UmVxdWlyZWQ7CiAgICAgICAgLy8gSWYgdGhlIHZhbHVlIGlzIGN1cnJlbnRseSBmYWxzZSwgdGhlbiB3ZSB3aWxsIGJlIGVuYWJsaW5nIGl0CiAgICAgICAgdGhpcy5lbmFibGluZyA9ICF0aGlzLnVwZGF0ZS5lbmFibGVkOwogICAgICAgIHRoaXMudXBkYXRlTW9kZSA9IHRoaXMuZW5hYmxpbmcgPyAnYWN0aXZhdGUnIDogJ2RlYWN0aXZhdGUnOwogICAgICB9CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgY2xvc2UoKSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWN0aW9uLW1lbnUvdG9nZ2xlUHJvbXB0VXBkYXRlJyk7CgogICAgICBpZiAodGhpcy50aW1lcikgewogICAgICAgIGNsZWFyVGltZW91dCh0aGlzLnRpbWVyKTsKICAgICAgICB0aGlzLnRpbWVyID0gbnVsbDsKICAgICAgfQogICAgfSwKCiAgICB0b2dnbGVGbGFnKGJ0bkNCKSB7CiAgICAgIGlmICh0aGlzLnJlc3RhcnQpIHsKICAgICAgICB0aGlzLmRvVG9nZ2xlV2l0aFJlc3RhcnQoYnRuQ0IpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZG9Ub2dnbGUoYnRuQ0IpOwogICAgICB9CiAgICB9LAoKICAgIGFzeW5jIGRvVG9nZ2xlKGJ0bkNCKSB7CiAgICAgIHRoaXMuZXJyb3IgPSBudWxsOwogICAgICB0cnkgewogICAgICAgIHRoaXMudXBkYXRlLnNwZWMudmFsdWUgPSAhdGhpcy51cGRhdGUuZW5hYmxlZDsKICAgICAgICBhd2FpdCB0aGlzLnVwZGF0ZS5zYXZlKCk7CiAgICAgICAgYnRuQ0IodHJ1ZSk7CiAgICAgICAgdGhpcy5jbG9zZSgpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICB0aGlzLmVycm9yID0gZXJyOwogICAgICAgIGJ0bkNCKGZhbHNlKTsKICAgICAgfQogICAgfSwKCiAgICBkb1RvZ2dsZVdpdGhSZXN0YXJ0KGJ0bkNCKSB7CiAgICAgIHRoaXMuZXJyb3IgPSBudWxsOwogICAgICB0cnkgewogICAgICAgIHRoaXMudXBkYXRlLnNwZWMudmFsdWUgPSAhdGhpcy51cGRhdGUuZW5hYmxlZDsKICAgICAgICAvLyBhd2FpdCBjYW4gZ28gYmFjayBpbiB3aGVuIGJhY2tlbmQgcmV0dXJucyBmcm9tIHRoZSBzYXZlIGJlZm9yZSByZXN0YXJ0aW5nCiAgICAgICAgdGhpcy51cGRhdGUuc2F2ZSgpOwogICAgICB9IGNhdGNoIChlcnIpIHt9CgogICAgICB0aGlzLndhaXRGb3JCYWNrZW5kKGJ0bkNCLCB0aGlzLnVwZGF0ZS5pZCk7CiAgICAgIHRoaXMud2FpdGluZyA9IHRydWU7CiAgICB9LAoKICAgIHdhaXRGb3JCYWNrZW5kKGJ0bkNCLCBpZCkgewogICAgICBjb25zdCB1cmwgPSBgL3YzL2ZlYXR1cmVzLyR7IGlkIH1gOwoKICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoYXN5bmMoKSA9PiB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy4kYXhpb3MuZ2V0KHVybCwgeyB0aW1lb3V0OiA1MDAwIH0pOwoKICAgICAgICAgIGlmIChyZXNwb25zZT8uc3RhdHVzID09PSAyMDApIHsKICAgICAgICAgICAgdGhpcy5yb3dzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsgdHlwZTogdGhpcy5yZXNvdXJjZSwgb3B0OiB7IGZvcmNlOiB0cnVlIH0gfSk7CiAgICAgICAgICAgIGJ0bkNCKHRydWUpOwogICAgICAgICAgICB0aGlzLmNsb3NlKCk7CiAgICAgICAgICAgIHRoaXMud2FpdGluZyA9IGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGUpIHt9CgogICAgICAgIHRoaXMud2FpdEZvckJhY2tlbmQoYnRuQ0IsIGlkKTsKICAgICAgfSwgMjUwMCk7CiAgICB9LAoKICAgIGFzeW5jIHNhdmVVcmwoYnRuQ0IpIHsKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLnNlcnZlclVybFNldHRpbmcudmFsdWUgPSB0aGlzLnNlcnZlclVybDsKICAgICAgICBhd2FpdCB0aGlzLnNlcnZlclVybFNldHRpbmcuc2F2ZSgpOwogICAgICAgIGJ0bkNCKHRydWUpOwogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICB0aGlzLmVycm9yID0gZXJyOwogICAgICAgIGJ0bkNCKGZhbHNlKTsKICAgICAgfQogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["management.cattle.io.feature.vue"],"names":[],"mappingsfile":"management.cattle.io.feature.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport { mapState, mapGetters } from 'vuex';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { Banner } from '@components/Banner';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\n\nexport default {\n  components: {\n    AsyncButton,\n    Banner,\n    Card,\n    ResourceTable,\n    LabeledInput\n  },\n  mixins: [ResourceFetch],\n  props:  {\n    resource: {\n      type:     String,\n      required: true,\n    },\n\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n\n    this.serverUrlSetting = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.SERVER_URL);\n\n    if (this.serverUrlSetting?.value) {\n      this.serverUrl = this.serverUrlSetting.value;\n    } else {\n      this.noUrlSet = true;\n      if ( process.server ) {\n        const { req } = this.$nuxt.context;\n\n        this.serverUrl = req.headers.host;\n      } else {\n        this.serverUrl = window.location.origin;\n      }\n    }\n  },\n\n  data() {\n    return {\n      update:           [],\n      updateMode:       'activate',\n      error:            null,\n      enabling:         false,\n      restart:          false,\n      waiting:          false,\n      timer:            null,\n      serverUrlSetting: {},\n      serverUrl:        '',\n      noUrlSet:         false,\n    };\n  },\n\n  computed: {\n    ...mapState('action-menu', ['showPromptUpdate', 'toUpdate']),\n    ...mapGetters({ t: 'i18n/t' }),\n\n    filteredRows() {\n      return this.rows.filter((x) => x.name !== 'fleet');\n    },\n\n    promptForUrl() {\n      return this.update?.id === 'multi-cluster-management' && this.noUrlSet;\n    },\n\n    enableRowActions() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.FEATURE);\n\n      return schema?.resourceMethods?.includes('PUT');\n    },\n  },\n\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n\n  watch: {\n    showPromptUpdate(show) {\n      if (show) {\n        this.$modal.show('toggleFlag');\n      } else {\n        this.$modal.hide('toggleFlag');\n      }\n    },\n\n    toUpdate(neu) {\n      // Only support updating one at a time - bulk does not make sense, as they may\n      // be in different states and with different restart values\n      this.update = Array.isArray(neu) ? neu[0] : neu;\n      if (this.update) {\n        this.restart = this.update.restartRequired;\n        // If the value is currently false, then we will be enabling it\n        this.enabling = !this.update.enabled;\n        this.updateMode = this.enabling ? 'activate' : 'deactivate';\n      }\n    }\n  },\n\n  methods: {\n    close() {\n      this.$store.commit('action-menu/togglePromptUpdate');\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n    },\n\n    toggleFlag(btnCB) {\n      if (this.restart) {\n        this.doToggleWithRestart(btnCB);\n      } else {\n        this.doToggle(btnCB);\n      }\n    },\n\n    async doToggle(btnCB) {\n      this.error = null;\n      try {\n        this.update.spec.value = !this.update.enabled;\n        await this.update.save();\n        btnCB(true);\n        this.close();\n      } catch (err) {\n        this.error = err;\n        btnCB(false);\n      }\n    },\n\n    doToggleWithRestart(btnCB) {\n      this.error = null;\n      try {\n        this.update.spec.value = !this.update.enabled;\n        // await can go back in when backend returns from the save before restarting\n        this.update.save();\n      } catch (err) {}\n\n      this.waitForBackend(btnCB, this.update.id);\n      this.waiting = true;\n    },\n\n    waitForBackend(btnCB, id) {\n      const url = `/v3/features/${ id }`;\n\n      this.timer = setTimeout(async() => {\n        try {\n          const response = await this.$axios.get(url, { timeout: 5000 });\n\n          if (response?.status === 200) {\n            this.rows = await this.$store.dispatch('management/findAll', { type: this.resource, opt: { force: true } });\n            btnCB(true);\n            this.close();\n            this.waiting = false;\n          }\n        } catch (e) {}\n\n        this.waitForBackend(btnCB, id);\n      }, 2500);\n    },\n\n    async saveUrl(btnCB) {\n      try {\n        this.serverUrlSetting.value = this.serverUrl;\n        await this.serverUrlSetting.save();\n        btnCB(true);\n      } catch (err) {\n        this.error = err;\n        btnCB(false);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"filteredRows\"\n      :row-actions=\"enableRowActions\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <template\n        slot=\"cell:name\"\n        slot-scope=\"scope\"\n      >\n        <div class=\"feature-name\">\n          <div>{{ scope.row.nameDisplay }}</div>\n          <i\n            v-if=\"scope.row.status.lockedValue !== null\"\n            class=\"icon icon-lock\"\n          />\n        </div>\n      </template>\n    </ResourceTable>\n    <modal\n      class=\"update-modal\"\n      name=\"toggleFlag\"\n      :width=\"350\"\n      height=\"auto\"\n      styles=\"max-height: 100vh;\"\n      :click-to-close=\"!restart || !waiting\"\n      @closed=\"close\"\n    >\n      <Card\n        v-if=\"!waiting\"\n        class=\"prompt-update\"\n        :show-highlight-border=\"false\"\n      >\n        <h4\n          slot=\"title\"\n          class=\"text-default-text\"\n        >\n          Are you sure?\n        </h4>\n        <div slot=\"body\">\n          <div\n            v-if=\"update\"\n            class=\"mb-10\"\n          >\n            <div v-if=\"enabling\">\n              <span>\n                {{ t('featureFlags.promptActivate', {flag: update.id}) }}\n              </span>\n              <div\n                v-if=\"promptForUrl\"\n                class=\"mt-10\"\n              >\n                <span> {{ t('featureFlags.requiresSetting') }}</span>\n                <div\n                  :style=\"{'align-items':'center'}\"\n                  class=\"row mt-10\"\n                >\n                  <LabeledInput\n                    v-model=\"serverUrl\"\n                    :label=\"t('setup.serverUrl.label')\"\n                  />\n                  <div class=\"col pl-5\">\n                    <AsyncButton @click=\"saveUrl\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <span v-else>\n              {{ t('featureFlags.promptDeactivate', {flag: update.id}) }}\n            </span>\n            <Banner\n              v-if=\"restart\"\n              color=\"warning\"\n              :label=\"t('featureFlags.restartRequired')\"\n            />\n          </div>\n          <div class=\"text-error mb-10\">\n            {{ error }}\n          </div>\n        </div>\n        <template #actions>\n          <button\n            class=\"btn role-secondary\"\n            @click=\"close\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n          <AsyncButton\n            :disabled=\"promptForUrl && !serverUrlSetting.value\"\n            :mode=\"updateMode\"\n            class=\"btn bg-error ml-10\"\n            @click=\"toggleFlag\"\n          />\n        </template>\n      </Card>\n      <Card\n        v-else\n        class=\"prompt-update\"\n        :show-highlight-border=\"false\"\n      >\n        <h4\n          slot=\"title\"\n          class=\"text-default-text\"\n        >\n          {{ t('featureFlags.restart.title') }}\n        </h4>\n        <div\n          slot=\"body\"\n          class=\"waiting\"\n        >\n          <p>{{ t('featureFlags.restart.wait') }}</p>\n          <span class=\"restarting-icon\">\n            <i class=\" icon icon-spinner icon-spin\" />\n          </span>\n        </div>\n        <template #actions>\n          <button\n            class=\"btn role-secondary\"\n            @click=\"close\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n        </template>\n      </Card>\n    </modal>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n  .prompt-update {\n    &.card-container {\n      box-shadow: none;\n    }\n\n    ::v-deep .card-actions {\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n  .waiting {\n    text-align: center;\n    font-size: 14px;\n    margin: 10px 0;\n\n    p {\n      line-height: 20px;;\n    }\n  }\n\n  .restarting-icon {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n\n    > I {\n    font-size: 24px;\n    }\n  }\n\n  .feature-name {\n    align-items: center;\n    display: flex;\n\n    > i {\n      margin-left: 10px;\n    }\n  }\n</style>\n"]}]}