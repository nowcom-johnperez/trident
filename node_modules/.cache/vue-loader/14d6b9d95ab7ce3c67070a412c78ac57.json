{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/EnvVars.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/EnvVars.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWYWx1ZUZyb21SZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL1ZhbHVlRnJvbVJlc291cmNlJzsKaW1wb3J0IGRlYm91bmNlIGZyb20gJ2xvZGFzaC9kZWJvdW5jZSc7CmltcG9ydCB7IHJhbmRvbVN0ciB9IGZyb20gJ0BzaGVsbC91dGlscy9zdHJpbmcnOwppbXBvcnQgeyBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFZhbHVlRnJvbVJlc291cmNlIH0sCgogIHByb3BzOiB7CiAgICAvKioKICAgICAqIEZvcm0gbW9kZSBmb3IgdGhlIGNvbXBvbmVudAogICAgICovCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIGNvbmZpZ01hcHM6IHsKICAgICAgdHlwZTogICAgIEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHNlY3JldHM6IHsKICAgICAgdHlwZTogICAgIEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGxvYWRpbmc6IHsKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICAgIHR5cGU6ICAgIEJvb2xlYW4KICAgIH0sCiAgICAvKioKICAgICAqIENvbnRhaW5lciBzcGVjCiAgICAgKi8KICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCB7IGVudiA9IFtdLCBlbnZGcm9tID0gW10gfSA9IHRoaXMudmFsdWU7CgogICAgY29uc3QgYWxsRW52ID0gWy4uLmVudiwgLi4uZW52RnJvbV0ubWFwKChyb3cpID0+IHsKICAgICAgcmV0dXJuIHsgdmFsdWU6IHJvdywgaWQ6IHJhbmRvbVN0cig0KSB9OwogICAgfSk7CgogICAgcmV0dXJuIHsKICAgICAgZW52LCBlbnZGcm9tLCBhbGxFbnYKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGlzVmlldygpIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gX1ZJRVc7CiAgICB9CiAgfSwKCiAgd2F0Y2g6IHsKICAgICd2YWx1ZS50dHknKG5ldSkgewogICAgICBpZiAobmV1KSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdzdGRpbicsIHRydWUpOwogICAgICB9CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5xdWV1ZVVwZGF0ZSA9IGRlYm91bmNlKHRoaXMudXBkYXRlLCA1MDApOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZSgpIHsKICAgICAgZGVsZXRlIHRoaXMudmFsdWUuZW52OwogICAgICBkZWxldGUgdGhpcy52YWx1ZS5lbnZGcm9tOwogICAgICBjb25zdCBlbnZWYXJTb3VyY2UgPSBbXTsKICAgICAgY29uc3QgZW52VmFyID0gW107CgogICAgICB0aGlzLmFsbEVudi5mb3JFYWNoKChyb3cpID0+IHsKICAgICAgICBpZiAoIXJvdy52YWx1ZSkgewogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICBpZiAoISFyb3cudmFsdWUuY29uZmlnTWFwUmVmIHx8ICEhcm93LnZhbHVlLnNlY3JldFJlZikgewogICAgICAgICAgZW52VmFyU291cmNlLnB1c2gocm93LnZhbHVlKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgZW52VmFyLnB1c2gocm93LnZhbHVlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ2VudicsIGVudlZhcik7CiAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAnZW52RnJvbScsIGVudlZhclNvdXJjZSk7CiAgICB9LAoKICAgIHVwZGF0ZVJvdygpIHsKICAgICAgdGhpcy5xdWV1ZVVwZGF0ZSgpOwogICAgfSwKCiAgICByZW1vdmVSb3coaWR4KSB7CiAgICAgIHRoaXMuYWxsRW52LnNwbGljZShpZHgsIDEpOwogICAgICB0aGlzLnF1ZXVlVXBkYXRlKCk7CiAgICB9LAoKICAgIGFkZEZyb21SZWZlcmVuY2UoKSB7CiAgICAgIHRoaXMuYWxsRW52LnB1c2goeyB2YWx1ZTogeyBuYW1lOiAnJywgdmFsdWVGcm9tOiB7fSB9LCBpZDogcmFuZG9tU3RyKDQpIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["EnvVars.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"EnvVars.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport ValueFromResource from '@shell/components/form/ValueFromResource';\nimport debounce from 'lodash/debounce';\nimport { randomStr } from '@shell/utils/string';\nimport { _VIEW } from '@shell/config/query-params';\n\nexport default {\n  components: { ValueFromResource },\n\n  props: {\n    /**\n     * Form mode for the component\n     */\n    mode: {\n      type:     String,\n      required: true,\n    },\n    configMaps: {\n      type:     Array,\n      required: true\n    },\n    secrets: {\n      type:     Array,\n      required: true\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n    /**\n     * Container spec\n     */\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  data() {\n    const { env = [], envFrom = [] } = this.value;\n\n    const allEnv = [...env, ...envFrom].map((row) => {\n      return { value: row, id: randomStr(4) };\n    });\n\n    return {\n      env, envFrom, allEnv\n    };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    }\n  },\n\n  watch: {\n    'value.tty'(neu) {\n      if (neu) {\n        this.$set(this.value, 'stdin', true);\n      }\n    }\n  },\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n\n  methods: {\n    update() {\n      delete this.value.env;\n      delete this.value.envFrom;\n      const envVarSource = [];\n      const envVar = [];\n\n      this.allEnv.forEach((row) => {\n        if (!row.value) {\n          return;\n        }\n        if (!!row.value.configMapRef || !!row.value.secretRef) {\n          envVarSource.push(row.value);\n        } else {\n          envVar.push(row.value);\n        }\n      });\n      this.$set(this.value, 'env', envVar);\n      this.$set(this.value, 'envFrom', envVarSource);\n    },\n\n    updateRow() {\n      this.queueUpdate();\n    },\n\n    removeRow(idx) {\n      this.allEnv.splice(idx, 1);\n      this.queueUpdate();\n    },\n\n    addFromReference() {\n      this.allEnv.push({ value: { name: '', valueFrom: {} }, id: randomStr(4) });\n    },\n  },\n};\n</script>\n<template>\n  <div :style=\"{'width':'100%'}\">\n    <div\n      v-for=\"(row, i) in allEnv\"\n      :key=\"row.id\"\n    >\n      <ValueFromResource\n        v-model=\"row.value\"\n        :all-secrets=\"secrets\"\n        :all-config-maps=\"configMaps\"\n        :mode=\"mode\"\n        :loading=\"loading\"\n        @remove=\"removeRow(i)\"\n        @input=\"updateRow\"\n      />\n    </div>\n    <button\n      v-if=\"!isView\"\n      v-t=\"'workload.container.command.addEnvVar'\"\n      type=\"button\"\n      class=\"btn role-tertiary add\"\n      data-testid=\"add-env-var\"\n      @click=\"addFromReference\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.value-from ::v-deep {\n  .v-select {\n    height: 50px;\n  }\n\n  INPUT:not(.vs__search) {\n    height: 50px;\n  }\n}\n.value-from, .value-from-headers {\n  display: grid;\n  grid-template-columns: 20% 20% 20% 5% 20% auto;\n  grid-gap: $column-gutter;\n  align-items: center;\n  margin-bottom: 10px;\n}\n  .value-from-headers {\n    margin: 10px 0px 10px 0px;\n    color: var(--input-label);\n    }\n</style>\n"]}]}