{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/AddExtensionRepos.vue?vue&type=style&index=0&id=1af1046e&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/AddExtensionRepos.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbmFibGUtcGx1Z2luLXN1cHBvcnQgewogIGZvbnQtc2l6ZTogMTRweDsKICBtYXJnaW4tdG9wOiAyMHB4Owp9CgoucGx1Z2luLXNldHVwLWVycm9yIHsKICBmb250LXNpemU6IDE0cHg7CiAgY29sb3I6IHZhcigtLWVycm9yKTsKICBtYXJnaW46IDEwcHggMCAwIDA7Cn0KCi5jaGVja2JveC1pbmZvIHsKICBtYXJnaW4tbGVmdDogMjBweDsKICBvcGFjaXR5OiAwLjc7Cn0K"},{"version":3,"sources":["AddExtensionRepos.vue"],"names":[],"mappings":";AAkLA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"AddExtensionRepos.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/uiplugins","sourcesContent":["<script>\nimport { CATALOG } from '@shell/config/types';\nimport Dialog from '@shell/components/Dialog.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport {\n  UI_PLUGINS_REPO_NAME,\n  UI_PLUGINS_REPO_URL,\n  UI_PLUGINS_REPO_BRANCH,\n  UI_PLUGINS_PARTNERS_REPO_NAME,\n  UI_PLUGINS_PARTNERS_REPO_URL,\n  UI_PLUGINS_PARTNERS_REPO_BRANCH,\n} from '@shell/config/uiplugins';\n\nexport default {\n  components: {\n    Checkbox,\n    Dialog,\n  },\n\n  async fetch() {\n    if (this.$store.getters['management/schemaFor'](CATALOG.CLUSTER_REPO)) {\n      this.repos = await this.$store.dispatch('management/findAll', { type: CATALOG.CLUSTER_REPO, opt: { force: true } });\n    }\n  },\n\n  data() {\n    return {\n      errors:   [],\n      repos:    [],\n      addRepos: {\n        official: true,\n        partners: true\n      },\n      reposInfo: {\n        official: {\n          repo:   undefined,\n          name:   UI_PLUGINS_REPO_NAME,\n          url:    UI_PLUGINS_REPO_URL,\n          branch: UI_PLUGINS_REPO_BRANCH,\n        },\n        partners: {\n          repo:   undefined,\n          name:   UI_PLUGINS_PARTNERS_REPO_NAME,\n          url:    UI_PLUGINS_PARTNERS_REPO_URL,\n          branch: UI_PLUGINS_PARTNERS_REPO_BRANCH,\n        }\n      }\n    };\n  },\n\n  computed: {\n    hasRancherUIPluginsRepo() {\n      return !!this.repos.find((r) => r.urlDisplay === UI_PLUGINS_REPO_URL);\n    },\n    hasRancherUIPartnersPluginsRepo() {\n      return !!this.repos.find((r) => r.urlDisplay === UI_PLUGINS_PARTNERS_REPO_URL);\n    },\n    isAnyRepoAvailableForInstall() {\n      return !this.hasRancherUIPluginsRepo || !this.hasRancherUIPartnersPluginsRepo;\n    }\n  },\n\n  methods: {\n    showDialog() {\n      this.addRepos = {\n        official: !this.hasRancherUIPluginsRepo,\n        partners: !this.hasRancherUIPartnersPluginsRepo,\n      };\n      this.$modal.show('add-extensions-repos');\n    },\n\n    async doAddRepos(btnCb) {\n      this.errors = [];\n      const promises = [];\n\n      for (const key in this.addRepos) {\n        if (this.addRepos[key]) {\n          const pluginCR = await this.$store.dispatch('management/create', {\n            type:     CATALOG.CLUSTER_REPO,\n            metadata: { name: this.reposInfo[key].name },\n            spec:     {\n              gitBranch: this.reposInfo[key].branch,\n              gitRepo:   this.reposInfo[key].url,\n            }\n          });\n\n          promises.push(pluginCR.save());\n        }\n      }\n\n      if (promises.length) {\n        const res = await Promise.allSettled(promises);\n\n        res.forEach((result) => {\n          if (result.status === 'rejected') {\n            console.error(result.reason); // eslint-disable-line no-console\n\n            this.errors.push(result.reason);\n          }\n        });\n      }\n\n      this.$emit('done');\n\n      btnCb(true);\n    },\n  }\n};\n</script>\n<template>\n  <Dialog\n    name=\"add-extensions-repos\"\n    :title=\"t('plugins.addRepos.title')\"\n    mode=\"add\"\n    data-testid=\"add-extensions-repos-modal\"\n    @okay=\"doAddRepos\"\n  >\n    <template>\n      <p class=\"mb-20\">\n        {{ t('plugins.addRepos.prompt', {}, true) }}\n      </p>\n      <!-- Official repo -->\n      <div\n        class=\"mb-15\"\n      >\n        <Checkbox\n          v-model=\"addRepos.official\"\n          :disabled=\"hasRancherUIPluginsRepo\"\n          :primary=\"true\"\n          label-key=\"plugins.setup.install.addRancherRepo\"\n          data-testid=\"add-extensions-repos-modal-add-official-repo\"\n        />\n        <div\n          v-if=\"hasRancherUIPluginsRepo\"\n          class=\"checkbox-info\"\n        >\n          ({{ t('plugins.setup.installed') }})\n        </div>\n      </div>\n      <!-- Partners repo -->\n      <div\n        class=\"mb-15\"\n      >\n        <Checkbox\n          v-model=\"addRepos.partners\"\n          :disabled=\"hasRancherUIPartnersPluginsRepo\"\n          :primary=\"true\"\n          label-key=\"plugins.setup.install.addPartnersRancherRepo\"\n          data-testid=\"add-extensions-repos-modal-add-partners-repo\"\n        />\n        <div\n          v-if=\"hasRancherUIPartnersPluginsRepo\"\n          class=\"checkbox-info\"\n        >\n          ({{ t('plugins.setup.installed') }})\n        </div>\n      </div>\n    </template>\n  </Dialog>\n</template>\n<style lang=\"scss\" scoped>\n  .enable-plugin-support {\n    font-size: 14px;\n    margin-top: 20px;\n  }\n\n  .plugin-setup-error {\n    font-size: 14px;\n    color: var(--error);\n    margin: 10px 0 0 0;\n  }\n\n  .checkbox-info {\n    margin-left: 20px;\n    opacity: 0.7;\n  }\n</style>\n"]}]}