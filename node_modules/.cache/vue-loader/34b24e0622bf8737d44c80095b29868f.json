{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/AgentConfiguration.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/AgentConfiguration.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBHcm91cFBhbmVsIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0dyb3VwUGFuZWwnOwppbXBvcnQgUG9kQWZmaW5pdHkgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Qb2RBZmZpbml0eSc7CmltcG9ydCBOb2RlQWZmaW5pdHkgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Ob2RlQWZmaW5pdHknOwppbXBvcnQgQ29udGFpbmVyUmVzb3VyY2VMaW1pdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Db250YWluZXJSZXNvdXJjZUxpbWl0JzsKaW1wb3J0IFRvbGVyYXRpb25zIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vVG9sZXJhdGlvbnMnOwppbXBvcnQgeyBjbGVhblVwIH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IGZldGNoU2V0dGluZyB9IGZyb20gJ0BzaGVsbC91dGlscy9zZXR0aW5ncyc7CmltcG9ydCB7IFJhZGlvR3JvdXAgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1JhZGlvJzsKCi8vIEFmZmluaXR5IHJhZGlvIGJ1dHRvbiBjaG9pY2VzCmNvbnN0IERFRkFVTFQgPSAnZGVmYXVsdCc7CmNvbnN0IENVU1RPTSA9ICdjdXN0b20nOwoKLy8gVGhpcyBpcyB0aGUgZm9ybSBmb3IgQWdlbnQgQ29uZmlndXJhdGlvbgovLyBVc2VkIGZvciBib3RoIENsdXN0ZXIgQWdlbnQgYW5kIEZsZWV0IEFnZW50IGNvbmZpZ3VyYXRpb24KZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJhbm5lciwKICAgIENvbnRhaW5lclJlc291cmNlTGltaXQsCiAgICBHcm91cFBhbmVsLAogICAgUG9kQWZmaW5pdHksCiAgICBOb2RlQWZmaW5pdHksCiAgICBSYWRpb0dyb3VwLAogICAgVG9sZXJhdGlvbnMsCiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7fSwKICAgIH0sCgogICAgbW9kZTogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCgogICAgdHlwZTogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIC8vIERlZmF1bHQgYWZmaW5pdHkKICAgIGNvbnN0IHNldHRpbmdJZCA9IGAkeyB0aGlzLnR5cGUgfS1hZ2VudC1kZWZhdWx0LWFmZmluaXR5YDsKICAgIGNvbnN0IHNldHRpbmcgPSBhd2FpdCBmZXRjaFNldHRpbmcodGhpcy4kc3RvcmUsIHNldHRpbmdJZCk7CgogICAgaWYgKHNldHRpbmcpIHsKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKHNldHRpbmcudmFsdWUgfHwgc2V0dGluZy5kZWZhdWx0KTsKCiAgICAgICAgdGhpcy5kZWZhdWx0QWZmaW5pdHkgPSBwYXJzZWQgfHwge307CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdDb3VsZCBub3QgcGFyc2UgYWdlbnQgZGVmYXVsdCBzZXR0aW5nJywgZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICAgIHRoaXMuZGVmYXVsdEFmZmluaXR5ID0ge307CiAgICAgIH0KICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgY29uc3Qgbm9kZUFmZmluaXR5ID0gdGhpcy52YWx1ZT8ub3ZlcnJpZGVBZmZpbml0eT8ubm9kZUFmZmluaXR5OwogICAgY29uc3QgcG9kQWZmaW5pdHkgPSB0aGlzLnZhbHVlPy5vdmVycmlkZUFmZmluaXR5Py5wb2RBZmZpbml0eTsKICAgIGNvbnN0IHBvZEFudGlBZmZpbml0eSA9IHRoaXMudmFsdWU/Lm92ZXJyaWRlQWZmaW5pdHk/LnBvZEFudGlBZmZpbml0eTsKCiAgICBsZXQgaGFzQWZmaW5pdHlQb3B1bGF0ZWQgPSBmYWxzZTsKCiAgICBpZiAoKG5vZGVBZmZpbml0eSAmJiBPYmplY3Qua2V5cyhub2RlQWZmaW5pdHkpLmxlbmd0aCkgfHwKICAgICAgKHBvZEFmZmluaXR5ICYmIE9iamVjdC5rZXlzKHBvZEFmZmluaXR5KS5sZW5ndGgpIHx8CiAgICAgIChwb2RBbnRpQWZmaW5pdHkgJiYgT2JqZWN0LmtleXMocG9kQW50aUFmZmluaXR5KS5sZW5ndGgpKSB7CiAgICAgIGhhc0FmZmluaXR5UG9wdWxhdGVkID0gdHJ1ZTsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBkZWZhdWx0QWZmaW5pdHk6IHt9LAogICAgICBhZmZpbml0eVNldHRpbmc6IGhhc0FmZmluaXR5UG9wdWxhdGVkID8gQ1VTVE9NIDogREVGQVVMVCwKICAgICAgbm9kZUFmZmluaXR5OiAgICB7fQogICAgfTsKICB9LAoKICBjcmVhdGVkKCkgewogICAgdGhpcy5lbnN1cmVWYWx1ZSgpOwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBmbGF0UmVzb3VyY2VzOiB7CiAgICAgIGdldCgpIHsKICAgICAgICBjb25zdCB7IGxpbWl0cyA9IHt9LCByZXF1ZXN0cyA9IHt9IH0gPSB0aGlzLnZhbHVlLm92ZXJyaWRlUmVzb3VyY2VSZXF1aXJlbWVudHMgfHwge307CiAgICAgICAgY29uc3QgewogICAgICAgICAgY3B1OiBsaW1pdHNDcHUsCiAgICAgICAgICBtZW1vcnk6IGxpbWl0c01lbW9yeSwKICAgICAgICB9ID0gbGltaXRzOwogICAgICAgIGNvbnN0IHsgY3B1OiByZXF1ZXN0c0NwdSwgbWVtb3J5OiByZXF1ZXN0c01lbW9yeSB9ID0gcmVxdWVzdHM7CgogICAgICAgIHJldHVybiB7CiAgICAgICAgICBsaW1pdHNDcHUsCiAgICAgICAgICBsaW1pdHNNZW1vcnksCiAgICAgICAgICByZXF1ZXN0c0NwdSwKICAgICAgICAgIHJlcXVlc3RzTWVtb3J5LAogICAgICAgIH07CiAgICAgIH0sCiAgICAgIHNldChuZXUpIHsKICAgICAgICBjb25zdCB7CiAgICAgICAgICBsaW1pdHNDcHUsCiAgICAgICAgICBsaW1pdHNNZW1vcnksCiAgICAgICAgICByZXF1ZXN0c0NwdSwKICAgICAgICAgIHJlcXVlc3RzTWVtb3J5LAogICAgICAgIH0gPSBuZXU7CgogICAgICAgIGNvbnN0IGV4aXN0aW5nID0gdGhpcy52YWx1ZT8ub3ZlcnJpZGVSZXNvdXJjZVJlcXVpcmVtZW50cyB8fCB7fTsKCiAgICAgICAgZGVsZXRlIGV4aXN0aW5nLnJlcXVlc3RzOwogICAgICAgIGRlbGV0ZSBleGlzdGluZy5saW1pdHM7CgogICAgICAgIGNvbnN0IG91dCA9IHsKICAgICAgICAgIC4uLmV4aXN0aW5nLAogICAgICAgICAgcmVxdWVzdHM6IHsKICAgICAgICAgICAgY3B1OiAgICByZXF1ZXN0c0NwdSwKICAgICAgICAgICAgbWVtb3J5OiByZXF1ZXN0c01lbW9yeSwKICAgICAgICAgIH0sCiAgICAgICAgICBsaW1pdHM6IHsKICAgICAgICAgICAgY3B1OiAgICBsaW1pdHNDcHUsCiAgICAgICAgICAgIG1lbW9yeTogbGltaXRzTWVtb3J5LAogICAgICAgICAgfSwKICAgICAgICB9OwoKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ292ZXJyaWRlUmVzb3VyY2VSZXF1aXJlbWVudHMnLCBjbGVhblVwKG91dCkpOwogICAgICB9LAogICAgfSwKCiAgICBhZmZpbml0eU9wdGlvbnMoKSB7CiAgICAgIHJldHVybiBbewogICAgICAgIGxhYmVsOiB0aGlzLnQoJ2NsdXN0ZXIuYWdlbnRDb25maWcuYWZmaW5pdHkuZGVmYXVsdCcpLAogICAgICAgIHZhbHVlOiBERUZBVUxULAogICAgICB9LCB7CiAgICAgICAgbGFiZWw6IHRoaXMudCgnY2x1c3Rlci5hZ2VudENvbmZpZy5hZmZpbml0eS5jdXN0b20nKSwKICAgICAgICB2YWx1ZTogQ1VTVE9NLAogICAgICB9XTsKICAgIH0sCgogICAgY2FuRWRpdEFmZmluaXR5KCkgewogICAgICByZXR1cm4gdGhpcy5hZmZpbml0eVNldHRpbmcgPT09IENVU1RPTTsKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgdmFsdWUoKSB7CiAgICAgIHRoaXMuZW5zdXJlVmFsdWUoKTsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBlbnN1cmVWYWx1ZSgpIHsKICAgICAgLy8gRW5zdXJlIHdlIGhhdmUgdGhlIG1vZGVsIHN0cnVjdHVyZSBuZWVkZWQgZm9yIHRoZSBmb3JtIGNvbnRyb2xzCiAgICAgIGlmICh0aGlzLnZhbHVlKSB7CiAgICAgICAgdGhpcy52YWx1ZS5vdmVycmlkZUFmZmluaXR5ID0gdGhpcy52YWx1ZS5vdmVycmlkZUFmZmluaXR5IHx8IHt9OwogICAgICAgIHRoaXMudmFsdWUuYXBwZW5kVG9sZXJhdGlvbnMgPSB0aGlzLnZhbHVlLmFwcGVuZFRvbGVyYXRpb25zIHx8IFtdOwogICAgICAgIHRoaXMudmFsdWUub3ZlcnJpZGVSZXNvdXJjZVJlcXVpcmVtZW50cyA9IHRoaXMudmFsdWUub3ZlcnJpZGVSZXNvdXJjZVJlcXVpcmVtZW50cyB8fCB7fTsKCiAgICAgICAgdGhpcy5ub2RlQWZmaW5pdHkgPSB0aGlzLnZhbHVlPy5vdmVycmlkZUFmZmluaXR5Py5ub2RlQWZmaW5pdHkgfHwge307CiAgICAgIH0KICAgIH0sCgogICAgYWZmaW5pdHlTZXR0aW5nQ2hhbmdlKCkgewogICAgICBpZiAodGhpcy5hZmZpbml0eVNldHRpbmcgPT09IENVU1RPTSkgewogICAgICAgIGNvbnN0IHBhcnNlZERlZmF1bHRBZmZpbml0ZXMgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuZGVmYXVsdEFmZmluaXR5KSk7CgogICAgICAgIC8vIENvcHkgdGhlIGRlZmF1bHQgc28gdGhhdCB0aGUgdXNlciBjYW4gZWRpdCBpdAogICAgICAgIC8vIHRoaXMgd2lsbCBjb3ZlciB0aGUgcG9kIGFmZmluaXRpZXMKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ292ZXJyaWRlQWZmaW5pdHknLCBwYXJzZWREZWZhdWx0QWZmaW5pdGVzKTsKCiAgICAgICAgLy8gaW4gb3JkZXIgbm90IHRvIGJyZWFrIHRoZSBub2RlIGFmZmluaXR5IGNvbXBvbmVudCwgbGV0J3MgZ28gZm9yIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHdheSBvZiBoYW5kbGluZyB0aGUgbG9naWMgaGVyZQogICAgICAgIGlmIChwYXJzZWREZWZhdWx0QWZmaW5pdGVzLm5vZGVBZmZpbml0eSkgewogICAgICAgICAgdGhpcy5ub2RlQWZmaW5pdHkgPSBwYXJzZWREZWZhdWx0QWZmaW5pdGVzLm5vZGVBZmZpbml0eTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdvdmVycmlkZUFmZmluaXR5Jywge30pOwogICAgICB9CiAgICB9LAogICAgdXBkYXRlTm9kZUFmZmluaXR5KHZhbCkgewogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5vdmVycmlkZUFmZmluaXR5LCAnbm9kZUFmZmluaXR5JywgdmFsKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["AgentConfiguration.vue"],"names":[],"mappingsfile":"AgentConfiguration.vue","sourceRoot":"node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster","sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport GroupPanel from '@shell/components/GroupPanel';\nimport PodAffinity from '@shell/components/form/PodAffinity';\nimport NodeAffinity from '@shell/components/form/NodeAffinity';\nimport ContainerResourceLimit from '@shell/components/ContainerResourceLimit';\nimport Tolerations from '@shell/components/form/Tolerations';\nimport { cleanUp } from '@shell/utils/object';\nimport { fetchSetting } from '@shell/utils/settings';\nimport { RadioGroup } from '@components/Form/Radio';\n\n// Affinity radio button choices\nconst DEFAULT = 'default';\nconst CUSTOM = 'custom';\n\n// This is the form for Agent Configuration\n// Used for both Cluster Agent and Fleet Agent configuration\nexport default {\n  components: {\n    Banner,\n    ContainerResourceLimit,\n    GroupPanel,\n    PodAffinity,\n    NodeAffinity,\n    RadioGroup,\n    Tolerations,\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {},\n    },\n\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    type: {\n      type:     String,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    // Default affinity\n    const settingId = `${ this.type }-agent-default-affinity`;\n    const setting = await fetchSetting(this.$store, settingId);\n\n    if (setting) {\n      try {\n        const parsed = JSON.parse(setting.value || setting.default);\n\n        this.defaultAffinity = parsed || {};\n      } catch (e) {\n        console.error('Could not parse agent default setting', e); // eslint-disable-line no-console\n        this.defaultAffinity = {};\n      }\n    }\n  },\n\n  data() {\n    const nodeAffinity = this.value?.overrideAffinity?.nodeAffinity;\n    const podAffinity = this.value?.overrideAffinity?.podAffinity;\n    const podAntiAffinity = this.value?.overrideAffinity?.podAntiAffinity;\n\n    let hasAffinityPopulated = false;\n\n    if ((nodeAffinity && Object.keys(nodeAffinity).length) ||\n      (podAffinity && Object.keys(podAffinity).length) ||\n      (podAntiAffinity && Object.keys(podAntiAffinity).length)) {\n      hasAffinityPopulated = true;\n    }\n\n    return {\n      defaultAffinity: {},\n      affinitySetting: hasAffinityPopulated ? CUSTOM : DEFAULT,\n      nodeAffinity:    {}\n    };\n  },\n\n  created() {\n    this.ensureValue();\n  },\n\n  computed: {\n    flatResources: {\n      get() {\n        const { limits = {}, requests = {} } = this.value.overrideResourceRequirements || {};\n        const {\n          cpu: limitsCpu,\n          memory: limitsMemory,\n        } = limits;\n        const { cpu: requestsCpu, memory: requestsMemory } = requests;\n\n        return {\n          limitsCpu,\n          limitsMemory,\n          requestsCpu,\n          requestsMemory,\n        };\n      },\n      set(neu) {\n        const {\n          limitsCpu,\n          limitsMemory,\n          requestsCpu,\n          requestsMemory,\n        } = neu;\n\n        const existing = this.value?.overrideResourceRequirements || {};\n\n        delete existing.requests;\n        delete existing.limits;\n\n        const out = {\n          ...existing,\n          requests: {\n            cpu:    requestsCpu,\n            memory: requestsMemory,\n          },\n          limits: {\n            cpu:    limitsCpu,\n            memory: limitsMemory,\n          },\n        };\n\n        this.$set(this.value, 'overrideResourceRequirements', cleanUp(out));\n      },\n    },\n\n    affinityOptions() {\n      return [{\n        label: this.t('cluster.agentConfig.affinity.default'),\n        value: DEFAULT,\n      }, {\n        label: this.t('cluster.agentConfig.affinity.custom'),\n        value: CUSTOM,\n      }];\n    },\n\n    canEditAffinity() {\n      return this.affinitySetting === CUSTOM;\n    }\n  },\n\n  watch: {\n    value() {\n      this.ensureValue();\n    }\n  },\n\n  methods: {\n    ensureValue() {\n      // Ensure we have the model structure needed for the form controls\n      if (this.value) {\n        this.value.overrideAffinity = this.value.overrideAffinity || {};\n        this.value.appendTolerations = this.value.appendTolerations || [];\n        this.value.overrideResourceRequirements = this.value.overrideResourceRequirements || {};\n\n        this.nodeAffinity = this.value?.overrideAffinity?.nodeAffinity || {};\n      }\n    },\n\n    affinitySettingChange() {\n      if (this.affinitySetting === CUSTOM) {\n        const parsedDefaultAffinites = JSON.parse(JSON.stringify(this.defaultAffinity));\n\n        // Copy the default so that the user can edit it\n        // this will cover the pod affinities\n        this.$set(this.value, 'overrideAffinity', parsedDefaultAffinites);\n\n        // in order not to break the node affinity component, let's go for a slightly different way of handling the logic here\n        if (parsedDefaultAffinites.nodeAffinity) {\n          this.nodeAffinity = parsedDefaultAffinites.nodeAffinity;\n        }\n      } else {\n        this.$set(this.value, 'overrideAffinity', {});\n      }\n    },\n    updateNodeAffinity(val) {\n      this.$set(this.value.overrideAffinity, 'nodeAffinity', val);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      :closable=\"false\"\n      color=\"info\"\n      label-key=\"cluster.agentConfig.banners.advanced\"\n    />\n\n    <GroupPanel\n      label-key=\"cluster.agentConfig.groups.podRequestsAndLimits\"\n      class=\"mt-20\"\n    >\n      <Banner\n        :closable=\"false\"\n        color=\"info\"\n        label-key=\"cluster.agentConfig.banners.limits\"\n      />\n      <ContainerResourceLimit\n        v-model=\"flatResources\"\n        :mode=\"mode\"\n        :show-tip=\"false\"\n        :handle-gpu-limit=\"false\"\n        class=\"mt-10\"\n      />\n    </GroupPanel>\n\n    <GroupPanel\n      label-key=\"cluster.agentConfig.groups.podTolerations\"\n      class=\"mt-20\"\n    >\n      <Banner\n        :closable=\"false\"\n        color=\"info\"\n        label-key=\"cluster.agentConfig.banners.tolerations\"\n      />\n      <Tolerations\n        v-model=\"value.appendTolerations\"\n        :mode=\"mode\"\n        class=\"mt-10\"\n      />\n    </GroupPanel>\n\n    <GroupPanel\n      label-key=\"cluster.agentConfig.groups.podAffinity\"\n      class=\"mt-20\"\n    >\n      <RadioGroup\n        v-model=\"affinitySetting\"\n        name=\"affinity-override\"\n        :mode=\"mode\"\n        :options=\"affinityOptions\"\n        class=\"mt-10\"\n        data-testid=\"affinity-options\"\n        @input=\"affinitySettingChange\"\n      />\n\n      <Banner\n        v-if=\"canEditAffinity\"\n        :closable=\"false\"\n        color=\"warning\"\n      >\n        <p v-clean-html=\"t('cluster.agentConfig.banners.windowsCompatibility', {}, true)\" />\n      </Banner>\n\n      <h4 v-if=\"canEditAffinity\">\n        {{ t('cluster.agentConfig.subGroups.podAffinityAnti') }}\n      </h4>\n\n      <PodAffinity\n        v-if=\"canEditAffinity\"\n        v-model=\"value\"\n        field=\"overrideAffinity\"\n        :mode=\"mode\"\n        class=\"mt-0 mb-20\"\n        :all-namespaces-option-available=\"true\"\n        :force-input-namespace-selection=\"true\"\n        :remove-labeled-input-namespace-label=\"true\"\n        data-testid=\"pod-affinity\"\n      />\n\n      <div\n        v-if=\"canEditAffinity\"\n        class=\"separator\"\n      />\n      <h4\n        v-if=\"canEditAffinity\"\n        class=\"mt-20\"\n      >\n        {{ t('cluster.agentConfig.subGroups.nodeAffinity') }}\n      </h4>\n\n      <NodeAffinity\n        v-if=\"canEditAffinity\"\n        v-model=\"nodeAffinity\"\n        :matching-selector-display=\"true\"\n        :mode=\"mode\"\n        class=\"mt-0\"\n        data-testid=\"node-affinity\"\n        @input=\"updateNodeAffinity\"\n      />\n    </GroupPanel>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.separator {\n  width: 100%;\n  border-top: 1px solid var(--border);\n}\n</style>\n"]}]}