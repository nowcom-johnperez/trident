{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cloudcredential.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cloudcredential.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["cloudcredential.vue"],"names":[],"mappingsfile":"cloudcredential.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\nimport { MANAGEMENT, NORMAN, SCHEMA, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport CruResource from '@shell/components/CruResource';\nimport { _CREATE } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport Labels from '@shell/components/form/Labels';\nimport { HIDE_SENSITIVE } from '@shell/store/prefs';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear, uniq } from '@shell/utils/array';\nimport SelectIconGrid from '@shell/components/SelectIconGrid';\nimport { sortBy } from '@shell/utils/sort';\nimport { ucFirst } from '@shell/utils/string';\nimport { set } from '@shell/utils/object';\nimport { mapFeature, RKE2 as RKE2_FEATURE } from '@shell/store/features';\nimport { rke1Supports } from '@shell/store/plugins';\n\nexport default {\n  name: 'CruCloudCredential',\n\n  components: {\n    Loading,\n    NameNsDescription,\n    CruResource,\n    Labels,\n    SelectIconGrid\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.nodeDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE_DRIVER });\n    this.kontainerDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.KONTAINER_DRIVER });\n\n    // Force reload the cloud cred schema and any missing subtypes because there aren't change events sent when drivers come/go\n    try {\n      const schema = await this.$store.dispatch('rancher/find', {\n        type: SCHEMA,\n        id:   NORMAN.CLOUD_CREDENTIAL,\n        opt:  {\n          force: true,\n          url:   `schemas/${ NORMAN.CLOUD_CREDENTIAL }`,\n        },\n      });\n\n      for ( const k in schema.resourceFields ) {\n        if ( !k.endsWith('Config') ) {\n          continue;\n        }\n\n        const id = schema.resourceFields[k].type;\n\n        if ( !this.$store.getters['rancher/schemaFor'](id) ) {\n          await this.$store.dispatch('rancher/find', {\n            type: SCHEMA,\n            id,\n            opt:  {\n              force: true,\n              url:   `schemas/${ id }`,\n            },\n          });\n        }\n      }\n    } catch (e) {\n    }\n\n    if ( !this.value._name ) {\n      set(this.value, '_name', '');\n    }\n\n    if ( this.value.provider ) {\n      this.selectType(this.value.provider);\n    }\n  },\n\n  data() {\n    return {\n      nodeDrivers:      null,\n      kontainerDrivers: null\n    };\n  },\n\n  computed: {\n    rke2Enabled: mapFeature(RKE2_FEATURE),\n\n    storeOverride() {\n      return 'rancher';\n    },\n\n    driverName() {\n      return this.value?.provider;\n    },\n\n    cloudComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    // array of id, label, description, initials for type selection step\n    secretSubTypes() {\n      const out = [];\n\n      const drivers = [...this.nodeDrivers, ...this.kontainerDrivers]\n        .filter((x) => x.spec.active && x.id !== 'rancherkubernetesengine')\n        .map((x) => x.spec.displayName || x.id);\n\n      let types = uniq(drivers.map((x) => this.$store.getters['plugins/credentialDriverFor'](x)));\n\n      if ( !this.rke2Enabled ) {\n        types = types.filter((x) => rke1Supports.includes(x));\n      }\n\n      const schema = this.$store.getters['rancher/schemaFor'](NORMAN.CLOUD_CREDENTIAL);\n\n      types = types.filter((name) => {\n        const key = this.$store.getters['plugins/credentialFieldForDriver'](name);\n        const subSchemaName = schema.resourceFields[`${ key }credentialConfig`]?.type;\n\n        if ( !subSchemaName ) {\n          return;\n        }\n\n        const subSchema = this.$store.getters['rancher/schemaFor'](subSchemaName);\n\n        if ( !subSchema ) {\n          return false;\n        }\n\n        const fields = subSchema.resourceFields;\n\n        return fields && Object.keys(fields).length > 0;\n      });\n\n      if ( schema.resourceFields['s3credentialConfig'] ) {\n        types.push('s3');\n      }\n\n      for ( const id of types ) {\n        let bannerImage, bannerAbbrv;\n\n        try {\n          bannerImage = require(`~shell/assets/images/providers/${ id }.svg`);\n        } catch (e) {\n          bannerImage = null;\n          bannerAbbrv = this.initialDisplayFor(id);\n        }\n\n        out.push({\n          id,\n          label: this.typeDisplay(CAPI.CREDENTIAL_DRIVER, id),\n          bannerImage,\n          bannerAbbrv\n        });\n      }\n\n      return sortBy(out, 'label');\n    },\n\n    hideSensitiveData() {\n      return this.$store.getters['prefs/get'](HIDE_SENSITIVE);\n    },\n\n    doneRoute() {\n      return 'c-cluster-manager-cloudCredential';\n    },\n  },\n\n  methods: {\n    async saveCredential(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      if ( typeof this.$refs.cloudComponent?.test === 'function' ) {\n        try {\n          const res = await this.$refs.cloudComponent.test();\n\n          if ( !res || res?.errors) {\n            if (res?.errors) {\n              this.errors = res.errors;\n            } else {\n              this.errors = ['Authentication test failed, please check your credentials'];\n            }\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n\n          return;\n        }\n      }\n\n      return this.save(btnCb);\n    },\n\n    selectType(type) {\n      let driver;\n\n      if ( type === TYPES.CLOUD_CREDENTIAL ) {\n        // Clone goes through here\n        driver = this.driverName;\n      } else {\n        driver = type;\n        type = TYPES.CLOUD_CREDENTIAL;\n      }\n\n      if ( this.mode === _CREATE ) {\n        this.value.setAnnotation(CAPI.CREDENTIAL_DRIVER, driver);\n        this.value.metadata.generateName = 'cc-';\n        this.value.metadata.namespace = DEFAULT_WORKSPACE;\n\n        const field = this.$store.getters['plugins/credentialFieldForDriver'](driver);\n\n        set(this.value, `${ field }credentialConfig`, {});\n      }\n\n      this.$set(this.value, '_type', type);\n      this.$emit('set-subtype', this.typeDisplay(type, driver));\n    },\n\n    typeDisplay(type, driver) {\n      return this.$store.getters['i18n/withFallback'](`cluster.provider.\"${ driver }\"`, null, driver);\n    },\n\n    initialDisplayFor(type) {\n      const fallback = (ucFirst(this.typeDisplay(type) || '').replace(/[^A-Z]/g, '') || type).substr(0, 3);\n\n      return this.$store.getters['i18n/withFallback'](`secret.initials.\"${ type }\"`, null, fallback);\n    },\n  },\n};\n</script>\n\n<template>\n  <form class=\"filled-height\">\n    <Loading v-if=\"$fetchState.pending\" />\n    <CruResource\n      v-else\n      :mode=\"mode\"\n      :validation-passed=\"true\"\n      :selected-subtype=\"value._type\"\n      :resource=\"value\"\n      :errors=\"errors\"\n      :done-route=\"doneRoute\"\n      :subtypes=\"secretSubTypes\"\n      :can-yaml=\"false\"\n      @finish=\"saveCredential\"\n      @select-type=\"selectType\"\n      @error=\"e=>errors = e\"\n    >\n      <NameNsDescription\n        v-model=\"value\"\n        name-key=\"_name\"\n        description-key=\"description\"\n        :mode=\"mode\"\n        :namespaced=\"false\"\n      />\n      <keep-alive>\n        <component\n          :is=\"cloudComponent\"\n          ref=\"cloudComponent\"\n          :driver-name=\"driverName\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :hide-sensitive-data=\"hideSensitiveData\"\n        />\n      </keep-alive>\n    </CruResource>\n  </form>\n</template>\n\n<style lang='scss'>\n</style>\n"]}]}