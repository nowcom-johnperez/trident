{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/CatalogList/CatalogUninstallDialog.vue?vue&type=style&index=0&id=76f028b3&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/CatalogList/CatalogUninstallDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wbHVnaW4taW5zdGFsbC1kaWFsb2cgewogIHBhZGRpbmc6IDEwcHg7CgogIGg0IHsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogIH0KCiAgLmRpYWxvZy1wYW5lbCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICAgIG1pbi1oZWlnaHQ6IDEwMHB4OwoKICAgIC5kaWFsb2ctaW5mbyB7CiAgICAgIGZsZXg6IDE7CiAgICB9CiAgfQoKICAuZGlhbG9nLWJ1dHRvbnMgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7CiAgICBtYXJnaW4tdG9wOiAxMHB4OwoKICAgID4gKjpub3QoOmxhc3QtY2hpbGQpIHsKICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4OwogICAgfQogIH0KfQo="},{"version":3,"sources":["CatalogUninstallDialog.vue"],"names":[],"mappings":";AAuLA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"CatalogUninstallDialog.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/uiplugins/CatalogList","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\n\nimport { CATALOG, UI_PLUGIN, SERVICE, WORKLOAD_TYPES } from '@shell/config/types';\nimport { UI_PLUGIN_LABELS, UI_PLUGIN_NAMESPACE } from '@shell/config/uiplugins';\nimport { allHash } from '@shell/utils/promise';\n\nimport AsyncButton from '@shell/components/AsyncButton';\n\nexport default {\n  components: { AsyncButton },\n\n  async fetch() {\n    if ( this.$store.getters['management/schemaFor'](UI_PLUGIN) ) {\n      const plugins = this.$store.dispatch('management/findAll', { type: UI_PLUGIN });\n\n      this.plugins = plugins || [];\n    }\n  },\n\n  data() {\n    return {\n      catalog: undefined, busy: false, plugins: null\n    };\n  },\n\n  computed: {\n    ...mapGetters({ allCharts: 'catalog/charts' }),\n\n    pluginsFromCatalogImage() {\n      return this.plugins.filter((p) => p.metadata?.labels?.[UI_PLUGIN_LABELS.CATALOG_IMAGE]);\n    }\n  },\n\n  methods: {\n    showDialog(catalog) {\n      this.catalog = catalog;\n      this.busy = false;\n      this.$modal.show('uninstallCatalogDialog');\n    },\n\n    closeDialog(result) {\n      this.$modal.hide('uninstallCatalogDialog');\n      this.$emit('closed', result);\n\n      if ( result ) {\n        this.$emit('refresh');\n      }\n    },\n\n    async uninstall() {\n      this.busy = true;\n\n      const catalog = this.catalog;\n      const apps = await this.$store.dispatch('management/findAll', { type: CATALOG.APP });\n      const pluginApps = apps.filter((app) => {\n        if ( app.namespace === UI_PLUGIN_NAMESPACE ) {\n          // Find the related apps from the deployed helm repository\n          const charts = this.allCharts.filter((chart) => chart.repoName === catalog.repo?.metadata?.name);\n\n          return charts.some((chart) => chart.chartName === app.metadata.name);\n        }\n\n        return false;\n      });\n\n      await this.removeCatalogResources(catalog);\n\n      if ( pluginApps.length ) {\n        try {\n          pluginApps.forEach((app) => {\n            this.$emit('update', app.name, 'uninstall');\n            app.remove();\n          });\n        } catch (e) {\n          this.$store.dispatch('growl/error', {\n            title:   this.t('plugins.error.generic'),\n            message: e.message ? e.message : e,\n            timeout: 10000\n          }, { root: true });\n        }\n\n        await this.$store.dispatch('management/findAll', { type: CATALOG.OPERATION });\n      }\n\n      this.closeDialog(catalog);\n    },\n\n    async removeCatalogResources(catalog) {\n      const selector = `${ UI_PLUGIN_LABELS.CATALOG_IMAGE }=${ catalog.name }`;\n      const namespace = UI_PLUGIN_NAMESPACE;\n\n      if ( selector ) {\n        const hash = await allHash({\n          deployment: this.$store.dispatch('management/findMatching', {\n            type: WORKLOAD_TYPES.DEPLOYMENT, selector, namespace\n          }),\n          service: this.$store.dispatch('management/findMatching', {\n            type: SERVICE, selector, namespace\n          }),\n          repo: this.$store.dispatch('management/findMatching', { type: CATALOG.CLUSTER_REPO, selector })\n        });\n\n        for ( const resource of Object.keys(hash) ) {\n          if ( hash[resource] ) {\n            hash[resource].forEach((r) => r.remove());\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <modal\n    name=\"uninstallCatalogDialog\"\n    height=\"auto\"\n    :scrollable=\"true\"\n  >\n    <div\n      v-if=\"catalog\"\n      class=\"plugin-install-dialog\"\n    >\n      <h4 class=\"mt-10\">\n        {{ t('plugins.uninstall.title', { name: catalog.name }) }}\n      </h4>\n      <div class=\"mt-10 dialog-panel\">\n        <div class=\"dialog-info\">\n          <p>\n            {{ t('plugins.uninstall.catalog') }}\n          </p>\n        </div>\n        <div class=\"dialog-buttons\">\n          <button\n            :disabled=\"busy\"\n            class=\"btn role-secondary\"\n            data-testid=\"uninstall-ext-modal-cancel-btn\"\n            @click=\"closeDialog(false)\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n          <AsyncButton\n            mode=\"uninstall\"\n            data-testid=\"uninstall-ext-modal-uninstall-btn\"\n            @click=\"uninstall()\"\n          />\n        </div>\n      </div>\n    </div>\n  </modal>\n</template>\n\n<style lang=\"scss\" scoped>\n  .plugin-install-dialog {\n    padding: 10px;\n\n    h4 {\n      font-weight: bold;\n    }\n\n    .dialog-panel {\n      display: flex;\n      flex-direction: column;\n      min-height: 100px;\n\n      .dialog-info {\n        flex: 1;\n      }\n    }\n\n    .dialog-buttons {\n      display: flex;\n      justify-content: flex-end;\n      margin-top: 10px;\n\n      > *:not(:last-child) {\n        margin-right: 10px;\n      }\n    }\n  }\n</style>\n"]}]}