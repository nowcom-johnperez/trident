{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/management.cattle.io.podsecurityadmissionconfigurationtemplate.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/management.cattle.io.podsecurityadmissionconfigurationtemplate.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgeyBTVE9SQUdFX0NMQVNTIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBSZXNvdXJjZUZldGNoIGZyb20gJ0BzaGVsbC9taXhpbnMvcmVzb3VyY2UtZmV0Y2gnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICAgICAgICdQb2RTZWN1cml0eUFkbWlzc2lvbicsCiAgY29tcG9uZW50czogeyBSZXNvdXJjZVRhYmxlLCBCYW5uZXIgfSwKICBtaXhpbnM6ICAgICBbUmVzb3VyY2VGZXRjaF0sCiAgcHJvcHM6ICAgICAgewogICAgcmVzb3VyY2U6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIHNjaGVtYTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgfSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBjb25zdCBpblN0b3JlID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudFN0b3JlJ10oKTsKCiAgICAvLyBGZXRjaCBzdG9yYWdlIGNsYXNzZXMgc28gd2UgY2FuIGRldGVybWluZSBpZiBhIFBWQyBjYW4gYmUgZXhwYW5kZWQKICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKGAkeyBpblN0b3JlIH0vZmluZEFsbGAsIHsgdHlwZTogU1RPUkFHRV9DTEFTUyB9KTsKCiAgICBhd2FpdCB0aGlzLiRmZXRjaFR5cGUodGhpcy5yZXNvdXJjZSk7CiAgfQp9Owo="},{"version":3,"sources":["management.cattle.io.podsecurityadmissionconfigurationtemplate.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","file":"management.cattle.io.podsecurityadmissionconfigurationtemplate.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { STORAGE_CLASS } from '@shell/config/types';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { Banner } from '@components/Banner';\n\nexport default {\n  name:       'PodSecurityAdmission',\n  components: { ResourceTable, Banner },\n  mixins:     [ResourceFetch],\n  props:      {\n    resource: {\n      type:     String,\n      required: true,\n    },\n\n    schema: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    const inStore = this.$store.getters['currentStore']();\n\n    // Fetch storage classes so we can determine if a PVC can be expanded\n    this.$store.dispatch(`${ inStore }/findAll`, { type: STORAGE_CLASS });\n\n    await this.$fetchType(this.resource);\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      color=\"info\"\n      :label=\"t('podSecurityAdmission.banner.modifications')\"\n    />\n\n    <ResourceTable\n      :loading=\"loading\"\n      :schema=\"schema\"\n      :rows=\"rows\"\n    />\n  </div>\n</template>\n"]}]}