{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/Link.vue?vue&type=style&index=0&id=9744423c&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/Link.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5saW5rLXRleHQtaWNvbiB7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1pdGVtczogdG9wOwoKICAucHJlZml4IHsKICAgIG1hcmdpbjogMnB4IDJweCAwIDA7CiAgfQoKICAuc3VmZml4IHsKICAgIG1hcmdpbjogMnB4IDAgMCAycHg7CiAgfQp9Cg=="},{"version":3,"sources":["Link.vue"],"names":[],"mappings":";AAgLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Link.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport { get } from '@shell/utils/object';\n\nconst defaultOptions = {\n  rel:    'nofollow noopener noreferrer',\n  target: '_blank'\n};\n\nexport default {\n  props: {\n    row: {\n      type:     Object,\n      required: true,\n    },\n\n    value: {\n      type:     [Object, String],\n      required: true\n    },\n\n    to: {\n      type:    Object,\n      default: null\n    },\n\n    urlKey: {\n      type:    String,\n      default: null,\n    },\n\n    labelKey: {\n      type:    String,\n      default: null,\n    },\n\n    options: {\n      type:    [Object, String],\n      default: null,\n    },\n\n    beforeIcon: {\n      type:    String,\n      default: null,\n    },\n\n    afterIcon: {\n      type:    String,\n      default: null,\n    },\n\n    beforeIconKey: {\n      type:    String,\n      default: null,\n    },\n\n    afterIconKey: {\n      type:    String,\n      default: null,\n    },\n  },\n\n  computed: {\n    href() {\n      if ( this.urlKey ) {\n        return get(this.row, this.urlKey);\n      }\n\n      if (this.isInternal && (this.to || this.value.to)) {\n        const to = this.to || this.value.to;\n        const defaultParams = this.$route.params;\n        const toParams = to.params || {};\n\n        return {\n          ...to,\n          params: {\n            id: this.value, ...defaultParams, ...toParams\n          }\n        };\n      }\n\n      return this.value?.url;\n    },\n\n    rel() {\n      if ( this.options && typeof this.options === 'object' ) {\n        return this.options.rel;\n      } else if ( this.value && typeof this.value === 'object' && this.value.rel !== undefined) {\n        return this.value.rel;\n      }\n\n      return defaultOptions.rel;\n    },\n\n    target() {\n      if ( this.options && typeof this.options === 'object' ) {\n        return this.options.target;\n      } else if ( this.value && typeof this.value === 'object' && this.value.target !== undefined) {\n        return this.value.target;\n      }\n\n      return defaultOptions.target;\n    },\n\n    label() {\n      if ( this.labelKey ) {\n        return get(this.row, this.labelKey);\n      } else if ( typeof this.value === 'string' ) {\n        return this.value;\n      }\n\n      return this.value?.text || this.href;\n    },\n\n    beforeIconClass() {\n      if ( this.beforeIconKey ) {\n        return get(this.row, this.beforeIconKey);\n      }\n\n      return this.beforeIcon;\n    },\n\n    afterIconClass() {\n      if ( this.afterIconKey ) {\n        return get(this.row, this.afterIconKey);\n      }\n\n      return this.afterIcon;\n    },\n\n    isInternal() {\n      return this.options?.internal;\n    }\n  }\n};\n</script>\n\n<template>\n  <n-link\n    v-if=\"isInternal && href\"\n    :to=\"href\"\n    class=\"link-text-icon\"\n  >\n    <i\n      v-if=\"beforeIconClass\"\n      :class=\"beforeIconClass\"\n      class=\"prefix\"\n    />\n    {{ label }}\n    <i\n      v-if=\"afterIconClass\"\n      :class=\"afterIconClass\"\n      class=\"suffix\"\n    />\n  </n-link>\n  <a\n    v-else-if=\"href\"\n    :href=\"href\"\n    :rel=\"rel\"\n    :target=\"target\"\n    class=\"link-text-icon\"\n  >\n    <i\n      v-if=\"beforeIconClass\"\n      :class=\"beforeIconClass\"\n      class=\"prefix\"\n    />\n    {{ label }}\n    <i\n      v-if=\"afterIconClass\"\n      :class=\"afterIconClass\"\n      class=\"suffix\"\n    />\n  </a>\n  <span v-else> {{ href }} {{ label }}</span>\n</template>\n<style lang=\"scss\" scoped>\n.link-text-icon {\n  display: flex;\n  align-items: top;\n\n  .prefix {\n    margin: 2px 2px 0 0;\n  }\n\n  .suffix {\n    margin: 2px 0 0 2px;\n  }\n}\n</style>\n"]}]}