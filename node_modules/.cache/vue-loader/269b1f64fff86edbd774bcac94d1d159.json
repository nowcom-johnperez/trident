{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/serviceaccount.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/serviceaccount.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgQ3J1UmVzb3VyY2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ3J1UmVzb3VyY2UnOwppbXBvcnQgTmFtZU5zRGVzY3JpcHRpb24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9OYW1lTnNEZXNjcmlwdGlvbic7CmltcG9ydCBMYWJlbHMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbHMnOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWInOwppbXBvcnQgVGFiYmVkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZCc7CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCB7IFNFQ1JFVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBUWVBFUyBhcyBTRUNSRVRfVFlQRVMgfSBmcm9tICdAc2hlbGwvbW9kZWxzL3NlY3JldCc7CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlcnZpY2VBY2NvdW50JywKCiAgY29tcG9uZW50czogewogICAgQ3J1UmVzb3VyY2UsCiAgICBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIENoZWNrYm94LAogICAgTGFiZWxzLAogICAgVGFiLAogICAgVGFiYmVkLAogICAgTGFiZWxlZFNlbGVjdAogIH0sCgogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NyZWF0ZScKICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIHRoaXMuYWxsU2VjcmV0cyA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKGBjbHVzdGVyL2ZpbmRBbGxgLCB7IHR5cGU6IFNFQ1JFVCB9KTsKICB9LAoKICBtaXhpbnM6IFtDcmVhdGVFZGl0Vmlld10sCiAgZGF0YSgpIHsKICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAnYXV0b21vdW50U2VydmljZUFjY291bnRUb2tlbicsIHRoaXMudmFsdWUuYXV0b21vdW50U2VydmljZUFjY291bnRUb2tlbiB8fCBmYWxzZSk7CgogICAgcmV0dXJuIHsgYWxsU2VjcmV0czogW10gfTsKICB9LAoKICBjb21wdXRlZDogewogICAgbmFtZXNwYWNlZFNlY3JldHMoKSB7CiAgICAgIGNvbnN0IG5hbWVzcGFjZSA9IHRoaXMudmFsdWU/Lm1ldGFkYXRhPy5uYW1lc3BhY2U7CgogICAgICByZXR1cm4gdGhpcy5hbGxTZWNyZXRzLmZpbHRlcigoc2VjcmV0KSA9PiBzZWNyZXQubWV0YWRhdGEubmFtZXNwYWNlID09PSBuYW1lc3BhY2UgJiYgKHNlY3JldC5fdHlwZSA9PT0gU0VDUkVUX1RZUEVTLkRPQ0tFUiB8fCBzZWNyZXQuX3R5cGUgPT09IFNFQ1JFVF9UWVBFUy5ET0NLRVJfSlNPTikpOwogICAgfSwKCiAgICBpbWFnZVB1bGxTZWNyZXRzOiB7CiAgICAgIGdldCgpIHsKICAgICAgICBpZiAoIXRoaXMudmFsdWUuaW1hZ2VQdWxsU2VjcmV0cykgewogICAgICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdpbWFnZVB1bGxTZWNyZXRzJywgW10pOwogICAgICAgIH0KICAgICAgICBjb25zdCB7IGltYWdlUHVsbFNlY3JldHMgfSA9IHRoaXMudmFsdWU7CgogICAgICAgIHJldHVybiBpbWFnZVB1bGxTZWNyZXRzLm1hcCgoZWFjaCkgPT4gZWFjaC5uYW1lKTsKICAgICAgfSwKICAgICAgc2V0KG5ldSkgewogICAgICAgIGlmICh0aGlzLnZhbHVlLmltYWdlUHVsbFNlY3JldHMubGVuZ3RoIDwgMSkgewogICAgICAgICAgdGhpcy52YWx1ZS5pbWFnZVB1bGxTZWNyZXRzID0gbmV1Lm1hcCgoc2VjcmV0KSA9PiB7CiAgICAgICAgICAgIHJldHVybiB7IG5hbWU6IHNlY3JldCB9OwogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICAgIHRoaXMudmFsdWUuaW1hZ2VQdWxsU2VjcmV0cyA9IG5ldS5tYXAoKHNlY3JldCkgPT4gewogICAgICAgICAgZm9yIChjb25zdCB4IGluIHNlY3JldCkgewogICAgICAgICAgICBpZiAoeCA9PT0gJ21ldGFkYXRhJykgewogICAgICAgICAgICAgIHJldHVybiB7IG5hbWU6IHNlY3JldFt4XS5uYW1lIH07CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4geyBuYW1lOiBzZWNyZXQgfTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICB9LAoKfTsK"},{"version":3,"sources":["serviceaccount.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","file":"serviceaccount.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Labels from '@shell/components/form/Labels';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { SECRET } from '@shell/config/types';\nimport { TYPES as SECRET_TYPES } from '@shell/models/secret';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\n\nexport default {\n  name: 'ServiceAccount',\n\n  components: {\n    CruResource,\n    NameNsDescription,\n    Checkbox,\n    Labels,\n    Tab,\n    Tabbed,\n    LabeledSelect\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    this.allSecrets = await this.$store.dispatch(`cluster/findAll`, { type: SECRET });\n  },\n\n  mixins: [CreateEditView],\n  data() {\n    this.$set(this.value, 'automountServiceAccountToken', this.value.automountServiceAccountToken || false);\n\n    return { allSecrets: [] };\n  },\n\n  computed: {\n    namespacedSecrets() {\n      const namespace = this.value?.metadata?.namespace;\n\n      return this.allSecrets.filter((secret) => secret.metadata.namespace === namespace && (secret._type === SECRET_TYPES.DOCKER || secret._type === SECRET_TYPES.DOCKER_JSON));\n    },\n\n    imagePullSecrets: {\n      get() {\n        if (!this.value.imagePullSecrets) {\n          this.$set(this.value, 'imagePullSecrets', []);\n        }\n        const { imagePullSecrets } = this.value;\n\n        return imagePullSecrets.map((each) => each.name);\n      },\n      set(neu) {\n        if (this.value.imagePullSecrets.length < 1) {\n          this.value.imagePullSecrets = neu.map((secret) => {\n            return { name: secret };\n          });\n        }\n        this.value.imagePullSecrets = neu.map((secret) => {\n          for (const x in secret) {\n            if (x === 'metadata') {\n              return { name: secret[x].name };\n            }\n          }\n\n          return { name: secret };\n        });\n      }\n    },\n  },\n\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"!!value.metadata.name\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      :value=\"value\"\n      :mode=\"mode\"\n    />\n\n    <Tabbed :side-tabs=\"true\">\n      <Tab\n        name=\"data\"\n        :label=\"t('serviceAccount.tabs.serviceAccount.label')\"\n        :weight=\"2\"\n      >\n        <div class=\"row\">\n          <div class=\"col mt-20\">\n            <Checkbox\n              v-model=\"value.automountServiceAccountToken\"\n              :label=\"t('serviceAccount.automount')\"\n              type=\"checkbox\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col span-6 mt-20\">\n            <h3>{{ t('serviceAccount.imagePullSecrets') }}</h3>\n\n            <LabeledSelect\n              v-model=\"imagePullSecrets\"\n              :label=\"t('workload.container.imagePullSecrets')\"\n              :multiple=\"true\"\n              :options=\"namespacedSecrets\"\n              :mode=\"mode\"\n              option-label=\"metadata.name\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-20\" />\n      </Tab>\n      <Tab\n        name=\"labels-and-annotations\"\n        label-key=\"generic.labelsAndAnnotations\"\n        :weight=\"-1\"\n      >\n        <Labels\n          default-container-class=\"labels-and-annotations-container\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :display-side-by-side=\"false\"\n        />\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n"]}]}