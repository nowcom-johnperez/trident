{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ResourceTable.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ResourceTable.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IG1hcFByZWYsIEdST1VQX1JFU09VUkNFUyB9IGZyb20gJ0BzaGVsbC9zdG9yZS9wcmVmcyc7CmltcG9ydCBCdXR0b25Hcm91cCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9CdXR0b25Hcm91cCc7CmltcG9ydCBTb3J0YWJsZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1NvcnRhYmxlVGFibGUnOwppbXBvcnQgeyBOQU1FU1BBQ0UsIEFHRSB9IGZyb20gJ0BzaGVsbC9jb25maWcvdGFibGUtaGVhZGVycyc7CmltcG9ydCB7IGZpbmRCeSB9IGZyb20gJ0BzaGVsbC91dGlscy9hcnJheSc7CmltcG9ydCB7IEV4dGVuc2lvblBvaW50LCBUYWJsZUNvbHVtbkxvY2F0aW9uIH0gZnJvbSAnQHNoZWxsL2NvcmUvdHlwZXMnOwppbXBvcnQgeyBnZXRBcHBsaWNhYmxlRXh0ZW5zaW9uRW5oYW5jZW1lbnRzIH0gZnJvbSAnQHNoZWxsL2NvcmUvcGx1Z2luLWhlbHBlcnMnOwoKLy8gRGVmYXVsdCBncm91cC1ieSBpbiB0aGUgY2FzZSB0aGUgZ3JvdXAgc3RvcmVkIGluIHRoZSBwcmVmZXJlbmNlIGRvZXMgbm90IGFwcGx5CmNvbnN0IERFRkFVTFRfR1JPVVAgPSAnbmFtZXNwYWNlJzsKCmV4cG9ydCBjb25zdCBkZWZhdWx0VGFibGVTb3J0R2VuZXJhdGlvbkZuID0gKHNjaGVtYSwgJHN0b3JlKSA9PiB7CiAgaWYgKCAhc2NoZW1hICkgewogICAgcmV0dXJuIG51bGw7CiAgfQoKICBjb25zdCByZXNvdXJjZSA9IHNjaGVtYS5pZDsKICBsZXQgc29ydEtleSA9IHJlc291cmNlOwoKICBjb25zdCBpblN0b3JlID0gJHN0b3JlLmdldHRlcnNbJ2N1cnJlbnRTdG9yZSddKHJlc291cmNlKTsKICBjb25zdCBnZW5lcmF0aW9uID0gJHN0b3JlLmdldHRlcnNbYCR7IGluU3RvcmUgfS9jdXJyZW50R2VuZXJhdGlvbmBdPy4ocmVzb3VyY2UpOwoKICBpZiAoIGdlbmVyYXRpb24gKSB7CiAgICBzb3J0S2V5ICs9IGAvJHsgZ2VuZXJhdGlvbiB9YDsKICB9CgogIGNvbnN0IG5zRmlsdGVyS2V5ID0gJHN0b3JlLmdldHRlcnNbJ2FjdGl2ZU5hbWVzcGFjZUNhY2hlS2V5J107CgogIGlmICggbnNGaWx0ZXJLZXkgKSB7CiAgICByZXR1cm4gYCR7IHNvcnRLZXkgfS8keyBuc0ZpbHRlcktleSB9YDsKICB9CgogIC8vIGNvdmVycyBjYXNlIHdoZXJlIHdlIGhhdmUgbm8gY3VycmVudCBjbHVzdGVyJ3MgbnMgY2FjaGUKICByZXR1cm4gc29ydEtleTsKfTsKCmV4cG9ydCBkZWZhdWx0IHsKCiAgbmFtZTogJ1Jlc291cmNlVGFibGUnLAoKICBjb21wb25lbnRzOiB7IEJ1dHRvbkdyb3VwLCBTb3J0YWJsZVRhYmxlIH0sCgogIHByb3BzOiB7CiAgICBzY2hlbWE6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsLAogICAgfSwKCiAgICByb3dzOiB7CiAgICAgIHR5cGU6ICAgICBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCgogICAgbG9hZGluZzogewogICAgICB0eXBlOiAgICAgQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAoKICAgIGtleUZpZWxkOiB7CiAgICAgIC8vIEZpZWxkIHRoYXQgaXMgdW5pcXVlIGZvciBlYWNoIHJvdy4KICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnX2tleScsCiAgICB9LAoKICAgIGhlYWRlcnM6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAoKICAgIGdyb3VwQnk6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIG5hbWVzcGFjZWQ6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogbnVsbCwgLy8gQXV0b21hdGljIGZyb20gc2NoZW1hCiAgICB9LAoKICAgIHNlYXJjaDogewogICAgICAvLyBTaG93IHNlYXJjaCBpbnB1dCB0byBmaWx0ZXIgcm93cwogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAoKICAgIHRhYmxlQWN0aW9uczogewogICAgICAvLyBTaG93IGJ1bGsgdGFibGUgYWN0aW9ucwogICAgICB0eXBlOiAgICBbQm9vbGVhbiwgbnVsbF0sCiAgICAgIGRlZmF1bHQ6IG51bGwKICAgIH0sCgogICAgcGFnaW5nTGFiZWw6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnc29ydGFibGVUYWJsZS5wYWdpbmcucmVzb3VyY2UnLAogICAgfSwKCiAgICByb3dBY3Rpb25zOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICB9LAoKICAgIGdyb3VwYWJsZTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBudWxsLCAvLyBOdWxsOiBhdXRvIGJhc2VkIG9uIG5hbWVzcGFjZWQgYW5kIHR5cGUgY3VzdG9tIGdyb3VwaW5ncwogICAgfSwKCiAgICBncm91cFRvb2x0aXA6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAncmVzb3VyY2VUYWJsZS5ncm91cEJ5Lm5hbWVzcGFjZScsCiAgICB9LAoKICAgIG92ZXJmbG93WDogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIG92ZXJmbG93WTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHNvcnRHZW5lcmF0aW9uRm46IHsKICAgICAgdHlwZTogICAgRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAogICAgZ2V0Q3VzdG9tRGV0YWlsTGluazogewogICAgICB0eXBlOiAgICBGdW5jdGlvbiwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKCiAgICBpZ25vcmVGaWx0ZXI6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBoYXNBZHZhbmNlZEZpbHRlcmluZzogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGFkdkZpbHRlckhpZGVMYWJlbHNBc0NvbHM6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBhZHZGaWx0ZXJQcmV2ZW50RmlsdGVyaW5nTGFiZWxzOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLyoqCiAgICAgKiBBbGxvd3MgZm9yIHRoZSB1c2FnZSBvZiBhIHF1ZXJ5IHBhcmFtIHRvIHdvcmsgZm9yIHNpbXBsZSBmaWx0ZXJpbmcgKHEpCiAgICAgKi8KICAgIHVzZVF1ZXJ5UGFyYW1zRm9yU2ltcGxlRmlsdGVyaW5nOiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLyoqCiAgICAgKiBNYW5hdWwgZm9yY2UgdGhlIHVwZGF0ZSBvZiBsaXZlIGFuZCBkZWxheWVkIGNlbGxzLiBDaGFuZ2UgdGhpcyBudW1iZXIgdG8ga2ljayBvZmYgdGhlIHVwZGF0ZQogICAgICovCiAgICBmb3JjZVVwZGF0ZUxpdmVBbmREZWxheWVkOiB7CiAgICAgIHR5cGU6ICAgIE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICAvKioKICAgICAqIHYtc2hvcnRrZXkgcHJldmVudHMgdGhlIGV2ZW50J3MgcHJvcGFnYXRpb246CiAgICAgKiBodHRwczovL2dpdGh1Yi5jb20vZmdyLWFyYXVqby92dWUtc2hvcnRrZXkvYmxvYi81NWQ4MDJlYTMwNWNhZGNjMmVhOTcwYjU1YTNiOGI4NmM3YjQ0YzA1L3NyYy9pbmRleC5qcyNMMTU2LUwxNTcKICAgICAqCiAgICAgKiAnRW50ZXInIGtleSBwcmVzcyBpcyBoYW5kbGVkIHZpYSBldmVudCBsaXN0ZW5lciBpbiBvcmRlciB0byBhbGxvdyB0aGUgZXZlbnQgcHJvcGFnYXRpb24KICAgICAqLwogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5oYW5kbGVFbnRlcktleVByZXNzKTsKICB9LAoKICBiZWZvcmVEZXN0cm95KCkgewogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleXVwJywgdGhpcy5oYW5kbGVFbnRlcktleVByZXNzKTsKICB9LAoKICBkYXRhKCkgewogICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMuJHN0b3JlLmdldHRlcnNbYHR5cGUtbWFwL29wdGlvbnNGb3JgXSh0aGlzLnNjaGVtYSk7CiAgICBjb25zdCBsaXN0R3JvdXBzID0gb3B0aW9ucz8ubGlzdEdyb3VwcyB8fCBbXTsKICAgIGNvbnN0IGxpc3RHcm91cE1hcHBlZCA9IGxpc3RHcm91cHMucmVkdWNlKChhY2MsIGdycCkgPT4gewogICAgICBhY2NbZ3JwLnZhbHVlXSA9IGdycDsKCiAgICAgIHJldHVybiBhY2M7CiAgICB9LCB7fSk7CgogICAgLy8gQ29uZmlybSB3aGljaCBzdG9yZSB3ZSdyZSBpbiwgaWYgc2NoZW1hIGlzbid0IGF2YWlsYWJsZSB3ZSdyZSBwcm9iYWJseSBzaG93aW5nIGEgbGlzdCB3aXRoIGRpZmZlcmVudCB0eXBlcwogICAgY29uc3QgaW5TdG9yZSA9IHRoaXMuc2NoZW1hPy5pZCA/IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2N1cnJlbnRTdG9yZSddKHRoaXMuc2NoZW1hLmlkKSA6IHVuZGVmaW5lZDsKCiAgICByZXR1cm4gewogICAgICBsaXN0R3JvdXBzLCBsaXN0R3JvdXBNYXBwZWQsIGluU3RvcmUKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWydjdXJyZW50UHJvZHVjdCddKSwKICAgIGlzTmFtZXNwYWNlZCgpIHsKICAgICAgaWYgKCB0aGlzLm5hbWVzcGFjZWQgIT09IG51bGwgKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubmFtZXNwYWNlZDsKICAgICAgfQoKICAgICAgcmV0dXJuICEhZ2V0KCB0aGlzLnNjaGVtYSwgJ2F0dHJpYnV0ZXMubmFtZXNwYWNlZCcpOwogICAgfSwKCiAgICBzaG93TmFtZXNwYWNlQ29sdW1uKCkgewogICAgICBjb25zdCBncm91cE5hbWVzcGFjZXMgPSB0aGlzLmdyb3VwID09PSAnbmFtZXNwYWNlJzsKICAgICAgY29uc3Qgb3V0ID0gIXRoaXMuc2hvd0dyb3VwaW5nIHx8ICFncm91cE5hbWVzcGFjZXM7CgogICAgICByZXR1cm4gb3V0OwogICAgfSwKCiAgICBfc2hvd0J1bGtBY3Rpb25zKCkgewogICAgICBpZiAodGhpcy50YWJsZUFjdGlvbnMgIT09IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy50YWJsZUFjdGlvbnM7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5zY2hlbWEpIHsKICAgICAgICBjb25zdCBoaWRlVGFibGVBY3Rpb25zID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sndHlwZS1tYXAvaGlkZUJ1bGtBY3Rpb25zRm9yJ10odGhpcy5zY2hlbWEpOwoKICAgICAgICByZXR1cm4gIWhpZGVUYWJsZUFjdGlvbnM7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCgogICAgX2hlYWRlcnMoKSB7CiAgICAgIGxldCBoZWFkZXJzOwogICAgICBjb25zdCBzaG93TmFtZXNwYWNlID0gdGhpcy5zaG93TmFtZXNwYWNlQ29sdW1uOwoKICAgICAgaWYgKCB0aGlzLmhlYWRlcnMgKSB7CiAgICAgICAgaGVhZGVycyA9IHRoaXMuaGVhZGVycy5zbGljZSgpOwogICAgICB9IGVsc2UgewogICAgICAgIGhlYWRlcnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9oZWFkZXJzRm9yJ10odGhpcy5zY2hlbWEpOwogICAgICB9CgogICAgICAvLyBhZGQgY3VzdG9tIHRhYmxlIGNvbHVtbnMgcHJvdmlkZWQgYnkgdGhlIGV4dGVuc2lvbnMgRXh0ZW5zaW9uUG9pbnQuVEFCTEVfQ09MIGhvb2sKICAgICAgLy8gZ2F0ZSBpdCBzbyB0aGF0IHdlIHByZXZlbnQgZXJyb3JzIG9uIG9sZGVyIHZlcnNpb25zIG9mIGRhc2hib2FyZAogICAgICBpZiAodGhpcy4kc3RvcmUuJHBsdWdpbj8uZ2V0VUlDb25maWcpIHsKICAgICAgICBjb25zdCBleHRlbnNpb25Db2xzID0gZ2V0QXBwbGljYWJsZUV4dGVuc2lvbkVuaGFuY2VtZW50cyh0aGlzLCBFeHRlbnNpb25Qb2ludC5UQUJMRV9DT0wsIFRhYmxlQ29sdW1uTG9jYXRpb24uUkVTT1VSQ0UsIHRoaXMuJHJvdXRlKTsKCiAgICAgICAgLy8gVHJ5IGFuZCBpbnNlcnQgdGhlIGNvbHVtbnMgYmVmb3JlIHRoZSBBZ2UgY29sdW1uCiAgICAgICAgbGV0IGluc2VydFBvc2l0aW9uID0gaGVhZGVycy5sZW5ndGg7CgogICAgICAgIGlmIChoZWFkZXJzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGNvbnN0IGFnZUNvbEluZGV4ID0gaGVhZGVycy5maW5kSW5kZXgoKGgpID0+IGgubmFtZSA9PT0gQUdFLm5hbWUpOwoKICAgICAgICAgIGlmIChhZ2VDb2xJbmRleCA+PSAwKSB7CiAgICAgICAgICAgIGluc2VydFBvc2l0aW9uID0gYWdlQ29sSW5kZXg7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyB3ZSd2ZSBmb3VuZCBzb21lIGxhYmVscyB3aXRoICcgJywgd2hpY2ggaXNuJ3QgbmVjZXNzYXJpbHkgZW1wdHkgKGV4cGxvcmUgYWN0aW9uL2J1dHRvbikKICAgICAgICAgICAgLy8gaWYgd2UgYXJlIHRvIGFkZCBjb2xzLCBsZXQncyBwdXNoIHRoZW0gYmVmb3JlIHRoZXNlIHNvIHRoYXQgdGhlIFVJIGRvZXNuJ3QgbG9vayB3ZWlyZAogICAgICAgICAgICBjb25zdCBsYXN0VmlhYmxlQ29sSW5kZXggPSBoZWFkZXJzLmZpbmRJbmRleCgoaCkgPT4gKCFoLmxhYmVsIHx8ICFoLmxhYmVsPy50cmltKCkpICYmICghaC5sYWJlbEtleSB8fCAhaC5sYWJlbEtleT8udHJpbSgpKSk7CgogICAgICAgICAgICBpZiAobGFzdFZpYWJsZUNvbEluZGV4ID49IDApIHsKICAgICAgICAgICAgICBpbnNlcnRQb3NpdGlvbiA9IGxhc3RWaWFibGVDb2xJbmRleDsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgLy8gYWRkaW5nIGV4dGVuc2lvbiBkZWZpbmVkIGNvbHMgdG8gdGhlIGNvcnJlY3QgaGVhZGVyIGNvbmZpZwogICAgICAgIGV4dGVuc2lvbkNvbHMuZm9yRWFjaCgoY29sKSA9PiB7CiAgICAgICAgICAvLyB3ZSBuZWVkIHRoZSAndmFsdWUnIHByb3AgdG8gYmUgcG9wdWxhdGVkIGluIG9yZGVyIGZvciB0aGUgcm93cyB0byBzaG93IHRoZSB2YWx1ZXMKICAgICAgICAgIGlmICghY29sLnZhbHVlICYmIGNvbC5nZXRWYWx1ZSkgewogICAgICAgICAgICBjb2wudmFsdWUgPSBjb2wuZ2V0VmFsdWU7CiAgICAgICAgICB9CiAgICAgICAgICBoZWFkZXJzLnNwbGljZShpbnNlcnRQb3NpdGlvbiwgMCwgY29sKTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgLy8gSWYgb25seSBvbmUgbmFtZXNwYWNlIGlzIHNlbGVjdGVkLCBoaWRlIHRoZSBuYW1lc3BhY2UgY29sdW1uCiAgICAgIGlmICggIXNob3dOYW1lc3BhY2UgKSB7CiAgICAgICAgY29uc3QgaWR4ID0gaGVhZGVycy5maW5kSW5kZXgoKGhlYWRlcikgPT4gaGVhZGVyLm5hbWUgPT09IE5BTUVTUEFDRS5uYW1lKTsKCiAgICAgICAgaWYgKCBpZHggPj0gMCApIHsKICAgICAgICAgIGhlYWRlcnMuc3BsaWNlKGlkeCwgMSk7CiAgICAgICAgfQogICAgICB9CgogICAgICAvLyBJZiB3ZSBhcmUgZ3JvdXBpbmcgYnkgYSBjdXN0b20gZ3JvdXAsIGl0IG1heSBzcGVjaWZ5IHRoYXQgd2UgaGlkZSBhIHNwZWNpZmljIGNvbHVtbgogICAgICBjb25zdCBjdXN0b20gPSB0aGlzLmxpc3RHcm91cE1hcHBlZFt0aGlzLmdyb3VwXTsKCiAgICAgIGlmIChjdXN0b20/LmhpZGVDb2x1bW4pIHsKICAgICAgICBjb25zdCBpZHggPSBoZWFkZXJzLmZpbmRJbmRleCgoaGVhZGVyKSA9PiBoZWFkZXIubmFtZSA9PT0gY3VzdG9tLmhpZGVDb2x1bW4pOwoKICAgICAgICBpZiAoIGlkeCA+PSAwICkgewogICAgICAgICAgaGVhZGVycy5zcGxpY2UoaWR4LCAxKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHJldHVybiBoZWFkZXJzOwogICAgfSwKCiAgICBmaWx0ZXJlZFJvd3MoKSB7CiAgICAgIGNvbnN0IGlzQWxsID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snaXNBbGxOYW1lc3BhY2VzJ107CgogICAgICAvLyBEbyB3ZSBuZWVkIHRvIGZpbHRlciBieSBuYW1lc3BhY2UgbGlrZSB0aGluZ3M/CiAgICAgIGlmICgKICAgICAgICAhdGhpcy5pc05hbWVzcGFjZWQgfHwgLy8gUmVzb3VyY2UgdHlwZSBpc24ndCBuYW1lc3BhY2VkCiAgICAgICAgdGhpcy5pZ25vcmVGaWx0ZXIgfHwgLy8gQ29tcG9uZW50IG93bmVyIHN0cmljdGx5IHN0YXRlcyBubyBmaWx0ZXJpbmcKICAgICAgICAoaXNBbGwgJiYgIXRoaXMuY3VycmVudFByb2R1Y3Q/LmhpZGVTeXN0ZW1SZXNvdXJjZXMpIHx8IC8vIE5lZWQgYWxsCiAgICAgICAgKHRoaXMuaW5TdG9yZSA/IHRoaXMuJHN0b3JlLmdldHRlcnNbYCR7IHRoaXMuaW5TdG9yZSB9L2hhdmVOYW1lc3BhY2VgXSh0aGlzLnNjaGVtYS5pZCk/Lmxlbmd0aCA6IGZhbHNlKS8vIFN0b3JlIHJlcG9ydHMgdHlwZSBoYXMgbmFtZXNwYWNlIGZpbHRlciwgc28gcm93cyBhbHJlYWR5IGNvbnRhaW4gdGhlIGNvcnJlY3RseSBmaWx0ZXJlZCByZXNvdXJjZXMKICAgICAgKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucm93cyB8fCBbXTsKICAgICAgfQoKICAgICAgY29uc3QgaW5jbHVkZWROYW1lc3BhY2VzID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snbmFtZXNwYWNlcyddKCk7CgogICAgICAvLyBTaG91bGRuJ3QgaGFwcGVuLCBidXQgZG9lcyBmb3IgcmVzb3VyY2VzIGxpa2UgbWFuYWdlbWVudC5jYXR0bGUuaW8ucHJlZmVyZW5jZQogICAgICBpZiAoIXRoaXMucm93cykgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQoKICAgICAgY29uc3QgaGF2ZUFsbE5hbWVzcGFjZSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2hhdmVBbGxOYW1lc3BhY2UnXTsKCiAgICAgIHJldHVybiB0aGlzLnJvd3MuZmlsdGVyKChyb3cpID0+IHsKICAgICAgICBpZiAodGhpcy5jdXJyZW50UHJvZHVjdD8uaGlkZVN5c3RlbVJlc291cmNlcyAmJiB0aGlzLmlzTmFtZXNwYWNlZCkgewogICAgICAgICAgcmV0dXJuICEhaW5jbHVkZWROYW1lc3BhY2VzW3Jvdy5tZXRhZGF0YS5uYW1lc3BhY2VdICYmICFyb3cuaXNTeXN0ZW1SZXNvdXJjZTsKICAgICAgICB9IGVsc2UgaWYgKCF0aGlzLmlzTmFtZXNwYWNlZCkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIGlmIChoYXZlQWxsTmFtZXNwYWNlKSB7CiAgICAgICAgICAvLyBgcm93c2Agb25seSBjb250YWlucyByZXNvdXJjZSBmcm9tIGEgc2luZ2xlIG5hbWVzcGFjZQogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHJldHVybiAhIWluY2x1ZGVkTmFtZXNwYWNlc1tyb3cubWV0YWRhdGEubmFtZXNwYWNlXTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICBfZ3JvdXA6IG1hcFByZWYoR1JPVVBfUkVTT1VSQ0VTKSwKCiAgICAvLyBUaGUgZ3JvdXAgc3RvcmVkIGluIHRoZSBwcmVmZXJlbmNlIChhYm92ZSkgbWlnaHQgbm90IGJlIHZhbGlkIGZvciB0aGlzIHJlc291cmNlIHRhYmxlIC0gc28gZW5zdXJlIHdlCiAgICAvLyBjaG9vc2UgYSBncm91cCB0aGF0IGlzIGFwcGxpY2FibGUgKHRoZSBkZWZhdWx0KQogICAgLy8gVGhpcyBzYXZlcyB1cyBmcm9tIGhhdmluZyB0byBzdG9yZSBhIGdyb3VwIHByZWZlcmVuY2UgcGVyIHJlc291cmNlIHR5cGUgLSBnaXZlbiB0aGF0IGN1c3RvbSBncm91cGluZ3MgYWVyIG5vdCB1c2VkIG11Y2gKICAgIC8vIGFuZCBpdCBmZWVscyBsaWtlIGEgZ29vZCBVWCB0byBiZSBhYmxlIHRvIGtlZXAgdGhlIG5hbWVzcGFjZS9mbGF0IGdyb3VwaW5nIGFjcm9zcyB0YWJsZXMKICAgIGdyb3VwOiB7CiAgICAgIGdldCgpIHsKICAgICAgICAvLyBDaGVjayBncm91cCBpcyB2YWxpZAogICAgICAgIGNvbnN0IGV4aXN0cyA9IHRoaXMuZ3JvdXBPcHRpb25zLmZpbmQoKGcpID0+IGcudmFsdWUgPT09IHRoaXMuX2dyb3VwKTsKCiAgICAgICAgaWYgKCFleGlzdHMpIHsKICAgICAgICAgIHJldHVybiBERUZBVUxUX0dST1VQOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRoaXMuX2dyb3VwOwogICAgICB9LAogICAgICBzZXQodmFsdWUpIHsKICAgICAgICB0aGlzLl9ncm91cCA9IHZhbHVlOwogICAgICB9CiAgICB9LAoKICAgIHNob3dHcm91cGluZygpIHsKICAgICAgaWYgKCB0aGlzLmdyb3VwYWJsZSA9PT0gbnVsbCApIHsKICAgICAgICBjb25zdCBuYW1lc3BhY2VHcm91cGFibGUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpc011bHRpcGxlTmFtZXNwYWNlcyddICYmIHRoaXMuaXNOYW1lc3BhY2VkOwogICAgICAgIGNvbnN0IGN1c3RvbUdyb3VwYWJsZSA9IHRoaXMubGlzdEdyb3Vwcy5sZW5ndGggPiAwOwoKICAgICAgICByZXR1cm4gbmFtZXNwYWNlR3JvdXBhYmxlIHx8IGN1c3RvbUdyb3VwYWJsZTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuZ3JvdXBhYmxlIHx8IGZhbHNlOwogICAgfSwKCiAgICBjb21wdXRlZEdyb3VwQnkoKSB7CiAgICAgIGlmICggdGhpcy5ncm91cEJ5ICkgewogICAgICAgIHJldHVybiB0aGlzLmdyb3VwQnk7CiAgICAgIH0KCiAgICAgIGlmICggdGhpcy5ncm91cCA9PT0gJ25hbWVzcGFjZScgJiYgdGhpcy5zaG93R3JvdXBpbmcgKSB7CiAgICAgICAgcmV0dXJuICdncm91cEJ5TGFiZWwnOwogICAgICB9CgogICAgICBjb25zdCBjdXN0b20gPSB0aGlzLmxpc3RHcm91cE1hcHBlZFt0aGlzLmdyb3VwXTsKCiAgICAgIGlmIChjdXN0b20gJiYgY3VzdG9tLmZpZWxkKSB7CiAgICAgICAgcmV0dXJuIGN1c3RvbS5maWVsZDsKICAgICAgfQoKICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAoKICAgIGdyb3VwT3B0aW9ucygpIHsKICAgICAgY29uc3Qgc3RhbmRhcmQgPSBbCiAgICAgICAgewogICAgICAgICAgdG9vbHRpcEtleTogJ3Jlc291cmNlVGFibGUuZ3JvdXBCeS5ub25lJywKICAgICAgICAgIGljb246ICAgICAgICdpY29uLWxpc3QtZmxhdCcsCiAgICAgICAgICB2YWx1ZTogICAgICAnbm9uZScsCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICB0b29sdGlwS2V5OiB0aGlzLmdyb3VwVG9vbHRpcCwKICAgICAgICAgIGljb246ICAgICAgICdpY29uLWZvbGRlcicsCiAgICAgICAgICB2YWx1ZTogICAgICAnbmFtZXNwYWNlJywKICAgICAgICB9LAogICAgICBdOwoKICAgICAgcmV0dXJuIHN0YW5kYXJkLmNvbmNhdCh0aGlzLmxpc3RHcm91cHMpOwogICAgfSwKCiAgICBwYWdpbmdQYXJhbXMoKSB7CiAgICAgIGlmICggIXRoaXMuc2NoZW1hICkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBzaW5ndWxhckxhYmVsOiAnJywKICAgICAgICAgIHBsdXJhbExhYmVsOiAgICcnCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICBzaW5ndWxhckxhYmVsOiB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9sYWJlbEZvciddKHRoaXMuc2NoZW1hKSwKICAgICAgICBwbHVyYWxMYWJlbDogICB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9sYWJlbEZvciddKHRoaXMuc2NoZW1hLCA5OSksCiAgICAgIH07CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIGtleUFjdGlvbihhY3Rpb24pIHsKICAgICAgY29uc3QgdGFibGUgPSB0aGlzLiRyZWZzLnRhYmxlOwoKICAgICAgaWYgKCAhdGFibGUgKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBzZWxlY3Rpb24gPSB0YWJsZS5zZWxlY3RlZFJvd3M7CgogICAgICBpZiAoIGFjdGlvbiA9PT0gJ3JlbW92ZScgKSB7CiAgICAgICAgY29uc3QgYWN0ID0gZmluZEJ5KHRhYmxlLmF2YWlsYWJsZUFjdGlvbnMsICdhY3Rpb24nLCAncHJvbXB0UmVtb3ZlJyk7CgogICAgICAgIGlmICggYWN0ICkgewogICAgICAgICAgdGFibGUuc2V0QnVsa0FjdGlvbk9mSW50ZXJlc3QoYWN0KTsKICAgICAgICAgIHRhYmxlLmFwcGx5VGFibGVBY3Rpb24oYWN0KTsKICAgICAgICB9CgogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKCBzZWxlY3Rpb24ubGVuZ3RoICE9PSAxICkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgc3dpdGNoICggYWN0aW9uICkgewogICAgICBjYXNlICdkZXRhaWwnOgogICAgICAgIHNlbGVjdGlvblswXS5nb1RvRGV0YWlsKCk7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgJ2VkaXQnOgogICAgICAgIHNlbGVjdGlvblswXS5nb1RvRWRpdCgpOwogICAgICAgIGJyZWFrOwogICAgICBjYXNlICd5YW1sJzoKICAgICAgICBzZWxlY3Rpb25bMF0uZ29Ub1ZpZXdZYW1sKCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCgogICAgY2xlYXJTZWxlY3Rpb24oKSB7CiAgICAgIHRoaXMuJHJlZnMudGFibGUuY2xlYXJTZWxlY3Rpb24oKTsKICAgIH0sCgogICAgc2FmZVNvcnRHZW5lcmF0aW9uRm4oKSB7CiAgICAgIGlmICh0aGlzLnNvcnRHZW5lcmF0aW9uRm4pIHsKICAgICAgICByZXR1cm4gdGhpcy5zb3J0R2VuZXJhdGlvbkZuKHRoaXMuc2NoZW1hLCB0aGlzLiRzdG9yZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBkZWZhdWx0VGFibGVTb3J0R2VuZXJhdGlvbkZuKHRoaXMuc2NoZW1hLCB0aGlzLiRzdG9yZSk7CiAgICB9LAoKICAgIGhhbmRsZUFjdGlvbkJ1dHRvbkNsaWNrKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NsaWNrZWRBY3Rpb25CdXR0b24nLCBldmVudCk7CiAgICB9LAoKICAgIGhhbmRsZUVudGVyS2V5UHJlc3MoZXZlbnQpIHsKICAgICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykgewogICAgICAgIHRoaXMua2V5QWN0aW9uKCdkZXRhaWwnKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["ResourceTable.vue"],"names":[],"mappingsfile":"ResourceTable.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { get } from '@shell/utils/object';\nimport { mapPref, GROUP_RESOURCES } from '@shell/store/prefs';\nimport ButtonGroup from '@shell/components/ButtonGroup';\nimport SortableTable from '@shell/components/SortableTable';\nimport { NAMESPACE, AGE } from '@shell/config/table-headers';\nimport { findBy } from '@shell/utils/array';\nimport { ExtensionPoint, TableColumnLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\n\n// Default group-by in the case the group stored in the preference does not apply\nconst DEFAULT_GROUP = 'namespace';\n\nexport const defaultTableSortGenerationFn = (schema, $store) => {\n  if ( !schema ) {\n    return null;\n  }\n\n  const resource = schema.id;\n  let sortKey = resource;\n\n  const inStore = $store.getters['currentStore'](resource);\n  const generation = $store.getters[`${ inStore }/currentGeneration`]?.(resource);\n\n  if ( generation ) {\n    sortKey += `/${ generation }`;\n  }\n\n  const nsFilterKey = $store.getters['activeNamespaceCacheKey'];\n\n  if ( nsFilterKey ) {\n    return `${ sortKey }/${ nsFilterKey }`;\n  }\n\n  // covers case where we have no current cluster's ns cache\n  return sortKey;\n};\n\nexport default {\n\n  name: 'ResourceTable',\n\n  components: { ButtonGroup, SortableTable },\n\n  props: {\n    schema: {\n      type:    Object,\n      default: null,\n    },\n\n    rows: {\n      type:     Array,\n      required: true\n    },\n\n    loading: {\n      type:     Boolean,\n      required: false\n    },\n\n    keyField: {\n      // Field that is unique for each row.\n      type:    String,\n      default: '_key',\n    },\n\n    headers: {\n      type:    Array,\n      default: null,\n    },\n\n    groupBy: {\n      type:    String,\n      default: null\n    },\n\n    namespaced: {\n      type:    Boolean,\n      default: null, // Automatic from schema\n    },\n\n    search: {\n      // Show search input to filter rows\n      type:    Boolean,\n      default: true\n    },\n\n    tableActions: {\n      // Show bulk table actions\n      type:    [Boolean, null],\n      default: null\n    },\n\n    pagingLabel: {\n      type:    String,\n      default: 'sortableTable.paging.resource',\n    },\n\n    rowActions: {\n      type:    Boolean,\n      default: true,\n    },\n\n    groupable: {\n      type:    Boolean,\n      default: null, // Null: auto based on namespaced and type custom groupings\n    },\n\n    groupTooltip: {\n      type:    String,\n      default: 'resourceTable.groupBy.namespace',\n    },\n\n    overflowX: {\n      type:    Boolean,\n      default: false\n    },\n    overflowY: {\n      type:    Boolean,\n      default: false\n    },\n    sortGenerationFn: {\n      type:    Function,\n      default: null,\n    },\n    getCustomDetailLink: {\n      type:    Function,\n      default: null\n    },\n\n    ignoreFilter: {\n      type:    Boolean,\n      default: false\n    },\n    hasAdvancedFiltering: {\n      type:    Boolean,\n      default: false\n    },\n    advFilterHideLabelsAsCols: {\n      type:    Boolean,\n      default: false\n    },\n    advFilterPreventFilteringLabels: {\n      type:    Boolean,\n      default: false\n    },\n    /**\n     * Allows for the usage of a query param to work for simple filtering (q)\n     */\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    },\n    /**\n     * Manaul force the update of live and delayed cells. Change this number to kick off the update\n     */\n    forceUpdateLiveAndDelayed: {\n      type:    Number,\n      default: 0\n    }\n  },\n\n  mounted() {\n    /**\n     * v-shortkey prevents the event's propagation:\n     * https://github.com/fgr-araujo/vue-shortkey/blob/55d802ea305cadcc2ea970b55a3b8b86c7b44c05/src/index.js#L156-L157\n     *\n     * 'Enter' key press is handled via event listener in order to allow the event propagation\n     */\n    window.addEventListener('keyup', this.handleEnterKeyPress);\n  },\n\n  beforeDestroy() {\n    window.removeEventListener('keyup', this.handleEnterKeyPress);\n  },\n\n  data() {\n    const options = this.$store.getters[`type-map/optionsFor`](this.schema);\n    const listGroups = options?.listGroups || [];\n    const listGroupMapped = listGroups.reduce((acc, grp) => {\n      acc[grp.value] = grp;\n\n      return acc;\n    }, {});\n\n    // Confirm which store we're in, if schema isn't available we're probably showing a list with different types\n    const inStore = this.schema?.id ? this.$store.getters['currentStore'](this.schema.id) : undefined;\n\n    return {\n      listGroups, listGroupMapped, inStore\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentProduct']),\n    isNamespaced() {\n      if ( this.namespaced !== null ) {\n        return this.namespaced;\n      }\n\n      return !!get( this.schema, 'attributes.namespaced');\n    },\n\n    showNamespaceColumn() {\n      const groupNamespaces = this.group === 'namespace';\n      const out = !this.showGrouping || !groupNamespaces;\n\n      return out;\n    },\n\n    _showBulkActions() {\n      if (this.tableActions !== null) {\n        return this.tableActions;\n      } else if (this.schema) {\n        const hideTableActions = this.$store.getters['type-map/hideBulkActionsFor'](this.schema);\n\n        return !hideTableActions;\n      }\n\n      return false;\n    },\n\n    _headers() {\n      let headers;\n      const showNamespace = this.showNamespaceColumn;\n\n      if ( this.headers ) {\n        headers = this.headers.slice();\n      } else {\n        headers = this.$store.getters['type-map/headersFor'](this.schema);\n      }\n\n      // add custom table columns provided by the extensions ExtensionPoint.TABLE_COL hook\n      // gate it so that we prevent errors on older versions of dashboard\n      if (this.$store.$plugin?.getUIConfig) {\n        const extensionCols = getApplicableExtensionEnhancements(this, ExtensionPoint.TABLE_COL, TableColumnLocation.RESOURCE, this.$route);\n\n        // Try and insert the columns before the Age column\n        let insertPosition = headers.length;\n\n        if (headers.length > 0) {\n          const ageColIndex = headers.findIndex((h) => h.name === AGE.name);\n\n          if (ageColIndex >= 0) {\n            insertPosition = ageColIndex;\n          } else {\n            // we've found some labels with ' ', which isn't necessarily empty (explore action/button)\n            // if we are to add cols, let's push them before these so that the UI doesn't look weird\n            const lastViableColIndex = headers.findIndex((h) => (!h.label || !h.label?.trim()) && (!h.labelKey || !h.labelKey?.trim()));\n\n            if (lastViableColIndex >= 0) {\n              insertPosition = lastViableColIndex;\n            }\n          }\n        }\n\n        // adding extension defined cols to the correct header config\n        extensionCols.forEach((col) => {\n          // we need the 'value' prop to be populated in order for the rows to show the values\n          if (!col.value && col.getValue) {\n            col.value = col.getValue;\n          }\n          headers.splice(insertPosition, 0, col);\n        });\n      }\n\n      // If only one namespace is selected, hide the namespace column\n      if ( !showNamespace ) {\n        const idx = headers.findIndex((header) => header.name === NAMESPACE.name);\n\n        if ( idx >= 0 ) {\n          headers.splice(idx, 1);\n        }\n      }\n\n      // If we are grouping by a custom group, it may specify that we hide a specific column\n      const custom = this.listGroupMapped[this.group];\n\n      if (custom?.hideColumn) {\n        const idx = headers.findIndex((header) => header.name === custom.hideColumn);\n\n        if ( idx >= 0 ) {\n          headers.splice(idx, 1);\n        }\n      }\n\n      return headers;\n    },\n\n    filteredRows() {\n      const isAll = this.$store.getters['isAllNamespaces'];\n\n      // Do we need to filter by namespace like things?\n      if (\n        !this.isNamespaced || // Resource type isn't namespaced\n        this.ignoreFilter || // Component owner strictly states no filtering\n        (isAll && !this.currentProduct?.hideSystemResources) || // Need all\n        (this.inStore ? this.$store.getters[`${ this.inStore }/haveNamespace`](this.schema.id)?.length : false)// Store reports type has namespace filter, so rows already contain the correctly filtered resources\n      ) {\n        return this.rows || [];\n      }\n\n      const includedNamespaces = this.$store.getters['namespaces']();\n\n      // Shouldn't happen, but does for resources like management.cattle.io.preference\n      if (!this.rows) {\n        return [];\n      }\n\n      const haveAllNamespace = this.$store.getters['haveAllNamespace'];\n\n      return this.rows.filter((row) => {\n        if (this.currentProduct?.hideSystemResources && this.isNamespaced) {\n          return !!includedNamespaces[row.metadata.namespace] && !row.isSystemResource;\n        } else if (!this.isNamespaced) {\n          return true;\n        } else if (haveAllNamespace) {\n          // `rows` only contains resource from a single namespace\n          return true;\n        } else {\n          return !!includedNamespaces[row.metadata.namespace];\n        }\n      });\n    },\n\n    _group: mapPref(GROUP_RESOURCES),\n\n    // The group stored in the preference (above) might not be valid for this resource table - so ensure we\n    // choose a group that is applicable (the default)\n    // This saves us from having to store a group preference per resource type - given that custom groupings aer not used much\n    // and it feels like a good UX to be able to keep the namespace/flat grouping across tables\n    group: {\n      get() {\n        // Check group is valid\n        const exists = this.groupOptions.find((g) => g.value === this._group);\n\n        if (!exists) {\n          return DEFAULT_GROUP;\n        }\n\n        return this._group;\n      },\n      set(value) {\n        this._group = value;\n      }\n    },\n\n    showGrouping() {\n      if ( this.groupable === null ) {\n        const namespaceGroupable = this.$store.getters['isMultipleNamespaces'] && this.isNamespaced;\n        const customGroupable = this.listGroups.length > 0;\n\n        return namespaceGroupable || customGroupable;\n      }\n\n      return this.groupable || false;\n    },\n\n    computedGroupBy() {\n      if ( this.groupBy ) {\n        return this.groupBy;\n      }\n\n      if ( this.group === 'namespace' && this.showGrouping ) {\n        return 'groupByLabel';\n      }\n\n      const custom = this.listGroupMapped[this.group];\n\n      if (custom && custom.field) {\n        return custom.field;\n      }\n\n      return null;\n    },\n\n    groupOptions() {\n      const standard = [\n        {\n          tooltipKey: 'resourceTable.groupBy.none',\n          icon:       'icon-list-flat',\n          value:      'none',\n        },\n        {\n          tooltipKey: this.groupTooltip,\n          icon:       'icon-folder',\n          value:      'namespace',\n        },\n      ];\n\n      return standard.concat(this.listGroups);\n    },\n\n    pagingParams() {\n      if ( !this.schema ) {\n        return {\n          singularLabel: '',\n          pluralLabel:   ''\n        };\n      }\n\n      return {\n        singularLabel: this.$store.getters['type-map/labelFor'](this.schema),\n        pluralLabel:   this.$store.getters['type-map/labelFor'](this.schema, 99),\n      };\n    },\n  },\n\n  methods: {\n    keyAction(action) {\n      const table = this.$refs.table;\n\n      if ( !table ) {\n        return;\n      }\n\n      const selection = table.selectedRows;\n\n      if ( action === 'remove' ) {\n        const act = findBy(table.availableActions, 'action', 'promptRemove');\n\n        if ( act ) {\n          table.setBulkActionOfInterest(act);\n          table.applyTableAction(act);\n        }\n\n        return;\n      }\n\n      if ( selection.length !== 1 ) {\n        return;\n      }\n\n      switch ( action ) {\n      case 'detail':\n        selection[0].goToDetail();\n        break;\n      case 'edit':\n        selection[0].goToEdit();\n        break;\n      case 'yaml':\n        selection[0].goToViewYaml();\n        break;\n      }\n    },\n\n    clearSelection() {\n      this.$refs.table.clearSelection();\n    },\n\n    safeSortGenerationFn() {\n      if (this.sortGenerationFn) {\n        return this.sortGenerationFn(this.schema, this.$store);\n      }\n\n      return defaultTableSortGenerationFn(this.schema, this.$store);\n    },\n\n    handleActionButtonClick(event) {\n      this.$emit('clickedActionButton', event);\n    },\n\n    handleEnterKeyPress(event) {\n      if (event.key === 'Enter') {\n        this.keyAction('detail');\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <SortableTable\n    ref=\"table\"\n    v-bind=\"$attrs\"\n    :headers=\"_headers\"\n    :rows=\"filteredRows\"\n    :loading=\"loading\"\n    :group-by=\"computedGroupBy\"\n    :group=\"group\"\n    :group-options=\"groupOptions\"\n    :search=\"search\"\n    :paging=\"true\"\n    :paging-params=\"pagingParams\"\n    :paging-label=\"pagingLabel\"\n    :row-actions=\"rowActions\"\n    :table-actions=\"_showBulkActions\"\n    :overflow-x=\"overflowX\"\n    :overflow-y=\"overflowY\"\n    :get-custom-detail-link=\"getCustomDetailLink\"\n    :has-advanced-filtering=\"hasAdvancedFiltering\"\n    :adv-filter-hide-labels-as-cols=\"advFilterHideLabelsAsCols\"\n    :adv-filter-prevent-filtering-labels=\"advFilterPreventFilteringLabels\"\n    :key-field=\"keyField\"\n    :sort-generation-fn=\"safeSortGenerationFn\"\n    :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n    :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    @clickedActionButton=\"handleActionButtonClick\"\n    @group-value-change=\"group = $event\"\n    v-on=\"$listeners\"\n  >\n    <template\n      v-if=\"showGrouping\"\n      #header-middle\n    >\n      <slot name=\"more-header-middle\" />\n      <ButtonGroup\n        v-model=\"group\"\n        :options=\"groupOptions\"\n      />\n    </template>\n\n    <template\n      v-if=\"showGrouping\"\n      #header-right\n    >\n      <slot name=\"header-right\" />\n    </template>\n\n    <template #group-by=\"{group: thisGroup}\">\n      <div\n        v-clean-html=\"thisGroup.ref\"\n        class=\"group-tab\"\n      />\n    </template>\n\n    <!-- Pass down templates provided by the caller -->\n    <template\n      v-for=\"(_, slot) of $scopedSlots\"\n      v-slot:[slot]=\"scope\"\n    >\n      <slot\n        :name=\"slot\"\n        v-bind=\"scope\"\n      />\n    </template>\n\n    <template #shortkeys>\n      <button\n        v-shortkey.once=\"['e']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('edit')\"\n      />\n      <button\n        v-shortkey.once=\"['y']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('yaml')\"\n      />\n      <button\n        v-if=\"_showBulkActions\"\n        v-shortkey.once=\"['del']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('remove')\"\n      />\n      <button\n        v-if=\"_showBulkActions\"\n        v-shortkey.once=\"['backspace']\"\n        class=\"hide\"\n        @shortkey=\"keyAction('remove')\"\n      />\n    </template>\n  </SortableTable>\n</template>\n"]}]}