{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/RelatedResources.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/RelatedResources.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgeyBjb2xvckZvclN0YXRlLCBzdGF0ZURpc3BsYXkgfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9kYXNoYm9hcmQtc3RvcmUvcmVzb3VyY2UtY2xhc3MnOwppbXBvcnQgeyBOQU1FLCBOQU1FU1BBQ0UsIFNUQVRFLCBUWVBFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90YWJsZS1oZWFkZXJzJzsKaW1wb3J0IHsgc29ydGFibGVOdW1lcmljU3VmZml4IH0gZnJvbSAnQHNoZWxsL3V0aWxzL3NvcnQnOwppbXBvcnQgeyBOQU1FIGFzIEVYUExPUkVSIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcm9kdWN0L2V4cGxvcmVyJzsKaW1wb3J0IHsgQmFkZ2VTdGF0ZSB9IGZyb20gJ0Bjb21wb25lbnRzL0JhZGdlU3RhdGUnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgUmVzb3VyY2VUYWJsZSwgQmFkZ2VTdGF0ZSB9LAoKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIHJlbDogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IG51bGwsCiAgICB9LAoKICAgIGRpcmVjdGlvbjogewogICAgICB0eXBlOiAgICBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICd0bycKICAgIH0sCgogICAgaWdub3JlVHlwZXM6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7IGxvYWRlZFJlc291cmNlczogMSB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBmaWx0ZXJlZFJlbGF0aW9uc2hpcHMoKSB7CiAgICAgIGxldCBhbGwgPSB0aGlzLnZhbHVlPy5tZXRhZGF0YT8ucmVsYXRpb25zaGlwcyB8fCBbXTsKCiAgICAgIC8vIEBUT0RPIHByb2JhYmx5IHdpbGwgbmVlZCBtb3JlIGZsZXhpYmxlIGZpbHRlcmluZyBoZXJlIGZvcgogICAgICAvLyByZWxhdGVkIHJlc291cmNlcyBvdGhlciB0aGFuIGhlbG0gYXBwIHJlc291cmNlcy4uLgoKICAgICAgYWxsID0gYWxsLmZpbHRlcigocmVsYXRpb25zaGlwKSA9PiB7CiAgICAgICAgY29uc3QgdHlwZSA9IHJlbGF0aW9uc2hpcFtgJHsgdGhpcy5kaXJlY3Rpb24gfVR5cGVgXTsKCiAgICAgICAgaWYgKCF0eXBlIHx8IHRoaXMuaWdub3JlVHlwZXMuaW5jbHVkZXModHlwZSkpIHsKICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLnJlbCAmJiByZWxhdGlvbnNoaXAucmVsICE9PSB0aGlzLnJlbCkgewogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIGFsbDsKICAgIH0sCgogICAgcm93cygpIHsKICAgICAgaWYgKCB0aGlzLmxvYWRlZFJlc291cmNlcyA8IDEgKSB7CiAgICAgICAgLy8gVGhpcyBkb2VzIG5vdGhpbmcgZXhjZXB0IGZvcmNlIHJlY29tcHV0ZSB3aGVuIGxvYWRlZCByZXNvdXJjZXMgY2hhbmdlIGJlbG93CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBjbHVzdGVyID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY2x1c3RlcklkJ107CiAgICAgIGNvbnN0IGluU3RvcmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50U3RvcmUnXSgpOwogICAgICBjb25zdCBvdXQgPSBbXTsKCiAgICAgIGZvciAoIGNvbnN0IHIgb2YgdGhpcy5maWx0ZXJlZFJlbGF0aW9uc2hpcHMpIHsKICAgICAgICBjb25zdCBzdGF0ZSA9IHIuc3RhdGUgfHwgJ2FjdGl2ZSc7CiAgICAgICAgY29uc3Qgc3RhdGVDb2xvciA9IGNvbG9yRm9yU3RhdGUoc3RhdGUsIHIuZXJyb3IsIHIudHJhbnNpdGlvbmluZyk7CiAgICAgICAgY29uc3QgdHlwZSA9IHJbYCR7IHRoaXMuZGlyZWN0aW9uIH1UeXBlYF07CiAgICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgJHsgaW5TdG9yZSB9L3NjaGVtYUZvcmBdKHR5cGUpOwoKICAgICAgICBsZXQgbmFtZSA9IHJbYCR7IHRoaXMuZGlyZWN0aW9uIH1JZGBdOwoKICAgICAgICAvLyBTa2lwIHRoaW5ncyBsaWtlIHRvVHlwZS90b05hbWVzcGFjZStzZWxlY3RvciBmb3Igbm93CiAgICAgICAgaWYgKCAhbmFtZSApIHsKICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgIH0KCiAgICAgICAgbGV0IG5hbWVzcGFjZSA9IG51bGw7CiAgICAgICAgY29uc3QgaWR4ID0gbmFtZS5pbmRleE9mKCcvJyk7CiAgICAgICAgY29uc3Qga2V5ID0gYCR7IHR5cGUgfS8keyBuYW1lc3BhY2UgfS8keyBuYW1lIH1gOwoKICAgICAgICBpZiAoIGlkeCA+IDAgKSB7CiAgICAgICAgICBuYW1lc3BhY2UgPSBuYW1lLnN1YnN0cigwLCBpZHgpOwogICAgICAgICAgbmFtZSA9IG5hbWUuc3Vic3RyKGlkeCArIDEpOwogICAgICAgIH0KCiAgICAgICAgY29uc3QgZGV0YWlsTG9jYXRpb24gPSB7CiAgICAgICAgICBuYW1lOiAgIGBjLWNsdXN0ZXItcHJvZHVjdC1yZXNvdXJjZSR7IG5hbWVzcGFjZSA/ICctbmFtZXNwYWNlJyA6ICcnIH0taWRgLAogICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgIHByb2R1Y3Q6ICBFWFBMT1JFUiwKICAgICAgICAgICAgY2x1c3RlcjogIGluU3RvcmUgPT09ICdtYW5hZ2VtZW50JyA/ICdsb2NhbCcgOiBjbHVzdGVyLAogICAgICAgICAgICByZXNvdXJjZTogdHlwZSwKICAgICAgICAgICAgbmFtZXNwYWNlLAogICAgICAgICAgICBpZDogICAgICAgbmFtZSwKICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICBvdXQucHVzaCh7CiAgICAgICAgICB0eXBlLAogICAgICAgICAgcmVhbDogICAgIHRoaXMuJHN0b3JlLmdldHRlcnNbYCR7IGluU3RvcmUgfS9ieUlkYF0odHlwZSwgcltgJHsgdGhpcy5kaXJlY3Rpb24gfUlkYF0pLAogICAgICAgICAgaWQ6ICAgICAgIHJbYCR7IHRoaXMuZGlyZWN0aW9uIH1JZGBdLAogICAgICAgICAgc3RhdGUsCiAgICAgICAgICBtZXRhZGF0YTogeyBuYW1lc3BhY2UsIG5hbWUgfSwKICAgICAgICAgIF9rZXk6ICAgICBrZXksCgogICAgICAgICAgbmFtZSwKICAgICAgICAgIG5hbWVzcGFjZSwKICAgICAgICAgIG5hbWVEaXNwbGF5OiBuYW1lLAogICAgICAgICAgbmFtZVNvcnQ6ICAgIHNvcnRhYmxlTnVtZXJpY1N1ZmZpeChuYW1lKS50b0xvd2VyQ2FzZSgpLAoKICAgICAgICAgIHN0YXRlQ29sb3IsCiAgICAgICAgICBkZXRhaWxMb2NhdGlvbiwKICAgICAgICAgIHR5cGVEaXNwbGF5OiAgICAgdGhpcy4kc3RvcmUuZ2V0dGVyc1sndHlwZS1tYXAvbGFiZWxGb3InXShzY2hlbWEpLAogICAgICAgICAgc3RhdGVEaXNwbGF5OiAgICBzdGF0ZURpc3BsYXkoc3RhdGUpLAogICAgICAgICAgc3RhdGVCYWNrZ3JvdW5kOiBzdGF0ZUNvbG9yLnJlcGxhY2UoJ3RleHQtJywgJ2JnLScpLAogICAgICAgICAgZ3JvdXBCeUxhYmVsOiAgICBuYW1lc3BhY2UsCiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvdXQ7CiAgICB9LAoKICAgIGhlYWRlcnMoKSB7CiAgICAgIHJldHVybiBbCiAgICAgICAgU1RBVEUsCiAgICAgICAgVFlQRSwKICAgICAgICBOQU1FLAogICAgICAgIE5BTUVTUEFDRSwKICAgICAgXTsKICAgIH0sCiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgZ2V0UmVhbFJlc291cmNlcyhyb3dzKSB7CiAgICAgIGNvbnN0IGluU3RvcmUgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50U3RvcmUnXSgpOwoKICAgICAgY29uc3QgcmVzID0gYXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKHJvd3MubWFwKChyb3cpID0+IHsKICAgICAgICByZXR1cm4gdGhpcy4kc3RvcmUuZGlzcGF0Y2goYCR7IGluU3RvcmUgfS9maW5kYCwgeyB0eXBlOiByb3cudHlwZSwgaWQ6IHJvdy5pZCB9KTsKICAgICAgfSkpOwoKICAgICAgY29uc3Qgb3V0ID0gW107CgogICAgICBmb3IgKCBsZXQgaSA9IDAgOyBpIDwgcmVzLmxlbmd0aCA7IGkrKyApIHsKICAgICAgICBpZiAoIHJlc1tpXS5zdGF0dXMgPT09ICdmdWxmaWxsZWQnICkgewogICAgICAgICAgb3V0LnB1c2gocmVzW2ldLnZhbHVlKTsKICAgICAgICB9CiAgICAgIH0KCiAgICAgIHRoaXMubG9hZGVkUmVzb3VyY2VzKys7CgogICAgICByZXR1cm4gb3V0OwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["RelatedResources.vue"],"names":[],"mappingsfile":"RelatedResources.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { colorForState, stateDisplay } from '@shell/plugins/dashboard-store/resource-class';\nimport { NAME, NAMESPACE, STATE, TYPE } from '@shell/config/table-headers';\nimport { sortableNumericSuffix } from '@shell/utils/sort';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport { BadgeState } from '@components/BadgeState';\n\nexport default {\n  components: { ResourceTable, BadgeState },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    rel: {\n      type:    String,\n      default: null,\n    },\n\n    direction: {\n      type:    String,\n      default: 'to'\n    },\n\n    ignoreTypes: {\n      type:    Array,\n      default: () => []\n    }\n  },\n\n  data() {\n    return { loadedResources: 1 };\n  },\n\n  computed: {\n    filteredRelationships() {\n      let all = this.value?.metadata?.relationships || [];\n\n      // @TODO probably will need more flexible filtering here for\n      // related resources other than helm app resources...\n\n      all = all.filter((relationship) => {\n        const type = relationship[`${ this.direction }Type`];\n\n        if (!type || this.ignoreTypes.includes(type)) {\n          return false;\n        }\n\n        if (this.rel && relationship.rel !== this.rel) {\n          return false;\n        }\n\n        return true;\n      });\n\n      return all;\n    },\n\n    rows() {\n      if ( this.loadedResources < 1 ) {\n        // This does nothing except force recompute when loaded resources change below\n        return;\n      }\n\n      const cluster = this.$store.getters['clusterId'];\n      const inStore = this.$store.getters['currentStore']();\n      const out = [];\n\n      for ( const r of this.filteredRelationships) {\n        const state = r.state || 'active';\n        const stateColor = colorForState(state, r.error, r.transitioning);\n        const type = r[`${ this.direction }Type`];\n        const schema = this.$store.getters[`${ inStore }/schemaFor`](type);\n\n        let name = r[`${ this.direction }Id`];\n\n        // Skip things like toType/toNamespace+selector for now\n        if ( !name ) {\n          continue;\n        }\n\n        let namespace = null;\n        const idx = name.indexOf('/');\n        const key = `${ type }/${ namespace }/${ name }`;\n\n        if ( idx > 0 ) {\n          namespace = name.substr(0, idx);\n          name = name.substr(idx + 1);\n        }\n\n        const detailLocation = {\n          name:   `c-cluster-product-resource${ namespace ? '-namespace' : '' }-id`,\n          params: {\n            product:  EXPLORER,\n            cluster:  inStore === 'management' ? 'local' : cluster,\n            resource: type,\n            namespace,\n            id:       name,\n          }\n        };\n\n        out.push({\n          type,\n          real:     this.$store.getters[`${ inStore }/byId`](type, r[`${ this.direction }Id`]),\n          id:       r[`${ this.direction }Id`],\n          state,\n          metadata: { namespace, name },\n          _key:     key,\n\n          name,\n          namespace,\n          nameDisplay: name,\n          nameSort:    sortableNumericSuffix(name).toLowerCase(),\n\n          stateColor,\n          detailLocation,\n          typeDisplay:     this.$store.getters['type-map/labelFor'](schema),\n          stateDisplay:    stateDisplay(state),\n          stateBackground: stateColor.replace('text-', 'bg-'),\n          groupByLabel:    namespace,\n        });\n      }\n\n      return out;\n    },\n\n    headers() {\n      return [\n        STATE,\n        TYPE,\n        NAME,\n        NAMESPACE,\n      ];\n    },\n  },\n\n  methods: {\n    async getRealResources(rows) {\n      const inStore = this.$store.getters['currentStore']();\n\n      const res = await Promise.allSettled(rows.map((row) => {\n        return this.$store.dispatch(`${ inStore }/find`, { type: row.type, id: row.id });\n      }));\n\n      const out = [];\n\n      for ( let i = 0 ; i < res.length ; i++ ) {\n        if ( res[i].status === 'fulfilled' ) {\n          out.push(res[i].value);\n        }\n      }\n\n      this.loadedResources++;\n\n      return out;\n    }\n  },\n};\n</script>\n\n<template>\n  <ResourceTable\n    :schema=\"null\"\n    :rows=\"rows\"\n    :headers=\"headers\"\n    :search=\"false\"\n    :table-actions=\"false\"\n    :namespaced=\"true\"\n    :mangle-action-resources=\"getRealResources\"\n    paging-label=\"sortableTable.paging.generic\"\n    :groupable=\"false\"\n  >\n    <template #cell:state=\"{row}\">\n      <BadgeState\n        v-if=\"row.real\"\n        :value=\"row.real\"\n      />\n      <BadgeState\n        v-else\n        :value=\"row\"\n      />\n    </template>\n  </ResourceTable>\n</template>\n"]}]}