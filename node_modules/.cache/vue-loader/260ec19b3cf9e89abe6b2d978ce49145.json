{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/FleetSummaryGraph.vue?vue&type=style&index=0&id=0ed14dfe&lang=scss","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/FleetSummaryGraph.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb2wtc2NhbGUgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgLnRyaWdnZXIgewogICAgd2lkdGg6IDEwMCU7CiAgfQp9Cgouc2NhbGUgewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwogIGxpbmUtaGVpZ2h0OiBpbml0aWFsOwp9Cg=="},{"version":3,"sources":["FleetSummaryGraph.vue"],"names":[],"mappings":";AA+GA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"FleetSummaryGraph.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport ProgressBarMulti from '@shell/components/ProgressBarMulti';\nimport { ucFirst } from '@shell/utils/string';\nimport { colorForState, stateSort } from '@shell/plugins/dashboard-store/resource-class';\nimport { sortBy } from '@shell/utils/sort';\n\nexport default {\n  components: { ProgressBarMulti },\n\n  props: {\n    row: {\n      type:     Object,\n      required: true\n    },\n  },\n\n  computed: {\n    summary() {\n      return this.row.status?.resourceCounts || {};\n    },\n\n    show() {\n      return this.stateParts.length > 0 && this.row.targetClusters?.length;\n    },\n\n    stateParts() {\n      const keys = Object.keys(this.summary).filter((x) => !x.startsWith('desired'));\n\n      const out = keys.map((key) => {\n        const textColor = colorForState(key);\n\n        return {\n          label: ucFirst(key),\n          color: textColor.replace(/text-/, 'bg-'),\n          textColor,\n          value: this.summary[key],\n          sort:  stateSort(textColor, key),\n        };\n      }).filter((x) => x.value > 0);\n\n      return sortBy(out, 'sort:desc');\n    },\n\n  },\n};\n</script>\n\n<template>\n  <v-popover\n    v-if=\"show\"\n    class=\"text-center hand\"\n    placement=\"top\"\n    :open-group=\"row.id\"\n    :trigger=\"show ? 'click' : 'manual'\"\n    offset=\"1\"\n  >\n    <ProgressBarMulti\n      :values=\"stateParts\"\n      class=\"mb-5\"\n    />\n    <span v-if=\"summary.desiredReady === summary.ready\">{{ summary.ready }}</span>\n    <span v-else>{{ summary.ready }} of {{ summary.desiredReady }}</span>\n\n    <template #popover>\n      <table\n        v-if=\"show\"\n        class=\"fixed\"\n      >\n        <tbody>\n          <tr\n            v-for=\"obj in stateParts\"\n            :key=\"obj.label\"\n          >\n            <td\n              class=\"text-left pr-20\"\n              :class=\"{[obj.textColor]: true}\"\n            >\n              {{ obj.label }}\n            </td>\n            <td class=\"text-right\">\n              {{ obj.value }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </template>\n  </v-popover>\n  <div\n    v-else\n    class=\"text-center text-muted\"\n  >\n    &mdash;\n  </div>\n</template>\n\n<style lang=\"scss\">\n  .col-scale {\n    position: relative;\n\n    .trigger {\n      width: 100%;\n    }\n  }\n\n  .scale {\n    margin: 0;\n    padding: 0;\n    line-height: initial;\n  }\n</style>\n"]}]}