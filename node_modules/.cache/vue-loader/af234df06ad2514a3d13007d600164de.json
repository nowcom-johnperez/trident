{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/fleet.cattle.io.gitrepo.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/fleet.cattle.io.gitrepo.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBGbGVldFJlcG9zIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2ZsZWV0L0ZsZWV0UmVwb3MnOwppbXBvcnQgTWFzdGhlYWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VMaXN0L01hc3RoZWFkJzsKaW1wb3J0IEZsZWV0Tm9Xb3Jrc3BhY2VzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2ZsZWV0L0ZsZWV0Tm9Xb3Jrc3BhY2VzLnZ1ZSc7CmltcG9ydCB7IEZMRUVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBSZXNvdXJjZUZldGNoIGZyb20gJ0BzaGVsbC9taXhpbnMvcmVzb3VyY2UtZmV0Y2gnOwppbXBvcnQgeyBjaGVja1Blcm1pc3Npb25zLCBjaGVja1NjaGVtYXNGb3JGaW5kQWxsSGFzaCB9IGZyb20gJ0BzaGVsbC91dGlscy9hdXRoJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgICAgICAnTGlzdEdpdFJlcG8nLAogIGNvbXBvbmVudHM6IHsKICAgIEZsZWV0UmVwb3MsCiAgICBNYXN0aGVhZCwKICAgIEZsZWV0Tm9Xb3Jrc3BhY2VzLAogIH0sCiAgbWl4aW5zOiBbUmVzb3VyY2VGZXRjaF0sCiAgcHJvcHM6ICB7CiAgICBzY2hlbWE6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIHJlc291cmNlOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKCiAgICBsb2FkSW5kZXRlcm1pbmF0ZTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKCiAgICBpbmNyZW1lbnRhbExvYWRpbmdJbmRpY2F0b3I6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCgogICAgdXNlUXVlcnlQYXJhbXNGb3JTaW1wbGVGaWx0ZXJpbmc6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIHRyeSB7CiAgICAgIGNvbnN0IGhhc2ggPSBhd2FpdCBjaGVja1NjaGVtYXNGb3JGaW5kQWxsSGFzaCh7CiAgICAgICAgY2x1c3RlcjogewogICAgICAgICAgaW5TdG9yZVR5cGU6ICdtYW5hZ2VtZW50JywKICAgICAgICAgIHR5cGU6ICAgICAgICBGTEVFVC5DTFVTVEVSCiAgICAgICAgfSwKICAgICAgICBjbHVzdGVyR3JvdXBzOiB7CiAgICAgICAgICBpblN0b3JlVHlwZTogJ21hbmFnZW1lbnQnLAogICAgICAgICAgdHlwZTogICAgICAgIEZMRUVULkNMVVNURVJfR1JPVVAKICAgICAgICB9LAoKICAgICAgICBnaXRSZXBvczogewogICAgICAgICAgaW5TdG9yZVR5cGU6ICdtYW5hZ2VtZW50JywKICAgICAgICAgIHR5cGU6ICAgICAgICBGTEVFVC5HSVRfUkVQTwogICAgICAgIH0sCgogICAgICAgIHdvcmtzcGFjZXM6IHsKICAgICAgICAgIGluU3RvcmVUeXBlOiAnbWFuYWdlbWVudCcsCiAgICAgICAgICB0eXBlOiAgICAgICAgRkxFRVQuV09SS1NQQUNFCiAgICAgICAgfSwKCiAgICAgIH0sIHRoaXMuJHN0b3JlKTsKCiAgICAgIHRoaXMuaGFzV29ya3NwYWNlcyA9ICEhaGFzaC53b3Jrc3BhY2VzOwogICAgfSBjYXRjaCAoZSkgewogICAgfQoKICAgIHRyeSB7CiAgICAgIGNvbnN0IHBlcm1pc3Npb25zID0gYXdhaXQgY2hlY2tQZXJtaXNzaW9ucyh7IHdvcmtzcGFjZXM6IHsgdHlwZTogRkxFRVQuV09SS1NQQUNFIH0sIGdpdFJlcG9zOiB7IHR5cGU6IEZMRUVULkdJVF9SRVBPIH0gfSwgdGhpcy4kc3RvcmUuZ2V0dGVycyk7CgogICAgICB0aGlzLnBlcm1pc3Npb25zID0gcGVybWlzc2lvbnM7CiAgICB9IGNhdGNoIChlKSB7CiAgICB9CiAgICBhd2FpdCB0aGlzLiRmZXRjaFR5cGUodGhpcy5yZXNvdXJjZSk7CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7IGhhc1dvcmtzcGFjZXM6IGZhbHNlLCBwZXJtaXNzaW9uczoge30gfTsKICB9LAp9Owo="},{"version":3,"sources":["fleet.cattle.io.gitrepo.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"fleet.cattle.io.gitrepo.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport FleetRepos from '@shell/components/fleet/FleetRepos';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport FleetNoWorkspaces from '@shell/components/fleet/FleetNoWorkspaces.vue';\nimport { FLEET } from '@shell/config/types';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { checkPermissions, checkSchemasForFindAllHash } from '@shell/utils/auth';\n\nexport default {\n  name:       'ListGitRepo',\n  components: {\n    FleetRepos,\n    Masthead,\n    FleetNoWorkspaces,\n  },\n  mixins: [ResourceFetch],\n  props:  {\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    resource: {\n      type:     String,\n      required: true,\n    },\n\n    loadIndeterminate: {\n      type:    Boolean,\n      default: false\n    },\n\n    incrementalLoadingIndicator: {\n      type:    Boolean,\n      default: false\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    try {\n      const hash = await checkSchemasForFindAllHash({\n        cluster: {\n          inStoreType: 'management',\n          type:        FLEET.CLUSTER\n        },\n        clusterGroups: {\n          inStoreType: 'management',\n          type:        FLEET.CLUSTER_GROUP\n        },\n\n        gitRepos: {\n          inStoreType: 'management',\n          type:        FLEET.GIT_REPO\n        },\n\n        workspaces: {\n          inStoreType: 'management',\n          type:        FLEET.WORKSPACE\n        },\n\n      }, this.$store);\n\n      this.hasWorkspaces = !!hash.workspaces;\n    } catch (e) {\n    }\n\n    try {\n      const permissions = await checkPermissions({ workspaces: { type: FLEET.WORKSPACE }, gitRepos: { type: FLEET.GIT_REPO } }, this.$store.getters);\n\n      this.permissions = permissions;\n    } catch (e) {\n    }\n    await this.$fetchType(this.resource);\n  },\n\n  data() {\n    return { hasWorkspaces: false, permissions: {} };\n  },\n};\n</script>\n\n<template>\n  <div v-if=\"hasWorkspaces\">\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :show-incremental-loading-indicator=\"incrementalLoadingIndicator\"\n      :load-resources=\"loadResources\"\n      :load-indeterminate=\"loadIndeterminate\"\n      :create-button-label=\"t('fleet.gitRepo.repo.addRepo')\"\n    />\n    <FleetRepos\n      :rows=\"rows\"\n      :schema=\"schema\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    />\n  </div>\n  <div v-else>\n    <FleetNoWorkspaces :can-view=\"permissions.workspaces\" />\n  </div>\n</template>\n"]}]}