{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Taints.vue?vue&type=style&index=0&id=22d70909&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Taints.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jb21wYWN0LXNlbGVjdCB7CiAgaGVpZ2h0OiA0MHB4Owp9Cg=="},{"version":3,"sources":["Taints.vue"],"names":[],"mappings":";AA0FA;AACA;AACA","file":"Taints.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { _VIEW } from '@shell/config/query-params';\nimport Select from '@shell/components/form/Select';\n\nconst EFFECT_VALUES = {\n  NO_SCHEDULE:        'NoSchedule',\n  PREFER_NO_SCHEDULE: 'PreferNoSchedule',\n  NO_EXECUTE:         'NoExecute',\n};\n\nexport default {\n  components: { KeyValue, Select },\n\n  props: {\n    value: {\n      type:    Array,\n      default: null\n    },\n    mode: {\n      type:    String,\n      default: _VIEW\n    },\n    disabled: {\n      default: false,\n      type:    Boolean\n    }\n  },\n\n  data() {\n    return { effectOptions: Object.values(EFFECT_VALUES).map((v) => ({ label: v, value: v })) };\n  },\n\n  computed: {\n    localValue: {\n      get() {\n        return this.value;\n      },\n\n      set(localValue) {\n        this.$emit('input', localValue);\n      }\n    },\n\n    defaultAddData() {\n      return { effect: EFFECT_VALUES.NO_SCHEDULE };\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"taints\">\n    <KeyValue\n      v-model=\"localValue\"\n      :title=\"t('tableHeaders.taints')\"\n      :mode=\"mode\"\n      :as-map=\"false\"\n      :read-allowed=\"false\"\n      :protip=\"false\"\n      :show-header=\"true\"\n      :default-add-data=\"defaultAddData\"\n      :extra-columns=\"['effect']\"\n      :preserve-keys=\"['effect']\"\n      :add-label=\"t('labels.addTaint')\"\n      :disabled=\"disabled\"\n    >\n      <template #label:effect>\n        {{ t('tableHeaders.effect') }}\n      </template>\n\n      <template #col:effect=\"{row, queueUpdate}\">\n        <Select\n          v-model=\"row.effect\"\n          :options=\"effectOptions\"\n          :disabled=\"disabled\"\n          class=\"compact-select\"\n          @input=\"queueUpdate\"\n        />\n      </template>\n    </KeyValue>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .compact-select {\n    height: 40px;\n  }\n</style>\n"]}]}