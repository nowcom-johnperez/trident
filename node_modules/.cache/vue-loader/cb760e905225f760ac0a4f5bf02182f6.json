{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.user.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.user.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IE1BTkFHRU1FTlQsIE5PUk1BTiB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IEdsb2JhbFJvbGVCaW5kaW5ncyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9HbG9iYWxSb2xlQmluZGluZ3MudnVlJzsKaW1wb3J0IENoYW5nZVBhc3N3b3JkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vQ2hhbmdlUGFzc3dvcmQnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkgfSBmcm9tICdAc2hlbGwvdXRpbHMvZXJyb3InOwppbXBvcnQgeyBfQ1JFQVRFLCBfRURJVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2hhbmdlUGFzc3dvcmQsIEdsb2JhbFJvbGVCaW5kaW5ncywgQ3J1UmVzb3VyY2UsIExhYmVsZWRJbnB1dCwgTG9hZGluZwogIH0sCiAgbWl4aW5zOiBbCiAgICBDcmVhdGVFZGl0VmlldwogIF0sCgogIGRhdGEoKSB7CiAgICBjb25zdCBzaG93R2xvYmFsUm9sZXMgPSAhIXRoaXMuJHN0b3JlLmdldHRlcnNbYG1hbmFnZW1lbnQvc2NoZW1hRm9yYF0oTUFOQUdFTUVOVC5HTE9CQUxfUk9MRSk7CgogICAgcmV0dXJuIHsKICAgICAgc2hvd0dsb2JhbFJvbGVzLAogICAgICBmb3JtOiB7CiAgICAgICAgdXNlcm5hbWU6ICAgIHRoaXMudmFsdWUudXNlcm5hbWUsCiAgICAgICAgZGVzY3JpcHRpb246IHRoaXMudmFsdWUuZGVzY3JpcHRpb24sCiAgICAgICAgZGlzcGxheU5hbWU6IHRoaXMudmFsdWUuZGlzcGxheU5hbWUsCiAgICAgICAgcGFzc3dvcmQ6ICAgIHsKICAgICAgICAgIHBhc3N3b3JkOiAgICAgICAgICAnJywKICAgICAgICAgIHVzZXJDaGFuZ2VPbkxvZ2luOiBmYWxzZSwKICAgICAgICB9CiAgICAgIH0sCiAgICAgIHZhbGlkYXRpb246IHsKICAgICAgICBwYXNzd29yZDogICAgIGZhbHNlLAogICAgICAgIHJvbGVzOiAgICAgICAgIXNob3dHbG9iYWxSb2xlcywKICAgICAgICByb2xlc0NoYW5nZWQ6IGZhbHNlLAogICAgICB9LAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgdmFsaWQoKSB7CiAgICAgIGNvbnN0IHZhbGlkID0gdGhpcy5jcmVkZW50aWFsc1ZhbGlkICYmIHRoaXMucm9sZXNWYWxpZDsKCiAgICAgIGlmICh0aGlzLmlzQ3JlYXRlKSB7CiAgICAgICAgcmV0dXJuIHZhbGlkOwogICAgICB9CiAgICAgIGlmICh0aGlzLmlzRWRpdCkgewogICAgICAgIHJldHVybiB2YWxpZCAmJiAodGhpcy5jcmVkZW50aWFsc0NoYW5nZWQgfHwgdGhpcy52YWxpZGF0aW9uLnJvbGVzQ2hhbmdlZCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBjcmVkZW50aWFsc1ZhbGlkKCkgewogICAgICBpZiAodGhpcy5pc0NyZWF0ZSkgewogICAgICAgIC8vIFVzZXJuYW1lIG11c3QgYmUgc3VwcGxpZWQsIHBhc3N3b3JkIHZhbGlkCiAgICAgICAgcmV0dXJuICEhdGhpcy5mb3JtLnVzZXJuYW1lICYmIHRoaXMudmFsaWRhdGlvbi5wYXNzd29yZDsKICAgICAgfQogICAgICBpZiAodGhpcy5pc0VkaXQpIHsKICAgICAgICAvLyBQYXNzd29yZCBtdXN0IGJlIHZhbGlkICh0aG91Z2ggcGFzc3dvcmQgZmllbGQgZG9lc24ndCBoYXZlIHRvIGV4aXN0KQogICAgICAgIHJldHVybiB0aGlzLnZhbGlkYXRpb24ucGFzc3dvcmQ7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICBjcmVkZW50aWFsc0NoYW5nZWQoKSB7CiAgICAgIGlmICh0aGlzLmlzQ3JlYXRlKSB7CiAgICAgICAgcmV0dXJuIHRydWU7IC8vIENvdmVyZWQgYnkgdmFsaWQKICAgICAgfQogICAgICBpZiAodGhpcy5pc0VkaXQpIHsKICAgICAgICByZXR1cm4gISF0aGlzLmZvcm0ucGFzc3dvcmQucGFzc3dvcmQgfHwKICAgICAgICAgIHRoaXMuZm9ybS5kZXNjcmlwdGlvbiAhPT0gdGhpcy52YWx1ZS5kZXNjcmlwdGlvbiB8fAogICAgICAgICAgdGhpcy5mb3JtLmRpc3BsYXlOYW1lICE9PSB0aGlzLnZhbHVlLmRpc3BsYXlOYW1lIHx8CiAgICAgICAgICB0aGlzLmZvcm0ucGFzc3dvcmQudXNlckNoYW5nZU9uTG9naW4gIT09IHRoaXMudmFsdWUubXVzdENoYW5nZVBhc3N3b3JkOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgcm9sZXNWYWxpZCgpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsaWRhdGlvbi5yb2xlczsKICAgIH0sCiAgICBpc0NyZWF0ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gX0NSRUFURTsKICAgIH0sCiAgICBpc0VkaXQoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9FRElUOwogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgIGlmICh0aGlzLiRyZWZzLm5hbWUpIHsKICAgICAgICB0aGlzLiRyZWZzLm5hbWUuZm9jdXMoKTsKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBzYXZlKGJ1dHRvbkRvbmUpIHsKICAgICAgdGhpcy5lcnJvcnMgPSBbXTsKICAgICAgdHJ5IHsKICAgICAgICBpZiAodGhpcy5pc0NyZWF0ZSkgewogICAgICAgICAgY29uc3QgdXNlciA9IGF3YWl0IHRoaXMuY3JlYXRlVXNlcigpOwoKICAgICAgICAgIGF3YWl0IHRoaXMudXBkYXRlUm9sZXModXNlci5pZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGF3YWl0IHRoaXMuZWRpdFVzZXIoKTsKICAgICAgICAgIGF3YWl0IHRoaXMudXBkYXRlUm9sZXMoKTsKICAgICAgICB9CgogICAgICAgIHRoaXMuJHJvdXRlci5yZXBsYWNlKHsgbmFtZTogdGhpcy5kb25lUm91dGUgfSk7CiAgICAgICAgYnV0dG9uRG9uZSh0cnVlKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgdGhpcy5lcnJvcnMgPSBleGNlcHRpb25Ub0Vycm9yc0FycmF5KGVycik7CiAgICAgICAgYnV0dG9uRG9uZShmYWxzZSk7CiAgICAgIH0KICAgIH0sCgogICAgYXN5bmMgY3JlYXRlVXNlcigpIHsKICAgICAgLy8gRW5zdXJlIHVzZXJuYW1lIGlzIHVuaXF1ZSAodGhpcyBkb2VzIG5vdCBoYXBwZW4gaW4gdGhlIGJhY2tlbmQpCiAgICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsgdHlwZTogTUFOQUdFTUVOVC5VU0VSIH0pOwoKICAgICAgaWYgKHVzZXJzLmZpbmQoKHUpID0+IHUudXNlcm5hbWUgPT09IHRoaXMuZm9ybS51c2VybmFtZSkpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IodGhpcy50KCd1c2VyLmVkaXQuY3JlZGVudGlhbHMudXNlcm5hbWUuZXhpc3RzJykpOwogICAgICB9CgogICAgICBjb25zdCB1c2VyID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvY3JlYXRlJywgewogICAgICAgIHR5cGU6ICAgICAgICAgICAgICAgTk9STUFOLlVTRVIsCiAgICAgICAgZGVzY3JpcHRpb246ICAgICAgICB0aGlzLmZvcm0uZGVzY3JpcHRpb24sCiAgICAgICAgZW5hYmxlZDogICAgICAgICAgICB0cnVlLAogICAgICAgIG11c3RDaGFuZ2VQYXNzd29yZDogdGhpcy5mb3JtLnBhc3N3b3JkLnVzZXJDaGFuZ2VPbkxvZ2luLAogICAgICAgIG5hbWU6ICAgICAgICAgICAgICAgdGhpcy5mb3JtLmRpc3BsYXlOYW1lLAogICAgICAgIHBhc3N3b3JkOiAgICAgICAgICAgdGhpcy5mb3JtLnBhc3N3b3JkLnBhc3N3b3JkLAogICAgICAgIHVzZXJuYW1lOiAgICAgICAgICAgdGhpcy5mb3JtLnVzZXJuYW1lCiAgICAgIH0pOwoKICAgICAgY29uc3QgbmV3Tm9ybWFuVXNlciA9IGF3YWl0IHVzZXIuc2F2ZSgpOwoKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmQnLCB7IHR5cGU6IE1BTkFHRU1FTlQuVVNFUiwgaWQ6IG5ld05vcm1hblVzZXIuaWQgfSk7CiAgICB9LAoKICAgIGFzeW5jIGVkaXRVc2VyKCkgewogICAgICBpZiAoIXRoaXMuY3JlZGVudGlhbHNDaGFuZ2VkKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICBjb25zdCBub3JtYW5Vc2VyID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvZmluZCcsIHsKICAgICAgICB0eXBlOiBOT1JNQU4uVVNFUiwKICAgICAgICBpZDogICB0aGlzLnZhbHVlLmlkLAogICAgICB9KTsKCiAgICAgIC8vIFNhdmUgY2hhbmdlIG9mIHBhc3N3b3JkCiAgICAgIC8vIC0gUGFzc3dvcmQgbXVzdCBiZSBjaGFuZ2VkIGJlZm9yZSBlZGl0aW5nIG11c3RDaGFuZ2VQYXNzd29yZCAoc2V0cGFzc3dvcmQgYWN0aW9uIHNldHMgdGhpcyB0byBmYWxzZSkKICAgICAgaWYgKHRoaXMuZm9ybS5wYXNzd29yZC5wYXNzd29yZCkgewogICAgICAgIGF3YWl0IHRoaXMuJHJlZnMuY2hhbmdlUGFzc3dvcmQuc2F2ZShub3JtYW5Vc2VyKTsKCiAgICAgICAgLy8gV2h5IHRoZSB3YWl0PyBXaXRob3V0IHRoZXNlIHRoZSB1c2VyIHVwZGF0ZXMgYmVsb3cgYXJlIGlnbm9yZWQKICAgICAgICAvLyAtIFRoZSB1cGRhdGUgcmVxdWVzdCBzdWNjZWVkcyBhbmQgc2hvd3MgdGhlIGNvcnJlY3QgdmFsdWVzIGluIGl0J3MgcmVzcG9uc2UuCiAgICAgICAgLy8gLSBGZXRjaGluZyB0aGUgbm9ybWFuIHVzZXIgYWdhaW4gc29tZXRpbWVzIHNob3dzIHRoZSBjb3JyZWN0IHZhbHVlLCBzb21ldGltZXMgbm90CiAgICAgICAgLy8gLSBFdmVuIGlmIHRoZSBmZXRjaGVkIG5vcm1hbiB1c2VyIHNob3dzIHRoZSBjb3JyZWN0IHZhbHVlLCBpdCBkb2Vzbid0IHNob3cgdXAgaW4gdGhlIHN0ZXZlIHVzZXIKICAgICAgICAvLyAgIC0gTG9va3MgbGlrZSB3ZSByZS1yZXF1ZXN0IHRoZSBzdGFsZSB2ZXJzaW9uIHZpYSBzb2NrZXQ/CiAgICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgNTAwMCkpOwogICAgICB9CgogICAgICAvLyBTYXZlIHVzZXIgdXBkYXRlcwogICAgICBub3JtYW5Vc2VyLmRlc2NyaXB0aW9uID0gdGhpcy5mb3JtLmRlc2NyaXB0aW9uOwogICAgICBub3JtYW5Vc2VyLl9uYW1lID0gdGhpcy5mb3JtLmRpc3BsYXlOYW1lOwogICAgICBub3JtYW5Vc2VyLm11c3RDaGFuZ2VQYXNzd29yZCA9IHRoaXMuZm9ybS5wYXNzd29yZC51c2VyQ2hhbmdlT25Mb2dpbjsKCiAgICAgIGF3YWl0IG5vcm1hblVzZXIuc2F2ZSgpOwoKICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmQnLCB7CiAgICAgICAgdHlwZTogTUFOQUdFTUVOVC5VU0VSLAogICAgICAgIGlkOiAgIHRoaXMudmFsdWUuaWQsCiAgICAgICAgb3B0OiAgeyBmb3JjZTogdHJ1ZSB9CiAgICAgIH0pOwogICAgfSwKCiAgICBhc3luYyB1cGRhdGVSb2xlcyh1c2VySWQpIHsKICAgICAgaWYgKHRoaXMuJHJlZnMuZ3JiKSB7CiAgICAgICAgYXdhaXQgdGhpcy4kcmVmcy5ncmIuc2F2ZSh1c2VySWQpOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["management.cattle.io.user.vue"],"names":[],"mappingsfile":"management.cattle.io.user.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport { MANAGEMENT, NORMAN } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport GlobalRoleBindings from '@shell/components/GlobalRoleBindings.vue';\nimport ChangePassword from '@shell/components/form/ChangePassword';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport CruResource from '@shell/components/CruResource';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\n\nexport default {\n  components: {\n    ChangePassword, GlobalRoleBindings, CruResource, LabeledInput, Loading\n  },\n  mixins: [\n    CreateEditView\n  ],\n\n  data() {\n    const showGlobalRoles = !!this.$store.getters[`management/schemaFor`](MANAGEMENT.GLOBAL_ROLE);\n\n    return {\n      showGlobalRoles,\n      form: {\n        username:    this.value.username,\n        description: this.value.description,\n        displayName: this.value.displayName,\n        password:    {\n          password:          '',\n          userChangeOnLogin: false,\n        }\n      },\n      validation: {\n        password:     false,\n        roles:        !showGlobalRoles,\n        rolesChanged: false,\n      },\n    };\n  },\n\n  computed: {\n    valid() {\n      const valid = this.credentialsValid && this.rolesValid;\n\n      if (this.isCreate) {\n        return valid;\n      }\n      if (this.isEdit) {\n        return valid && (this.credentialsChanged || this.validation.rolesChanged);\n      }\n\n      return false;\n    },\n    credentialsValid() {\n      if (this.isCreate) {\n        // Username must be supplied, password valid\n        return !!this.form.username && this.validation.password;\n      }\n      if (this.isEdit) {\n        // Password must be valid (though password field doesn't have to exist)\n        return this.validation.password;\n      }\n\n      return false;\n    },\n    credentialsChanged() {\n      if (this.isCreate) {\n        return true; // Covered by valid\n      }\n      if (this.isEdit) {\n        return !!this.form.password.password ||\n          this.form.description !== this.value.description ||\n          this.form.displayName !== this.value.displayName ||\n          this.form.password.userChangeOnLogin !== this.value.mustChangePassword;\n      }\n\n      return false;\n    },\n    rolesValid() {\n      return this.validation.roles;\n    },\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n    isEdit() {\n      return this.mode === _EDIT;\n    }\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      if (this.$refs.name) {\n        this.$refs.name.focus();\n      }\n    });\n  },\n  methods: {\n    async save(buttonDone) {\n      this.errors = [];\n      try {\n        if (this.isCreate) {\n          const user = await this.createUser();\n\n          await this.updateRoles(user.id);\n        } else {\n          await this.editUser();\n          await this.updateRoles();\n        }\n\n        this.$router.replace({ name: this.doneRoute });\n        buttonDone(true);\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    },\n\n    async createUser() {\n      // Ensure username is unique (this does not happen in the backend)\n      const users = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.USER });\n\n      if (users.find((u) => u.username === this.form.username)) {\n        throw new Error(this.t('user.edit.credentials.username.exists'));\n      }\n\n      const user = await this.$store.dispatch('rancher/create', {\n        type:               NORMAN.USER,\n        description:        this.form.description,\n        enabled:            true,\n        mustChangePassword: this.form.password.userChangeOnLogin,\n        name:               this.form.displayName,\n        password:           this.form.password.password,\n        username:           this.form.username\n      });\n\n      const newNormanUser = await user.save();\n\n      return this.$store.dispatch('management/find', { type: MANAGEMENT.USER, id: newNormanUser.id });\n    },\n\n    async editUser() {\n      if (!this.credentialsChanged) {\n        return;\n      }\n\n      const normanUser = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.USER,\n        id:   this.value.id,\n      });\n\n      // Save change of password\n      // - Password must be changed before editing mustChangePassword (setpassword action sets this to false)\n      if (this.form.password.password) {\n        await this.$refs.changePassword.save(normanUser);\n\n        // Why the wait? Without these the user updates below are ignored\n        // - The update request succeeds and shows the correct values in it's response.\n        // - Fetching the norman user again sometimes shows the correct value, sometimes not\n        // - Even if the fetched norman user shows the correct value, it doesn't show up in the steve user\n        //   - Looks like we re-request the stale version via socket?\n        await new Promise((resolve) => setTimeout(resolve, 5000));\n      }\n\n      // Save user updates\n      normanUser.description = this.form.description;\n      normanUser._name = this.form.displayName;\n      normanUser.mustChangePassword = this.form.password.userChangeOnLogin;\n\n      await normanUser.save();\n\n      return await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.USER,\n        id:   this.value.id,\n        opt:  { force: true }\n      });\n    },\n\n    async updateRoles(userId) {\n      if (this.$refs.grb) {\n        await this.$refs.grb.save(userId);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :validation-passed=\"valid\"\n    :errors=\"errors\"\n    :can-yaml=\"false\"\n    class=\"create-edit\"\n    @finish=\"save\"\n  >\n    <div class=\"credentials\">\n      <h2> {{ t(\"user.edit.credentials.label\") }}</h2>\n      <div class=\"row\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            ref=\"name\"\n            v-model=\"form.username\"\n            label-key=\"user.edit.credentials.username.label\"\n            placeholder-key=\"user.edit.credentials.username.placeholder\"\n            :required=\"isCreate\"\n            :readonly=\"isEdit\"\n            :disabled=\"isView || isEdit\"\n            :ignore-password-managers=\"!isCreate\"\n          />\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"form.displayName\"\n            label-key=\"user.edit.credentials.displayName.label\"\n            placeholder-key=\"user.edit.credentials.displayName.placeholder\"\n            :disabled=\"isView\"\n          />\n        </div>\n      </div>\n      <div class=\"row mt-20 mb-10\">\n        <div class=\"col span-8\">\n          <LabeledInput\n            v-model=\"form.description\"\n            label-key=\"user.edit.credentials.userDescription.label\"\n            placeholder-key=\"user.edit.credentials.userDescription.placeholder\"\n            :disabled=\"isView\"\n          />\n        </div>\n      </div>\n\n      <ChangePassword\n        v-if=\"!isView\"\n        ref=\"changePassword\"\n        v-model=\"form.password\"\n        :mode=\"mode\"\n        :must-change-password=\"value.mustChangePassword\"\n        @valid=\"validation.password = $event\"\n      />\n    </div>\n    <div\n      v-if=\"showGlobalRoles\"\n      class=\"global-permissions\"\n    >\n      <GlobalRoleBindings\n        ref=\"grb\"\n        :user-id=\"value.id || liveValue.id\"\n        :mode=\"mode\"\n        :real-mode=\"realMode\"\n        type=\"user\"\n        @hasChanges=\"validation.rolesChanged = $event\"\n        @canLogIn=\"validation.roles = $event\"\n      />\n    </div>\n  </CruResource>\n</template>\n"]}]}