{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/autoscaling.horizontalpodautoscaler/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/autoscaling.horizontalpodautoscaler/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgUmVzb3VyY2VUYWJzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vUmVzb3VyY2VUYWJzJzsKaW1wb3J0IFRhYiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQvVGFiJzsKaW1wb3J0IEluZm9Cb3ggZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvSW5mb0JveCc7CmltcG9ydCBjYW1lbENhc2UgZnJvbSAnbG9kYXNoL2NhbWVsQ2FzZSc7CmltcG9ydCBrZXlzIGZyb20gJ2xvZGFzaC9rZXlzJzsKaW1wb3J0IHN0YXJ0Q2FzZSBmcm9tICdsb2Rhc2gvc3RhcnRDYXNlJzsKaW1wb3J0IHsgZmluZEJ5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IHsgZ2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgSW5mb0JveCwKICAgIFJlc291cmNlVGFicywKICAgIFRhYiwKICB9LAoKICBtaXhpbnM6IFtDcmVhdGVFZGl0Vmlld10sCgogIHByb3BzOiB7CiAgICBtb2RlOiB7CiAgICAgIGRlZmF1bHQ6ICd2aWV3JywKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgfSwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHt9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBtYXBwZWRNZXRyaWNzKCkgewogICAgICBjb25zdCB7CiAgICAgICAgc3BlYzogeyBtZXRyaWNzID0gW10gfSwKICAgICAgICBzdGF0dXM6IHsgY3VycmVudE1ldHJpY3MgPSBbXSB9LAogICAgICB9ID0gdGhpcy52YWx1ZTsKCiAgICAgIHJldHVybiBtZXRyaWNzLm1hcCgobWV0cmljKSA9PiB7CiAgICAgICAgY29uc3QgbWV0cmljVmFsdWUgPSBnZXQobWV0cmljLCBjYW1lbENhc2UobWV0cmljLnR5cGUpKTsKICAgICAgICBjb25zdCB0YXJnZXRUeXBlID0gbWV0cmljVmFsdWU/LnRhcmdldD8udHlwZTsKICAgICAgICBjb25zdCBjdXJyZW50TWF0Y2ggPSBmaW5kQnkoY3VycmVudE1ldHJpY3MsICdyZXNvdXJjZS5uYW1lJywgbWV0cmljLnJlc291cmNlLm5hbWUpOwogICAgICAgIGNvbnN0IGN1cnJlbnQgPSBjdXJyZW50TWF0Y2ggPyBnZXQoY3VycmVudE1hdGNoLCBgJHsgY2FtZWxDYXNlKG1ldHJpYy50eXBlKSB9LmN1cnJlbnRgKSA6IG51bGw7CiAgICAgICAgY29uc3QgY3VycmVudE1ldHJpY3NLVnMgPSBbXTsKCiAgICAgICAgaWYgKGN1cnJlbnQpIHsKICAgICAgICAgIGtleXMoY3VycmVudCkuZm9yRWFjaCgoaykgPT4gewogICAgICAgICAgICBjdXJyZW50TWV0cmljc0tWcy5wdXNoKHsKICAgICAgICAgICAgICB0YXJnZXROYW1lOiAgc3RhcnRDYXNlKGspLAogICAgICAgICAgICAgIHRhcmdldFZhbHVlOiBjdXJyZW50W2tdLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgY29uc3Qgb3V0ID0gewogICAgICAgICAgbWV0cmljTmFtZTogICAgbWV0cmljVmFsdWU/Lm1ldHJpYz8ubmFtZSA/PyBudWxsLAogICAgICAgICAgbWV0cmljU291cmNlOiAgbWV0cmljLnR5cGUsCiAgICAgICAgICB0YXJnZXROYW1lOiAgICB0YXJnZXRUeXBlID8/IG51bGwsCiAgICAgICAgICB0YXJnZXRWYWx1ZTogICBudWxsLAogICAgICAgICAgc3ViUm93Q29udGVudDogewogICAgICAgICAgICBvYmplY3RBcGlWZXJzaW9uOiBtZXRyaWNWYWx1ZT8uZGVzY3JpYmVkT2JqZWN0Py5hcGlWZXJzaW9uID8/IG51bGwsCiAgICAgICAgICAgIG9iamVjdEtpbmQ6ICAgICAgIG1ldHJpY1ZhbHVlPy5kZXNjcmliZWRPYmplY3Q/LmtpbmQgPz8gbnVsbCwKICAgICAgICAgICAgb2JqZWN0TmFtZTogICAgICAgbWV0cmljVmFsdWU/LmRlc2NyaWJlZE9iamVjdD8ubmFtZSA/PyBudWxsLAogICAgICAgICAgICByZXNvdXJjZU5hbWU6ICAgICBtZXRyaWNWYWx1ZT8ubmFtZSA/PyBudWxsLAogICAgICAgICAgICBjdXJyZW50TWV0cmljczogICBjdXJyZW50TWV0cmljc0tWcywKICAgICAgICAgIH0sCiAgICAgICAgfTsKCiAgICAgICAgaWYgKHRhcmdldFR5cGUpIHsKICAgICAgICAgIGlmICh0YXJnZXRUeXBlID09PSAnVXRpbGl6YXRpb24nKSB7CiAgICAgICAgICAgIG91dC50YXJnZXRWYWx1ZSA9IG1ldHJpY1ZhbHVlLnRhcmdldC5hdmVyYWdlVXRpbGl6YXRpb247CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBvdXQudGFyZ2V0VmFsdWUgPSBnZXQobWV0cmljVmFsdWUudGFyZ2V0LCBjYW1lbENhc2UodGFyZ2V0VHlwZSkpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG91dDsKICAgICAgfSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/detail/autoscaling.horizontalpodautoscaler","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport InfoBox from '@shell/components/InfoBox';\nimport camelCase from 'lodash/camelCase';\nimport keys from 'lodash/keys';\nimport startCase from 'lodash/startCase';\nimport { findBy } from '@shell/utils/array';\nimport { get } from '@shell/utils/object';\n\nexport default {\n  components: {\n    InfoBox,\n    ResourceTabs,\n    Tab,\n  },\n\n  mixins: [CreateEditView],\n\n  props: {\n    mode: {\n      default: 'view',\n      type:    String,\n    },\n    value: {\n      required: true,\n      type:     Object,\n    },\n  },\n\n  data() {\n    return {};\n  },\n\n  computed: {\n    mappedMetrics() {\n      const {\n        spec: { metrics = [] },\n        status: { currentMetrics = [] },\n      } = this.value;\n\n      return metrics.map((metric) => {\n        const metricValue = get(metric, camelCase(metric.type));\n        const targetType = metricValue?.target?.type;\n        const currentMatch = findBy(currentMetrics, 'resource.name', metric.resource.name);\n        const current = currentMatch ? get(currentMatch, `${ camelCase(metric.type) }.current`) : null;\n        const currentMetricsKVs = [];\n\n        if (current) {\n          keys(current).forEach((k) => {\n            currentMetricsKVs.push({\n              targetName:  startCase(k),\n              targetValue: current[k],\n            });\n          });\n        }\n\n        const out = {\n          metricName:    metricValue?.metric?.name ?? null,\n          metricSource:  metric.type,\n          targetName:    targetType ?? null,\n          targetValue:   null,\n          subRowContent: {\n            objectApiVersion: metricValue?.describedObject?.apiVersion ?? null,\n            objectKind:       metricValue?.describedObject?.kind ?? null,\n            objectName:       metricValue?.describedObject?.name ?? null,\n            resourceName:     metricValue?.name ?? null,\n            currentMetrics:   currentMetricsKVs,\n          },\n        };\n\n        if (targetType) {\n          if (targetType === 'Utilization') {\n            out.targetValue = metricValue.target.averageUtilization;\n          } else {\n            out.targetValue = get(metricValue.target, camelCase(targetType));\n          }\n        }\n\n        return out;\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <ResourceTabs\n    v-model=\"value\"\n    :mode=\"mode\"\n  >\n    <Tab\n      name=\"metrics\"\n      :label=\"t('hpa.tabs.metrics')\"\n      class=\"bordered-table hpa-metrics-table\"\n      :weight=\"4\"\n    >\n      <div\n        v-for=\"(metric, index) in mappedMetrics\"\n        :key=\"`${index}${metric.metricName}`\"\n      >\n        <InfoBox>\n          <div class=\"row info-row\">\n            <div class=\"col span-6 info-column\">\n              <h4>\n                <t\n                  k=\"hpa.detail.metricHeader\"\n                  :source=\"metric.metricSource\"\n                />\n              </h4>\n              <div\n                v-if=\"metric.metricName\"\n                class=\"mb-5\"\n              >\n                <label class=\"text-label\">\n                  <t k=\"hpa.metrics.headers.metricName\" />:\n                </label>\n                <span>{{ metric.metricName }}</span>\n              </div>\n              <div class=\"mb-5\">\n                <label class=\"text-label\">\n                  <t k=\"hpa.metrics.headers.targetName\" />:\n                </label>\n                <span>{{ metric.targetName }}</span>\n              </div>\n              <div class=\"mb-5\">\n                <label class=\"text-label\">\n                  <t k=\"hpa.metrics.headers.value\" />:\n                </label>\n                <span :data-testid=\"`resource-metrics-value-${metric.subRowContent.resourceName}`\">{{ metric.targetValue }}</span>\n              </div>\n              <div v-if=\"metric.metricSource === 'Object'\">\n                <div class=\"mb-5\">\n                  <label class=\"text-label\">\n                    <t k=\"hpa.objectReference.api.label\" />:\n                  </label>\n                  <span>{{ metric.subRowContent.objectApiVersion }}</span>\n                </div>\n                <div class=\"mb-5\">\n                  <label class=\"text-label\">\n                    <t k=\"hpa.objectReference.kind.label\" />:\n                  </label>\n                  <span>{{ metric.subRowContent.objectKind }}</span>\n                </div>\n                <div class=\"mb-5\">\n                  <label class=\"text-label\">\n                    <t k=\"hpa.objectReference.name.label\" />:\n                  </label>\n                  <span>{{ metric.subRowContent.objectName }}</span>\n                </div>\n              </div>\n              <div v-if=\"metric.metricSource === 'Resource'\">\n                <div class=\"mb-5\">\n                  <label class=\"text-label\">\n                    <t k=\"hpa.metrics.headers.resource\" />:\n                  </label>\n                  <span :data-testid=\"`resource-metrics-name-${metric.subRowContent.resourceName}`\">{{ metric.subRowContent.resourceName }}</span>\n                </div>\n              </div>\n            </div>\n            <div class=\"col span-6\">\n              <h4><t k=\"hpa.detail.currentMetrics.header\" /></h4>\n              <div\n                v-if=\"(metric.subRowContent.currentMetrics || []).length > 0\"\n              >\n                <div\n                  v-for=\"(current, currentIndex) in metric.subRowContent\n                    .currentMetrics\"\n                  :key=\"`${currentIndex}${current.targetName}`\"\n                >\n                  <div class=\"mb-5\">\n                    <label class=\"text-label\">\n                      {{ current.targetName }}:\n                    </label>\n                    <span :data-testid=\"`current-metrics-${current.targetName}-${metric.subRowContent.resourceName}`\">{{ current.targetValue }}</span>\n                  </div>\n                </div>\n              </div>\n              <div v-else>\n                <t k=\"hpa.detail.currentMetrics.noMetrics\" />\n              </div>\n            </div>\n          </div>\n        </InfoBox>\n      </div>\n    </Tab>\n    <Tab\n      v-if=\"!!value.spec.behavior\"\n      name=\"behavior\"\n      :label=\"t('hpa.tabs.behavior')\"\n      class=\"bordered-table hpa-behavior-table\"\n      :weight=\"3\"\n    >\n      <div\n        v-for=\"(type, i) in ['scaleDown', 'scaleUp']\"\n        :key=\"`${i}`\"\n      >\n        <InfoBox v-if=\"!!value.spec.behavior[type]\">\n          <div class=\"row info-row\">\n            <div class=\"col span-6 info-column\">\n              <h4>\n                <t\n                  :k=\"`hpa.${type}Rules.label`\"\n                />\n              </h4>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col span-6 info-column\">\n              <label class=\"text-label\"><t k=\"hpa.scalingRule.policyHeader\" /></label>\n              <ul\n                v-for=\"(current, currentIndex) in value.spec.behavior[type].policies\"\n                :key=\"`${currentIndex}`\"\n              >\n                <li>\n                  <span>{{ current.value }}</span>\n                  <span>{{ current.type }}</span>\n                  <span>(for {{ current.periodSeconds }}s)</span>\n                </li>\n              </ul>\n            </div>\n            <div class=\"col span-6\">\n              <div class=\"mb-5\">\n                <label class=\"text-label\"><t k=\"hpa.scalingRule.selectPolicy\" />: </label>\n                <span>{{ value.spec.behavior[type].selectPolicy }}</span>\n              </div>\n              <div class=\"mb-5\">\n                <label class=\"text-label\"><t k=\"hpa.scalingRule.stabilizationWindowSeconds\" />: </label>\n                <span>{{ value.spec.behavior[type].stabilizationWindowSeconds }}s</span>\n              </div>\n            </div>\n          </div>\n        </InfoBox>\n      </div>\n    </Tab>\n  </ResourceTabs>\n</template>\n\n<style lang=\"scss\" scoped>\n.hpa-metrics-table {\n  .info-box ::v-deep {\n    background-color: var(--simple-box-bg);\n  }\n  .row {\n    .over-hr {\n      padding-right: 30px;\n    }\n  }\n}\n</style>\n"]}]}