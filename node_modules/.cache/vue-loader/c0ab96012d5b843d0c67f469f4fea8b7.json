{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.podsecurityadmissionconfigurationtemplate.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.podsecurityadmissionconfigurationtemplate.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUsIHsgUHJvcFR5cGUsIFZ1ZUNvbnN0cnVjdG9yIH0gZnJvbSAndnVlJzsKaW1wb3J0IENyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldyc7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZS52dWUnOwppbXBvcnQgUG9kU2VjdXJpdHlBZG1pc3Npb24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUG9kU2VjdXJpdHlBZG1pc3Npb24udnVlJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZy52dWUnOwppbXBvcnQgTmFtZU5zRGVzY3JpcHRpb24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9OYW1lTnNEZXNjcmlwdGlvbi52dWUnOwppbXBvcnQgeyBQU0EsIFBTQUNvbmZpZywgUFNBRGVmYXVsdHMsIFBTQUV4ZW1wdGlvbnMgfSBmcm9tICdAc2hlbGwvdHlwZXMvcG9kLXNlY3VyaXR5LWFkbWlzc2lvbic7CmltcG9ydCB7IFBTQURpbWVuc2lvbnMgfSBmcm9tICdAc2hlbGwvY29uZmlnL3BvZC1zZWN1cml0eS1hZG1pc3Npb24nOwppbXBvcnQgeyBNQU5BR0VNRU5UIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CgpleHBvcnQgZGVmYXVsdCAoVnVlIGFzIFZ1ZUNvbnN0cnVjdG9yPFZ1ZSAmIEluc3RhbmNlVHlwZTx0eXBlb2YgQ3JlYXRlRWRpdFZpZXc+PikuZXh0ZW5kKHsKICBtaXhpbnM6ICAgICBbQ3JlYXRlRWRpdFZpZXddLAogIGNvbXBvbmVudHM6IHsKICAgIENydVJlc291cmNlLAogICAgTG9hZGluZywKICAgIE5hbWVOc0Rlc2NyaXB0aW9uLAogICAgUG9kU2VjdXJpdHlBZG1pc3Npb24sCiAgfSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kQWxsJywgeyB0eXBlOiBNQU5BR0VNRU5ULlBTQSB9KTsKICB9LAoKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCBhcyBQcm9wVHlwZTxQU0E+LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgZGVmYXVsdDogICgpID0+ICh7fSkgYXMgUFNBCiAgICB9LAoKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgLyoqCiAgICAgKiBHZXQgb3IgaW5pdGlhbGl6ZSBleGVtcHRpb25zIGlmIG5vbmUKICAgICAqLwogICAgZXhlbXB0aW9ucygpOiBQU0FFeGVtcHRpb25zIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWU/LmNvbmZpZ3VyYXRpb24/LmV4ZW1wdGlvbnMgfHwge307CiAgICB9LAoKICAgIC8qKgogICAgICogR2V0IG9yIGluaXRpYWxpemUgZGVmYXVsdHMgbGFiZWxzIGlmIG5vbmUKICAgICAqLwogICAgZGVmYXVsdHMoKTogUFNBRGVmYXVsdHMgewogICAgICByZXR1cm4gdGhpcy52YWx1ZT8uY29uZmlndXJhdGlvbj8uZGVmYXVsdHMgfHwge307CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogUmVwbGFjZSBleGVtcHRpb24gd2l0aCBuZXcgdmFsdWVzCiAgICAgKi8KICAgIHNldEV4ZW1wdGlvbnMoZXhlbXB0aW9uczogUFNBRXhlbXB0aW9ucykgewogICAgICB0aGlzLnZhbHVlLmNvbmZpZ3VyYXRpb24uZXhlbXB0aW9ucyA9IGV4ZW1wdGlvbnM7CiAgICB9LAoKICAgIC8qKgogICAgICogUmVwbGFjZSBkZWZhdWx0cyB3aXRoIG5ldyB2YWx1ZXMKICAgICAqLwogICAgc2V0RGVmYXVsdHMobGFiZWxzOiBQU0FEZWZhdWx0cykgewogICAgICB0aGlzLnZhbHVlLmNvbmZpZ3VyYXRpb24uZGVmYXVsdHMgPSBsYWJlbHM7CiAgICB9LAogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICAvLyBJbml0aWFsaXplIGNvbmZpZ3VyYXRpb24gaWYgbm9uZSwgYXMgZGVmYXVsdCB2YWx1ZSByZXNvdXJjZSBjYXNlCiAgICBpZiAoIXRoaXMudmFsdWUuY29uZmlndXJhdGlvbikgewogICAgICB0aGlzLnZhbHVlLmNvbmZpZ3VyYXRpb24gPSB7CiAgICAgICAgZGVmYXVsdHM6ICAge30sCiAgICAgICAgZXhlbXB0aW9uczogT2JqZWN0LmFzc2lnbih7fSwgLi4uUFNBRGltZW5zaW9ucy5tYXAoKGRpbWVuc2lvbikgPT4gKHsgW2RpbWVuc2lvbl06IFtdIH0pKSksCiAgICAgIH0gYXMgUFNBQ29uZmlnOwogICAgfQogIH0KfSk7Cg=="},{"version":3,"sources":["management.cattle.io.podsecurityadmissionconfigurationtemplate.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"management.cattle.io.podsecurityadmissionconfigurationtemplate.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script lang=\"ts\">\nimport Vue, { PropType, VueConstructor } from 'vue';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource.vue';\nimport PodSecurityAdmission from '@shell/components/PodSecurityAdmission.vue';\nimport Loading from '@shell/components/Loading.vue';\nimport NameNsDescription from '@shell/components/form/NameNsDescription.vue';\nimport { PSA, PSAConfig, PSADefaults, PSAExemptions } from '@shell/types/pod-security-admission';\nimport { PSADimensions } from '@shell/config/pod-security-admission';\nimport { MANAGEMENT } from '@shell/config/types';\n\nexport default (Vue as VueConstructor<Vue & InstanceType<typeof CreateEditView>>).extend({\n  mixins:     [CreateEditView],\n  components: {\n    CruResource,\n    Loading,\n    NameNsDescription,\n    PodSecurityAdmission,\n  },\n\n  async fetch() {\n    await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PSA });\n  },\n\n  props: {\n    value: {\n      type:     Object as PropType<PSA>,\n      required: true,\n      default:  () => ({}) as PSA\n    },\n\n    mode: {\n      type:     String,\n      required: true,\n    }\n  },\n  computed: {\n    /**\n     * Get or initialize exemptions if none\n     */\n    exemptions(): PSAExemptions {\n      return this.value?.configuration?.exemptions || {};\n    },\n\n    /**\n     * Get or initialize defaults labels if none\n     */\n    defaults(): PSADefaults {\n      return this.value?.configuration?.defaults || {};\n    },\n  },\n\n  methods: {\n    /**\n     * Replace exemption with new values\n     */\n    setExemptions(exemptions: PSAExemptions) {\n      this.value.configuration.exemptions = exemptions;\n    },\n\n    /**\n     * Replace defaults with new values\n     */\n    setDefaults(labels: PSADefaults) {\n      this.value.configuration.defaults = labels;\n    },\n  },\n\n  created() {\n    // Initialize configuration if none, as default value resource case\n    if (!this.value.configuration) {\n      this.value.configuration = {\n        defaults:   {},\n        exemptions: Object.assign({}, ...PSADimensions.map((dimension) => ({ [dimension]: [] }))),\n      } as PSAConfig;\n    }\n  }\n});\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"errors\"\n    :cancel-event=\"true\"\n    :done-route=\"doneRoute\"\n    @error=\"setErrors\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      :value=\"value\"\n      :namespaced=\"false\"\n      :mode=\"mode\"\n      description-key=\"description\"\n    />\n\n    <PodSecurityAdmission\n      :labels=\"defaults\"\n      :labels-always-active=\"true\"\n      :exemptions=\"exemptions\"\n      :mode=\"mode\"\n      @updateLabels=\"setDefaults($event)\"\n      @updateExemptions=\"setExemptions($event)\"\n    />\n  </CruResource>\n</template>\n"]}]}