{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/idp/components/common/DisplayValue.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/idp/components/common/DisplayValue.vue","mtime":1716834296002},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRGlzcGxheVZhbHVlJywKICBwcm9wczogewogICAgbGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IFtTdHJpbmcsIE51bWJlcl0sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgaWNvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgZWRpdGFibGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzaG93Q29weUljb246IGZhbHNlLAogICAgICBkaXNwbGF5VmFsdWU6IHRoaXMudmFsdWUKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICB2YWx1ZShuZXdWYWx1ZSkgewogICAgICB0aGlzLmRpc3BsYXlWYWx1ZSA9IG5ld1ZhbHVlOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgY29weVZhbHVlICgpIHsKICAgICAgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQodGhpcy52YWx1ZSkudGhlbigoKSA9PiB7CiAgICAgICAgYWxlcnQoJ3ZhbHVlIGhhcyBiZWVuIGNvcGllZCB0byBjbGlwYm9hcmQhJyk7CiAgICAgIH0pLmNhdGNoKGVyciA9PiB7CiAgICAgICAgY29uc29sZS5lcnJvcihgQ29weSBlcnJvcmAsIGVycikKICAgICAgfSkKICAgIH0sCiAgICB1cGRhdGVWYWx1ZShldmVudCkgewogICAgICB0aGlzLmRpc3BsYXlWYWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZTsKICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB7IHZhbHVlOiBldmVudC50YXJnZXQudmFsdWUsIGxhYmVsOiB0aGlzLmxhYmVsIH0pOwogICAgfQogIH0KfQo="},{"version":3,"sources":["DisplayValue.vue"],"names":[],"mappings":";AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DisplayValue.vue","sourceRoot":"pkg/idp/components/common","sourcesContent":["<template>\n  <div class=\"display-value-container\">\n    <div class=\"label-placeholder\">\n      <i v-if=\"icon\" :class=\"['fa mr-5', icon, 'placholder-icon']\"></i>{{ label }}\n    </div>\n    \n    <div class=\"value-placeholder\">\n      <VTooltip v-if=\"!editable\" :distance=\"15\">\n        <span class=\"hover-container\" @mouseover=\"showCopyIcon = true\" @mouseleave=\"showCopyIcon = false\">\n          <span class=\"content\">{{ displayValue }}</span>\n          <span class=\"ml-5 copy-container\" v-show=\"showCopyIcon\" @click=\"copyValue\">\n            <i class=\"fa fa-copy\"></i>\n          </span>\n        </span>\n\n        <template #popper>\n          {{ displayValue }}\n        </template>\n      </VTooltip>\n      <input v-else v-model=\"displayValue\" type=\"text\" @input=\"updateValue\">\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'DisplayValue',\n  props: {\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    editable: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      showCopyIcon: false,\n      displayValue: this.value\n    }\n  },\n  watch: {\n    value(newValue) {\n      this.displayValue = newValue;\n    }\n  },\n  methods: {\n    copyValue () {\n      navigator.clipboard.writeText(this.value).then(() => {\n        alert('value has been copied to clipboard!');\n      }).catch(err => {\n        console.error(`Copy error`, err)\n      })\n    },\n    updateValue(event) {\n      this.displayValue = event.target.value;\n      this.$emit('input', { value: event.target.value, label: this.label });\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.display-value-container {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  // width: 50%;\n  height: 2rem;\n  text-align: left;\n\n  .label-placeholder {\n    opacity: 0.6;\n    font-weight: 400;\n    font-size: 1rem;\n    min-width: 0;\n    width: 10rem;\n  }\n\n  .placholder-icon {\n    opacity: 1;\n    color: black;\n    font-weight: bold;\n    font-size: 16px;\n  }\n\n  .value-placeholder {\n    opacity: 1;\n    min-width: 0;\n    max-width: 20rem;\n  }\n\n  .copy-container {\n    font-size: 1.2rem;\n    cursor: pointer;\n  }\n}\n</style>"]}]}