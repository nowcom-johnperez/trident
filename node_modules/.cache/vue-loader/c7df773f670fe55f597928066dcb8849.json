{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/PrincipalGroupBindings.vue?vue&type=style&index=0&id=3255adf2&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/PrincipalGroupBindings.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucGdiew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LXdyYXA6IHdyYXA7DQp9DQo="},{"version":3,"sources":["PrincipalGroupBindings.vue"],"names":[],"mappings":";AAsDA;AACA;AACA;AACA","file":"PrincipalGroupBindings.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\r\nimport { NORMAN, MANAGEMENT } from '@shell/config/types';\r\n\r\nexport default {\r\n  props: {\r\n    value: {\r\n      type:    String,\r\n      default: ''\r\n    },\r\n  },\r\n  computed: {\r\n\r\n    boundRoles() {\r\n      // need to use getter to fetch all NORMAN.PRINCIPAL, otherwise `rancher/byId` is not reactive...\r\n      const principals = this.$store.getters['rancher/all'](NORMAN.PRINCIPAL);\r\n      const globalRoleBindings = this.$store.getters['management/all'](MANAGEMENT.GLOBAL_ROLE_BINDING);\r\n\r\n      const principal = principals.find((x) => x.id === this.value);\r\n\r\n      return globalRoleBindings\r\n        // Bindings for this group\r\n        .filter((globalRoleBinding) => globalRoleBinding.groupPrincipalName === principal?.id)\r\n        // Display name of role associated with binding\r\n        .map((binding) => {\r\n          const role = this.$store.getters['management/byId'](MANAGEMENT.GLOBAL_ROLE, binding.globalRoleName);\r\n\r\n          return {\r\n            detailLocation: role.detailLocation,\r\n            label:          role ? role.displayName : role.id, // nameDisplay contains principal name, not required here\r\n          };\r\n        })\r\n        .sort((a, b) => a.label.localeCompare(b.label));\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"pgb\">\r\n    <template v-for=\"(role, i) in boundRoles\">\r\n      <nuxt-link\r\n        :key=\"role.id\"\r\n        :to=\"role.detailLocation\"\r\n      >\r\n        {{ role.label }}\r\n      </nuxt-link>\r\n      <template v-if=\"i + 1 < boundRoles.length\">\r\n        ,&nbsp;\r\n      </template>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<style lang='scss' scoped>\r\n.pgb{\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n</style>\r\n"]}]}