{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/ContainerMountPaths.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/ContainerMountPaths.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGNsb25lIH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IF9WSUVXIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgeyByYW5kb21TdHIgfSBmcm9tICdAc2hlbGwvdXRpbHMvc3RyaW5nJzsKCmltcG9ydCBNb3VudCBmcm9tICdAc2hlbGwvZWRpdC93b3JrbG9hZC9zdG9yYWdlL01vdW50JzsKaW1wb3J0IEJ1dHRvbkRyb3Bkb3duIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0J1dHRvbkRyb3Bkb3duJzsKaW1wb3J0IEFycmF5TGlzdEdyb3VwZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9BcnJheUxpc3RHcm91cGVkJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAgICAgICAnQ29udGFpbmVyTW91bnRQYXRocycsCiAgY29tcG9uZW50czogewogICAgQXJyYXlMaXN0R3JvdXBlZCwgQnV0dG9uRHJvcGRvd24sIE1vdW50CiAgfSwKCiAgcHJvcHM6IHsKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY3JlYXRlJywKICAgIH0sCgogICAgLy8gcG9kIHNwZWMKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfSwKICAgIH0sCgogICAgY29udGFpbmVyOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfSwKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIHRoaXMuaW5pdGlhbGl6ZVN0b3JhZ2UoKTsKCiAgICByZXR1cm4gewogICAgICBjb250YWluZXJWb2x1bWVzOiAgICAgICAgIFtdLAogICAgICBzdG9yYWdlVm9sdW1lczogICAgICAgICAgIHRoaXMuZ2V0U3RvcmFnZVZvbHVtZXMoKSwKICAgICAgc2VsZWN0ZWRDb250YWluZXJWb2x1bWVzOiB0aGlzLmdldFNlbGVjdGVkQ29udGFpbmVyVm9sdW1lcygpCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKCiAgICBhdmFpbGFibGVWb2x1bWVPcHRpb25zKCkgewogICAgICBjb25zdCBjb250YWluZXJWb2x1bWVzID0gdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzLm1hcCgoaXRlbSkgPT4gaXRlbS5uYW1lKTsKCiAgICAgIHJldHVybiB0aGlzLnZhbHVlLnZvbHVtZXMuZmlsdGVyKCh2b2wpID0+ICFjb250YWluZXJWb2x1bWVzLmluY2x1ZGVzKHZvbC5uYW1lKSkubWFwKChpdGVtKSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsOiAgYCR7IGl0ZW0ubmFtZSB9ICgkeyB0aGlzLmhlYWRlckZvcihpdGVtKSB9KWAsCiAgICAgICAgICBhY3Rpb246IHRoaXMuc2VsZWN0Vm9sdW1lLAogICAgICAgICAgdmFsdWU6ICBpdGVtLm5hbWUKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgfSwKCiAgd2F0Y2g6IHsKICAgIHZhbHVlKG5ldSwgb2xkKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRWb2x1bWVzID0gdGhpcy5nZXRTZWxlY3RlZENvbnRhaW5lclZvbHVtZXMoKTsKICAgIH0sCiAgICBzdG9yYWdlVm9sdW1lcyhuZXUsIG9sZCkgewogICAgICAvLyByZW1vdmVPYmplY3RzKHRoaXMudmFsdWUudm9sdW1lcywgb2xkKTsKICAgICAgLy8gYWRkT2JqZWN0cyh0aGlzLnZhbHVlLnZvbHVtZXMsIG5ldSk7CiAgICAgIGNvbnN0IG5hbWVzID0gbmV1LnJlZHVjZSgoYWxsLCBlYWNoKSA9PiB7CiAgICAgICAgYWxsLnB1c2goZWFjaC5uYW1lKTsKCiAgICAgICAgcmV0dXJuIGFsbDsKICAgICAgfSwgW10pOwoKICAgICAgdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzID0gdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzLmZpbHRlcigobW91bnQpID0+IG5hbWVzLmluY2x1ZGVzKG1vdW50Lm5hbWUpKTsKICAgIH0sCgogICAgc2VsZWN0ZWRDb250YWluZXJWb2x1bWVzKG5ldSwgb2xkKSB7CiAgICAgIC8vIHJlbW92ZU9iamVjdHModGhpcy52YWx1ZS52b2x1bWVzLCBvbGQpOwogICAgICAvLyBhZGRPYmplY3RzKHRoaXMudmFsdWUudm9sdW1lcywgbmV1KTsKICAgICAgY29uc3QgbmFtZXMgPSBuZXUubWFwKChpdGVtKSA9PiBpdGVtLm5hbWUpOwoKICAgICAgdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzID0gdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzLmZpbHRlcigobW91bnQpID0+IG5hbWVzLmluY2x1ZGVzKG1vdW50Lm5hbWUpKTsKICAgIH0KCiAgfSwKCiAgbWV0aG9kczogewogICAgLyoqCiAgICAgKiBJbml0aWFsaXplIG1pc3NpbmcgdmFsdWVzIGZvciB0aGUgY29udGFpbmVyCiAgICAgKi8KICAgIGluaXRpYWxpemVTdG9yYWdlKCkgewogICAgICBpZiAoIXRoaXMuY29udGFpbmVyLnZvbHVtZU1vdW50cykgewogICAgICAgIHRoaXMuJHNldCh0aGlzLmNvbnRhaW5lciwgJ3ZvbHVtZU1vdW50cycsIFtdKTsKICAgICAgfQogICAgICBpZiAoIXRoaXMudmFsdWUudm9sdW1lcykgewogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAndm9sdW1lcycsIFtdKTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIEdldCBleGlzdGluZyBwYWlyZWQgc3RvcmFnZSB2b2x1bWVzCiAgICAgKi8KICAgIGdldFN0b3JhZ2VWb2x1bWVzKCkgewogICAgICAvLyBFeHRyYWN0IHZvbHVtZSBtb3VudHMgdG8gbWFwIHN0b3JhZ2Ugdm9sdW1lcwogICAgICBjb25zdCB7IHZvbHVtZU1vdW50cyA9IFtdIH0gPSB0aGlzLmNvbnRhaW5lcjsKICAgICAgY29uc3QgbmFtZXMgPSB2b2x1bWVNb3VudHMubWFwKCh7IG5hbWUgfSkgPT4gbmFtZSk7CgogICAgICAvLyBFeHRyYWN0IHN0b3JhZ2Ugdm9sdW1lcyB0byBhbGxvdyBtdXRhdGlvbiwgaWYgbWF0Y2hlcyBtb3VudCBtYXAKICAgICAgcmV0dXJuIGNsb25lKHRoaXMudmFsdWUudm9sdW1lcy5maWx0ZXIoKHZvbHVtZSkgPT4gbmFtZXMuaW5jbHVkZXModm9sdW1lLm5hbWUpKSk7CiAgICB9LAoKICAgIGdldFNlbGVjdGVkQ29udGFpbmVyVm9sdW1lcygpIHsKICAgICAgLy8gRXh0cmFjdCB2b2x1bWUgbW91bnRzIHRvIG1hcCBzdG9yYWdlIHZvbHVtZXMKICAgICAgY29uc3QgeyB2b2x1bWVNb3VudHMgPSBbXSB9ID0gdGhpcy5jb250YWluZXI7CiAgICAgIGNvbnN0IG5hbWVzID0gdm9sdW1lTW91bnRzLm1hcCgoeyBuYW1lIH0pID0+IG5hbWUpOwoKICAgICAgLy8gRXh0cmFjdCBzdG9yYWdlIHZvbHVtZXMgdG8gYWxsb3cgbXV0YXRpb24sIGlmIG1hdGNoZXMgbW91bnQgbWFwCiAgICAgIHJldHVybiBjbG9uZSh0aGlzLnZhbHVlLnZvbHVtZXMuZmlsdGVyKCh2b2x1bWUpID0+IG5hbWVzLmluY2x1ZGVzKHZvbHVtZS5uYW1lKSkpOwogICAgfSwKCiAgICAvKioKICAgICAqIFJlbW92ZSBhbGwgbW91bnRzIGZvciBnaXZlbiBzdG9yYWdlIHZvbHVtZQogICAgICovCiAgICByZW1vdmVWb2x1bWUodm9sdW1lKSB7CiAgICAgIGNvbnN0IHJlbW92ZU5hbWUgPSB2b2x1bWUucm93LnZhbHVlLm5hbWU7CgogICAgICB0aGlzLnNlbGVjdGVkQ29udGFpbmVyVm9sdW1lcyA9IHRoaXMuc2VsZWN0ZWRDb250YWluZXJWb2x1bWVzLmZpbHRlcigoeyBuYW1lIH0pID0+IG5hbWUgIT09IHJlbW92ZU5hbWUpOwogICAgfSwKCiAgICBzZWxlY3RWb2x1bWUoZXZlbnQpIHsKICAgICAgY29uc3Qgc2VsZWN0ZWRWb2x1bWUgPSB0aGlzLnZhbHVlLnZvbHVtZXMuZmluZCgodm9sKSA9PiB2b2wubmFtZSA9PT0gZXZlbnQudmFsdWUpOwoKICAgICAgdGhpcy5zZWxlY3RlZENvbnRhaW5lclZvbHVtZXMucHVzaChzZWxlY3RlZFZvbHVtZSk7CgogICAgICBjb25zdCB7IG5hbWUgfSA9IHNlbGVjdGVkVm9sdW1lOwoKICAgICAgdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzLnB1c2gobmFtZSk7CiAgICB9LAoKICAgIGFkZFZvbHVtZSh0eXBlKSB7CiAgICAgIGNvbnN0IG5hbWUgPSBgdm9sLSR7IHJhbmRvbVN0cig1KS50b0xvd2VyQ2FzZSgpIH1gOwoKICAgICAgaWYgKHR5cGUgPT09ICdjcmVhdGVQVkMnKSB7CiAgICAgICAgdGhpcy5zdG9yYWdlVm9sdW1lcy5wdXNoKHsKICAgICAgICAgIF90eXBlOiAgICAgICAgICAgICAgICAgJ2NyZWF0ZVBWQycsCiAgICAgICAgICBwZXJzaXN0ZW50Vm9sdW1lQ2xhaW06IHt9LAogICAgICAgICAgbmFtZSwKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0eXBlID09PSAnY3NpJykgewogICAgICAgIHRoaXMuc3RvcmFnZVZvbHVtZXMucHVzaCh7CiAgICAgICAgICBfdHlwZTogdHlwZSwKICAgICAgICAgIGNzaTogICB7IHZvbHVtZUF0dHJpYnV0ZXM6IHt9IH0sCiAgICAgICAgICBuYW1lLAogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuc3RvcmFnZVZvbHVtZXMucHVzaCh7CiAgICAgICAgICBfdHlwZTogIHR5cGUsCiAgICAgICAgICBbdHlwZV06IHt9LAogICAgICAgICAgbmFtZSwKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgdGhpcy5jb250YWluZXIudm9sdW1lTW91bnRzLnB1c2goeyBuYW1lIH0pOwogICAgfSwKCiAgICBoZWFkZXJGb3IodmFsdWUpIHsKICAgICAgY29uc3QgdHlwZSA9IE9iamVjdC5rZXlzKHZhbHVlKS5maWx0ZXIoCiAgICAgICAgKGtleSkgPT4gdHlwZW9mIHZhbHVlW2tleV0gPT09ICdvYmplY3QnCiAgICAgIClbMF07CgogICAgICBpZiAoCiAgICAgICAgdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi9leGlzdHMnXShgd29ya2xvYWQuc3RvcmFnZS5zdWJ0eXBlcy4keyB0eXBlIH1gKQogICAgICApIHsKICAgICAgICByZXR1cm4gdGhpcy50KGB3b3JrbG9hZC5zdG9yYWdlLnN1YnR5cGVzLiR7IHR5cGUgfWApOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0eXBlOwogICAgICB9CiAgICB9LAoKICAgIG9wZW5Qb3BvdmVyKCkgewogICAgICBjb25zdCBidXR0b24gPSB0aGlzLiRyZWZzLmJ1dHRvbkRyb3Bkb3duOwoKICAgICAgdHJ5IHsKICAgICAgICBidXR0b24udG9nZ2xlUG9wb3ZlcigpOwogICAgICB9IGNhdGNoIChlKSB7fQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["ContainerMountPaths.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ContainerMountPaths.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload/storage","sourcesContent":["<script>\nimport { clone } from '@shell/utils/object';\nimport { _VIEW } from '@shell/config/query-params';\nimport { randomStr } from '@shell/utils/string';\n\nimport Mount from '@shell/edit/workload/storage/Mount';\nimport ButtonDropdown from '@shell/components/ButtonDropdown';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\n\nexport default {\n  name:       'ContainerMountPaths',\n  components: {\n    ArrayListGrouped, ButtonDropdown, Mount\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n\n    // pod spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n\n    container: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  data() {\n    this.initializeStorage();\n\n    return {\n      containerVolumes:         [],\n      storageVolumes:           this.getStorageVolumes(),\n      selectedContainerVolumes: this.getSelectedContainerVolumes()\n    };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    availableVolumeOptions() {\n      const containerVolumes = this.container.volumeMounts.map((item) => item.name);\n\n      return this.value.volumes.filter((vol) => !containerVolumes.includes(vol.name)).map((item) => {\n        return {\n          label:  `${ item.name } (${ this.headerFor(item) })`,\n          action: this.selectVolume,\n          value:  item.name\n        };\n      });\n    },\n  },\n\n  watch: {\n    value(neu, old) {\n      this.selectedVolumes = this.getSelectedContainerVolumes();\n    },\n    storageVolumes(neu, old) {\n      // removeObjects(this.value.volumes, old);\n      // addObjects(this.value.volumes, neu);\n      const names = neu.reduce((all, each) => {\n        all.push(each.name);\n\n        return all;\n      }, []);\n\n      this.container.volumeMounts = this.container.volumeMounts.filter((mount) => names.includes(mount.name));\n    },\n\n    selectedContainerVolumes(neu, old) {\n      // removeObjects(this.value.volumes, old);\n      // addObjects(this.value.volumes, neu);\n      const names = neu.map((item) => item.name);\n\n      this.container.volumeMounts = this.container.volumeMounts.filter((mount) => names.includes(mount.name));\n    }\n\n  },\n\n  methods: {\n    /**\n     * Initialize missing values for the container\n     */\n    initializeStorage() {\n      if (!this.container.volumeMounts) {\n        this.$set(this.container, 'volumeMounts', []);\n      }\n      if (!this.value.volumes) {\n        this.$set(this.value, 'volumes', []);\n      }\n    },\n\n    /**\n     * Get existing paired storage volumes\n     */\n    getStorageVolumes() {\n      // Extract volume mounts to map storage volumes\n      const { volumeMounts = [] } = this.container;\n      const names = volumeMounts.map(({ name }) => name);\n\n      // Extract storage volumes to allow mutation, if matches mount map\n      return clone(this.value.volumes.filter((volume) => names.includes(volume.name)));\n    },\n\n    getSelectedContainerVolumes() {\n      // Extract volume mounts to map storage volumes\n      const { volumeMounts = [] } = this.container;\n      const names = volumeMounts.map(({ name }) => name);\n\n      // Extract storage volumes to allow mutation, if matches mount map\n      return clone(this.value.volumes.filter((volume) => names.includes(volume.name)));\n    },\n\n    /**\n     * Remove all mounts for given storage volume\n     */\n    removeVolume(volume) {\n      const removeName = volume.row.value.name;\n\n      this.selectedContainerVolumes = this.selectedContainerVolumes.filter(({ name }) => name !== removeName);\n    },\n\n    selectVolume(event) {\n      const selectedVolume = this.value.volumes.find((vol) => vol.name === event.value);\n\n      this.selectedContainerVolumes.push(selectedVolume);\n\n      const { name } = selectedVolume;\n\n      this.container.volumeMounts.push(name);\n    },\n\n    addVolume(type) {\n      const name = `vol-${ randomStr(5).toLowerCase() }`;\n\n      if (type === 'createPVC') {\n        this.storageVolumes.push({\n          _type:                 'createPVC',\n          persistentVolumeClaim: {},\n          name,\n        });\n      } else if (type === 'csi') {\n        this.storageVolumes.push({\n          _type: type,\n          csi:   { volumeAttributes: {} },\n          name,\n        });\n      } else {\n        this.storageVolumes.push({\n          _type:  type,\n          [type]: {},\n          name,\n        });\n      }\n\n      this.container.volumeMounts.push({ name });\n    },\n\n    headerFor(value) {\n      const type = Object.keys(value).filter(\n        (key) => typeof value[key] === 'object'\n      )[0];\n\n      if (\n        this.$store.getters['i18n/exists'](`workload.storage.subtypes.${ type }`)\n      ) {\n        return this.t(`workload.storage.subtypes.${ type }`);\n      } else {\n        return type;\n      }\n    },\n\n    openPopover() {\n      const button = this.$refs.buttonDropdown;\n\n      try {\n        button.togglePopover();\n      } catch (e) {}\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <!-- Storage Volumes -->\n    <ArrayListGrouped\n      :key=\"selectedContainerVolumes.length\"\n      v-model=\"selectedContainerVolumes\"\n      :mode=\"mode\"\n      @remove=\"removeVolume\"\n    >\n      <!-- Custom/default storage volume form -->\n      <template #default=\"props\">\n        <h3>{{ props.row.value.name }} ({{ headerFor(props.row.value) }})</h3>\n        <Mount\n          :container=\"container\"\n          :name=\"props.row.value.name\"\n          :mode=\"mode\"\n        />\n      </template>\n\n      <!-- Add Storage Volume -->\n      <template #add>\n        <ButtonDropdown\n          v-if=\"!isView\"\n          id=\"add-volume\"\n          :button-label=\"t('workload.storage.selectVolume')\"\n          :dropdown-options=\"availableVolumeOptions\"\n          size=\"sm\"\n          @click-action=\"e=>selectVolume(e)\"\n        >\n          <template #no-options>\n            {{ t('workload.storage.noVolumes') }}\n          </template>\n        </ButtonDropdown>\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n"]}]}