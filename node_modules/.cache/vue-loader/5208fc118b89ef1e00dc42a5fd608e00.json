{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/index.vue?vue&type=style&index=0&id=52647d93&lang=scss","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yZWNlaXZlciB7CiAgJG1hcmdpbjogMTBweDsKICAkbG9nbzogNjBweDsKCiAgLmJveC1jb250YWluZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgIGZsZXgtd3JhcDogd3JhcDsKICAgIG1hcmdpbjogMCAtMSokbWFyZ2luOwoKICAgIC5zdWJ0eXBlLWJhbm5lcnsKICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogICAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgICBmbGV4LWRpcmVjdGlvbjogcm93OwogICAgfQogIH0KCiAgLnJpZ2h0IHsKICAgIHBhZGRpbmc6IDMwcHg7CiAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkIHZhcigtLWJvcmRlcik7CiAgfQoKICAubG9nbyB7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB3aWR0aDogJGxvZ287CiAgICBoZWlnaHQ6ICRsb2dvOwogICAgYm9yZGVyLXJhZGl1czogY2FsYygyICogdmFyKC0tYm9yZGVyLXJhZGl1cykpOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKCiAgICBpbWcgewogICAgICB3aWR0aDogJGxvZ28gLSA0cHg7CiAgICAgIGhlaWdodDogJGxvZ28gLSA0cHg7CiAgICAgIG9iamVjdC1maXQ6IGNvbnRhaW47CiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKICAgICAgdG9wOiAycHg7CiAgICB9CiAgfQoKICAubmFtZSB7CiAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwogICAgbWFyZ2luLWJvdHRvbTogMDsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver","sourcesContent":["<script>\n/**\n * The Route and Receiver resources are deprecated. Going forward,\n * routes and receivers should be configured within AlertmanagerConfigs.\n * Any updates to receiver configuration forms, such as Slack/email/PagerDuty\n * etc, should be made to the receiver forms that are based on the\n * AlertmanagerConfig resource, which has a different API. The new forms are\n * located in @shell/edit/monitoring.coreos.com.alertmanagerconfig/types.\n */\nimport { MONITORING } from '@shell/config/types';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport Loading from '@shell/components/Loading';\nimport { Banner } from '@components/Banner';\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport YamlEditor, { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport jsyaml from 'js-yaml';\nimport { RECEIVERS_TYPES } from '@shell/models/monitoring.coreos.com.receiver';\nimport ButtonDropdown from '@shell/components/ButtonDropdown';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\n\nexport default {\n  components: {\n    ArrayListGrouped,\n    Banner,\n    ButtonDropdown,\n    CruResource,\n    LabeledInput,\n    Loading,\n    Tabbed,\n    Tab,\n    YamlEditor\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    await this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.ROUTE });\n  },\n\n  data() {\n    this.$set(this.value, 'spec', this.value.spec || {});\n\n    if (this.mode === _EDIT || this.mode === _VIEW) {\n      for (let i = 0; i < this.value.spec.email_configs.length; i++) {\n        if (this.value.spec.email_configs[i].smarthost) {\n          const hostPort = this.value.spec.email_configs[i].smarthost.split(':');\n\n          this.$set(this.value.spec.email_configs[i], 'host', hostPort[0] || '');\n          this.$set(this.value.spec.email_configs[i], 'port', hostPort[1] || '');\n          delete this.value.spec.email_configs[i]['smarthost'];\n        }\n      }\n    }\n\n    RECEIVERS_TYPES.forEach((receiverType) => {\n      this.$set(this.value.spec, receiverType.key, this.value.spec[receiverType.key] || []);\n    });\n\n    const specSchema = this.$store.getters['cluster/schemaFor'](MONITORING.SPOOFED.RECEIVER_SPEC);\n    const expectedFields = Object.keys(specSchema.resourceFields);\n    const suffix = {};\n\n    Object.keys(this.value.spec).forEach((key) => {\n      if (!expectedFields.includes(key)) {\n        suffix[key] = this.value.spec[key];\n      }\n    });\n\n    let suffixYaml = jsyaml.dump(suffix);\n\n    if (suffixYaml.trim() === '{}') {\n      suffixYaml = '';\n    }\n\n    return {\n      expectedFields,\n      receiverTypes:        RECEIVERS_TYPES,\n      fileFound:            false,\n      receiver:             {},\n      suffixYaml,\n      EDITOR_MODES,\n      yamlError:            '',\n      doneLocationOverride: {\n        name:   'c-cluster-monitoring-route-receiver',\n        params: { cluster: this.$store.getters['clusterId'] },\n        query:  { resource: MONITORING.SPOOFED.RECEIVER }\n      }\n    };\n  },\n\n  computed: {\n    editorMode() {\n      if ( this.isView ) {\n        return EDITOR_MODES.VIEW_CODE;\n      }\n\n      return EDITOR_MODES.EDIT_CODE;\n    },\n  },\n\n  watch: {\n    suffixYaml(value) {\n      try {\n        // We need this step so we don't just keep adding new keys when modifying the custom field\n        Object.keys(this.value.spec).forEach((key) => {\n          if (!this.expectedFields.includes(key)) {\n            this.$delete(this.value.spec, key);\n          }\n        });\n\n        const suffix = jsyaml.load(value);\n\n        Object.assign(this.value.spec, suffix);\n        this.yamlError = '';\n      } catch (ex) {\n        this.yamlError = `There was a problem parsing the Custom Config: ${ ex }`;\n      }\n    }\n  },\n\n  methods: {\n    getComponent(name) {\n      return require(`./types/${ name }`).default;\n    },\n\n    navigateTo(receiverType) {\n      this.$refs.tabbed.select(receiverType.name);\n    },\n\n    getCount(receiverType) {\n      const found = this.value?.spec?.[receiverType.key] || [];\n\n      return found.length;\n    },\n\n    tabChanged({ tab }) {\n      window.scrollTop = 0;\n      if ( tab.name === 'custom' ) {\n        this.$nextTick(() => {\n          if ( this.$refs.customEditor ) {\n            this.$refs.customEditor[0].refresh();\n            this.$refs.customEditor[0].focus();\n          }\n        });\n      }\n    },\n\n    saveOverride(buttonDone) {\n      if (this.yamlError) {\n        this.errors = this.errors || [];\n        this.errors.push(this.yamlError);\n        buttonDone(false);\n      } else {\n        this.save(...arguments);\n      }\n    },\n\n    createAddOptions(receiverType) {\n      return receiverType.addOptions.map();\n    },\n\n    createSmarthost() {\n      if (this.value.spec.email_configs.length > 0) {\n        this.value.spec.email_configs.forEach((email) => {\n          if (email['port'] || email['host']) {\n            const hostValue = email.host ? `${ email.host }` : '';\n\n            email.smarthost = email.port ? `${ hostValue }:${ email.port }` : `${ hostValue }`;\n            delete email['port'];\n            delete email['host'];\n          }\n        });\n      }\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.createSmarthost, 'create-smarthost');\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    class=\"receiver\"\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :can-yaml=\"false\"\n    :errors=\"errors\"\n    :cancel-event=\"true\"\n    @error=\"e=>errors = e\"\n    @finish=\"saveOverride\"\n    @cancel=\"done\"\n  >\n    <div\n      v-if=\"!isView\"\n      class=\"row mb-10\"\n    >\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.spec.name\"\n          :disabled=\"!isCreate\"\n          :label=\"t('generic.name')\"\n          :mode=\"mode\"\n        />\n      </div>\n    </div>\n    <Tabbed\n      ref=\"tabbed\"\n      :side-tabs=\"true\"\n      default-tab=\"overview\"\n      @changed=\"tabChanged\"\n    >\n      <Tab\n        :label=\"t('generic.overview')\"\n        :weight=\"receiverTypes.length\"\n        name=\"overview\"\n      >\n        <div class=\"box-container create-resource-container \">\n          <div\n            v-for=\"(receiverType, i) in receiverTypes\"\n            :key=\"i\"\n            class=\"mb-10 subtype-banner\"\n            primary-color-var=\"--primary-color\"\n            @click=\"navigateTo(receiverType)\"\n          >\n            <div class=\"left\">\n              <div class=\"logo\">\n                <img :src=\"receiverType.logo\">\n              </div>\n              <h4 class=\"name ml-10\">\n                <t :k=\"receiverType.label\" />\n              </h4>\n            </div>\n            <div\n              v-if=\"receiverType.name !== 'custom'\"\n              class=\"right\"\n            >\n              {{ getCount(receiverType) }}\n            </div>\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        v-for=\"(receiverType, i) in receiverTypes\"\n        :key=\"i\"\n        :label=\"t(receiverType.label)\"\n        :name=\"receiverType.name\"\n        :weight=\"receiverTypes.length - i\"\n      >\n        <YamlEditor\n          v-if=\"receiverType.name === 'custom'\"\n          ref=\"customEditor\"\n          v-model=\"suffixYaml\"\n          :scrolling=\"false\"\n          :editor-mode=\"editorMode\"\n        />\n        <div v-else>\n          <component\n            :is=\"getComponent(receiverType.banner)\"\n            v-if=\"receiverType.banner\"\n            :model=\"value.spec[receiverType.key]\"\n            :mode=\"mode\"\n          />\n          <ArrayListGrouped\n            v-model=\"value.spec[receiverType.key]\"\n            class=\"namespace-list\"\n            :mode=\"mode\"\n            :default-add-value=\"{}\"\n            :add-label=\"t('monitoringReceiver.addButton', { type: t(receiverType.label) })\"\n          >\n            <template #default=\"props\">\n              <component\n                :is=\"getComponent(receiverType.name)\"\n                :value=\"props.row.value\"\n                :mode=\"mode\"\n              />\n            </template>\n            <template\n              v-if=\"receiverType.addButton\"\n              #add\n            >\n              <component\n                :is=\"getComponent(receiverType.addButton)\"\n                :model=\"value.spec[receiverType.key]\"\n                :mode=\"mode\"\n              />\n            </template>\n          </ArrayListGrouped>\n        </div>\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n\n<style lang=\"scss\">\n  .receiver {\n    $margin: 10px;\n    $logo: 60px;\n\n    .box-container {\n      display: flex;\n      justify-content: space-between;\n      flex-wrap: wrap;\n      margin: 0 -1*$margin;\n\n      .subtype-banner{\n        justify-content: space-between;\n        align-items: center;\n        flex-direction: row;\n      }\n    }\n\n    .right {\n      padding: 30px;\n      border-left: 1px solid var(--border);\n    }\n\n    .logo {\n      text-align: center;\n      width: $logo;\n      height: $logo;\n      border-radius: calc(2 * var(--border-radius));\n      overflow: hidden;\n      background-color: white;\n      display: inline-block;\n      vertical-align: middle;\n\n      img {\n        width: $logo - 4px;\n        height: $logo - 4px;\n        object-fit: contain;\n        position: relative;\n        top: 2px;\n      }\n    }\n\n    .name {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      margin-bottom: 0;\n      display: inline-block;\n      vertical-align: middle;\n    }\n  }\n</style>\n"]}]}