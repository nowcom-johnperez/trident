{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.alertmanagerconfig/types/webhook.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.alertmanagerconfig/types/webhook.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBTaW1wbGVTZWNyZXRTZWxlY3RvciBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL1NpbXBsZVNlY3JldFNlbGVjdG9yJzsKaW1wb3J0IHsgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCBUTFMgZnJvbSAnLi4vdGxzJzsKaW1wb3J0IEF1dGggZnJvbSAnLi4vYXV0aCc7CgpleHBvcnQgY29uc3QgTVNfVEVBTVNfVVJMID0gJ2h0dHA6Ly9yYW5jaGVyLWFsZXJ0aW5nLWRyaXZlcnMtcHJvbTJ0ZWFtcy5jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0uc3ZjOjgwODkvdjIvY29ubmVjdG9yJzsKZXhwb3J0IGNvbnN0IEFMSUJBQkFfQ0xPVURfU01TX1VSTCA9ICdodHRwOi8vcmFuY2hlci1hbGVydGluZy1kcml2ZXJzLXNhY2hldC5jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0uc3ZjOjk4NzYvYWxlcnQnOwpleHBvcnQgY29uc3QgV0VCSE9PS19UWVBFUyA9IHsKICBBTElCQUJBX0NMT1VEX1NNUzogJ2FsaWJhYmEtY2xvdWQtc21zJywKICBHRU5FUklDOiAgICAgICAgICAgJ2dlbmVyaWMnLAogIE1TX1RFQU1TOiAgICAgICAgICAnbXMtdGVhbXMnCn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXV0aCwKICAgIEJhbm5lciwKICAgIENoZWNrYm94LAogICAgTGFiZWxlZElucHV0LAogICAgTGFiZWxlZFNlbGVjdCwKICAgIFNpbXBsZVNlY3JldFNlbGVjdG9yLAogICAgVExTLAogIH0sCiAgcHJvcHM6IHsKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBuYW1lc3BhY2U6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfQogIH0sCiAgZGF0YShwcm9wcykgewogICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdodHRwQ29uZmlnJywgdGhpcy52YWx1ZS5odHRwQ29uZmlnIHx8IHt9KTsKICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAnc2VuZFJlc29sdmVkJywgdGhpcy52YWx1ZS5zZW5kUmVzb2x2ZWQgfHwgZmFsc2UpOwoKICAgIGNvbnN0IGlzRHJpdmVyVXJsID0gdGhpcy52YWx1ZS51cmwgPT09IE1TX1RFQU1TX1VSTCB8fCB0aGlzLnZhbHVlLnVybCA9PT0gQUxJQkFCQV9DTE9VRF9TTVNfVVJMOwoKICAgIHJldHVybiB7CiAgICAgIHNob3dOYW1lc3BhY2VCYW5uZXI6ICBpc0RyaXZlclVybCAmJiB0aGlzLm1vZGUgIT09IF9WSUVXLAogICAgICB2aWV3OiAgICAgICAgICAgICAgICAgX1ZJRVcsCiAgICAgIGluaXRpYWxVcmxTZWNyZXROYW1lOiB0aGlzLnZhbHVlPy51cmxTZWNyZXQ/Lm5hbWUgPyB0aGlzLnZhbHVlLnVybFNlY3JldC5uYW1lIDogJycsCiAgICAgIGluaXRpYWxVcmxTZWNyZXRLZXk6ICB0aGlzLnZhbHVlPy51cmxTZWNyZXQ/LmtleSA/IHRoaXMudmFsdWUudXJsU2VjcmV0LmtleSA6ICcnLAogICAgICB3ZWJob29rT3B0b25zOiAgICAgICAgWwogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiB0aGlzLnQoJ21vbml0b3JpbmdSZWNlaXZlci53ZWJob29rLmFkZC5nZW5lcmljJyksCiAgICAgICAgICB2YWx1ZTogV0VCSE9PS19UWVBFUy5HRU5FUklDCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBsYWJlbDogdGhpcy50KCdtb25pdG9yaW5nUmVjZWl2ZXIud2ViaG9vay5hZGQubXNUZWFtcycpLAogICAgICAgICAgdmFsdWU6IFdFQkhPT0tfVFlQRVMuTVNfVEVBTVMKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGxhYmVsOiB0aGlzLnQoJ21vbml0b3JpbmdSZWNlaXZlci53ZWJob29rLmFkZC5hbGliYWJhQ2xvdWRTbXMnKSwKICAgICAgICAgIHZhbHVlOiBXRUJIT09LX1RZUEVTLkFMSUJBQkFfQ0xPVURfU01TCiAgICAgICAgfQogICAgICBdLAogICAgICBtc1RlYW1zVXJsOiAgICAgICAgICBNU19URUFNU19VUkwsCiAgICAgIGFsaWJhYmFDbG91ZFNtc1VybDogIEFMSUJBQkFfQ0xPVURfU01TX1VSTCwKICAgICAgc2VsZWN0ZWRXZWJob29rVHlwZTogdGhpcy5nZXRUeXBlRnJvbVVybCh0aGlzLnZhbHVlLnVybCksCiAgICAgIG5vbmU6ICAgICAgICAgICAgICAgICdfX1tbTk9ORV1dX18nLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFR5cGVGcm9tVXJsKHVybCkgewogICAgICBzd2l0Y2ggKHVybCkgewogICAgICBjYXNlIE1TX1RFQU1TX1VSTDoKICAgICAgICByZXR1cm4gV0VCSE9PS19UWVBFUy5NU19URUFNUzsKICAgICAgY2FzZSBBTElCQUJBX0NMT1VEX1NNU19VUkw6CiAgICAgICAgcmV0dXJuIFdFQkhPT0tfVFlQRVMuQUxJQkFCQV9DTE9VRF9TTVM7CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgcmV0dXJuIFdFQkhPT0tfVFlQRVMuR0VORVJJQzsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVVybFNlY3JldE5hbWUobmFtZSkgewogICAgICBjb25zdCBleGlzdGluZ0tleSA9IHRoaXMudmFsdWUudXJsU2VjcmV0Py5rZXkgfHwgJyc7CgogICAgICBpZiAodGhpcy52YWx1ZS51cmxTZWNyZXQpIHsKICAgICAgICBpZiAobmFtZSA9PT0gdGhpcy5ub25lKSB7CiAgICAgICAgICBkZWxldGUgdGhpcy52YWx1ZS51cmxTZWNyZXQ7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMudmFsdWUudXJsU2VjcmV0ID0gewogICAgICAgICAgICBrZXk6IGV4aXN0aW5nS2V5LAogICAgICAgICAgICBuYW1lCiAgICAgICAgICB9OwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnZhbHVlWyd1cmxTZWNyZXQnXSA9IHsKICAgICAgICAgIGtleTogJycsCiAgICAgICAgICBuYW1lCiAgICAgICAgfTsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVVybFNlY3JldEtleShrZXkpIHsKICAgICAgY29uc3QgZXhpc3RpbmdOYW1lID0gdGhpcy52YWx1ZS51cmxTZWNyZXQ/Lm5hbWUgfHwgJyc7CgogICAgICBpZiAodGhpcy52YWx1ZS51cmxTZWNyZXQpIHsKICAgICAgICB0aGlzLnZhbHVlLnVybFNlY3JldCA9IHsKICAgICAgICAgIG5hbWU6IGV4aXN0aW5nTmFtZSwKICAgICAgICAgIGtleQogICAgICAgIH07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy52YWx1ZVsndXJsU2VjcmV0J10gPSB7CiAgICAgICAgICBuYW1lOiAnJywKICAgICAgICAgIGtleQogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICB1cGRhdGVXZWJob29rVHlwZShldmVudCkgewogICAgICBzd2l0Y2ggKGV2ZW50KSB7CiAgICAgIGNhc2UgKCdtcy10ZWFtcycpOgogICAgICAgIHRoaXMudmFsdWUudXJsID0gdGhpcy5tc1RlYW1zVXJsOwogICAgICAgIHRoaXMuc2VsZWN0ZWRXZWJob29rVHlwZSA9IFdFQkhPT0tfVFlQRVMuTVNfVEVBTVM7CiAgICAgICAgYnJlYWs7CiAgICAgIGNhc2UgKCdhbGliYWJhLWNsb3VkLXNtcycpOgogICAgICAgIHRoaXMudmFsdWUudXJsID0gdGhpcy5hbGliYWJhQ2xvdWRTbXNVcmw7CiAgICAgICAgdGhpcy5zZWxlY3RlZFdlYmhvb2tUeXBlID0gV0VCSE9PS19UWVBFUy5BTElCQUJBX0NMT1VEX1NNUzsKICAgICAgICBicmVhazsKICAgICAgZGVmYXVsdDoKICAgICAgICB0aGlzLnZhbHVlLnVybCA9ICcnOwogICAgICAgIHRoaXMuc2VsZWN0ZWRXZWJob29rVHlwZSA9IFdFQkhPT0tfVFlQRVMuR0VORVJJQzsKICAgICAgfQogICAgfSwKICAgIHVwZGF0ZVdlYmhvb2tVcmwodmFsKSB7CiAgICAgIHRoaXMudmFsdWUudXJsID0gdmFsOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["webhook.vue"],"names":[],"mappingsfile":"webhook.vue","sourceRoot":"node_modules/@rancher/shell/edit/monitoring.coreos.com.alertmanagerconfig/types","sourcesContent":["<script>\n\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { Banner } from '@components/Banner';\nimport SimpleSecretSelector from '@shell/components/form/SimpleSecretSelector';\nimport { _VIEW } from '@shell/config/query-params';\nimport TLS from '../tls';\nimport Auth from '../auth';\n\nexport const MS_TEAMS_URL = 'http://rancher-alerting-drivers-prom2teams.cattle-monitoring-system.svc:8089/v2/connector';\nexport const ALIBABA_CLOUD_SMS_URL = 'http://rancher-alerting-drivers-sachet.cattle-monitoring-system.svc:9876/alert';\nexport const WEBHOOK_TYPES = {\n  ALIBABA_CLOUD_SMS: 'alibaba-cloud-sms',\n  GENERIC:           'generic',\n  MS_TEAMS:          'ms-teams'\n};\n\nexport default {\n  components: {\n    Auth,\n    Banner,\n    Checkbox,\n    LabeledInput,\n    LabeledSelect,\n    SimpleSecretSelector,\n    TLS,\n  },\n  props: {\n    mode: {\n      type:     String,\n      required: true,\n    },\n    value: {\n      type:     Object,\n      required: true\n    },\n    namespace: {\n      type:    String,\n      default: ''\n    }\n  },\n  data(props) {\n    this.$set(this.value, 'httpConfig', this.value.httpConfig || {});\n    this.$set(this.value, 'sendResolved', this.value.sendResolved || false);\n\n    const isDriverUrl = this.value.url === MS_TEAMS_URL || this.value.url === ALIBABA_CLOUD_SMS_URL;\n\n    return {\n      showNamespaceBanner:  isDriverUrl && this.mode !== _VIEW,\n      view:                 _VIEW,\n      initialUrlSecretName: this.value?.urlSecret?.name ? this.value.urlSecret.name : '',\n      initialUrlSecretKey:  this.value?.urlSecret?.key ? this.value.urlSecret.key : '',\n      webhookOptons:        [\n        {\n          label: this.t('monitoringReceiver.webhook.add.generic'),\n          value: WEBHOOK_TYPES.GENERIC\n        },\n        {\n          label: this.t('monitoringReceiver.webhook.add.msTeams'),\n          value: WEBHOOK_TYPES.MS_TEAMS\n        },\n        {\n          label: this.t('monitoringReceiver.webhook.add.alibabaCloudSms'),\n          value: WEBHOOK_TYPES.ALIBABA_CLOUD_SMS\n        }\n      ],\n      msTeamsUrl:          MS_TEAMS_URL,\n      alibabaCloudSmsUrl:  ALIBABA_CLOUD_SMS_URL,\n      selectedWebhookType: this.getTypeFromUrl(this.value.url),\n      none:                '__[[NONE]]__',\n    };\n  },\n  methods: {\n    getTypeFromUrl(url) {\n      switch (url) {\n      case MS_TEAMS_URL:\n        return WEBHOOK_TYPES.MS_TEAMS;\n      case ALIBABA_CLOUD_SMS_URL:\n        return WEBHOOK_TYPES.ALIBABA_CLOUD_SMS;\n      default:\n        return WEBHOOK_TYPES.GENERIC;\n      }\n    },\n    updateUrlSecretName(name) {\n      const existingKey = this.value.urlSecret?.key || '';\n\n      if (this.value.urlSecret) {\n        if (name === this.none) {\n          delete this.value.urlSecret;\n        } else {\n          this.value.urlSecret = {\n            key: existingKey,\n            name\n          };\n        }\n      } else {\n        this.value['urlSecret'] = {\n          key: '',\n          name\n        };\n      }\n    },\n    updateUrlSecretKey(key) {\n      const existingName = this.value.urlSecret?.name || '';\n\n      if (this.value.urlSecret) {\n        this.value.urlSecret = {\n          name: existingName,\n          key\n        };\n      } else {\n        this.value['urlSecret'] = {\n          name: '',\n          key\n        };\n      }\n    },\n    updateWebhookType(event) {\n      switch (event) {\n      case ('ms-teams'):\n        this.value.url = this.msTeamsUrl;\n        this.selectedWebhookType = WEBHOOK_TYPES.MS_TEAMS;\n        break;\n      case ('alibaba-cloud-sms'):\n        this.value.url = this.alibabaCloudSmsUrl;\n        this.selectedWebhookType = WEBHOOK_TYPES.ALIBABA_CLOUD_SMS;\n        break;\n      default:\n        this.value.url = '';\n        this.selectedWebhookType = WEBHOOK_TYPES.GENERIC;\n      }\n    },\n    updateWebhookUrl(val) {\n      this.value.url = val;\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"mode !== view\"\n      v-clean-html=\"t('monitoringReceiver.webhook.banner', {}, raw=true)\"\n      color=\"info\"\n    />\n    <div class=\"row mb-20\">\n      <LabeledSelect\n        v-model=\"selectedWebhookType\"\n        :disabled=\"mode === view\"\n        :label=\"t('monitoringReceiver.webhook.add.selectWebhookType')\"\n        :placeholder=\"t('monitoringReceiver.webhook.add.generic')\"\n        :localized-label=\"true\"\n        :options=\"webhookOptons\"\n        @input=\"updateWebhookType($event)\"\n      />\n    </div>\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <h3 class=\"mb-0\">\n          Target\n        </h3>\n      </div>\n    </div>\n    <Banner\n      v-if=\"showNamespaceBanner\"\n      v-clean-html=\"t('monitoringReceiver.webhook.modifyNamespace', {}, raw=true)\"\n      color=\"info\"\n    />\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          v-model=\"value.url\"\n          :mode=\"mode\"\n          :label=\"t('monitoring.alertmanagerConfig.webhook.url')\"\n          :tooltip=\"t('monitoring.alertmanagerConfig.webhook.urlSecretTooltip')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <SimpleSecretSelector\n        v-if=\"namespace\"\n        :initial-key=\"initialUrlSecretKey\"\n        :initial-name=\"initialUrlSecretName\"\n        :mode=\"mode\"\n        :namespace=\"namespace\"\n        :disabled=\"mode === view\"\n        :secret-name-label=\"t('monitoring.alertmanagerConfig.webhook.urlSecret')\"\n        @updateSecretName=\"updateUrlSecretName\"\n        @updateSecretKey=\"updateUrlSecretKey\"\n      />\n      <Banner\n        v-else\n        color=\"error\"\n      >\n        {{ t('alertmanagerConfigReceiver.namespaceWarning') }}\n      </Banner>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          v-model=\"value.httpConfig.proxyURL\"\n          :mode=\"mode\"\n          :label=\"t('monitoringReceiver.shared.proxyUrl.label')\"\n          :placeholder=\"t('monitoringReceiver.shared.proxyUrl.placeholder')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <Checkbox\n        v-model=\"value.sendResolved\"\n        :mode=\"mode\"\n        :label=\"t('monitoringReceiver.shared.sendResolved.label')\"\n      />\n    </div>\n    <TLS\n      v-model=\"value.httpConfig\"\n      class=\"mb-20\"\n      :mode=\"mode\"\n      :namespace=\"namespace\"\n    />\n    <Auth\n      v-model=\"value.httpConfig\"\n      :mode=\"mode\"\n      :namespace=\"namespace\"\n    />\n  </div>\n</template>\n"]}]}