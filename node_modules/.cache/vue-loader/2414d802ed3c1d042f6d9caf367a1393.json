{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/WorkloadDetailEndpoints.vue?vue&type=style&index=0&id=3f1ef804&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/WorkloadDetailEndpoints.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lbmRwb2ludC10YWcgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQouZW5kcG9pbnQtdGFnOm5vdCg6Zmlyc3Qtb2YtdHlwZSkgewogIG1hcmdpbjogMnB4IDRweCAwIDJweDsKfQouZW5kcG9pbnQtbGluazphZnRlciB7CiAgY29udGVudDogJyxcYTAnOwogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBjb2xvcjogdmFyKC0tZGVmYXVsdC10ZXh0KTsKfQouZW5kcG9pbnQtbGluazpsYXN0LW9mLXR5cGU6YWZ0ZXIgewogIGNvbnRlbnQ6ICcnOwp9Cgo="},{"version":3,"sources":["WorkloadDetailEndpoints.vue"],"names":[],"mappings":";AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WorkloadDetailEndpoints.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport { NODE } from '@shell/config/types';\nimport Tag from '@shell/components/Tag';\n\nexport default {\n  props: {\n    value: {\n      type:    [Array, String],\n      default: null,\n    },\n  },\n\n  components: { Tag },\n\n  computed: {\n    nodes() {\n      return this.$store.getters['cluster/all'](NODE);\n    },\n    // value may be JSON from \"field.cattle.io/publicEndpoints\" label\n    parsed() {\n      const nodes = this.nodes;\n      const nodeWithExternal = nodes.find((node) => !!node.externalIp) || {};\n      const externalIp = nodeWithExternal.externalIp;\n\n      if ( this.value && this.value.length ) {\n        let out ;\n\n        try {\n          out = JSON.parse(this.value);\n          out.forEach((endpoint) => {\n            let protocol = 'http';\n\n            if (endpoint.port === 443) {\n              protocol = 'https';\n            }\n\n            if (endpoint.addresses) {\n              endpoint.link = `${ protocol }://${ endpoint.addresses[0] }:${ endpoint.port }`;\n            } else if (externalIp) {\n              endpoint.link = `${ protocol }://${ externalIp }:${ endpoint.port }`;\n            } else {\n              endpoint.display = `[${ this.t('servicesPage.anyNode') }]:${ endpoint.port }`;\n            }\n          });\n\n          return out;\n        } catch (err) {\n          return this.value[0];\n        }\n      }\n\n      return null;\n    },\n\n    protocol() {\n      const { parsed } = this;\n\n      if ( parsed) {\n        if (this.parsed[0].protocol) {\n          return this.parsed[0].protocol;\n        }\n\n        const match = parsed.match(/^([^:]+):\\/\\//);\n\n        if ( match ) {\n          return match[1];\n        } else {\n          return 'link';\n        }\n      }\n\n      return null;\n    }\n  },\n};\n</script>\n\n<template>\n  <span>\n    <template v-for=\"endpoint in parsed\">\n      <Tag\n        v-if=\"endpoint.display\"\n        :key=\"endpoint.display\"\n        class=\"endpoint-tag\"\n      >{{ endpoint.display }}</Tag>\n      <a\n        v-else\n        :key=\"endpoint.link\"\n        class=\"endpoint-link\"\n        :href=\"endpoint.link\"\n        target=\"_blank\"\n        rel=\"nofollow noopener noreferrer\"\n      ><span v-if=\"endpoint.port\">{{ endpoint.port }}/</span>{{ endpoint.protocol }}</a>\n    </template>\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n.endpoint-tag {\n  display: inline-block;\n}\n.endpoint-tag:not(:first-of-type) {\n  margin: 2px 4px 0 2px;\n}\n.endpoint-link:after {\n  content: ',\\a0';\n  display: inline-block;\n  color: var(--default-text);\n}\n.endpoint-link:last-of-type:after {\n  content: '';\n}\n\n</style>\n"]}]}