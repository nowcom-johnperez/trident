{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/PodImages.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/PodImages.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKCi8vIEZvciB0aGUgbWFpbiBpbWFnZSBoYXQgd2Ugc2hvdywgdXNlIHRoZXNlIHRvIGlnbm9yZSBpc3RpbyBwcm94eSBpbWFnZXMgc28gdGhhdAovLyB3ZSBhcmUgbW9yZSBsaWtlbHkgdG8gc2hvdyB0aGUgaW1wb3J0YW50IG1haW4gaWFtZ2UgYW5kIG5vdCB0aGUgaXN0aW8gc2lkZWNhcgpjb25zdCBJR05PUkVfSU1BR0VTID0gWydpc3Rpby9wcm94eScsICdnY3IuaW8vaXN0aW8tcmVsZWFzZS9wcm94eScsICdtaXJyb3JlZC1pc3Rpby1wcm94eSddOwoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICBbQXJyYXksIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCgogICAgcm93OiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoeyB0OiAnaTE4bi90JyB9KSwKICAgIGltYWdlcygpIHsKICAgICAgaWYgKCB0aGlzLnJvdz8uaW1hZ2VOYW1lcyApIHsKICAgICAgICByZXR1cm4gdGhpcy5yb3cuaW1hZ2VOYW1lczsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTsKICAgICAgfQogICAgfSwKICAgIGltYWdlTGFiZWxzKCkgewogICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmltYWdlcykgJiYgdGhpcy5pbWFnZXMubGVuZ3RoID4gMSkgewogICAgICAgIGxldCBpbWFnZXNOYW1lcyA9ICcnOwoKICAgICAgICB0aGlzLmltYWdlcy5mb3JFYWNoKChuYW1lLCBpKSA9PiB7CiAgICAgICAgICBpbWFnZXNOYW1lcyArPSBgJiM4MjI2OyAkeyBuYW1lIH08YnI+YDsKICAgICAgICB9KTsKCiAgICAgICAgcmV0dXJuIGltYWdlc05hbWVzOwogICAgICB9CgogICAgICByZXR1cm4gbnVsbDsKICAgIH0sCiAgICBtYWluSW1hZ2UoKSB7CiAgICAgIGNvbnN0IGltYWdlcyA9IHRoaXMuaW1hZ2VzOwogICAgICBjb25zdCBmaWx0ZXIgPSBpbWFnZXMuZmlsdGVyKChpbWFnZSkgPT4gIUlHTk9SRV9JTUFHRVMuZmluZCgoaSkgPT4gaW1hZ2UuaW5jbHVkZXMoaSkpKTsKCiAgICAgIHJldHVybiBmaWx0ZXIubGVuZ3RoID4gMCA/IGZpbHRlclswXSA6IGltYWdlc1swXTsKICAgIH0KICB9Cgp9Owo="},{"version":3,"sources":["PodImages.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA","file":"PodImages.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\n\n// For the main image hat we show, use these to ignore istio proxy images so that\n// we are more likely to show the important main iamge and not the istio sidecar\nconst IGNORE_IMAGES = ['istio/proxy', 'gcr.io/istio-release/proxy', 'mirrored-istio-proxy'];\n\nexport default {\n  props: {\n    value: {\n      type:    [Array, String],\n      default: () => {\n        return [];\n      }\n    },\n\n    row: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n    images() {\n      if ( this.row?.imageNames ) {\n        return this.row.imageNames;\n      } else {\n        return this.value;\n      }\n    },\n    imageLabels() {\n      if (Array.isArray(this.images) && this.images.length > 1) {\n        let imagesNames = '';\n\n        this.images.forEach((name, i) => {\n          imagesNames += `&#8226; ${ name }<br>`;\n        });\n\n        return imagesNames;\n      }\n\n      return null;\n    },\n    mainImage() {\n      const images = this.images;\n      const filter = images.filter((image) => !IGNORE_IMAGES.find((i) => image.includes(i)));\n\n      return filter.length > 0 ? filter[0] : images[0];\n    }\n  }\n\n};\n</script>\n\n<template>\n  <span class=\"formatter-pod-images\">\n    <span>{{ mainImage }}</span><br>\n    <span\n      v-if=\"images.length-1>0\"\n      v-clean-tooltip.bottom=\"imageLabels\"\n      class=\"plus-more\"\n    >{{ t('generic.plusMore', {n:images.length-1}) }}</span>\n  </span>\n</template>\n\n<style scoped>\n  .formatter-pod-images {\n    word-break: break-all;\n  }\n</style>\n"]}]}