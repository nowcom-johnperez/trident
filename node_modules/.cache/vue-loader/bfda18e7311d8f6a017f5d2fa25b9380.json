{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Rule.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.ingress/Rule.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSdWxlUGF0aCBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5pbmdyZXNzL1J1bGVQYXRoJzsKaW1wb3J0IHsgTGFiZWxlZElucHV0IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQnOwppbXBvcnQgeyByYW5kb20zMiB9IGZyb20gJ0BzaGVsbC91dGlscy9zdHJpbmcnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsgUnVsZVBhdGgsIExhYmVsZWRJbnB1dCB9LAogIHByb3BzOiAgICAgIHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfSwKICAgIH0sCiAgICBzZXJ2aWNlVGFyZ2V0czogewogICAgICB0eXBlOiAgICBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gW10sCiAgICB9LAogICAgaW5ncmVzczogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIHJ1bGVzOiB7CiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7CiAgICAgICAgcmVxdWVzdEhvc3Q6IFtdLAogICAgICAgIHBhdGg6ICAgICAgICBbXSwKICAgICAgICBwb3J0OiAgICAgICAgW10sCiAgICAgICAgdGFyZ2V0OiAgICAgIFtdCiAgICAgIH0pLAogICAgICB0eXBlOiBPYmplY3QsCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgY29uc3QgeyBob3N0ID0gJycsIGh0dHAgPSB7fSB9ID0gdGhpcy52YWx1ZTsKICAgIGNvbnN0IHsgcGF0aHMgPSBbeyBpZDogcmFuZG9tMzIoMSkgfV0gfSA9IGh0dHA7CgogICAgcmV0dXJuIHsKICAgICAgaG9zdCwKICAgICAgcGF0aHMsCiAgICAgIHJ1bGVNb2RlOiB0aGlzLnZhbHVlLmFzRGVmYXVsdCA/ICdhc0RlZmF1bHQnIDogJ3NldEhvc3QnLAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZSgpIHsKICAgICAgY29uc3QgaHR0cCA9IHsgcGF0aHM6IHRoaXMucGF0aHMgfTsKICAgICAgY29uc3Qgb3V0ID0geyAuLi50aGlzLnZhbHVlLCBodHRwIH07CgogICAgICBpZiAodGhpcy5ob3N0KSB7CiAgICAgICAgb3V0Lmhvc3QgPSB0aGlzLmhvc3Q7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgZGVsZXRlIG91dC5ob3N0OwogICAgICB9CgogICAgICB0aGlzLiRuZXh0VGljaygoKSA9PiB7CiAgICAgICAgaWYgKCh0aGlzLnBhdGhzPy5sZW5ndGggPT09IDEgJiYgdGhpcy5wYXRoT2JqZWN0SXNFbXB0eSh0aGlzLnBhdGhzWzBdKSkgfHwgdGhpcy5wYXRocz8ubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICBkZWxldGUgb3V0Lmh0dHA7CiAgICAgICAgfQogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0Jywgb3V0KTsKICAgICAgfSk7CiAgICB9LAogICAgcGF0aE9iamVjdElzRW1wdHkocGF0aE9iamVjdCkgewogICAgICBjb25zdCBzZXJ2aWNlUG9ydCA9IE51bWJlci5wYXJzZUludChwYXRoT2JqZWN0LnNlcnZpY2VQb3J0KSB8fCBwYXRoT2JqZWN0LnNlcnZpY2VQb3J0OwogICAgICBjb25zdCBzZXJ2aWNlTmFtZSA9IHBhdGhPYmplY3Quc2VydmljZU5hbWU7CiAgICAgIGNvbnN0IHBhdGggPSBwYXRoT2JqZWN0LnBhdGg7CiAgICAgIGNvbnN0IHBhdGhUeXBlID0gcGF0aE9iamVjdC5wYXRoVHlwZTsKCiAgICAgIGlmICghc2VydmljZVBvcnQgJiYgIXNlcnZpY2VOYW1lICYmICFwYXRoICYmIHBhdGhUeXBlID09PSAnUHJlZml4JykgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CgogICAgICByZXR1cm4gZmFsc2U7CiAgICB9LAogICAgYWRkUGF0aChldikgewogICAgICBpZiAoZXYpIHsKICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CiAgICAgIHRoaXMucGF0aHMgPSBbLi4udGhpcy5wYXRocywgeyBpZDogcmFuZG9tMzIoMSkgfV07CiAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICBpZiAodGhpcy4kcmVmcy5wYXRocyAmJiB0aGlzLiRyZWZzLnBhdGhzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIGNvbnN0IHBhdGggPSB0aGlzLiRyZWZzLnBhdGhzW3RoaXMuJHJlZnMucGF0aHMubGVuZ3RoIC0gMV07CgogICAgICAgICAgcGF0aC5mb2N1cygpOwogICAgICAgIH0KICAgICAgICB0aGlzLnVwZGF0ZSgpOwogICAgICB9KTsKICAgIH0sCiAgICByZW1vdmVQYXRoKGlkeCkgewogICAgICBjb25zdCBuZXUgPSBbLi4udGhpcy5wYXRoc107CgogICAgICBuZXUuc3BsaWNlKGlkeCwgMSk7CiAgICAgIHRoaXMucGF0aHMgPSBuZXU7CiAgICAgIHRoaXMudXBkYXRlKCk7CiAgICB9LAogICAgcmVtb3ZlUnVsZSgpIHsKICAgICAgdGhpcy4kZW1pdCgncmVtb3ZlJyk7CiAgICB9LAogICAgZm9jdXMoKSB7CiAgICAgIHRoaXMuJHJlZnMuaG9zdC5mb2N1cygpOwogICAgfSwKICAgIG1ha2VQYXRoS2V5KGkpIHsKICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHRoaXMucGF0aHNbaV0pOwogICAgfQogIH0sCn07Cg=="},{"version":3,"sources":["Rule.vue"],"names":[],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rule.vue","sourceRoot":"node_modules/@rancher/shell/edit/networking.k8s.io.ingress","sourcesContent":["<script>\nimport RulePath from '@shell/edit/networking.k8s.io.ingress/RulePath';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { random32 } from '@shell/utils/string';\n\nexport default {\n  components: { RulePath, LabeledInput },\n  props:      {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n    serviceTargets: {\n      type:    Array,\n      default: () => [],\n    },\n    ingress: {\n      type:     Object,\n      required: true\n    },\n    rules: {\n      default: () => ({\n        requestHost: [],\n        path:        [],\n        port:        [],\n        target:      []\n      }),\n      type: Object,\n    }\n  },\n  data() {\n    const { host = '', http = {} } = this.value;\n    const { paths = [{ id: random32(1) }] } = http;\n\n    return {\n      host,\n      paths,\n      ruleMode: this.value.asDefault ? 'asDefault' : 'setHost',\n    };\n  },\n  methods: {\n    update() {\n      const http = { paths: this.paths };\n      const out = { ...this.value, http };\n\n      if (this.host) {\n        out.host = this.host;\n      } else {\n        delete out.host;\n      }\n\n      this.$nextTick(() => {\n        if ((this.paths?.length === 1 && this.pathObjectIsEmpty(this.paths[0])) || this.paths?.length === 0) {\n          delete out.http;\n        }\n        this.$emit('input', out);\n      });\n    },\n    pathObjectIsEmpty(pathObject) {\n      const servicePort = Number.parseInt(pathObject.servicePort) || pathObject.servicePort;\n      const serviceName = pathObject.serviceName;\n      const path = pathObject.path;\n      const pathType = pathObject.pathType;\n\n      if (!servicePort && !serviceName && !path && pathType === 'Prefix') {\n        return true;\n      }\n\n      return false;\n    },\n    addPath(ev) {\n      if (ev) {\n        ev.preventDefault();\n      }\n      this.paths = [...this.paths, { id: random32(1) }];\n      this.$nextTick(() => {\n        if (this.$refs.paths && this.$refs.paths.length > 0) {\n          const path = this.$refs.paths[this.$refs.paths.length - 1];\n\n          path.focus();\n        }\n        this.update();\n      });\n    },\n    removePath(idx) {\n      const neu = [...this.paths];\n\n      neu.splice(idx, 1);\n      this.paths = neu;\n      this.update();\n    },\n    removeRule() {\n      this.$emit('remove');\n    },\n    focus() {\n      this.$refs.host.focus();\n    },\n    makePathKey(i) {\n      return JSON.stringify(this.paths[i]);\n    }\n  },\n};\n</script>\n\n<template>\n  <div class=\"rule\">\n    <div class=\"row mb-20\">\n      <div\n        id=\"host\"\n        class=\"col span-6\"\n      >\n        <LabeledInput\n          ref=\"host\"\n          v-model=\"host\"\n          :label=\"t('ingress.rules.requestHost.label')\"\n          :placeholder=\"t('ingress.rules.requestHost.placeholder')\"\n          :rules=\"rules.requestHost\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        id=\"spacer\"\n        class=\"col span-5\"\n      />\n    </div>\n    <div class=\"rule-path-headings row\">\n      <div\n        class=\"col\"\n        :class=\"{'span-6': ingress.showPathType, 'span-4': !ingress.showPathType}\"\n      >\n        <label>{{ t(\"ingress.rules.path.label\") }}</label>\n      </div>\n      <div\n        class=\"col\"\n        :class=\"{'span-3': ingress.showPathType, 'span-4': !ingress.showPathType}\"\n      >\n        <label>{{ t(\"ingress.rules.target.label\") }}</label>\n      </div>\n      <div\n        class=\"col\"\n        :class=\"{'span-2': ingress.showPathType, 'span-3': !ingress.showPathType}\"\n        :style=\"{ 'margin-right': '0px' }\"\n      >\n        <label>{{ t(\"ingress.rules.port.label\") }}</label>\n      </div>\n      <div class=\"col\" />\n    </div>\n    <template v-for=\"(path, i) in paths\">\n      <RulePath\n        ref=\"paths\"\n        :key=\"path.id\"\n        v-model=\"paths[i]\"\n        class=\"row mb-10\"\n        :rule-mode=\"ruleMode\"\n        :service-targets=\"serviceTargets\"\n        :ingress=\"ingress\"\n        :rules=\"{path: rules.path, port: rules.port, target: rules.target}\"\n        @remove=\"(e) => removePath(i)\"\n        @input=\"update\"\n      />\n    </template>\n    <button\n      v-if=\"ruleMode === 'setHost'\"\n      class=\"btn role-tertiary add\"\n      @click=\"addPath\"\n    >\n      {{ t(\"ingress.rules.addPath\") }}\n    </button>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n#host {\n  align-self: center;\n}\n.close {\n  float: right;\n  padding: 0px;\n  position: relative;\n  top: -10px;\n  right: -10px;\n}\n</style>\n"]}]}