{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.setting.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.setting.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IENyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldyc7CmltcG9ydCB7IFRleHRBcmVhQXV0b0dyb3cgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1RleHRBcmVhJzsKaW1wb3J0IGZvcm1SdWxlc0dlbmVyYXRvciBmcm9tICdAc2hlbGwvdXRpbHMvdmFsaWRhdG9ycy9mb3JtUnVsZXMvaW5kZXgnOwoKaW1wb3J0IHsgQUxMT1dFRF9TRVRUSU5HUywgU0VUVElORyB9IGZyb20gJ0BzaGVsbC9jb25maWcvc2V0dGluZ3MnOwppbXBvcnQgeyBSYWRpb0dyb3VwIH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9SYWRpbyc7CmltcG9ydCBGb3JtVmFsaWRhdGlvbiBmcm9tICdAc2hlbGwvbWl4aW5zL2Zvcm0tdmFsaWRhdGlvbic7CmltcG9ydCB7IHNldEJyYW5kIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcml2YXRlLWxhYmVsJzsKaW1wb3J0IHsga2V5QnksIG1hcFZhbHVlcyB9IGZyb20gJ2xvZGFzaCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ3J1UmVzb3VyY2UsCiAgICBMYWJlbGVkSW5wdXQsCiAgICBMYWJlbGVkU2VsZWN0LAogICAgUmFkaW9Hcm91cCwKICAgIFRleHRBcmVhQXV0b0dyb3cKICB9LAoKICBtaXhpbnM6IFtDcmVhdGVFZGl0VmlldywgRm9ybVZhbGlkYXRpb25dLAoKICBkYXRhKCkgewogICAgY29uc3QgdCA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2kxOG4vdCddOwoKICAgIHJldHVybiB7CiAgICAgIHNldHRpbmc6ICAgICAgICBBTExPV0VEX1NFVFRJTkdTW3RoaXMudmFsdWUuaWRdLAogICAgICBkZXNjcmlwdGlvbjogICAgdChgYWR2YW5jZWRTZXR0aW5ncy5kZXNjcmlwdGlvbnMuJHsgdGhpcy52YWx1ZS5pZCB9YCksCiAgICAgIGVkaXRIZWxwOiAgICAgICB0KGBhZHZhbmNlZFNldHRpbmdzLmVkaXRIZWxwLiR7IHRoaXMudmFsdWUuaWQgfWApLAogICAgICBlbnVtT3B0aW9uczogICAgW10sCiAgICAgIGNhblJlc2V0OiAgICAgICBmYWxzZSwKICAgICAgZXJyb3JzOiAgICAgICAgIFtdLAogICAgICBmdkZvcm1SdWxlU2V0czogW10sCiAgICB9OwogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnZhbHVlLnZhbHVlID0gdGhpcy52YWx1ZS52YWx1ZSB8fCB0aGlzLnZhbHVlLmRlZmF1bHQ7CiAgICB0aGlzLmVudW1PcHRpb25zID0gdGhpcy5zZXR0aW5nPy5raW5kID09PSAnZW51bScgPyB0aGlzLnNldHRpbmcub3B0aW9ucy5tYXAoKGlkKSA9PiAoewogICAgICBsYWJlbDogYGFkdmFuY2VkU2V0dGluZ3MuZW51bS4keyB0aGlzLnZhbHVlLmlkIH0uJHsgaWQgfWAsCiAgICAgIHZhbHVlOiBpZCwKICAgIH0pKSA6IFtdOwogICAgdGhpcy5jYW5SZXNldCA9IHRoaXMuc2V0dGluZz8uY2FuUmVzZXQgfHwgISF0aGlzLnZhbHVlLmRlZmF1bHQ7CiAgICB0aGlzLmZ2Rm9ybVJ1bGVTZXRzID0gdGhpcy5zZXR0aW5nPy5ydWxlU2V0ID8gW3sKICAgICAgcGF0aDogICd2YWx1ZScsCiAgICAgIHJ1bGVzOiB0aGlzLnNldHRpbmcucnVsZVNldC5tYXAoKHsgbmFtZSB9KSA9PiBuYW1lKQogICAgfV0gOiBbXTsKICB9LAoKICBjb21wdXRlZDogewogICAgZnZFeHRyYVJ1bGVzKCkgewogICAgICBjb25zdCB0ID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi90J107CgogICAgICAvLyBXZSBtYXAgdGhlIHNldHRpbmcgcnVsZXNldHMgdG8gdXNlIHZhbHVlcyB0byBkZWZpbmUgdmFsaWRhdGlvbiBmcm9tIGZhY3RvcnkKICAgICAgcmV0dXJuIHRoaXMuc2V0dGluZz8ucnVsZVNldCA/IG1hcFZhbHVlcygKICAgICAgICBrZXlCeSh0aGlzLnNldHRpbmcucnVsZVNldCwgJ25hbWUnKSwKICAgICAgICAvLyBUaGUgdmFsaWRhdGlvbiBpcyBjdXJyaWVkIGFuZCBtYXkgcmVxdWlyZSB0aGUgZmFjdG9yeSBhcmd1bWVudCBmb3IgdGhlIFZhbGlkYXRvckZhY3RvcnkKICAgICAgICAoeyBrZXksIG5hbWUsIGZhY3RvcnlBcmcgfSkgPT4gewogICAgICAgICAgY29uc3QgcnVsZSA9IGZvcm1SdWxlc0dlbmVyYXRvcih0LCBrZXkgPyB7IGtleSB9IDoge30pW25hbWVdOwoKICAgICAgICAgIHJldHVybiBmYWN0b3J5QXJnID8gcnVsZShmYWN0b3J5QXJnKSA6IHJ1bGU7CiAgICAgICAgfSkgOiB7fTsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBjb252ZXJ0VG9TdHJpbmcoZXZlbnQpIHsKICAgICAgdGhpcy52YWx1ZS52YWx1ZSA9IGAkeyBldmVudC50YXJnZXQudmFsdWUgfWA7CiAgICB9LAoKICAgIHNhdmVTZXR0aW5ncyhkb25lKSB7CiAgICAgIGNvbnN0IHQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3QnXTsKCiAgICAgIC8vIFZhbGlkYXRlIHRoZSBKU09OIGlmIHRoZSBzZXR0aW5nIGlzIGEganNvbiB2YWx1ZQogICAgICBpZiAodGhpcy5zZXR0aW5nLmtpbmQgPT09ICdqc29uJykgewogICAgICAgIHRyeSB7CiAgICAgICAgICBKU09OLnBhcnNlKHRoaXMudmFsdWUudmFsdWUpOwogICAgICAgICAgdGhpcy5lcnJvcnMgPSBbXTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICB0aGlzLmVycm9ycyA9IFt0KCdhZHZhbmNlZFNldHRpbmdzLmVkaXQuaW52YWxpZEpTT04nKV07CgogICAgICAgICAgcmV0dXJuIGRvbmUoZmFsc2UpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHRoaXMudmFsdWU/LmlkID09PSBTRVRUSU5HLkJSQU5EKSB7CiAgICAgICAgc2V0QnJhbmQodGhpcy52YWx1ZS52YWx1ZSk7CiAgICAgIH0KCiAgICAgIHRoaXMuc2F2ZShkb25lKTsKICAgIH0sCgogICAgdXNlRGVmYXVsdChldikgewogICAgICAvLyBMb3NlIHRoZSBmb2N1cyBvbiB0aGUgYnV0dG9uIGFmdGVyIGNsaWNrCiAgICAgIGlmIChldiAmJiBldi5zcmNFbGVtZW50KSB7CiAgICAgICAgZXYuc3JjRWxlbWVudC5ibHVyKCk7CiAgICAgIH0KICAgICAgdGhpcy52YWx1ZS52YWx1ZSA9IHRoaXMudmFsdWUuZGVmYXVsdDsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["management.cattle.io.setting.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"management.cattle.io.setting.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { TextAreaAutoGrow } from '@components/Form/TextArea';\nimport formRulesGenerator from '@shell/utils/validators/formRules/index';\n\nimport { ALLOWED_SETTINGS, SETTING } from '@shell/config/settings';\nimport { RadioGroup } from '@components/Form/Radio';\nimport FormValidation from '@shell/mixins/form-validation';\nimport { setBrand } from '@shell/config/private-label';\nimport { keyBy, mapValues } from 'lodash';\n\nexport default {\n  components: {\n    CruResource,\n    LabeledInput,\n    LabeledSelect,\n    RadioGroup,\n    TextAreaAutoGrow\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  data() {\n    const t = this.$store.getters['i18n/t'];\n\n    return {\n      setting:        ALLOWED_SETTINGS[this.value.id],\n      description:    t(`advancedSettings.descriptions.${ this.value.id }`),\n      editHelp:       t(`advancedSettings.editHelp.${ this.value.id }`),\n      enumOptions:    [],\n      canReset:       false,\n      errors:         [],\n      fvFormRuleSets: [],\n    };\n  },\n\n  created() {\n    this.value.value = this.value.value || this.value.default;\n    this.enumOptions = this.setting?.kind === 'enum' ? this.setting.options.map((id) => ({\n      label: `advancedSettings.enum.${ this.value.id }.${ id }`,\n      value: id,\n    })) : [];\n    this.canReset = this.setting?.canReset || !!this.value.default;\n    this.fvFormRuleSets = this.setting?.ruleSet ? [{\n      path:  'value',\n      rules: this.setting.ruleSet.map(({ name }) => name)\n    }] : [];\n  },\n\n  computed: {\n    fvExtraRules() {\n      const t = this.$store.getters['i18n/t'];\n\n      // We map the setting rulesets to use values to define validation from factory\n      return this.setting?.ruleSet ? mapValues(\n        keyBy(this.setting.ruleSet, 'name'),\n        // The validation is curried and may require the factory argument for the ValidatorFactory\n        ({ key, name, factoryArg }) => {\n          const rule = formRulesGenerator(t, key ? { key } : {})[name];\n\n          return factoryArg ? rule(factoryArg) : rule;\n        }) : {};\n    }\n  },\n\n  methods: {\n    convertToString(event) {\n      this.value.value = `${ event.target.value }`;\n    },\n\n    saveSettings(done) {\n      const t = this.$store.getters['i18n/t'];\n\n      // Validate the JSON if the setting is a json value\n      if (this.setting.kind === 'json') {\n        try {\n          JSON.parse(this.value.value);\n          this.errors = [];\n        } catch (e) {\n          this.errors = [t('advancedSettings.edit.invalidJSON')];\n\n          return done(false);\n        }\n      }\n\n      if (this.value?.id === SETTING.BRAND) {\n        setBrand(this.value.value);\n      }\n\n      this.save(done);\n    },\n\n    useDefault(ev) {\n      // Lose the focus on the button after click\n      if (ev && ev.srcElement) {\n        ev.srcElement.blur();\n      }\n      this.value.value = this.value.default;\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    class=\"route\"\n    :done-route=\"'c-cluster-product-resource'\"\n    :errors=\"fvUnreportedValidationErrors\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :can-yaml=\"false\"\n    :validation-passed=\"fvFormIsValid\"\n    @error=\"e=>errors = e\"\n    @finish=\"saveSettings\"\n    @cancel=\"done\"\n  >\n    <h4>{{ description }}</h4>\n\n    <h5\n      v-if=\"editHelp\"\n      v-clean-html=\"editHelp\"\n      class=\"edit-help\"\n    />\n\n    <div class=\"edit-change mt-20\">\n      <h5 v-t=\"'advancedSettings.edit.changeSetting'\" />\n      <button\n        :disabled=\"!canReset\"\n        type=\"button\"\n        class=\"btn role-primary\"\n        @click=\"useDefault\"\n      >\n        {{ t('advancedSettings.edit.useDefault') }}\n      </button>\n    </div>\n\n    <div class=\"mt-20\">\n      <div v-if=\"setting.kind === 'enum'\">\n        <LabeledSelect\n          v-model=\"value.value\"\n          data-testid=\"input-setting-enum\"\n          :label=\"t('advancedSettings.edit.value')\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :localized-label=\"true\"\n          :mode=\"mode\"\n          :required=\"true\"\n          :options=\"enumOptions\"\n        />\n      </div>\n      <div v-else-if=\"setting.kind === 'boolean'\">\n        <RadioGroup\n          v-model=\"value.value\"\n          data-testid=\"input-setting-boolean\"\n          name=\"settings_value\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :labels=\"[t('advancedSettings.edit.trueOption'), t('advancedSettings.edit.falseOption')]\"\n          :options=\"['true', 'false']\"\n        />\n      </div>\n      <div v-else-if=\"setting.kind === 'multiline' || setting.kind === 'json'\">\n        <TextAreaAutoGrow\n          v-model=\"value.value\"\n          data-testid=\"input-setting-json\"\n          :required=\"true\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :min-height=\"254\"\n        />\n      </div>\n      <div v-else-if=\"setting.kind === 'integer'\">\n        <LabeledInput\n          v-model=\"value.value\"\n          data-testid=\"input-setting-integer\"\n          :label=\"t('advancedSettings.edit.value')\"\n          :mode=\"mode\"\n          type=\"number\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :required=\"true\"\n        />\n      </div>\n      <div v-else>\n        <LabeledInput\n          v-model=\"value.value\"\n          data-testid=\"input-setting-generic\"\n          :localized-label=\"true\"\n          :required=\"true\"\n          :mode=\"mode\"\n          :rules=\"fvGetAndReportPathRules('value')\"\n          :label=\"t('advancedSettings.edit.value')\"\n        />\n      </div>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n  .edit-change {\n    align-items: center;\n    display: flex;\n\n    > h5 {\n      flex: 1;\n    }\n  }\n\n  ::v-deep .edit-help code {\n    padding: 1px 5px;\n  }\n</style>\n"]}]}