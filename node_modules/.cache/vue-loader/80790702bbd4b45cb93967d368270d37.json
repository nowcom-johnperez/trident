{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ChangePassword.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ChangePassword.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ChangePassword.vue"],"names":[],"mappingsfile":"ChangePassword.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { Banner } from '@components/Banner';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Password from '@shell/components/form/Password';\nimport { NORMAN } from '@shell/config/types';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\n\n// Component handles three use cases\n// 1) isChange - Current user is changing their own password\n// 2) isCreate - New password is for a new user\n// 3) isEdit - New password is for an existing user\nexport default {\n  components: {\n    Checkbox, Banner, Password\n  },\n  props: {\n    mode: {\n      type:    String,\n      default: null\n    },\n    mustChangePassword: {\n      type:    Boolean,\n      default: false\n    }\n  },\n  async fetch() {\n    if (this.isChange) {\n      // Fetch the username for hidden input fields. The value itself is not needed if create or changing another user's password\n      const users = await this.$store.dispatch('rancher/findAll', {\n        type: NORMAN.USER,\n        opt:  { url: '/v3/users', filter: { me: true } }\n      });\n      const user = users?.[0];\n\n      this.username = user?.username;\n    }\n    this.userChangeOnLogin = this.mustChangePassword;\n  },\n  data(ctx) {\n    return {\n      username:                   '',\n      errorMessages:              [],\n      pCanShowMismatchedPassword: false,\n      pIsRandomGenerated:         false,\n      form:                       {\n        deleteKeys:        false,\n        currentP:          '',\n        newP:              '',\n        genP:              '',\n        confirmP:          '',\n        userChangeOnLogin: false,\n      },\n    };\n  },\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n\n    isRandomGenerated: {\n      get() {\n        return this.pIsRandomGenerated;\n      },\n\n      set(isRandomGenerated) {\n        this.pIsRandomGenerated = isRandomGenerated;\n        this.errorMessages = [];\n        this.validate();\n      }\n    },\n\n    passwordGen: {\n      get() {\n        return this.form.genP;\n      },\n\n      set(p) {\n        this.form.genP = p;\n        this.validate();\n      }\n    },\n\n    passwordCurrent: {\n      get() {\n        return this.form.currentP;\n      },\n\n      set(p) {\n        this.form.currentP = p;\n        this.validate();\n      }\n    },\n\n    passwordNew: {\n      get() {\n        return this.form.newP;\n      },\n\n      set(p) {\n        this.form.newP = p;\n        this.validate();\n      }\n    },\n\n    passwordConfirm: {\n      get() {\n        return this.form.confirmP;\n      },\n\n      set(p) {\n        this.form.confirmP = p;\n        this.validate();\n      }\n    },\n\n    userChangeOnLogin: {\n      get() {\n        return this.form.userChangeOnLogin;\n      },\n\n      set(p) {\n        this.form.userChangeOnLogin = p;\n        this.validate();\n      }\n    },\n\n    passwordConfirmBlurred: {\n      get() {\n        return this.pCanShowMismatchedPassword;\n      },\n\n      set(p) {\n        this.pCanShowMismatchedPassword = p;\n        this.validate();\n      }\n    },\n\n    password() {\n      return this.isRandomGenerated ? this.passwordGen : this.passwordNew;\n    },\n\n    isChange() {\n      // Change password prompt\n      return !this.mode;\n    },\n\n    isCreateEdit() {\n      return this.isCreate || this.isEdit;\n    },\n\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n\n    isEdit() {\n      // Edit user prompt\n      return this.mode === _EDIT;\n    },\n\n    userGeneratedPasswordsRequired() {\n      if (this.isChange) {\n        return true;\n      }\n      if (this.isCreate) {\n        return !this.isRandomGenerated;\n      }\n      if (this.isEdit) {\n        return !!this.passwordNew || !!this.passwordConfirm;\n      }\n\n      return false;\n    }\n  },\n  created() {\n    // Catch the 'create' case and there's no content\n    this.validate();\n  },\n\n  methods: {\n    passwordsMatch() {\n      const match = this.passwordNew === this.passwordConfirm;\n\n      this.errorMessages = this.passwordConfirmBlurred && !match ? [this.t('changePassword.errors.mismatchedPassword')] : [];\n\n      return match;\n    },\n\n    baseIsUserGenPasswordValid() {\n      return this.passwordsMatch() && !!this.passwordNew;\n    },\n\n    isValid() {\n      if (this.isChange) {\n        return !!this.passwordCurrent && (this.isRandomGenerated ? true : this.baseIsUserGenPasswordValid());\n      }\n\n      if (this.isRandomGenerated) {\n        // If we're not changing current user... and password is randomly generated... there'll be no new/confirm mismatch\n        return true;\n      }\n\n      if (this.isCreate) {\n        return this.baseIsUserGenPasswordValid();\n      }\n\n      if (this.isEdit) {\n        // If the user generated password is required... ensure it's valid\n        return this.userGeneratedPasswordsRequired ? this.baseIsUserGenPasswordValid() : true;\n      }\n\n      return false;\n    },\n\n    validate() {\n      const isValid = this.isValid();\n\n      if (isValid) {\n        // Covers the case where we don't re-evaluate the error messages (don't need to at the time)\n        this.errorMessages = [];\n      }\n\n      this.$emit('valid', isValid);\n      this.$emit('input', {\n        password:          this.password,\n        userChangeOnLogin: this.userChangeOnLogin\n      });\n    },\n\n    async save(user) {\n      if (this.isChange) {\n        await this.changePassword();\n        if (this.form.deleteKeys) {\n          await this.deleteKeys();\n        }\n      } else if (this.isEdit) {\n        return this.setPassword(user);\n      }\n    },\n\n    async setPassword(user) {\n      // Error handling is catered for by caller\n      await this.$store.dispatch('rancher/resourceAction', {\n        type:       NORMAN.USER,\n        actionName: 'setpassword',\n        resource:   user,\n        body:       { newPassword: this.isRandomGenerated ? this.form.genP : this.form.newP },\n      });\n    },\n\n    async changePassword() {\n      try {\n        await this.$store.dispatch('rancher/collectionAction', {\n          type:       NORMAN.USER,\n          actionName: 'changepassword',\n          body:       {\n            currentPassword: this.form.currentP,\n            newPassword:     this.isRandomGenerated ? this.form.genP : this.form.newP\n          },\n        });\n      } catch (err) {\n        this.errorMessages = [err.message || this.t('changePassword.errors.failedToChange')];\n        throw err;\n      }\n    },\n\n    async deleteKeys() {\n      try {\n        const tokens = await this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.TOKEN,\n          opt:  {\n            // Ensure we have any new tokens since last fetched... and that we don't attempt to delete previously deleted tokens\n            force: true\n          }\n        });\n\n        await Promise.all(tokens.reduce((res, token) => {\n          if (!token.current) {\n            res.push(token.remove());\n          }\n\n          return res;\n        }, []));\n      } catch (err) {\n        if (err.message) {\n          this.errorMessages = [err.message];\n        } else if (err.length > 1) {\n          this.errorMessages = [this.t('changePassword.errors.failedDeleteKeys')];\n        } else {\n          this.errorMessages = [this.t('changePassword.errors.failedDeleteKey')];\n        }\n        throw err;\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"change-password\"\n    :class=\"{'change': isChange, 'create': isCreate, 'edit': isEdit}\"\n  >\n    <div class=\"form\">\n      <div class=\"fields\">\n        <Checkbox\n          v-if=\"isChange\"\n          v-model=\"form.deleteKeys\"\n          label-key=\"changePassword.deleteKeys.label\"\n          class=\"mt-10\"\n        />\n        <Checkbox\n          v-if=\"isCreateEdit\"\n          v-model=\"userChangeOnLogin\"\n          label-key=\"changePassword.changeOnLogin.label\"\n          class=\"mt-10 type\"\n        />\n        <Checkbox\n          v-if=\"isCreateEdit\"\n          v-model=\"isRandomGenerated\"\n          label-key=\"changePassword.generatePassword.label\"\n          class=\"mt-10 type\"\n        />\n\n        <!-- Create two 'invisible fields' for password managers -->\n        <input\n          id=\"username\"\n          type=\"text\"\n          name=\"username\"\n          autocomplete=\"username\"\n          :value=\"username\"\n          tabindex=\"-1\"\n          :data-lpignore=\"!isChange\"\n        >\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"password\"\n          :value=\"password\"\n          tabindex=\"-1\"\n          :data-lpignore=\"!isChange\"\n        >\n        <Password\n          v-if=\"isChange\"\n          v-model=\"passwordCurrent\"\n          data-testid=\"account__current_password\"\n          class=\"mt-10\"\n          :required=\"true\"\n          :label=\"t('changePassword.currentPassword.label')\"\n        />\n        <div\n          v-if=\"isRandomGenerated\"\n          :class=\"{'row': isCreateEdit}\"\n        >\n          <div :class=\"{'col': isCreateEdit, 'span-8': isCreateEdit}\">\n            <Password\n              v-model=\"passwordGen\"\n              class=\"mt-10\"\n              :is-random=\"true\"\n              :required=\"false\"\n              :label=\"t('changePassword.randomGen.generated.label')\"\n            />\n          </div>\n        </div>\n        <div\n          v-else\n          class=\"userGen\"\n          :class=\"{'row': isCreateEdit}\"\n        >\n          <div :class=\"{'col': isCreateEdit, 'span-4': isCreateEdit}\">\n            <Password\n              v-model=\"passwordNew\"\n              data-testid=\"account__new_password\"\n              class=\"mt-10\"\n              :label=\"t('changePassword.userGen.newPassword.label')\"\n              :required=\"userGeneratedPasswordsRequired\"\n              :ignore-password-managers=\"!isChange\"\n            />\n          </div>\n          <div :class=\"{'col': isCreateEdit, 'span-4': isCreateEdit}\">\n            <Password\n              v-model=\"passwordConfirm\"\n              data-testid=\"account__confirm_password\"\n              class=\"mt-10\"\n              :label=\"t('changePassword.userGen.confirmPassword.label')\"\n              :required=\"userGeneratedPasswordsRequired\"\n              :ignore-password-managers=\"!isChange\"\n              @blur=\"passwordConfirmBlurred = true\"\n            />\n          </div>\n        </div>\n      </div>\n      <Checkbox\n        v-if=\"isChange\"\n        v-model=\"isRandomGenerated\"\n        label-key=\"changePassword.generatePassword.label\"\n        class=\"mt-10 type\"\n      />\n    </div>\n    <div\n      v-if=\"errorMessages && errorMessages.length\"\n      class=\"text-error\"\n      :class=\"{'row': isCreateEdit}\"\n    >\n      <div :class=\"{'col': isCreateEdit, 'span-8': isCreateEdit}\">\n        <Banner\n          v-for=\"(err, i) in errorMessages\"\n          :key=\"i\"\n          color=\"error\"\n          :label=\"err\"\n          class=\"mb-0\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .change-password {\n    display: flex;\n    flex-direction: column;\n\n    &.change {\n      .form .fields {\n        height: 240px;\n      }\n    }\n\n    &.create, &.edit {\n      height: 185px;\n      .form {\n        .fields {\n          display: flex;\n          flex-direction: column;\n        }\n      }\n    }\n\n    .form {\n      display: flex;\n      flex-direction: column;\n      .fields{\n        #username, #password {\n          height: 0;\n          width: 0;\n          background-size: 0;\n          padding: 0;\n          border: none;\n        }\n      }\n    }\n\n    .text-error {\n      height: 53px;\n    }\n  }\n\n</style>\n"]}]}