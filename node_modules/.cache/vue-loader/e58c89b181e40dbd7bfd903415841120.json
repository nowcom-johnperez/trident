{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/resources.cattle.io.backup.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/resources.cattle.io.backup.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCBjcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgZm9ybVZhbGlkYXRpb24gZnJvbSAnQHNoZWxsL21peGlucy9mb3JtLXZhbGlkYXRpb24nOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBVbml0SW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Vbml0SW5wdXQnOwppbXBvcnQgTGFiZWxlZFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVsZWRTZWxlY3QnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgeyBSYWRpb0dyb3VwIH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9SYWRpbyc7CmltcG9ydCBOYW1lTnNEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05hbWVOc0Rlc2NyaXB0aW9uJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBTMyBmcm9tICdAc2hlbGwvY2hhcnQvcmFuY2hlci1iYWNrdXAvUzMnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IFNFQ1JFVCwgQkFDS1VQX1JFU1RPUkUsIENBVEFMT0cgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgYWxsSGFzaCB9IGZyb20gJ0BzaGVsbC91dGlscy9wcm9taXNlJzsKaW1wb3J0IHsgTkFNRVNQQUNFLCBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgc29ydEJ5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL3NvcnQnOwppbXBvcnQgeyBnZXQgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IHsgZm9ybWF0RW5jcnlwdGlvblNlY3JldE5hbWVzIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Zvcm1hdHRlcic7CgpleHBvcnQgZGVmYXVsdCB7CgogIGNvbXBvbmVudHM6IHsKICAgIENydVJlc291cmNlLAogICAgVW5pdElucHV0LAogICAgTGFiZWxlZElucHV0LAogICAgTGFiZWxlZFNlbGVjdCwKICAgIFJhZGlvR3JvdXAsCiAgICBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIEJhbm5lciwKICAgIExvYWRpbmcsCiAgICBTMywKICB9LAogIG1peGluczogW2NyZWF0ZUVkaXRWaWV3LCBmb3JtVmFsaWRhdGlvbl0sCgogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0KICAgIH0sCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NyZWF0ZScKICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRhbG9nL2xvYWQnKTsKCiAgICBjb25zdCBoYXNoID0gYXdhaXQgYWxsSGFzaCh7CiAgICAgIHNlY3JldHM6ICAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgeyB0eXBlOiBTRUNSRVQgfSksCiAgICAgIHJlc291cmNlU2V0OiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kJywgeyB0eXBlOiBCQUNLVVBfUkVTVE9SRS5SRVNPVVJDRV9TRVQsIGlkOiB0aGlzLnZhbHVlPy5zcGVjPy5yZXNvdXJjZVNldE5hbWUgfHwgJ3JhbmNoZXItcmVzb3VyY2Utc2V0JyB9KSwKICAgICAgYXBwczogICAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZpbmRBbGwnLCB7IHR5cGU6IENBVEFMT0cuQVBQIH0pCgogICAgfSk7CgogICAgdGhpcy5hbGxTZWNyZXRzID0gaGFzaC5zZWNyZXRzOwogICAgdGhpcy5yZXNvdXJjZVNldCA9IGhhc2gucmVzb3VyY2VTZXQ7CiAgICB0aGlzLmFwcHMgPSBoYXNoLmFwcHM7CiAgfSwKCiAgZGF0YSgpIHsKICAgIGlmICghdGhpcy52YWx1ZS5zcGVjKSB7CiAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAnc3BlYycsIHsgcmV0ZW50aW9uQ291bnQ6IDEwIH0pOwogICAgfQogICAgbGV0IHMzID0ge307CiAgICBsZXQgdXNlRW5jcnlwdGlvbiA9IGZhbHNlOwogICAgbGV0IHNldFNjaGVkdWxlID0gZmFsc2U7CiAgICBsZXQgc3RvcmFnZVNvdXJjZSA9ICd1c2VEZWZhdWx0JzsKCiAgICBpZiAodGhpcy52YWx1ZS5zcGVjLmVuY3J5cHRpb25Db25maWdTZWNyZXROYW1lKSB7CiAgICAgIHVzZUVuY3J5cHRpb24gPSB0cnVlOwogICAgfQoKICAgIGlmICh0aGlzLnZhbHVlLnNwZWMuc2NoZWR1bGUpIHsKICAgICAgc2V0U2NoZWR1bGUgPSB0cnVlOwogICAgfQoKICAgIGlmICh0aGlzLnZhbHVlPy5zcGVjPy5zdG9yYWdlTG9jYXRpb24/LnMzKSB7CiAgICAgIHN0b3JhZ2VTb3VyY2UgPSAnY29uZmlndXJlUzMnOwogICAgICBzMyA9IHRoaXMudmFsdWUuc3BlYy5zdG9yYWdlTG9jYXRpb24uczM7CiAgICB9CgogICAgcmV0dXJuIHsKICAgICAgYWxsU2VjcmV0czogICAgIFtdLAogICAgICByZXNvdXJjZVNldDogICAgbnVsbCwKICAgICAgczMsCiAgICAgIHN0b3JhZ2VTb3VyY2UsCiAgICAgIHVzZUVuY3J5cHRpb24sCiAgICAgIGFwcHM6ICAgICAgICAgICBbXSwKICAgICAgc2V0U2NoZWR1bGUsCiAgICAgIG5hbWU6ICAgICAgICAgICB0aGlzLnZhbHVlPy5tZXRhZGF0YT8ubmFtZSwKICAgICAgZnZGb3JtUnVsZVNldHM6IFt7CiAgICAgICAgcGF0aDogJ21ldGFkYXRhLm5hbWUnLCBydWxlczogWydkbnNMYWJlbCcsICdub1VwcGVyQ2FzZSddLCB0cmFuc2xhdGlvbktleTogJ25hbWVOc0Rlc2NyaXB0aW9uLm5hbWUubGFiZWwnCiAgICAgIH1dCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKCiAgICBjaGFydE5hbWVzcGFjZSgpIHsKICAgICAgY29uc3QgQlJPUmVsZWFzZSA9IHRoaXMuYXBwcy5maWx0ZXIoKHJlbGVhc2UpID0+IGdldChyZWxlYXNlLCAnc3BlYy5uYW1lJykgPT09ICdyYW5jaGVyLWJhY2t1cCcpWzBdOwoKICAgICAgcmV0dXJuIEJST1JlbGVhc2UgPyBCUk9SZWxlYXNlLnNwZWMubmFtZXNwYWNlIDogJyc7CiAgICB9LAoKICAgIGVuY3J5cHRpb25TZWNyZXROYW1lcygpIHsKICAgICAgcmV0dXJuIGZvcm1hdEVuY3J5cHRpb25TZWNyZXROYW1lcyh0aGlzLmFsbFNlY3JldHMsIHRoaXMuY2hhcnROYW1lc3BhY2UpOwogICAgfSwKCiAgICBzdG9yYWdlT3B0aW9ucygpIHsKICAgICAgY29uc3Qgb3B0aW9ucyA9IFsndXNlRGVmYXVsdCcsICdjb25maWd1cmVTMyddOwogICAgICBjb25zdCBsYWJlbHMgPSBbdGhpcy50KCdiYWNrdXBSZXN0b3JlT3BlcmF0b3Iuc3RvcmFnZVNvdXJjZS51c2VEZWZhdWx0JyksIHRoaXMudCgnYmFja3VwUmVzdG9yZU9wZXJhdG9yLnN0b3JhZ2VTb3VyY2UuY29uZmlndXJlUzMnKV07CgogICAgICByZXR1cm4geyBvcHRpb25zLCBsYWJlbHMgfTsKICAgIH0sCgogICAgZW5jcnlwdGlvbk9wdGlvbnMoKSB7CiAgICAgIGNvbnN0IG9wdGlvbnMgPSBbZmFsc2UsIHRydWVdOwogICAgICBjb25zdCBsYWJlbHMgPSBbdGhpcy50KCdiYWNrdXBSZXN0b3JlT3BlcmF0b3IuZW5jcnlwdGlvbkNvbmZpZ05hbWUub3B0aW9ucy5ub25lJyksIHRoaXMudCgnYmFja3VwUmVzdG9yZU9wZXJhdG9yLmVuY3J5cHRpb25Db25maWdOYW1lLm9wdGlvbnMuc2VjcmV0Jywge30sIHRydWUpXTsKCiAgICAgIHJldHVybiB7IG9wdGlvbnMsIGxhYmVscyB9OwogICAgfSwKCiAgICBuYW1lc3BhY2VzKCkgewogICAgICBjb25zdCBjaG9pY2VzID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY2x1c3Rlci9hbGwnXShOQU1FU1BBQ0UpOwogICAgICBjb25zdCBvdXQgPSBzb3J0QnkoY2hvaWNlcy5tYXAoKG9iaikgPT4gewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBsYWJlbDogb2JqLm5hbWVEaXNwbGF5LAogICAgICAgICAgdmFsdWU6IG9iai5pZCwKICAgICAgICB9OwogICAgICB9KSwgJ2xhYmVsJyk7CgogICAgICByZXR1cm4gb3V0OwogICAgfSwKCiAgICB2YWxpZGF0ZWQoKSB7CiAgICAgIHJldHVybiAhIXRoaXMubmFtZSAmJiAoIXRoaXMudXNlRW5jcnlwdGlvbiB8fCAhIXRoaXMudmFsdWU/LnNwZWM/LmVuY3J5cHRpb25Db25maWdTZWNyZXROYW1lKSAmJiB0aGlzLmZ2Rm9ybUlzVmFsaWQ7CiAgICB9LAoKICAgIC4uLm1hcEdldHRlcnMoeyB0OiAnaTE4bi90JyB9KQogIH0sCgogIHdhdGNoOiB7CiAgICBzdG9yYWdlU291cmNlKG5ldSkgewogICAgICBpZiAobmV1ID09PSAndXNlRGVmYXVsdCcpIHsKICAgICAgICBkZWxldGUgdGhpcy52YWx1ZS5zcGVjLnN0b3JhZ2VMb2NhdGlvbjsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAnc3RvcmFnZUxvY2F0aW9uJywgeyBzMzogdGhpcy5zMyB9KTsKICAgICAgfQogICAgfSwKCiAgICByZXNvdXJjZVNldChuZXUpIHsKICAgICAgaWYgKG5ldT8ubWV0YWRhdGE/Lm5hbWUpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAncmVzb3VyY2VTZXROYW1lJywgbmV1Py5tZXRhZGF0YT8ubmFtZSk7CiAgICAgIH0KICAgIH0sCgogICAgc2V0U2NoZWR1bGUobmV1KSB7CiAgICAgIGlmICghbmV1KSB7CiAgICAgICAgZGVsZXRlIHRoaXMudmFsdWUuc3BlYy5zY2hlZHVsZTsKICAgICAgICBkZWxldGUgdGhpcy52YWx1ZS5zcGVjLnJldGVudGlvbkNvdW50OwogICAgICB9CiAgICB9LAoKICAgIHVzZUVuY3J5cHRpb24obmV1KSB7CiAgICAgIGlmICghbmV1KSB7CiAgICAgICAgdGhpcy52YWx1ZS5zcGVjLmVuY3J5cHRpb25Db25maWdTZWNyZXROYW1lID0gJyc7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["resources.cattle.io.backup.vue"],"names":[],"mappingsfile":"resources.cattle.io.backup.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport formValidation from '@shell/mixins/form-validation';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport { RadioGroup } from '@components/Form/Radio';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Loading from '@shell/components/Loading';\nimport S3 from '@shell/chart/rancher-backup/S3';\nimport { mapGetters } from 'vuex';\nimport { SECRET, BACKUP_RESTORE, CATALOG } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { NAMESPACE, _VIEW } from '@shell/config/query-params';\nimport { sortBy } from '@shell/utils/sort';\nimport { get } from '@shell/utils/object';\nimport { formatEncryptionSecretNames } from '@shell/utils/formatter';\n\nexport default {\n\n  components: {\n    CruResource,\n    UnitInput,\n    LabeledInput,\n    LabeledSelect,\n    RadioGroup,\n    NameNsDescription,\n    Banner,\n    Loading,\n    S3,\n  },\n  mixins: [createEditView, formValidation],\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load');\n\n    const hash = await allHash({\n      secrets:     this.$store.dispatch('cluster/findAll', { type: SECRET }),\n      resourceSet: this.$store.dispatch('cluster/find', { type: BACKUP_RESTORE.RESOURCE_SET, id: this.value?.spec?.resourceSetName || 'rancher-resource-set' }),\n      apps:        this.$store.dispatch('cluster/findAll', { type: CATALOG.APP })\n\n    });\n\n    this.allSecrets = hash.secrets;\n    this.resourceSet = hash.resourceSet;\n    this.apps = hash.apps;\n  },\n\n  data() {\n    if (!this.value.spec) {\n      this.$set(this.value, 'spec', { retentionCount: 10 });\n    }\n    let s3 = {};\n    let useEncryption = false;\n    let setSchedule = false;\n    let storageSource = 'useDefault';\n\n    if (this.value.spec.encryptionConfigSecretName) {\n      useEncryption = true;\n    }\n\n    if (this.value.spec.schedule) {\n      setSchedule = true;\n    }\n\n    if (this.value?.spec?.storageLocation?.s3) {\n      storageSource = 'configureS3';\n      s3 = this.value.spec.storageLocation.s3;\n    }\n\n    return {\n      allSecrets:     [],\n      resourceSet:    null,\n      s3,\n      storageSource,\n      useEncryption,\n      apps:           [],\n      setSchedule,\n      name:           this.value?.metadata?.name,\n      fvFormRuleSets: [{\n        path: 'metadata.name', rules: ['dnsLabel', 'noUpperCase'], translationKey: 'nameNsDescription.name.label'\n      }]\n    };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    chartNamespace() {\n      const BRORelease = this.apps.filter((release) => get(release, 'spec.name') === 'rancher-backup')[0];\n\n      return BRORelease ? BRORelease.spec.namespace : '';\n    },\n\n    encryptionSecretNames() {\n      return formatEncryptionSecretNames(this.allSecrets, this.chartNamespace);\n    },\n\n    storageOptions() {\n      const options = ['useDefault', 'configureS3'];\n      const labels = [this.t('backupRestoreOperator.storageSource.useDefault'), this.t('backupRestoreOperator.storageSource.configureS3')];\n\n      return { options, labels };\n    },\n\n    encryptionOptions() {\n      const options = [false, true];\n      const labels = [this.t('backupRestoreOperator.encryptionConfigName.options.none'), this.t('backupRestoreOperator.encryptionConfigName.options.secret', {}, true)];\n\n      return { options, labels };\n    },\n\n    namespaces() {\n      const choices = this.$store.getters['cluster/all'](NAMESPACE);\n      const out = sortBy(choices.map((obj) => {\n        return {\n          label: obj.nameDisplay,\n          value: obj.id,\n        };\n      }), 'label');\n\n      return out;\n    },\n\n    validated() {\n      return !!this.name && (!this.useEncryption || !!this.value?.spec?.encryptionConfigSecretName) && this.fvFormIsValid;\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    storageSource(neu) {\n      if (neu === 'useDefault') {\n        delete this.value.spec.storageLocation;\n      } else {\n        this.$set(this.value.spec, 'storageLocation', { s3: this.s3 });\n      }\n    },\n\n    resourceSet(neu) {\n      if (neu?.metadata?.name) {\n        this.$set(this.value.spec, 'resourceSetName', neu?.metadata?.name);\n      }\n    },\n\n    setSchedule(neu) {\n      if (!neu) {\n        delete this.value.spec.schedule;\n        delete this.value.spec.retentionCount;\n      }\n    },\n\n    useEncryption(neu) {\n      if (!neu) {\n        this.value.spec.encryptionConfigSecretName = '';\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <CruResource\n      :validation-passed=\"validated\"\n      :done-route=\"doneRoute\"\n      :resource=\"value\"\n      :mode=\"mode\"\n      :errors=\"fvUnreportedValidationErrors\"\n      @finish=\"save\"\n    >\n      <template>\n        <NameNsDescription\n          :mode=\"mode\"\n          :value=\"value\"\n          :namespaced=\"false\"\n          :rules=\"{name: fvGetAndReportPathRules('metadata.name')}\"\n          @change=\"name=value.metadata.name\"\n        />\n        <template v-if=\"!!resourceSet\">\n          <div class=\"bordered-section\">\n            <RadioGroup\n              v-model=\"setSchedule\"\n              :mode=\"mode\"\n              :label=\"t('backupRestoreOperator.schedule.label')\"\n              name=\"setSchedule\"\n              :options=\"[false, true]\"\n              :labels=\"[t('backupRestoreOperator.schedule.options.disabled'), t('backupRestoreOperator.schedule.options.enabled')]\"\n            />\n            <div\n              v-if=\"setSchedule\"\n              class=\"row mt-10 mb-10\"\n            >\n              <div class=\"col span-6\">\n                <LabeledInput\n                  v-model=\"value.spec.schedule\"\n                  type=\"cron\"\n                  :mode=\"mode\"\n                  :label=\"t('backupRestoreOperator.schedule.label')\"\n                  :placeholder=\"t('backupRestoreOperator.schedule.placeholder')\"\n                />\n              </div>\n              <div class=\"col span-6\">\n                <UnitInput\n                  v-model=\"value.spec.retentionCount\"\n                  :suffix=\"t('backupRestoreOperator.retentionCount.units', {count: value.spec.retentionCount || 0})\"\n                  :mode=\"mode\"\n                  :label=\"t('backupRestoreOperator.retentionCount.label')\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"bordered-section\">\n            <div class=\"row\">\n              <div class=\"col span-12\">\n                <RadioGroup\n                  v-model=\"useEncryption\"\n                  name=\"useEncryption\"\n                  :label=\"t('backupRestoreOperator.encryption')\"\n                  :options=\"encryptionOptions.options\"\n                  :labels=\"encryptionOptions.labels\"\n                  :mode=\"mode\"\n                />\n              </div>\n            </div>\n            <div\n              v-if=\"useEncryption\"\n              :style=\"{'align-items':'center'}\"\n              class=\"row mt-10\"\n            >\n              <div class=\"col span-6\">\n                <LabeledSelect\n                  v-model=\"value.spec.encryptionConfigSecretName\"\n                  :tooltip=\"t('backupRestoreOperator.encryptionConfigName.backuptip', {}, true)\"\n                  :hover-tooltip=\"true\"\n                  :mode=\"mode\"\n                  :options=\"encryptionSecretNames\"\n                  :label=\"t('backupRestoreOperator.encryptionConfigName.label')\"\n                />\n              </div>\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col span-12\">\n              <span\n                v-if=\"isView\"\n                class=\"text-label\"\n              >{{ t('backupRestoreOperator.s3.titles.location') }}</span>\n              <RadioGroup\n                v-else\n                v-model=\"storageSource\"\n                name=\"storageSource\"\n                :label=\"t('backupRestoreOperator.s3.titles.location')\"\n                :options=\"storageOptions.options\"\n                :labels=\"storageOptions.labels\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n\n          <template v-if=\"storageSource !== 'useDefault'\">\n            <div class=\"row mt-10\">\n              <div class=\"col span-12\">\n                <S3\n                  :value=\"s3\"\n                  :secrets=\"allSecrets\"\n                  :mode=\"mode\"\n                />\n              </div>\n            </div>\n          </template>\n          <template v-else-if=\"isView\">\n            <span>{{ t('generic.default') }}</span>\n          </template>\n        </template>\n        <Banner\n          v-else\n          color=\"error\"\n        >\n          <span v-clean-html=\"t('backupRestoreOperator.noResourceSet')\" />\n        </Banner>\n      </template>\n    </CruResource>\n  </div>\n</template>\n"]}]}