{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ProgressBarMulti.vue?vue&type=style&index=0&id=7559b636&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ProgressBarMulti.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRwcm9ncmVzcy1kaXZpZGVyLXdpZHRoOiAxcHg7CiRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOiA5MHB4OwokcHJvZ3Jlc3MtaGVpZ2h0OiAgICAgICAgMTBweDsKJHByb2dyZXNzLXdpZHRoOiAgICAgICAgIDEwMHB4OwoKLnByb2dyZXNzIHsKICBkaXNwbGF5OiBibG9jazsKICBib3JkZXItcmFkaXVzOiAkcHJvZ3Jlc3MtYm9yZGVyLXJhZGl1czsKICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcm9ncmVzcy1iZyk7CiAgaGVpZ2h0OiAkcHJvZ3Jlc3MtaGVpZ2h0OwogIHdpZHRoOiAkcHJvZ3Jlc3Mtd2lkdGg7CgogIC5waWVjZSB7CiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogICAgaGVpZ2h0OiAkcHJvZ3Jlc3MtaGVpZ2h0OwogICAgYm9yZGVyLXJhZGl1czogMDsKICAgIGJvcmRlci1yaWdodDogJHByb2dyZXNzLWRpdmlkZXItd2lkdGggc29saWQgdmFyKC0tcHJvZ3Jlc3MtZGl2aWRlcik7CiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwoKICAgICY6Zmlyc3QtY2hpbGQgewogICAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAkcHJvZ3Jlc3MtYm9yZGVyLXJhZGl1czsKICAgICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHByb2dyZXNzLWJvcmRlci1yYWRpdXM7CiAgICB9CgogICAgJjpsYXN0LWNoaWxkIHsKICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICRwcm9ncmVzcy1ib3JkZXItcmFkaXVzOwogICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogJHByb2dyZXNzLWJvcmRlci1yYWRpdXM7CiAgICAgIGJvcmRlci1yaWdodDogMDsKICAgIH0KICB9Cn0KCi5waWVjZS5iZy1zdWNjZXNzOm9ubHktY2hpbGQgewogIG9wYWNpdHk6IDAuNTsKfQo="},{"version":3,"sources":["ProgressBarMulti.vue"],"names":[],"mappings":";AAgKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ProgressBarMulti.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { sortBy } from '@shell/utils/sort';\nimport { get } from '@shell/utils/object';\n\nexport default {\n  props: {\n    values: {\n      type:     Array,\n      required: true,\n    },\n\n    colorKey: {\n      type:    String,\n      default: 'color',\n    },\n    labelKey: {\n      type:    String,\n      default: 'label',\n    },\n    valueKey: {\n      type:    String,\n      default: 'value',\n    },\n\n    min: {\n      type:    Number,\n      default: 0\n    },\n    max: {\n      type:    Number,\n      default: null,\n    },\n    minPercent: {\n      type:    Number,\n      default: 5,\n    },\n    showZeros: {\n      type:    Boolean,\n      default: false,\n    }\n  },\n\n  computed: {\n    pieces() {\n      const out = [];\n\n      for ( const obj of this.values ) {\n        const color = get(obj, this.colorKey);\n        const label = get(obj, this.labelKey);\n        const value = get(obj, this.valueKey);\n\n        if ( value === 0 && !this.showZeros) {\n          continue;\n        }\n\n        out.push({\n          color,\n          label,\n          value,\n        });\n      }\n\n      const minPercent = this.minPercent || 0;\n      const min = this.min || 0;\n      let max = this.max;\n      let sum = 0;\n\n      if ( !this.max ) {\n        max = 100;\n        if ( out.length ) {\n          max = out.map((x) => x.value).reduce((a, b) => a + b);\n        }\n      }\n\n      for ( const obj of out ) {\n        const percent = Math.max(minPercent, toPercent(obj.value, min, max));\n\n        obj.percent = percent;\n        sum += percent;\n      }\n\n      // If the sum is bigger than 100%, take it out of the biggest piece\n      if ( sum > 100 ) {\n        sortBy(out, 'percent', true)[0].percent -= sum - 100;\n      }\n\n      for ( const obj of out ) {\n        obj.style = `width: ${ obj.percent }%`;\n      }\n\n      return out.filter((obj) => obj.percent);\n    },\n  }\n};\n\nfunction toPercent(value, min, max) {\n  value = Math.max(min, Math.min(max, value));\n  let per = value / (max - min) * 100; // Percent 0-100\n\n  per = Math.floor(per * 100) / 100; // Round to 2 decimal places\n\n  return per;\n}\n\n</script>\n\n<template>\n  <div\n    v-trim-whitespace\n    :class=\"{progress: true, multi: pieces.length > 1}\"\n  >\n    <div\n      v-for=\"(piece, idx) of pieces\"\n      :key=\"idx\"\n      v-trim-whitespace\n      :class=\"{'piece': true, [piece.color]: true}\"\n      :style=\"piece.style\"\n    />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $progress-divider-width: 1px;\n  $progress-border-radius: 90px;\n  $progress-height:        10px;\n  $progress-width:         100px;\n\n  .progress {\n    display: block;\n    border-radius: $progress-border-radius;\n    background-color: var(--progress-bg);\n    height: $progress-height;\n    width: $progress-width;\n\n    .piece {\n      display: inline-block;\n      vertical-align: top;\n      height: $progress-height;\n      border-radius: 0;\n      border-right: $progress-divider-width solid var(--progress-divider);\n      vertical-align: top;\n\n      &:first-child {\n        border-top-left-radius: $progress-border-radius;\n        border-bottom-left-radius: $progress-border-radius;\n      }\n\n      &:last-child {\n        border-top-right-radius: $progress-border-radius;\n        border-bottom-right-radius: $progress-border-radius;\n        border-right: 0;\n      }\n    }\n  }\n\n  .piece.bg-success:only-child {\n    opacity: 0.5;\n  }\n</style>\n"]}]}