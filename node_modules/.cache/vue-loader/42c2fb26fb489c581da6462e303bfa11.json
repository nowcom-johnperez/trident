{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/DrainOptions.vue?vue&type=style&index=0&id=46418264&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/DrainOptions.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRkcmFpbi10aW1lb3V0LWluZGV4OiAxOHB4OwoKLmRyYWluLXRpbWVvdXQgewogIG1hcmdpbi10b3A6IDVweDsKICBtYXJnaW4tbGVmdDogJGRyYWluLXRpbWVvdXQtaW5kZXg7CiAgd2lkdGg6IGNhbGMoMTAwJSAtICRkcmFpbi10aW1lb3V0LWluZGV4KTsKfQo="},{"version":3,"sources":["DrainOptions.vue"],"names":[],"mappings":";AA0JA;;AAEA;AACA;AACA;AACA;AACA","file":"DrainOptions.vue","sourceRoot":"node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster","sourcesContent":["<script>\nimport RadioGroup from '@components/Form/Radio/RadioGroup.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport UnitInput from '@shell/components/form/UnitInput.vue';\nimport { mapGetters } from 'vuex';\n\nconst DEFAULTS = {\n  deleteEmptyDirData:              true, // Show; Kill pods using emptyDir volumes and lose the data\n  disableEviction:                 false, // Hide; false = evict pods, true = delete pods\n  enabled:                         false, // Show; true = Nodes must be drained before upgrade; false = YOLO\n  force:                           false, // Show; true = Delete standalone pods, false = fail if there are any\n  gracePeriod:                     -1, // Show; Pod shut down time, negative value uses pod default\n  ignoreDaemonSets:                true, // Hide; true = work, false = never work because there's always daemonSets\n  skipWaitForDeleteTimeoutSeconds: 0, // Hide; If the pod deletion time is older than this > 0, don't wait, for some reason\n  timeout:                         120, // Show; Give up after this many seconds\n};\n\nexport default {\n  components: {\n    RadioGroup, Checkbox, UnitInput\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {},\n    },\n\n    mode: {\n      type:     String,\n      required: true,\n    }\n  },\n\n  data() {\n    const out = {};\n\n    for ( const k in DEFAULTS ) {\n      if ( typeof this.value[k] === 'undefined' ) {\n        out[k] = DEFAULTS[k];\n      } else {\n        out[k] = this.value[k];\n      }\n    }\n\n    out.customGracePeriod = out.gracePeriod >= 0;\n    out.customTimeout = out.timeout >= 0;\n\n    return out;\n  },\n\n  created() {\n    this.update();\n  },\n\n  computed: { ...mapGetters({ t: 'i18n/t' }) },\n\n  methods: {\n    update() {\n      const out = {};\n\n      for ( const k in DEFAULTS ) {\n        out[k] = this[k];\n      }\n\n      if ( !this.customGracePeriod ) {\n        out.gracePeriod = -1;\n      }\n\n      if ( !this.customTimeout ) {\n        out.timeout = 0;\n      }\n\n      this.$emit('input', out);\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <RadioGroup\n      v-model=\"enabled\"\n      name=\"enabled\"\n      :options=\"[false, true]\"\n      :label=\"t('cluster.rke2.drain.label')\"\n      :labels=\"[t('generic.no'), t('generic.yes')]\"\n      :tooltip=\"t('cluster.rke2.drain.toolTip')\"\n      :mode=\"mode\"\n      @input=\"update\"\n    />\n\n    <template v-if=\"enabled\">\n      <div class=\"mt-20\">\n        <Checkbox\n          v-model=\"deleteEmptyDirData\"\n          label-key=\"cluster.rke2.drain.deleteEmptyDir.label\"\n          tooltip-key=\"cluster.rke2.drain.deleteEmptyDir.tooltip\"\n          @input=\"update\"\n        />\n      </div>\n      <div>\n        <Checkbox\n          v-model=\"force\"\n          label=\"Delete standalone pods\"\n          label-key=\"cluster.rke2.drain.force.label\"\n          tooltip=\"Delete standalone pods which are not managed by a Workload controller (Deployment, Job, etc).  Draining will fail if this is not set and there are standalone pods.\"\n          tooltop-key=\"cluster.rke2.drain.force.tooltip\"\n          @input=\"update\"\n        />\n      </div>\n      <div>\n        <Checkbox\n          v-model=\"customGracePeriod\"\n          label-key=\"cluster.rke2.drain.gracePeriod.checkboxLabel\"\n          @input=\"update\"\n        />\n        <UnitInput\n          v-if=\"customGracePeriod\"\n          v-model=\"gracePeriod\"\n          label-key=\"cluster.rke2.drain.gracePeriod.inputLabel\"\n          :suffix=\"t('suffix.seconds', {count: timeout})\"\n          class=\"mb-10\"\n          @input=\"update\"\n        />\n      </div>\n      <div>\n        <Checkbox\n          v-model=\"customTimeout\"\n          label-key=\"cluster.rke2.drain.timeout.checkboxLabel\"\n          @input=\"update\"\n        />\n        <UnitInput\n          v-if=\"customTimeout\"\n          v-model=\"timeout\"\n          label-key=\"cluster.rke2.drain.timeout.inputLabel\"\n          :suffix=\"t('suffix.seconds', {count: timeout})\"\n          class=\"drain-timeout\"\n          @input=\"update\"\n        />\n      </div>\n    </template>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  $drain-timeout-index: 18px;\n\n  .drain-timeout {\n    margin-top: 5px;\n    margin-left: $drain-timeout-index;\n    width: calc(100% - $drain-timeout-index);\n  }\n</style>\n"]}]}