{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/ui.cattle.io.navlink.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/ui.cattle.io.navlink.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ui.cattle.io.navlink.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ui.cattle.io.navlink.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport { isNull, isUndefined } from 'lodash';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { SERVICE } from '@shell/config/types';\nimport { PROTOCOLS } from '@shell/config/schema';\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { RadioGroup } from '@components/Form/Radio';\nimport FileImageSelector from '@shell/components/form/FileImageSelector';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { Banner } from '@components/Banner';\nimport FormValidation from '@shell/mixins/form-validation';\nimport { normalizeName } from '@shell/utils/kube';\n\nconst LINK_TYPE_URL = 'url';\nconst LINK_TYPE_SERVICE = 'service';\nconst LINK_TARGET_NAMED = 'LINK_TARGET_NAMED';\nconst LINK_TARGET_BLANK = '_blank';\nconst LINK_TARGET_SELF = '_self';\n\nexport default {\n  mixins:     [CreateEditView, FormValidation],\n  components: {\n    CruResource,\n    LabeledInput,\n    RadioGroup,\n    NameNsDescription,\n    FileImageSelector,\n    LabeledSelect,\n    Banner\n  },\n  data() {\n    return {\n      targetOptions: [\n        {\n          value: LINK_TARGET_BLANK,\n          label: this.t('navLink.tabs.target.option.blank'),\n        },\n        {\n          value: LINK_TARGET_SELF,\n          label: this.t('navLink.tabs.target.option.self'),\n        },\n        {\n          value: LINK_TARGET_NAMED,\n          label: this.t('navLink.tabs.target.option.named'),\n        }\n      ],\n      urlTypeOptions: [\n        {\n          value: LINK_TYPE_URL,\n          label: this.t('navLink.tabs.link.type.url')\n        },\n        {\n          value: LINK_TYPE_SERVICE,\n          label: this.t('navLink.tabs.link.type.service')\n        }\n      ],\n      currentLinkType:   null,\n      targetName:        null,\n      currentTarget:     LINK_TARGET_BLANK,\n      protocolsOptions:  PROTOCOLS,\n      services:          [],\n      currentService:    null,\n      imageErrorMessage: '',\n      fvFormRuleSets:    [\n        { path: 'metadata.name', rules: ['nameRequired'] },\n        { path: 'spec.toURL', rules: ['urlRequired'] },\n        { path: 'spec.toService.namespace', rules: ['serviceNamespaceRequired'] },\n        { path: 'spec.toService.scheme', rules: ['serviceSchemeRequired'] }],\n\n    };\n  },\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n      default:  () => {}\n    },\n    mode: {\n      type:     String,\n      required: true,\n    },\n  },\n  computed: {\n    /**\n     * Identify type of navLink and clear model on value change\n     */\n    linkType: {\n      get() {\n        return this.currentLinkType;\n      },\n      set(type) {\n        switch (type) {\n        case LINK_TYPE_URL:\n          delete this.value.spec.toService;\n          this.$set(this.value.spec, 'toURL', '');\n          break;\n        case LINK_TYPE_SERVICE:\n          delete this.value.spec.toURL;\n          this.$set(this.value.spec, 'toService', {});\n          break;\n        // No default\n        }\n        this.currentLinkType = type;\n      }\n    },\n    isService() {\n      return Boolean(this.value.spec.toService);\n    },\n    isURL() {\n      return !isNull(this.value.spec.toURL) && !isUndefined(this.value.spec.toURL);\n    },\n    isNamedWindow() {\n      return this.currentTarget === LINK_TARGET_NAMED;\n    },\n    mappedServices() {\n      return this.services.map(({ id, metadata: { name, namespace } }) => ({\n        label: id, id, name, namespace\n      }) );\n    },\n    imageError() {\n      return !!this.imageErrorMessage && !this.value.spec.iconSrc;\n    },\n    fvExtraRules() {\n      const isLinkTypeUrl = this.currentLinkType === LINK_TYPE_URL;\n      const isServiceTypeUrl = this.currentLinkType === LINK_TYPE_SERVICE;\n\n      return {\n        nameRequired: () => {\n          if (!this.value.metadata.name) {\n            return this.getError('navLink.name.label');\n          }\n        },\n\n        urlRequired: () => {\n          const condition = this.value.spec.toURL;\n\n          if (isLinkTypeUrl && !condition) {\n            return this.getError('navLink.tabs.link.toURL.label');\n          }\n        },\n        serviceNamespaceRequired: () => {\n          const condition = this.value.spec.toService.name && this.value.spec.toService.namespace;\n\n          if (isServiceTypeUrl && !condition) {\n            return this.getError('navLink.tabs.link.toService.service.label');\n          }\n        },\n        serviceSchemeRequired: () => {\n          const condition = this.value.spec.toService.scheme;\n\n          if (isServiceTypeUrl && !condition) {\n            return this.getError('navLink.tabs.link.toService.scheme.label');\n          }\n        }\n\n      };\n    }\n  },\n  async fetch() {\n    this.services = await this.$store\n      .dispatch('cluster/findAll', { type: SERVICE });\n  },\n  methods: {\n    /**\n     * Set the target of the navLink\n     * It will assign namedWindow value for named target cases\n     * @param {string} value\n     */\n    setTargetValue(value) {\n      switch (value) {\n      case LINK_TARGET_SELF:\n      case LINK_TARGET_BLANK:\n        this.$set(this.value.spec, 'target', value);\n        break;\n      default:\n        this.$set(this.value.spec, 'target', this.targetName);\n        break;\n      }\n    },\n    /**\n     * Identify target option based on value and update UI accordingly\n     * Note: Custom target name is not directly bound to the resource\n     */\n    setTargetOption() {\n      const value = this.value.spec.target;\n\n      switch (value) {\n      case LINK_TARGET_SELF:\n      case LINK_TARGET_BLANK:\n        this.currentTarget = value;\n        break;\n      default:\n        this.currentTarget = LINK_TARGET_NAMED;\n        this.targetName = value;\n        break;\n      }\n    },\n    /**\n     * Set URL type based on existing data\n     */\n    setUrlType() {\n      if (this.isURL) {\n        this.currentLinkType = LINK_TYPE_URL;\n      }\n      if (this.isService) {\n        this.currentLinkType = LINK_TYPE_SERVICE;\n      }\n    },\n    /**\n     * Initialize resource on creation\n     */\n    setDefaultValues() {\n      if (!this.value.spec) {\n        // Link to URL is set as default option from the data\n        this.$set(this.value, 'spec', { toURL: '' });\n      }\n      if (!this.value.metadata) {\n        this.$set(this.value, 'metadata', {});\n      }\n      if (!this.value.spec.target) {\n        this.$set(this.value.spec, 'target', LINK_TARGET_BLANK);\n      }\n    },\n    /**\n     * Set namespace and name from the selected service\n     * @param {label: string, id: string, name: string, namespace: string} service\n     */\n    setService(service) {\n      if (service) {\n        const { name, namespace } = service;\n\n        this.$set(this.value.spec.toService, 'name', name);\n        this.$set(this.value.spec.toService, 'namespace', namespace);\n      }\n    },\n    /**\n     * Set paired values of namespace and name for the service\n     */\n    setCurrentService() {\n      const name = this.value.spec.toService?.name;\n      const namespace = this.value.spec.toService?.namespace;\n\n      if (name && namespace) {\n        this.currentService = `${ namespace }/${ name }`;\n      }\n    },\n    /**\n     * Generate automatically kebab case for the displayed label\n     */\n    setName() {\n      this.$set(this.value.metadata, 'name', normalizeName(this.value.spec.label));\n    },\n    /**\n     * Get error chained validation based on existing label\n     * @param {string} label\n     */\n    getError(label) {\n      return this.$store.getters['i18n/t']('validation.required', { key: this.t(label) });\n    },\n\n    setImageError(e) {\n      this.imageErrorMessage = e;\n    },\n    setIcon(value) {\n      this.imageErrorMessage = '';\n      this.$emit('update:value.spec.iconSrc ', value);\n    }\n  },\n  created() {\n    this.setDefaultValues();\n    this.setUrlType();\n    this.setTargetOption();\n    this.setCurrentService();\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    :can-yaml=\"!isCreate\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"fvUnreportedValidationErrors\"\n    :cancel-event=\"true\"\n    :validation-passed=\"fvFormIsValid\"\n    data-testid=\"Navlink-CRU\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done()\"\n  >\n    <NameNsDescription\n      v-model=\"value\"\n      :namespaced=\"false\"\n      :namespace-disabled=\"true\"\n      :mode=\"mode\"\n      name-key=\"metadata.name\"\n      description-key=\"spec.label\"\n      name-label=\"navLink.name.label\"\n      name-placeholder=\"navLink.name.placeholder\"\n      description-label=\"navLink.label.label\"\n      description-placeholder=\"navLink.label.placeholder\"\n      data-testid=\"Navlink-name-field\"\n      :rules=\"{ name: fvGetAndReportPathRules('metadata.name'), namespace: [], description: [] }\"\n    />\n\n    <div class=\"spacer\" />\n    <h2 v-t=\"'navLink.tabs.link.label'\" />\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <RadioGroup\n          v-model=\"linkType\"\n          name=\"type\"\n          :mode=\"mode\"\n          :options=\"urlTypeOptions\"\n          data-testid=\"Navlink-link-radiogroup\"\n        />\n      </div>\n    </div>\n\n    <template v-if=\"isURL\">\n      <div class=\"row mb-20\">\n        <LabeledInput\n          v-model=\"value.spec.toURL\"\n          :mode=\"mode\"\n          :label=\"t('navLink.tabs.link.toURL.label')\"\n          :required=\"isURL\"\n          :placeholder=\"t('navLink.tabs.link.toURL.placeholder')\"\n          :rules=\"fvGetAndReportPathRules('spec.toURL')\"\n          data-testid=\"Navlink-url-field\"\n        />\n      </div>\n    </template>\n    <template v-if=\"isService\">\n      <div class=\"row mb-20\">\n        <div class=\"col span-2\">\n          <LabeledSelect\n            v-model=\"value.spec.toService.scheme\"\n            :mode=\"mode\"\n            :label=\"t('navLink.tabs.link.toService.scheme.label')\"\n            :required=\"isService\"\n            :options=\"protocolsOptions\"\n            :placeholder=\"t('navLink.tabs.link.toService.scheme.placeholder')\"\n            :rules=\"fvGetAndReportPathRules('spec.toService.scheme')\"\n            data-testid=\"Navlink-scheme-field\"\n          />\n        </div>\n        <div class=\"col span-5\">\n          <LabeledSelect\n            v-model=\"currentService\"\n            :mode=\"mode\"\n            :label=\"t('navLink.tabs.link.toService.service.label')\"\n            :options=\"mappedServices\"\n            :required=\"isService\"\n            :placeholder=\"t('navLink.tabs.link.toService.service.placeholder')\"\n            :rules=\"fvGetAndReportPathRules('spec.toService.namespace')\"\n            data-testid=\"Navlink-currentService-field\"\n            @input=\"setService\"\n          />\n        </div>\n        <div class=\"col span-2\">\n          <LabeledInput\n            v-model=\"value.spec.toService.port\"\n            :mode=\"mode\"\n            :label=\"t('navLink.tabs.link.toService.port.label')\"\n            type=\"number\"\n            :placeholder=\"t('navLink.tabs.link.toService.port.placeholder')\"\n          />\n        </div>\n        <div class=\"col span-3\">\n          <LabeledInput\n            v-model=\"value.spec.toService.path\"\n            :mode=\"mode\"\n            :label=\"t('navLink.tabs.link.toService.path.label')\"\n            :placeholder=\"t('navLink.tabs.link.toService.path.placeholder')\"\n          />\n        </div>\n      </div>\n    </template>\n    <div class=\"spacer\" />\n    <h2 v-t=\"'navLink.tabs.target.label'\" />\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <RadioGroup\n          v-model=\"currentTarget\"\n          name=\"type\"\n          :mode=\"mode\"\n          :options=\"targetOptions\"\n          @input=\"setTargetValue($event)\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-if=\"isNamedWindow\"\n          v-model=\"targetName\"\n          :mode=\"mode\"\n          :label=\"t('navLink.tabs.target.namedValue.label')\"\n          @input=\"setTargetValue($event);\"\n        />\n      </div>\n    </div>\n    <div class=\"spacer\" />\n    <h2 v-t=\"'navLink.tabs.group.label'\" />\n\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.spec.group\"\n          :mode=\"mode\"\n          :tooltip=\"t('navLink.tabs.group.group.tooltip')\"\n          :label=\"t('navLink.tabs.group.group.label')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.spec.sideLabel\"\n          :mode=\"mode\"\n          :label=\"t('navLink.tabs.group.sideLabel.label')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.spec.description\"\n          :mode=\"mode\"\n          :label=\"t('navLink.tabs.group.description.label')\"\n        />\n      </div>\n    </div>\n\n    <h4 v-t=\"'navLink.tabs.groupImage.label'\" />\n    <div class=\"row\">\n      <label class=\"text-label\">\n        {{ t('navLink.tabs.groupImage.iconSrc.tip', {}, true) }}\n      </label>\n    </div>\n    <div class=\"row\">\n      <FileImageSelector\n        v-model=\"value.spec.iconSrc\"\n        :read-as-data-url=\"true\"\n        :mode=\"mode\"\n        :label=\"t('navLink.tabs.groupImage.iconSrc.label')\"\n        accept=\"image/jpeg,image/png,image/svg+xml\"\n        @error=\"setImageError\"\n        @input=\"setIcon\"\n      />\n    </div>\n    <Banner\n      v-if=\"imageError\"\n      color=\"error\"\n    >\n      {{ imageErrorMessage }}\n    </Banner>\n  </CruResource>\n</template>\n"]}]}