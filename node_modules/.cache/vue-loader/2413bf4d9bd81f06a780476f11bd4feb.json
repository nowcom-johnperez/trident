{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/service.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/service.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["service.vue"],"names":[],"mappingsfile":"service.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport isEmpty from 'lodash/isEmpty';\nimport throttle from 'lodash/throttle';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { RadioGroup } from '@components/Form/Radio';\nimport ServicePorts from '@shell/components/form/ServicePorts';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { DEFAULT_SERVICE_TYPES, HEADLESS, CLUSTERIP } from '@shell/models/service';\nimport { ucFirst } from '@shell/utils/string';\nimport CruResource from '@shell/components/CruResource';\nimport { Banner } from '@components/Banner';\nimport Labels from '@shell/components/form/Labels';\nimport HarvesterServiceAddOnConfig from '@shell/components/HarvesterServiceAddOnConfig';\nimport { clone } from '@shell/utils/object';\nimport { POD, CAPI, HCI } from '@shell/config/types';\nimport { matching } from '@shell/utils/selector';\nimport { HARVESTER_NAME as HARVESTER } from '@shell/config/features';\nimport { allHash } from '@shell/utils/promise';\nimport { isHarvesterSatisfiesVersion } from '@shell/utils/cluster';\nimport { Port } from '@shell/utils/validators/formRules';\n\nconst SESSION_AFFINITY_ACTION_VALUES = {\n  NONE:     'None',\n  CLIENTIP: 'ClientIP',\n};\n\nconst SESSION_AFFINITY_ACTION_LABELS = {\n  NONE:     'servicesPage.affinity.actionLabels.none',\n  CLIENTIP: 'servicesPage.affinity.actionLabels.clientIp',\n};\n\nconst SESSION_STICKY_TIME_DEFAULT = 10800;\n\nexport default {\n  // Props are found in CreateEditView\n  // props: {},\n\n  components: {\n    ArrayList,\n    Banner,\n    CruResource,\n    KeyValue,\n    Labels,\n    LabeledInput,\n    NameNsDescription,\n    RadioGroup,\n    ServicePorts,\n    Tab,\n    Tabbed,\n    UnitInput,\n    HarvesterServiceAddOnConfig,\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  fetch() {\n    return this.loadPods();\n  },\n\n  data() {\n    if (!this?.value?.spec?.type) {\n      if (!this.value?.spec) {\n        this.$set(this.value, 'spec', {\n          ports:           [],\n          sessionAffinity: 'None',\n        });\n      }\n    }\n\n    const matchingPods = {\n      matched: 0,\n      matches: [],\n      none:    true,\n      sample:  null,\n      total:   0,\n    };\n\n    return {\n      matchingPods,\n      allPods:                     [],\n      defaultServiceTypes:         DEFAULT_SERVICE_TYPES,\n      saving:                      false,\n      sessionAffinityActionLabels: Object.values(SESSION_AFFINITY_ACTION_LABELS)\n        .map((v) => this.$store.getters['i18n/t'](v))\n        .map(ucFirst),\n      sessionAffinityActionOptions: Object.values(\n        SESSION_AFFINITY_ACTION_VALUES\n      ),\n      fvFormRuleSets:            [],\n      fvReportedValidationPaths: ['spec']\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n\n    tabErrors() {\n      const tabErrors = {};\n\n      if (this.serviceType === 'ExternalName') {\n        tabErrors.externalName = this.fvGetPathErrors(['spec.externalName'])?.length > 0;\n      } else {\n        tabErrors.servicePorts = this.fvGetPathErrors(['spec.ports'])?.length > 0;\n      }\n\n      return tabErrors;\n    },\n\n    showSelectorWarning() {\n      const selector = this.value.spec?.selector;\n\n      return !!isEmpty(selector);\n    },\n    serviceType: {\n      get() {\n        const serviceType = this.value?.spec?.type;\n        const clusterIp = this.value?.spec?.clusterIP;\n\n        if (serviceType) {\n          if (serviceType === CLUSTERIP && clusterIp === 'None') {\n            return HEADLESS;\n          } else {\n            return serviceType;\n          }\n        }\n\n        return serviceType;\n      },\n\n      set(serviceType) {\n        this.$emit('set-subtype', serviceType);\n\n        if (serviceType === HEADLESS) {\n          this.$set(this.value.spec, 'type', CLUSTERIP);\n          this.$set(this.value.spec, 'clusterIP', 'None');\n        } else {\n          if (\n            serviceType !== HEADLESS &&\n            this.value?.spec?.clusterIP === 'None'\n          ) {\n            this.$set(this.value.spec, 'clusterIP', null);\n          } else if (serviceType === 'ExternalName') {\n            this.$set(this.value.spec, 'ports', null);\n          }\n\n          this.$set(this.value.spec, 'type', serviceType);\n        }\n      },\n    },\n    showAffinityTimeout() {\n      return (\n        this.value.spec.sessionAffinity === 'ClientIP' &&\n        !isEmpty(this.value.spec.sessionAffinityConfig)\n      );\n    },\n\n    hasClusterIp() {\n      return (\n        this.checkTypeIs('ClusterIP') ||\n        this.checkTypeIs('LoadBalancer') ||\n        this.checkTypeIs('NodePort')\n      );\n    },\n\n    showHarvesterAddOnConfig() {\n      let cloudProvider;\n      const version = this.provisioningCluster?.kubernetesVersion;\n\n      if (this.provisioningCluster?.isRke2) {\n        const machineSelectorConfig = this.provisioningCluster?.spec?.rkeConfig?.machineSelectorConfig || {};\n        const agentConfig = (machineSelectorConfig[0] || {}).config;\n\n        cloudProvider = agentConfig?.['cloud-provider-name'];\n      } else if (this.provisioningCluster?.isRke1) {\n        const currentCluster = this.$store.getters['currentCluster'];\n\n        cloudProvider = currentCluster?.spec?.rancherKubernetesEngineConfig?.cloudProvider?.name;\n      }\n\n      return this.checkTypeIs('LoadBalancer') &&\n              cloudProvider === HARVESTER &&\n              isHarvesterSatisfiesVersion(version);\n    },\n\n    provisioningCluster() {\n      const out = this.$store.getters['management/all'](CAPI.RANCHER_CLUSTER).find((c) => c?.status?.clusterName === this.currentCluster.metadata.name);\n\n      return out;\n    },\n  },\n\n  watch: {\n    'value.metadata.namespace': 'updateMatchingPods',\n    'value.spec.selector':      'updateMatchingPods',\n    'value.spec.sessionAffinity'(val) {\n      if (val === 'ClientIP') {\n        this.value.spec.sessionAffinityConfig = { clientIP: { timeoutSeconds: null } };\n\n        // set it null and then set it with vue to make reactive.\n        this.$set(\n          this.value.spec.sessionAffinityConfig.clientIP,\n          'timeoutSeconds',\n          SESSION_STICKY_TIME_DEFAULT\n        );\n      } else if (\n        this.value?.spec?.sessionAffinityConfig?.clientIP?.timeoutSeconds\n      ) {\n        delete this.value.spec.sessionAffinityConfig.clientIP.timeoutSeconds;\n      }\n    },\n    'value.spec.type'(val) {\n      if (val === 'ExternalName') {\n        this.fvFormRuleSets = [{\n          path:           'spec.externalName',\n          rules:          ['required', 'externalName'],\n          translationKey: 'servicesPage.externalName.input.label'\n        }];\n      } else {\n        this.fvFormRuleSets = [{ path: 'spec.ports', rules: ['servicePort'] }];\n      }\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  mounted() {\n    const initialType = this.serviceType;\n\n    this.$set(this, 'serviceType', initialType);\n  },\n\n  methods: {\n    updateMatchingPods: throttle(function() {\n      const { value: { spec: { selector = { } } } } = this;\n      const allInNamespace = this.allPods.filter((pod) => pod.metadata.namespace === this.value?.metadata?.namespace);\n\n      if (isEmpty(selector)) {\n        this.matchingPods = {\n          matched: 0,\n          total:   allInNamespace.length,\n          none:    true,\n          sample:  null,\n        };\n      } else {\n        const match = matching(allInNamespace, selector);\n\n        this.matchingPods = {\n          matched: match.length,\n          total:   allInNamespace.length,\n          none:    match.length === 0,\n          sample:  match[0] ? match[0].nameDisplay : null,\n        };\n      }\n    }, 250, { leading: true }),\n\n    async loadPods() {\n      try {\n        const inStore = this.$store.getters['currentStore'](POD);\n\n        const hash = {\n          provClusters:     this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER }),\n          pods:             this.$store.dispatch(`${ inStore }/findAll`, { type: POD }),\n          harvesterConfigs: this.$store.dispatch(`management/findAll`, { type: HCI.HARVESTER_CONFIG }),\n        };\n\n        const res = await allHash(hash);\n\n        this.allPods = res.pods;\n        this.updateMatchingPods();\n      } catch (e) { }\n    },\n\n    checkTypeIs(typeIn) {\n      const { serviceType } = this;\n\n      if (serviceType === typeIn) {\n        return true;\n      }\n\n      return false;\n    },\n\n    updateServicePorts(servicePorts) {\n      this.$set(this.value.spec, 'ports', servicePorts);\n    },\n\n    targetPortsStrOrInt(targetPorts = []) {\n      const neu = clone(targetPorts);\n\n      neu.forEach((port, idx) => {\n        const targetPort = new Port(port?.targetPort);\n\n        if (targetPort.isInt) {\n          port.targetPort = targetPort.int;\n        }\n      });\n\n      return neu;\n    },\n\n    willSave() {\n      const { ports = [] } = this.value.spec;\n\n      if (ports && ports.length > 0) {\n        this.value.spec.ports = this.targetPortsStrOrInt(this.value.spec.ports);\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :selected-subtype=\"serviceType\"\n    :subtypes=\"defaultServiceTypes\"\n    :validation-passed=\"fvFormIsValid\"\n    :errors=\"fvUnreportedValidationErrors\"\n    :apply-hooks=\"applyHooks\"\n    :description=\"t('servicesPage.serviceListDescription')\"\n    @error=\"(e) => (errors = e)\"\n    @finish=\"save\"\n    @cancel=\"done\"\n    @select-type=\"(st) => (serviceType = st)\"\n  >\n    <NameNsDescription\n      v-if=\"!isView\"\n      :value=\"value\"\n      :mode=\"mode\"\n      :rules=\"{ name: fvGetAndReportPathRules('metadata.name'), namespace: [], description: [] }\"\n    />\n\n    <Tabbed :side-tabs=\"true\">\n      <Tab\n        v-if=\"checkTypeIs('ExternalName')\"\n        name=\"define-external-name\"\n        :label=\"t('servicesPage.externalName.define')\"\n        :tooltip=\"t('servicesPage.externalName.helpText')\"\n        :error=\"tabErrors.externalName\"\n      >\n        <div class=\"row mt-10\">\n          <div class=\"col span-6\">\n            <span v-if=\"isView\">{{ value.spec.externalName }}</span>\n            <LabeledInput\n              v-else\n              ref=\"external-name\"\n              v-model.number=\"value.spec.externalName\"\n              :mode=\"mode\"\n              :label=\"t('servicesPage.externalName.input.label')\"\n              :placeholder=\"t('servicesPage.externalName.placeholder')\"\n              type=\"text\"\n              :rules=\"fvGetAndReportPathRules('spec.externalName')\"\n            />\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        v-else\n        name=\"define-service-ports\"\n        :label=\"t('servicesPage.ips.define')\"\n        :weight=\"10\"\n        :error=\"tabErrors.servicePorts\"\n      >\n        <ServicePorts\n          v-model=\"value.spec.ports\"\n          class=\"col span-12\"\n          :mode=\"mode\"\n          :spec-type=\"serviceType\"\n          :rules=\"fvGetAndReportPathRules('spec.ports')\"\n          @input=\"updateServicePorts\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"!checkTypeIs('ExternalName')\"\n        name=\"selectors\"\n        :label=\"t('servicesPage.selectors.label')\"\n      >\n        <p>{{ t('servicesPage.selectors.matchingPods.description') }}</p>\n        <div class=\"row\">\n          <div class=\"col span-12\">\n            <Banner :color=\"(matchingPods.none ? 'warning' : 'success')\">\n              <span v-clean-html=\"t('servicesPage.selectors.matchingPods.matchesSome', matchingPods)\" />\n            </Banner>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col span-12\">\n            <KeyValue\n              key=\"selectors\"\n              v-model=\"value.spec.selector\"\n              :mode=\"mode\"\n              :initial-empty-row=\"true\"\n              :protip=\"false\"\n              @input=\"(e) => $set(value.spec, 'selector', e)\"\n            />\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        name=\"ips\"\n        :label=\"t('servicesPage.ips.label')\"\n        :tooltip=\"t('servicesPage.ips.external.protip')\"\n      >\n        <div\n          v-if=\"hasClusterIp\"\n          class=\"row mb-20\"\n        >\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.spec.clusterIP\"\n              :mode=\"mode\"\n              :label=\"t('servicesPage.ips.input.label')\"\n              :placeholder=\"t('servicesPage.ips.input.placeholder')\"\n              :tooltip-key=\"\n                hasClusterIp ? 'servicesPage.ips.clusterIpHelpText' : null\n              \"\n              @input=\"(e) => $set(value.spec, 'clusterIP', e)\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"checkTypeIs('LoadBalancer')\"\n          class=\"row mb-20\"\n        >\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.spec.loadBalancerIP\"\n              :mode=\"mode\"\n              :label=\"t('servicesPage.ips.loadBalancerIp.label')\"\n              :placeholder=\"t('servicesPage.ips.loadBalancerIp.placeholder')\"\n              :tooltip-key=\"\n                hasClusterIp ? 'servicesPage.ips.loadBalancerIp.helpText' : null\n              \"\n              @input=\"(e) => $set(value.spec, 'loadBalancerIP', e)\"\n            />\n          </div>\n        </div>\n        <div class=\"row mb-20\">\n          <div class=\"col span-7\">\n            <ArrayList\n              key=\"clusterExternalIpAddresses\"\n              v-model=\"value.spec.externalIPs\"\n              :title=\"hasClusterIp ? t('servicesPage.ips.external.label') : ''\"\n              :value-placeholder=\"t('servicesPage.ips.external.placeholder')\"\n              :mode=\"mode\"\n              :protip=\"false\"\n              @input=\"(e) => $set(value.spec, 'externalIPs', e)\"\n            />\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        v-if=\"showHarvesterAddOnConfig\"\n        name=\"add-on-config\"\n        :label=\"t('servicesPage.harvester.title')\"\n        :weight=\"-1\"\n      >\n        <HarvesterServiceAddOnConfig\n          :mode=\"mode\"\n          :value=\"value\"\n          :register-before-hook=\"registerBeforeHook\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"!checkTypeIs('ExternalName') && !checkTypeIs('Headless')\"\n        name=\"session-affinity\"\n        :label=\"t('servicesPage.affinity.label')\"\n        :tooltip=\"t('servicesPage.affinity.helpText')\"\n      >\n        <div class=\"row session-affinity\">\n          <div class=\"col span-6\">\n            <RadioGroup\n              v-model=\"value.spec.sessionAffinity\"\n              name=\"sessionAffinity\"\n              class=\"enforcement-action\"\n              :options=\"sessionAffinityActionOptions\"\n              :labels=\"sessionAffinityActionLabels\"\n              :mode=\"mode\"\n            />\n          </div>\n          <div\n            v-if=\"showAffinityTimeout\"\n            class=\"col span-6\"\n          >\n            <UnitInput\n              v-model=\"value.spec.sessionAffinityConfig.clientIP.timeoutSeconds\"\n              :suffix=\"\n                t('suffix.seconds', {\n                  count:\n                    value.spec.sessionAffinityConfig.clientIP.timeoutSeconds,\n                })\n              \"\n              :label=\"t('servicesPage.affinity.timeout.label')\"\n              :placeholder=\"t('servicesPage.affinity.timeout.placeholder')\"\n              @input=\"\n                (e) =>\n                  $set(\n                    value.spec.sessionAffinityConfig.clientIP,\n                    'timeoutSeconds',\n                    e\n                  )\n              \"\n            />\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        v-if=\"!isView\"\n        name=\"labels-and-annotations\"\n        :label=\"t('servicesPage.labelsAnnotations.label', {}, true)\"\n        :weight=\"-2\"\n      >\n        <Labels\n          :default-container-class=\"'labels-and-annotations-container'\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :display-side-by-side=\"false\"\n        />\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n\n<style lang=\"scss\">\n</style>\n"]}]}