{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/promptRemove/pod.vue?vue&type=style&index=0&id=7d148424&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/promptRemove/pod.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5hY3Rpb25zIHsKICB0ZXh0LWFsaWduOiByaWdodDsKfQoKLm1hY2hpbmUtbmFtZSB7CiAgZm9udC13ZWlnaHQ6IDYwMDsKfQo="},{"version":3,"sources":["pod.vue"],"names":[],"mappings":";AAgJA;AACA;AACA;;AAEA;AACA;AACA","file":"pod.vue","sourceRoot":"node_modules/@rancher/shell/promptRemove","sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport { mapGetters, mapState } from 'vuex';\nimport { isEmpty } from 'lodash';\n\nexport default {\n  name: 'PromptRemovePodDialog',\n\n  components: {\n    Banner,\n    Checkbox\n  },\n\n  props: {\n    value: {\n      type:    Array,\n      default: () => {\n        return [];\n      }\n    },\n\n    names: {\n      type:    Array,\n      default: () => {\n        return [];\n      }\n    },\n\n    type: {\n      type:     String,\n      required: true\n    }\n  },\n\n  data() {\n    return {\n      errors:      [],\n      forceDelete: false\n    };\n  },\n\n  computed: {\n    ...mapState('action-menu', ['toRemove']),\n    ...mapGetters({ t: 'i18n/t' }),\n\n    plusMore() {\n      const count = this.names.length - this.names.length;\n\n      return this.t('promptRemove.andOthers', { count });\n    },\n\n    podNames() {\n      return this.names.reduce((res, name, i) => {\n        if (i >= 5) {\n          return res;\n        }\n        res += `<b>${ name }</b>`;\n        if (i === this.names.length - 1) {\n          res += this.plusMore;\n        } else {\n          res += i === this.toRemove.length - 2 ? ' and ' : ', ';\n        }\n\n        return res;\n      }, '');\n    },\n  },\n\n  methods: {\n    async remove(confirm) {\n      const parentComponent = this.$parent.$parent.$parent;\n\n      let goTo;\n\n      if (parentComponent.doneLocation) {\n        // doneLocation will recompute to undefined when delete request completes\n        goTo = { ...parentComponent.doneLocation };\n      }\n\n      try {\n        await Promise.all(this.value.map((resource) => this.removePod(resource)));\n        if ( goTo && !isEmpty(goTo) ) {\n          parentComponent.currentRouter.push(goTo);\n        }\n        parentComponent.close();\n      } catch (err) {\n        parentComponent.error = err;\n        confirm(false);\n      }\n    },\n\n    removePod(pod) {\n      const opt = this.forceDelete ? {\n        data: {\n          gracePeriod: 0,\n          force:       true\n        }\n      } : undefined;\n\n      return pod.remove(opt);\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"mt-10\">\n    <div class=\"mb-30\">\n      {{ t('promptRemove.attemptingToRemove', { type }) }} <span\n        v-clean-html=\"podNames\"\n        class=\"machine-name\"\n      />\n    </div>\n    <div class=\"mb-30\">\n      <Checkbox\n        v-model=\"forceDelete\"\n        :label=\"t('promptForceRemove.forceDelete')\"\n      />\n    </div>\n    <Banner\n      color=\"warning\"\n      label-key=\"promptForceRemove.podRemoveWarning\"\n    />\n    <Banner\n      v-for=\"(error, i) in errors\"\n      :key=\"i\"\n      class=\"\"\n      color=\"error\"\n      :label=\"error\"\n    />\n  </div>\n</template>\n\n<style lang='scss' scoped>\n  .actions {\n    text-align: right;\n  }\n\n  .machine-name {\n    font-weight: 600;\n  }\n</style>\n"]}]}