{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/nav/WindowManager/ContainerShell.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/nav/WindowManager/ContainerShell.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCB7IGFkZFBhcmFtcyB9IGZyb20gJ0BzaGVsbC91dGlscy91cmwnOwppbXBvcnQgeyBiYXNlNjREZWNvZGUsIGJhc2U2NEVuY29kZSB9IGZyb20gJ0BzaGVsbC91dGlscy9jcnlwdG8nOwppbXBvcnQgU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vU2VsZWN0JzsKaW1wb3J0IHsgTk9ERSB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwoKaW1wb3J0IFNvY2tldCwgewogIEVWRU5UX0NPTk5FQ1RFRCwKICBFVkVOVF9DT05ORUNUSU5HLAogIEVWRU5UX0RJU0NPTk5FQ1RFRCwKICBFVkVOVF9NRVNTQUdFLAogIC8vICBFVkVOVF9GUkFNRV9USU1FT1VULAogIEVWRU5UX0NPTk5FQ1RfRVJST1IsCn0gZnJvbSAnQHNoZWxsL3V0aWxzL3NvY2tldCc7CmltcG9ydCBXaW5kb3cgZnJvbSAnLi9XaW5kb3cnOwoKY29uc3QgY29tbWFuZHMgPSB7CiAgbGludXg6IFsKICAgICcvYmluL3NoJywKICAgICctYycsCiAgICAnVEVSTT14dGVybS0yNTZjb2xvcjsgZXhwb3J0IFRFUk07IFsgLXggL2Jpbi9iYXNoIF0gJiYgKFsgLXggL3Vzci9iaW4vc2NyaXB0IF0gJiYgL3Vzci9iaW4vc2NyaXB0IC1xIC1jICIvYmluL2Jhc2giIC9kZXYvbnVsbCB8fCBleGVjIC9iaW4vYmFzaCkgfHwgZXhlYyAvYmluL3NoJywKICBdLAogIHdpbmRvd3M6IFsnY21kJ10KfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFdpbmRvdywgU2VsZWN0IH0sCgogIHByb3BzOiB7CiAgICAvLyBUaGUgZGVmaW5pdGlvbiBvZiB0aGUgdGFiIGl0c2VsZgogICAgdGFiOiB7CiAgICAgIHR5cGU6ICAgICBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKCiAgICAvLyBJcyB0aGlzIHRhYiBjdXJyZW50bHkgZGlzcGxheWVkCiAgICBhY3RpdmU6IHsKICAgICAgdHlwZTogICAgIEJvb2xlYW4sCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKCiAgICAvLyBUaGUgaGVpZ2h0IG9mIHRoZSB3aW5kb3cKICAgIGhlaWdodDogewogICAgICB0eXBlOiAgICBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZCwKICAgIH0sCgogICAgLy8gVGhlIHdpZHRoIG9mIHRoZSB3aW5kb3cKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6ICAgIE51bWJlciwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkLAogICAgfSwKCiAgICAvLyBUaGUgcG9kIHRvIGNvbm5lY3QgdG8KICAgIHBvZDogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCgogICAgLy8gVGhlIGNvbnRhaW5lciBpbiB0aGUgcG9kIHRvIGluaXRpYWxseSBzaG93CiAgICBpbml0aWFsQ29udGFpbmVyOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCgogICAgLy8gUnVucyB0aGlzIGNvbW1hbmQgaW1tZWRpYXRlbHkgYWZ0ZXIgY29ubmVjdGluZwogICAgY29tbWFuZE9uRmlyc3RDb25uZWN0OiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogbnVsbAogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb250YWluZXI6ICAgICAgdGhpcy5pbml0aWFsQ29udGFpbmVyIHx8IHRoaXMucG9kPy5kZWZhdWx0Q29udGFpbmVyTmFtZSwKICAgICAgc29ja2V0OiAgICAgICAgIG51bGwsCiAgICAgIHRlcm1pbmFsOiAgICAgICBudWxsLAogICAgICBmaXRBZGRvbjogICAgICAgbnVsbCwKICAgICAgc2VhcmNoQWRkb246ICAgIG51bGwsCiAgICAgIHdlYmdsQWRkb246ICAgICBudWxsLAogICAgICBpc09wZW46ICAgICAgICAgZmFsc2UsCiAgICAgIGlzT3BlbmluZzogICAgICBmYWxzZSwKICAgICAgYmFja2xvZzogICAgICAgIFtdLAogICAgICBub2RlOiAgICAgICAgICAgbnVsbCwKICAgICAga2VlcEFsaXZlVGltZXI6IG51bGwsCiAgICAgIGVycm9yTXNnOiAgICAgICAnJywKICAgICAgYmFja3VwU2hlbGxzOiAgIFsnbGludXgnLCAnd2luZG93cyddLAogICAgICBvczogICAgICAgICAgICAgdW5kZWZpbmVkLAogICAgICByZXRyaWVzOiAgICAgICAgMAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgeHRlcm1Db25maWcoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYWxsb3dQcm9wb3NlZEFwaTogdHJ1ZSwKICAgICAgICBjdXJzb3JCbGluazogICAgICB0cnVlLAogICAgICAgIHVzZVN0eWxlOiAgICAgICAgIHRydWUsCiAgICAgICAgZm9udFNpemU6ICAgICAgICAgMTIsCiAgICAgIH07CiAgICB9LAoKICAgIGNvbnRhaW5lckNob2ljZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLnBvZD8uc3BlYz8uY29udGFpbmVycz8ubWFwKCh4KSA9PiB4Lm5hbWUpIHx8IFtdOwogICAgfSwKICB9LAoKICB3YXRjaDogewogICAgY29udGFpbmVyKCkgewogICAgICB0aGlzLmNvbm5lY3QoKTsKICAgIH0sCgogICAgaGVpZ2h0KCkgewogICAgICB0aGlzLmZpdCgpOwogICAgfSwKCiAgICB3aWR0aCgpIHsKICAgICAgdGhpcy5maXQoKTsKICAgIH0sCiAgfSwKCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy5rZWVwQWxpdmVUaW1lcik7CiAgICB0aGlzLmNsZWFudXAoKTsKICB9LAoKICBhc3luYyBtb3VudGVkKCkgewogICAgY29uc3Qgbm9kZUlkID0gdGhpcy5wb2Quc3BlYz8ubm9kZU5hbWU7CgogICAgdHJ5IHsKICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgY2x1c3Rlci9zY2hlbWFGb3JgXShOT0RFKTsKCiAgICAgIGlmIChzY2hlbWEpIHsKICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kJywgeyB0eXBlOiBOT0RFLCBpZDogbm9kZUlkIH0pOwogICAgICB9CiAgICB9IGNhdGNoIHt9CgogICAgYXdhaXQgdGhpcy5zZXR1cFRlcm1pbmFsKCk7CiAgICBhd2FpdCB0aGlzLmNvbm5lY3QoKTsKCiAgICBjbGVhckludGVydmFsKHRoaXMua2VlcEFsaXZlVGltZXIpOwogICAgdGhpcy5rZWVwQWxpdmVUaW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgdGhpcy5maXQoKTsKICAgIH0sIDYwICogMTAwMCk7CiAgfSwKCiAgbWV0aG9kczogewogICAgYXN5bmMgc2V0dXBUZXJtaW5hbCgpIHsKICAgICAgY29uc3QgZG9jU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKSk7CiAgICAgIGNvbnN0IHh0ZXJtID0gYXdhaXQgaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6ICJ4dGVybSIgKi8gJ3h0ZXJtJyk7CgogICAgICBjb25zdCBhZGRvbnMgPSBhd2FpdCBhbGxIYXNoKHsKICAgICAgICBmaXQ6ICAgICAgaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6ICJ4dGVybSIgKi8gJ3h0ZXJtLWFkZG9uLWZpdCcpLAogICAgICAgIHdlYmdsOiAgICBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogInh0ZXJtIiAqLyAneHRlcm0tYWRkb24td2ViZ2wnKSwKICAgICAgICB3ZWJsaW5rczogaW1wb3J0KC8qIHdlYnBhY2tDaHVua05hbWU6ICJ4dGVybSIgKi8gJ3h0ZXJtLWFkZG9uLXdlYi1saW5rcycpLAogICAgICAgIHNlYXJjaDogICBpbXBvcnQoLyogd2VicGFja0NodW5rTmFtZTogInh0ZXJtIiAqLyAneHRlcm0tYWRkb24tc2VhcmNoJyksCiAgICAgIH0pOwoKICAgICAgY29uc3QgdGVybWluYWwgPSBuZXcgeHRlcm0uVGVybWluYWwoewogICAgICAgIHRoZW1lOiB7CiAgICAgICAgICBiYWNrZ3JvdW5kOiAgICAgICAgICBkb2NTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCctLXRlcm1pbmFsLWJnJykudHJpbSgpLAogICAgICAgICAgZm9yZWdyb3VuZDogICAgICAgICAgZG9jU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnLS10ZXJtaW5hbC10ZXh0JykudHJpbSgpLAogICAgICAgICAgY3Vyc29yOiAgICAgICAgICAgICAgZG9jU3R5bGUuZ2V0UHJvcGVydHlWYWx1ZSgnLS10ZXJtaW5hbC1jdXJzb3InKS50cmltKCksCiAgICAgICAgICBzZWxlY3Rpb25CYWNrZ3JvdW5kOiBkb2NTdHlsZS5nZXRQcm9wZXJ0eVZhbHVlKCctLXRlcm1pbmFsLXNlbGVjdGlvbicpLnRyaW0oKSwKICAgICAgICB9LAogICAgICAgIC4uLnRoaXMueHRlcm1Db25maWcsCiAgICAgIH0pOwoKICAgICAgdGhpcy5maXRBZGRvbiA9IG5ldyBhZGRvbnMuZml0LkZpdEFkZG9uKCk7CiAgICAgIHRoaXMuc2VhcmNoQWRkb24gPSBuZXcgYWRkb25zLnNlYXJjaC5TZWFyY2hBZGRvbigpOwoKICAgICAgdHJ5IHsKICAgICAgICB0aGlzLndlYmdsQWRkb24gPSBuZXcgYWRkb25zLndlYmdsLldlYkdsQWRkb24oKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIC8vIFNvbWUgYnJvd3NlcnMgKFNhZmFyaSkgZG9uJ3Qgc3VwcG9ydCB0aGUgd2ViZ2wgcmVuZGVyZXIsIHNvIGRvbid0IHVzZSBpdC4KICAgICAgICB0aGlzLndlYmdsQWRkb24gPSBudWxsOwogICAgICB9CgogICAgICB0ZXJtaW5hbC5sb2FkQWRkb24odGhpcy5maXRBZGRvbik7CiAgICAgIHRlcm1pbmFsLmxvYWRBZGRvbih0aGlzLnNlYXJjaEFkZG9uKTsKICAgICAgdGVybWluYWwubG9hZEFkZG9uKG5ldyBhZGRvbnMud2VibGlua3MuV2ViTGlua3NBZGRvbigpKTsKICAgICAgdGVybWluYWwub3Blbih0aGlzLiRyZWZzLnh0ZXJtKTsKCiAgICAgIGlmICh0aGlzLndlYmdsQWRkb24pIHsKICAgICAgICB0ZXJtaW5hbC5sb2FkQWRkb24odGhpcy53ZWJnbEFkZG9uKTsKICAgICAgfQoKICAgICAgdGhpcy5maXQoKTsKICAgICAgdGhpcy5mbHVzaCgpOwoKICAgICAgdGVybWluYWwub25EYXRhKChpbnB1dCkgPT4gewogICAgICAgIGNvbnN0IG1zZyA9IGAwJHsgYmFzZTY0RW5jb2RlKGlucHV0KSB9YDsKCiAgICAgICAgdGhpcy53cml0ZShtc2cpOwogICAgICB9KTsKCiAgICAgIHRoaXMudGVybWluYWwgPSB0ZXJtaW5hbDsKICAgIH0sCgogICAgd3JpdGUobXNnKSB7CiAgICAgIGlmICh0aGlzLmlzT3BlbikgewogICAgICAgIHRoaXMuc29ja2V0LnNlbmQobXNnKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmJhY2tsb2cucHVzaChtc2cpOwogICAgICB9CiAgICB9LAoKICAgIGNsZWFyKCkgewogICAgICB0aGlzLnRlcm1pbmFsLmNsZWFyKCk7CiAgICB9LAoKICAgIGdldFNvY2tldFVybCgpIHsKICAgICAgaWYgKCF0aGlzLnBvZD8ubGlua3M/LnZpZXcpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLnBvZC5vcykgewogICAgICAgIHRoaXMub3MgPSB0aGlzLnBvZC5vczsKICAgICAgICB0aGlzLmJhY2t1cFNoZWxscyA9IHRoaXMuYmFja3VwU2hlbGxzLmZpbHRlcigoc2hlbGwpID0+IHNoZWxsICE9PSB0aGlzLnBvZC5vcyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5vcyA9IHRoaXMuYmFja3VwU2hlbGxzLnNoaWZ0KCk7CiAgICAgIH0KCiAgICAgIGNvbnN0IHVybCA9IGFkZFBhcmFtcygKICAgICAgICBgJHsgdGhpcy5wb2QubGlua3Mudmlldy5yZXBsYWNlKC9eaHR0cC8sICd3cycpIH0vZXhlY2AsCiAgICAgICAgewogICAgICAgICAgY29udGFpbmVyOiB0aGlzLmNvbnRhaW5lciwKICAgICAgICAgIHN0ZG91dDogICAgMSwKICAgICAgICAgIHN0ZGluOiAgICAgMSwKICAgICAgICAgIHN0ZGVycjogICAgMSwKICAgICAgICAgIHR0eTogICAgICAgMSwKICAgICAgICAgIGNvbW1hbmQ6ICAgY29tbWFuZHNbdGhpcy5vc10sCiAgICAgICAgfQogICAgICApOwoKICAgICAgcmV0dXJuIHVybDsKICAgIH0sCgogICAgYXN5bmMgY29ubmVjdCgpIHsKICAgICAgaWYgKHRoaXMuc29ja2V0KSB7CiAgICAgICAgYXdhaXQgdGhpcy5zb2NrZXQuZGlzY29ubmVjdCgpOwogICAgICAgIHRoaXMuc29ja2V0ID0gbnVsbDsKICAgICAgICB0aGlzLnRlcm1pbmFsLnJlc2V0KCk7CiAgICAgIH0KCiAgICAgIGNvbnN0IHVybCA9IHRoaXMuZ2V0U29ja2V0VXJsKCk7CgogICAgICBpZiAoIXVybCkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgU29ja2V0KHVybCwgZmFsc2UsIDAsICdiYXNlNjQuY2hhbm5lbC5rOHMuaW8nKTsKCiAgICAgIHRoaXMuc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoRVZFTlRfQ09OTkVDVElORywgKGUpID0+IHsKICAgICAgICB0aGlzLmlzT3BlbiA9IGZhbHNlOwogICAgICAgIHRoaXMuaXNPcGVuaW5nID0gdHJ1ZTsKICAgICAgICB0aGlzLmVycm9yTXNnID0gJyc7CiAgICAgIH0pOwoKICAgICAgdGhpcy5zb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcihFVkVOVF9DT05ORUNUX0VSUk9SLCAoZSkgPT4gewogICAgICAgIHRoaXMuaXNPcGVuID0gZmFsc2U7CiAgICAgICAgdGhpcy5pc09wZW5pbmcgPSBmYWxzZTsKICAgICAgICBjb25zb2xlLmVycm9yKCdDb25uZWN0IEVycm9yJywgZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgICB9KTsKCiAgICAgIHRoaXMuc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoRVZFTlRfQ09OTkVDVEVELCAoZSkgPT4gewogICAgICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTsKICAgICAgICB0aGlzLmlzT3BlbmluZyA9IGZhbHNlOwogICAgICAgIHRoaXMuZml0KCk7CiAgICAgICAgdGhpcy5mbHVzaCgpOwoKICAgICAgICBpZiAodGhpcy5jb21tYW5kT25GaXJzdENvbm5lY3QpIHsKICAgICAgICAgIHRoaXMudGVybWluYWwucGFzdGUoYCR7IHRoaXMuY29tbWFuZE9uRmlyc3RDb25uZWN0IH1gKTsKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgdGhpcy5zb2NrZXQuYWRkRXZlbnRMaXN0ZW5lcihFVkVOVF9ESVNDT05ORUNURUQsIChlKSA9PiB7CiAgICAgICAgdGhpcy5pc09wZW4gPSBmYWxzZTsKICAgICAgICB0aGlzLmlzT3BlbmluZyA9IGZhbHNlOwoKICAgICAgICAvLyBJZiB3ZSBoYWQgYW4gZXJyb3IgbWVzc2FnZSwgdHJ5IGNvbm5lY3Rpbmcgd2l0aCB0aGUgbmV4dCBjb21tYW5kCiAgICAgICAgaWYgKHRoaXMuZXJyb3JNc2cpIHsKICAgICAgICAgIHRoaXMudGVybWluYWwud3JpdGUodGhpcy5lcnJvck1zZyk7CiAgICAgICAgICBpZiAodGhpcy5iYWNrdXBTaGVsbHMubGVuZ3RoICYmIHRoaXMucmV0cmllcyA8IDIpIHsKICAgICAgICAgICAgdGhpcy5yZXRyaWVzKys7CiAgICAgICAgICAgIC8vIHdlJ3JlIG5vdCByZWFsbHkgY291bnRpbmcgb24gdGhpcyBiZWluZyBhIHJlYWN0aXZlIGNoYW5nZSBzbyB0aGVyZSdzIG5vIG5lZWQgdG8gZmlyZSB0aGUgd2hvbGUgYWN0aW9uCiAgICAgICAgICAgIHRoaXMucG9kLm9zID0gdW5kZWZpbmVkOwogICAgICAgICAgICAvLyB0aGUgcG9kIHdpbGwgc3RpbGwgcmV0dXJuIGFuIG9zIGlmIG9uZSdzIGJlZW4gZGVmaW5lZCBpbiB0aGUgbm9kZSBzbyB3ZSdsbCBza2lwIHRoZSBiYWNrdXBzIGlmIHRoYXQncyB0aGUgY2FzZSBhbmQgcmVseSBvbiByZXRyeSBjb3VudCB0byBicmVhayB0aGUgcmV0cnkgbG9vcAogICAgICAgICAgICBpZiAoIXRoaXMucG9kLm9zKSB7CiAgICAgICAgICAgICAgdGhpcy5vcyA9IHVuZGVmaW5lZDsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmNvbm5lY3QoKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIE91dHB1dCBhbiBtZXNzYWdlIHRvIGxldCBoZSB1c2VyIGtub3cgbm9uZSBvZiB0aGUgc2hlbGwgY29tbWFuZHMgd29ya2VkCiAgICAgICAgICAgIHRoaXMudGVybWluYWwud3JpdGUodGhpcy50KCd3bS5jb250YWluZXJTaGVsbC5mYWlsZWQnKSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKCiAgICAgIHRoaXMuc29ja2V0LmFkZEV2ZW50TGlzdGVuZXIoRVZFTlRfTUVTU0FHRSwgKGUpID0+IHsKICAgICAgICBjb25zdCB0eXBlID0gZS5kZXRhaWwuZGF0YS5zdWJzdHIoMCwgMSk7CiAgICAgICAgY29uc3QgbXNnID0gYmFzZTY0RGVjb2RlKGUuZGV0YWlsLmRhdGEuc3Vic3RyKDEpKTsKCiAgICAgICAgdGhpcy5lcnJvck1zZyA9ICcnOwoKICAgICAgICBpZiAoYCR7IHR5cGUgfWAgPT09ICcxJykgewogICAgICAgICAgaWYgKG1zZykgewogICAgICAgICAgICAvLyB3ZSdyZSBub3QgcmVhbGx5IGNvdW50aW5nIG9uIHRoaXMgYmVpbmcgYSByZWFjdGl2ZSBjaGFuZ2Ugc28gdGhlcmUncyBubyBuZWVkIHRvIGZpcmUgdGhlIHdob2xlIGFjdGlvbgogICAgICAgICAgICB0aGlzLnBvZC5vcyA9IHRoaXMub3M7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnRlcm1pbmFsLndyaXRlKG1zZyk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IobXNnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCgogICAgICAgICAgaWYgKGAkeyB0eXBlIH1gID09PSAnMycpIHsKICAgICAgICAgICAgdGhpcy5lcnJvck1zZyA9IG1zZzsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdCgpOwogICAgICB0aGlzLnRlcm1pbmFsLmZvY3VzKCk7CiAgICB9LAoKICAgIGZsdXNoKCkgewogICAgICBjb25zdCBiYWNrbG9nID0gdGhpcy5iYWNrbG9nLnNsaWNlKCk7CgogICAgICB0aGlzLmJhY2tsb2cgPSBbXTsKCiAgICAgIGZvciAoY29uc3QgZGF0YSBvZiBiYWNrbG9nKSB7CiAgICAgICAgdGhpcy5zb2NrZXQuc2VuZChkYXRhKTsKICAgICAgfQogICAgfSwKCiAgICBmaXQoYXJnKSB7CiAgICAgIGlmICghdGhpcy5maXRBZGRvbikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdGhpcy5maXRBZGRvbi5maXQoKTsKCiAgICAgIGNvbnN0IHsgcm93cywgY29scyB9ID0gdGhpcy5maXRBZGRvbi5wcm9wb3NlRGltZW5zaW9ucygpIHx8IHt9OwoKICAgICAgaWYgKCF0aGlzLmlzT3BlbikgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgY29uc3QgbWVzc2FnZSA9IGA0JHsgYmFzZTY0RW5jb2RlKAogICAgICAgIEpTT04uc3RyaW5naWZ5KHsKICAgICAgICAgIFdpZHRoOiAgTWF0aC5mbG9vcihjb2xzKSwKICAgICAgICAgIEhlaWdodDogTWF0aC5mbG9vcihyb3dzKSwKICAgICAgICB9KQogICAgICApIH1gOwoKICAgICAgdGhpcy5zb2NrZXQuc2VuZChtZXNzYWdlKTsKICAgIH0sCgogICAgY2xlYW51cCgpIHsKICAgICAgaWYgKHRoaXMuc29ja2V0KSB7CiAgICAgICAgdGhpcy5zb2NrZXQuZGlzY29ubmVjdCgpOwogICAgICAgIHRoaXMuc29ja2V0ID0gbnVsbDsKICAgICAgfQoKICAgICAgaWYgKHRoaXMudGVybWluYWwpIHsKICAgICAgICB0aGlzLnRlcm1pbmFsLmRpc3Bvc2UoKTsKICAgICAgICB0aGlzLnRlcm1pbmFsID0gbnVsbDsKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["ContainerShell.vue"],"names":[],"mappingsfile":"ContainerShell.vue","sourceRoot":"node_modules/@rancher/shell/components/nav/WindowManager","sourcesContent":["<script>\nimport { allHash } from '@shell/utils/promise';\nimport { addParams } from '@shell/utils/url';\nimport { base64Decode, base64Encode } from '@shell/utils/crypto';\nimport Select from '@shell/components/form/Select';\nimport { NODE } from '@shell/config/types';\n\nimport Socket, {\n  EVENT_CONNECTED,\n  EVENT_CONNECTING,\n  EVENT_DISCONNECTED,\n  EVENT_MESSAGE,\n  //  EVENT_FRAME_TIMEOUT,\n  EVENT_CONNECT_ERROR,\n} from '@shell/utils/socket';\nimport Window from './Window';\n\nconst commands = {\n  linux: [\n    '/bin/sh',\n    '-c',\n    'TERM=xterm-256color; export TERM; [ -x /bin/bash ] && ([ -x /usr/bin/script ] && /usr/bin/script -q -c \"/bin/bash\" /dev/null || exec /bin/bash) || exec /bin/sh',\n  ],\n  windows: ['cmd']\n};\n\nexport default {\n  components: { Window, Select },\n\n  props: {\n    // The definition of the tab itself\n    tab: {\n      type:     Object,\n      required: true,\n    },\n\n    // Is this tab currently displayed\n    active: {\n      type:     Boolean,\n      required: true,\n    },\n\n    // The height of the window\n    height: {\n      type:    Number,\n      default: undefined,\n    },\n\n    // The width of the window\n    width: {\n      type:    Number,\n      default: undefined,\n    },\n\n    // The pod to connect to\n    pod: {\n      type:     Object,\n      required: true,\n    },\n\n    // The container in the pod to initially show\n    initialContainer: {\n      type:    String,\n      default: null,\n    },\n\n    // Runs this command immediately after connecting\n    commandOnFirstConnect: {\n      type:    String,\n      default: null\n    }\n  },\n\n  data() {\n    return {\n      container:      this.initialContainer || this.pod?.defaultContainerName,\n      socket:         null,\n      terminal:       null,\n      fitAddon:       null,\n      searchAddon:    null,\n      webglAddon:     null,\n      isOpen:         false,\n      isOpening:      false,\n      backlog:        [],\n      node:           null,\n      keepAliveTimer: null,\n      errorMsg:       '',\n      backupShells:   ['linux', 'windows'],\n      os:             undefined,\n      retries:        0\n    };\n  },\n\n  computed: {\n    xtermConfig() {\n      return {\n        allowProposedApi: true,\n        cursorBlink:      true,\n        useStyle:         true,\n        fontSize:         12,\n      };\n    },\n\n    containerChoices() {\n      return this.pod?.spec?.containers?.map((x) => x.name) || [];\n    },\n  },\n\n  watch: {\n    container() {\n      this.connect();\n    },\n\n    height() {\n      this.fit();\n    },\n\n    width() {\n      this.fit();\n    },\n  },\n\n  beforeDestroy() {\n    clearInterval(this.keepAliveTimer);\n    this.cleanup();\n  },\n\n  async mounted() {\n    const nodeId = this.pod.spec?.nodeName;\n\n    try {\n      const schema = this.$store.getters[`cluster/schemaFor`](NODE);\n\n      if (schema) {\n        await this.$store.dispatch('cluster/find', { type: NODE, id: nodeId });\n      }\n    } catch {}\n\n    await this.setupTerminal();\n    await this.connect();\n\n    clearInterval(this.keepAliveTimer);\n    this.keepAliveTimer = setInterval(() => {\n      this.fit();\n    }, 60 * 1000);\n  },\n\n  methods: {\n    async setupTerminal() {\n      const docStyle = getComputedStyle(document.querySelector('body'));\n      const xterm = await import(/* webpackChunkName: \"xterm\" */ 'xterm');\n\n      const addons = await allHash({\n        fit:      import(/* webpackChunkName: \"xterm\" */ 'xterm-addon-fit'),\n        webgl:    import(/* webpackChunkName: \"xterm\" */ 'xterm-addon-webgl'),\n        weblinks: import(/* webpackChunkName: \"xterm\" */ 'xterm-addon-web-links'),\n        search:   import(/* webpackChunkName: \"xterm\" */ 'xterm-addon-search'),\n      });\n\n      const terminal = new xterm.Terminal({\n        theme: {\n          background:          docStyle.getPropertyValue('--terminal-bg').trim(),\n          foreground:          docStyle.getPropertyValue('--terminal-text').trim(),\n          cursor:              docStyle.getPropertyValue('--terminal-cursor').trim(),\n          selectionBackground: docStyle.getPropertyValue('--terminal-selection').trim(),\n        },\n        ...this.xtermConfig,\n      });\n\n      this.fitAddon = new addons.fit.FitAddon();\n      this.searchAddon = new addons.search.SearchAddon();\n\n      try {\n        this.webglAddon = new addons.webgl.WebGlAddon();\n      } catch (e) {\n        // Some browsers (Safari) don't support the webgl renderer, so don't use it.\n        this.webglAddon = null;\n      }\n\n      terminal.loadAddon(this.fitAddon);\n      terminal.loadAddon(this.searchAddon);\n      terminal.loadAddon(new addons.weblinks.WebLinksAddon());\n      terminal.open(this.$refs.xterm);\n\n      if (this.webglAddon) {\n        terminal.loadAddon(this.webglAddon);\n      }\n\n      this.fit();\n      this.flush();\n\n      terminal.onData((input) => {\n        const msg = `0${ base64Encode(input) }`;\n\n        this.write(msg);\n      });\n\n      this.terminal = terminal;\n    },\n\n    write(msg) {\n      if (this.isOpen) {\n        this.socket.send(msg);\n      } else {\n        this.backlog.push(msg);\n      }\n    },\n\n    clear() {\n      this.terminal.clear();\n    },\n\n    getSocketUrl() {\n      if (!this.pod?.links?.view) {\n        return;\n      }\n\n      if (this.pod.os) {\n        this.os = this.pod.os;\n        this.backupShells = this.backupShells.filter((shell) => shell !== this.pod.os);\n      } else {\n        this.os = this.backupShells.shift();\n      }\n\n      const url = addParams(\n        `${ this.pod.links.view.replace(/^http/, 'ws') }/exec`,\n        {\n          container: this.container,\n          stdout:    1,\n          stdin:     1,\n          stderr:    1,\n          tty:       1,\n          command:   commands[this.os],\n        }\n      );\n\n      return url;\n    },\n\n    async connect() {\n      if (this.socket) {\n        await this.socket.disconnect();\n        this.socket = null;\n        this.terminal.reset();\n      }\n\n      const url = this.getSocketUrl();\n\n      if (!url) {\n        return;\n      }\n\n      this.socket = new Socket(url, false, 0, 'base64.channel.k8s.io');\n\n      this.socket.addEventListener(EVENT_CONNECTING, (e) => {\n        this.isOpen = false;\n        this.isOpening = true;\n        this.errorMsg = '';\n      });\n\n      this.socket.addEventListener(EVENT_CONNECT_ERROR, (e) => {\n        this.isOpen = false;\n        this.isOpening = false;\n        console.error('Connect Error', e); // eslint-disable-line no-console\n      });\n\n      this.socket.addEventListener(EVENT_CONNECTED, (e) => {\n        this.isOpen = true;\n        this.isOpening = false;\n        this.fit();\n        this.flush();\n\n        if (this.commandOnFirstConnect) {\n          this.terminal.paste(`${ this.commandOnFirstConnect }`);\n        }\n      });\n\n      this.socket.addEventListener(EVENT_DISCONNECTED, (e) => {\n        this.isOpen = false;\n        this.isOpening = false;\n\n        // If we had an error message, try connecting with the next command\n        if (this.errorMsg) {\n          this.terminal.write(this.errorMsg);\n          if (this.backupShells.length && this.retries < 2) {\n            this.retries++;\n            // we're not really counting on this being a reactive change so there's no need to fire the whole action\n            this.pod.os = undefined;\n            // the pod will still return an os if one's been defined in the node so we'll skip the backups if that's the case and rely on retry count to break the retry loop\n            if (!this.pod.os) {\n              this.os = undefined;\n            }\n            this.connect();\n          } else {\n            // Output an message to let he user know none of the shell commands worked\n            this.terminal.write(this.t('wm.containerShell.failed'));\n          }\n        }\n      });\n\n      this.socket.addEventListener(EVENT_MESSAGE, (e) => {\n        const type = e.detail.data.substr(0, 1);\n        const msg = base64Decode(e.detail.data.substr(1));\n\n        this.errorMsg = '';\n\n        if (`${ type }` === '1') {\n          if (msg) {\n            // we're not really counting on this being a reactive change so there's no need to fire the whole action\n            this.pod.os = this.os;\n          }\n          this.terminal.write(msg);\n        } else {\n          console.error(msg); // eslint-disable-line no-console\n\n          if (`${ type }` === '3') {\n            this.errorMsg = msg;\n          }\n        }\n      });\n\n      this.socket.connect();\n      this.terminal.focus();\n    },\n\n    flush() {\n      const backlog = this.backlog.slice();\n\n      this.backlog = [];\n\n      for (const data of backlog) {\n        this.socket.send(data);\n      }\n    },\n\n    fit(arg) {\n      if (!this.fitAddon) {\n        return;\n      }\n\n      this.fitAddon.fit();\n\n      const { rows, cols } = this.fitAddon.proposeDimensions() || {};\n\n      if (!this.isOpen) {\n        return;\n      }\n\n      const message = `4${ base64Encode(\n        JSON.stringify({\n          Width:  Math.floor(cols),\n          Height: Math.floor(rows),\n        })\n      ) }`;\n\n      this.socket.send(message);\n    },\n\n    cleanup() {\n      if (this.socket) {\n        this.socket.disconnect();\n        this.socket = null;\n      }\n\n      if (this.terminal) {\n        this.terminal.dispose();\n        this.terminal = null;\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <Window\n    :active=\"active\"\n    :before-close=\"cleanup\"\n  >\n    <template #title>\n      <Select\n        v-if=\"containerChoices.length > 0\"\n        v-model=\"container\"\n        :disabled=\"containerChoices.length === 1\"\n        class=\"containerPicker auto-width pull-left\"\n        :options=\"containerChoices\"\n        :clearable=\"false\"\n        placement=\"top\"\n      >\n        <template #selected-option=\"option\">\n          <t\n            v-if=\"option\"\n            k=\"wm.containerShell.containerName\"\n            :label=\"option.label\"\n          />\n        </template>\n      </Select>\n      <div class=\"pull-left ml-5\">\n        <button\n          class=\"btn btn-sm bg-primary\"\n          @click=\"clear\"\n        >\n          <t k=\"wm.containerShell.clear\" />\n        </button>\n      </div>\n      <div class=\"status pull-left\">\n        <t\n          v-if=\"isOpen\"\n          k=\"wm.connection.connected\"\n          class=\"text-success\"\n        />\n        <t\n          v-else-if=\"isOpening\"\n          k=\"wm.connection.connecting\"\n          class=\"text-warning\"\n          :raw=\"true\"\n        />\n        <t\n          v-else\n          k=\"wm.connection.disconnected\"\n          class=\"text-error\"\n        />\n      </div>\n    </template>\n    <template #body>\n      <div\n        class=\"shell-container\"\n        :class=\"{ open: isOpen, closed: !isOpen }\"\n      >\n        <div\n          ref=\"xterm\"\n          class=\"shell-body\"\n        />\n        <resize-observer @notify=\"fit\" />\n      </div>\n    </template>\n  </Window>\n</template>\n\n<style lang=\"scss\">\n  .xterm-char-measure-element {\n    position: static;\n  }\n</style>\n\n<style lang=\"scss\" scoped>\n.text-warning {\n  animation: flasher 2.5s linear infinite;\n}\n\n@keyframes flasher {\n  50% {\n    opacity: 0;\n  }\n}\n\n.shell-container {\n  height: 100%;\n  overflow: hidden;\n  .resize-observer {\n    display: none;\n  }\n}\n\n.shell-body {\n  padding: calc(2 * var(--outline-width));\n  height: 100%;\n\n  & > .terminal.focus {\n    outline: var(--outline-width) solid var(--outline);\n  }\n}\n\n.containerPicker {\n  ::v-deep &.unlabeled-select {\n    display: inline-block;\n    min-width: 200px;\n    height: 30px;\n    min-height: 30px;\n    width: initial;\n  }\n}\n\n.status {\n  align-items: center;\n  display: flex;\n  min-width: 80px;\n  height: 30px;\n  margin-left: 10px;\n}\n</style>\n"]}]}