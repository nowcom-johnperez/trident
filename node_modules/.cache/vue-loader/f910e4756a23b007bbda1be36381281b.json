{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/legacy/pages/_page.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/legacy/pages/_page.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBFbWJlclBhZ2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvRW1iZXJQYWdlJzsKCmNvbnN0IFBBR0VTID0gewogIG1vbml0b3Jpbmc6ICdtb25pdG9yaW5nL2NsdXN0ZXItc2V0dGluZycsCiAgY2lzOiAgICAgICAgJ2Npcy9zY2FuJywKICBpc3RpbzogICAgICAnaXN0aW8vY2x1c3Rlci1zZXR0aW5nJywKICBzbmFwc2hvdHM6ICAnYmFja3VwcycsCn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogeyBFbWJlclBhZ2UgfSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IGNsdXN0ZXIgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50Q2x1c3RlciddOwogICAgY29uc3QgcGFnZSA9IHRoaXMuJHJvdXRlLnBhcmFtcy5wYWdlOwogICAgY29uc3QgcCA9IFBBR0VTW3BhZ2VdIHx8IHBhZ2U7CgogICAgcmV0dXJuIHsgc3JjOiBgL2svJHsgY2x1c3Rlci5pZCB9LyR7IHAgfWAgfTsKICB9Cn07Cg=="},{"version":3,"sources":["_page.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"_page.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/explorer/tools/pages","sourcesContent":["<script>\nimport EmberPage from '@shell/components/EmberPage';\n\nconst PAGES = {\n  monitoring: 'monitoring/cluster-setting',\n  cis:        'cis/scan',\n  istio:      'istio/cluster-setting',\n  snapshots:  'backups',\n};\n\nexport default {\n  components: { EmberPage },\n\n  data() {\n    const cluster = this.$store.getters['currentCluster'];\n    const page = this.$route.params.page;\n    const p = PAGES[page] || page;\n\n    return { src: `/k/${ cluster.id }/${ p }` };\n  }\n};\n</script>\n\n<template>\n  <EmberPage\n    v-if=\"src\"\n    :src=\"src\"\n  />\n</template>\n"]}]}