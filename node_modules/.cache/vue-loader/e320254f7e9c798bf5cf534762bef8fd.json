{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/EtcdInfoBanner.vue?vue&type=style&index=0&id=1effd22d&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/EtcdInfoBanner.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5iYW5uZXIgewogICAgZGlzcGxheTogZmxleDsKICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKCiAgICAuZGF0dW0gewogICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDsKICAgIH0KCiAgICAmIDo6di1kZWVwIGxhYmVsIHsKICAgICAgICBjb2xvcjogdmFyKC0taW5mbyk7CiAgICB9Cn0KCg=="},{"version":3,"sources":["EtcdInfoBanner.vue"],"names":[],"mappings":";AAmEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"EtcdInfoBanner.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\r\nimport { Banner } from '@components/Banner';\r\nimport Loading from '@shell/components/Loading';\r\nimport { mapGetters } from 'vuex';\r\nimport { hasLeader, leaderChanges, failedProposals } from '@shell/utils/grafana';\r\nimport { CATALOG } from '@shell/config/types';\r\n\r\nexport default {\r\n  components: { Banner, Loading },\r\n  async fetch() {\r\n    const inStore = this.$store.getters['currentProduct'].inStore;\r\n    const res = await this.$store.dispatch(`${ inStore }/find`, { type: CATALOG.APP, id: 'cattle-monitoring-system/rancher-monitoring' });\r\n    const monitoringVersion = res?.currentVersion;\r\n    const leader = await hasLeader(monitoringVersion, this.$store.dispatch, this.currentCluster.id);\r\n\r\n    this.hasLeader = leader ? this.t('generic.yes') : this.t('generic.no');\r\n    this.leaderChanges = await leaderChanges(monitoringVersion, this.$store.dispatch, this.currentCluster.id);\r\n    this.failedProposals = await failedProposals(monitoringVersion, this.$store.dispatch, this.currentCluster.id);\r\n  },\r\n  data() {\r\n    return {\r\n      hasLeader:       this.t('generic.no'),\r\n      leaderChanges:   0,\r\n      failedProposals: 0\r\n    };\r\n  },\r\n  computed: { ...mapGetters(['currentCluster']) }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Loading v-if=\"$fetchState.pending\" />\r\n  <Banner\r\n    v-else\r\n    class=\"banner\"\r\n    color=\"info\"\r\n  >\r\n    <div class=\"datum\">\r\n      <label>{{ t('etcdInfoBanner.hasLeader') }}</label> {{ hasLeader }}\r\n    </div>\r\n    <div class=\"datum\">\r\n      <label>{{ t('etcdInfoBanner.leaderChanges') }}</label> {{ leaderChanges }}\r\n    </div>\r\n    <div class=\"datum\">\r\n      <label>{{ t('etcdInfoBanner.failedProposals') }}</label> {{ failedProposals }}\r\n    </div>\r\n  </Banner>\r\n</template>\r\n\r\n<style lang='scss' scoped>\r\n    .banner {\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        align-items: center;\r\n\r\n        .datum {\r\n            text-align: center;\r\n            margin-right: 5px;\r\n        }\r\n\r\n        & ::v-deep label {\r\n            color: var(--info);\r\n        }\r\n    }\r\n\r\n</style>\r\n"]}]}