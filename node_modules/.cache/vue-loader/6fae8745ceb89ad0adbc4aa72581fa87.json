{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/VolumeClaimTemplate.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/VolumeClaimTemplate.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBNb3VudCBmcm9tICdAc2hlbGwvZWRpdC93b3JrbG9hZC9zdG9yYWdlL01vdW50JzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgUGVyc2lzdGVudFZvbHVtZUNsYWltIGZyb20gJ0BzaGVsbC9lZGl0L3dvcmtsb2FkL3N0b3JhZ2UvcGVyc2lzdGVudFZvbHVtZUNsYWltL3BlcnNpc3RlbnR2b2x1bWVjbGFpbS52dWUnOwppbXBvcnQgeyBQVkMgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCBBcnJheUxpc3RHcm91cGVkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vQXJyYXlMaXN0R3JvdXBlZCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXJyYXlMaXN0R3JvdXBlZCwKICAgIE1vdW50LAogICAgUGVyc2lzdGVudFZvbHVtZUNsYWltCiAgfSwKCiAgcHJvcHM6IHsKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY3JlYXRlJwogICAgfSwKCiAgICBuYW1lc3BhY2U6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAoKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsgdGVtcGxhdGVzOiB0aGlzLnZhbHVlLnZvbHVtZUNsYWltVGVtcGxhdGVzLCBuYW1lOiAnJyB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKCiAgICAuLi5tYXBHZXR0ZXJzKHsgdDogJ2kxOG4vdCcgfSkKICB9LAoKICB3YXRjaDogewogICAgbmFtZXNwYWNlKG5ldSkgewogICAgICB0aGlzLnB2Yy5tZXRhZGF0YS5uYW1lc3BhY2UgPSBuZXU7CiAgICB9LAogIH0sCgogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZSgpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICd2b2x1bWVDbGFpbVRlbXBsYXRlcycsIHRoaXMudGVtcGxhdGVzKTsKICAgIH0sCgogICAgdXBkYXRlUFZDKHB2YykgewogICAgICBjb25zdCBzdG9yYWdlID0gcHZjPy5zcGVjPy5yZXNvdXJjZXM/LnJlcXVlc3RzPy5zdG9yYWdlOwoKICAgICAgaWYgKHN0b3JhZ2UpIHsKICAgICAgICBpZiAoIXN0b3JhZ2UudG9TdHJpbmcoKS5tYXRjaCgvWzAtOV0qW2EtekEtWl0rJC8pKSB7CiAgICAgICAgICBwdmMuc3BlYy5yZXNvdXJjZXMucmVxdWVzdHMuc3RvcmFnZSArPSAnR2knOwogICAgICAgIH0KICAgICAgfQogICAgICB0aGlzLm5hbWUgPSBwdmM/Lm1ldGFkYXRhPy5uYW1lOwogICAgICB0aGlzLnVwZGF0ZSgpOwogICAgfSwKCiAgICBhZGRQVkMoKSB7CiAgICAgIGlmICghdGhpcy52YWx1ZS52b2x1bWVDbGFpbVRlbXBsYXRlcykgewogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAndm9sdW1lQ2xhaW1UZW1wbGF0ZXMnLCBbXSk7CiAgICAgIH0KICAgICAgdGhpcy50ZW1wbGF0ZXMgPSB0aGlzLnZhbHVlLnZvbHVtZUNsYWltVGVtcGxhdGVzOwoKICAgICAgY29uc3QgbmFtZXNwYWNlID0gdGhpcy5uYW1lc3BhY2UgfHwgdGhpcy4kc3RvcmUuZ2V0dGVyc1snZGVmYXVsdE5hbWVzcGFjZSddOwoKICAgICAgY29uc3QgZGF0YSA9IHsgdHlwZTogUFZDIH07CgogICAgICBkYXRhLm1ldGFkYXRhID0geyBuYW1lc3BhY2UgfTsKCiAgICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2NyZWF0ZScsIGRhdGEpLnRoZW4oKHB2YykgPT4gewogICAgICAgIHB2Yy5hcHBseURlZmF1bHRzKCk7CiAgICAgICAgdGhpcy50ZW1wbGF0ZXMucHVzaChwdmMpOwogICAgICAgIHRoaXMudXBkYXRlKCk7CiAgICAgIH0pOwogICAgfSwKICB9Cn07Cg=="},{"version":3,"sources":["VolumeClaimTemplate.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VolumeClaimTemplate.vue","sourceRoot":"node_modules/@rancher/shell/edit/workload","sourcesContent":["<script>\nimport Mount from '@shell/edit/workload/storage/Mount';\nimport { mapGetters } from 'vuex';\nimport PersistentVolumeClaim from '@shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim.vue';\nimport { PVC } from '@shell/config/types';\nimport { _VIEW } from '@shell/config/query-params';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\n\nexport default {\n  components: {\n    ArrayListGrouped,\n    Mount,\n    PersistentVolumeClaim\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    namespace: {\n      type:    String,\n      default: null\n    },\n\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n  },\n\n  data() {\n    return { templates: this.value.volumeClaimTemplates, name: '' };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    namespace(neu) {\n      this.pvc.metadata.namespace = neu;\n    },\n  },\n\n  methods: {\n    update() {\n      this.$set(this.value, 'volumeClaimTemplates', this.templates);\n    },\n\n    updatePVC(pvc) {\n      const storage = pvc?.spec?.resources?.requests?.storage;\n\n      if (storage) {\n        if (!storage.toString().match(/[0-9]*[a-zA-Z]+$/)) {\n          pvc.spec.resources.requests.storage += 'Gi';\n        }\n      }\n      this.name = pvc?.metadata?.name;\n      this.update();\n    },\n\n    addPVC() {\n      if (!this.value.volumeClaimTemplates) {\n        this.$set(this.value, 'volumeClaimTemplates', []);\n      }\n      this.templates = this.value.volumeClaimTemplates;\n\n      const namespace = this.namespace || this.$store.getters['defaultNamespace'];\n\n      const data = { type: PVC };\n\n      data.metadata = { namespace };\n\n      this.$store.dispatch('cluster/create', data).then((pvc) => {\n        pvc.applyDefaults();\n        this.templates.push(pvc);\n        this.update();\n      });\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div>\n      <ArrayListGrouped\n        v-model=\"templates\"\n        class=\"mb-20\"\n        @input=\"update()\"\n      >\n        <template #default=\"props\">\n          <div class=\"bordered-section\">\n            <PersistentVolumeClaim\n              v-if=\"props.row.value.metadata\"\n              :value=\"props.row.value\"\n              :mode=\"mode\"\n              @input=\"updatePVC(props.row.value)\"\n            />\n          </div>\n          <Mount\n            :name=\"props.row.value.metadata.name\"\n            :mode=\"mode\"\n            :container=\"value.template.spec.containers[0]\"\n          />\n        </template>\n        <template #add>\n          <button\n            v-if=\"!isView\"\n            type=\"button\"\n            class=\"btn role-tertiary add\"\n            @click=\"addPVC\"\n          >\n            {{ t('volumeClaimTemplate.add.label') }}\n          </button>\n        </template>\n      </ArrayListGrouped>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.remove-btn{\n  position: absolute;\n  top:0px;\n  right:0px;\n}\n</style>\n"]}]}