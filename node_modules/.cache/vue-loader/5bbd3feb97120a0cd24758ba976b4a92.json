{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/resources.cattle.io.restore.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCBjcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBVbml0SW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Vbml0SW5wdXQnOwppbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vQ2hlY2tib3gnOwppbXBvcnQgTGFiZWxlZFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVsZWRTZWxlY3QnOwppbXBvcnQgTG9hZGluZyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Mb2FkaW5nJzsKaW1wb3J0IHsgUmFkaW9Hcm91cCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vUmFkaW8nOwppbXBvcnQgUzMgZnJvbSAnQHNoZWxsL2NoYXJ0L3JhbmNoZXItYmFja3VwL1MzJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBTRUNSRVQsIEJBQ0tVUF9SRVNUT1JFLCBDQVRBTE9HIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBfQ1JFQVRFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgeyBmb3JtYXRFbmNyeXB0aW9uU2VjcmV0TmFtZXMgfSBmcm9tICdAc2hlbGwvdXRpbHMvZm9ybWF0dGVyJzsKCmV4cG9ydCBkZWZhdWx0IHsKCiAgY29tcG9uZW50czogewogICAgQ3J1UmVzb3VyY2UsCiAgICBVbml0SW5wdXQsCiAgICBMYWJlbGVkSW5wdXQsCiAgICBDaGVja2JveCwKICAgIFMzLAogICAgTGFiZWxlZFNlbGVjdCwKICAgIExvYWRpbmcsCiAgICBSYWRpb0dyb3VwLAogIH0sCgogIG1peGluczogW2NyZWF0ZUVkaXRWaWV3XSwKCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY3JlYXRlJwogICAgfQogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NhdGFsb2cvbG9hZCcpOwoKICAgIGNvbnN0IGhhc2ggPSBhd2FpdCBhbGxIYXNoKHsKICAgICAgc2VjcmV0czogdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsgdHlwZTogU0VDUkVUIH0pLAogICAgICBiYWNrdXBzOiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgeyB0eXBlOiBCQUNLVVBfUkVTVE9SRS5CQUNLVVAgfSksCiAgICAgIGFwcHM6ICAgIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZpbmRBbGwnLCB7IHR5cGU6IENBVEFMT0cuQVBQIH0pCiAgICB9KTsKCiAgICB0aGlzLmFsbFNlY3JldHMgPSBoYXNoLnNlY3JldHM7CiAgICB0aGlzLmFsbEJhY2t1cHMgPSBoYXNoLmJhY2t1cHM7CiAgICB0aGlzLmFwcHMgPSBoYXNoLmFwcHM7CiAgfSwKCiAgZGF0YSgpIHsKICAgIGlmICghdGhpcy52YWx1ZS5zcGVjKSB7CiAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAnc3BlYycsIHsgcHJ1bmU6IHRydWUsIGRlbGV0ZVRpbWVvdXRTZWNvbmRzOiAxMCB9KTsKICAgIH0KCiAgICBpZiAoIXRoaXMudmFsdWUubWV0YWRhdGEubmFtZSkgewogICAgICB0aGlzLnZhbHVlLm1ldGFkYXRhLmdlbmVyYXRlTmFtZSA9ICdyZXN0b3JlLSc7CiAgICB9CgogICAgbGV0IHMzID0ge307CiAgICBsZXQgc3RvcmFnZVNvdXJjZSA9ICd1c2VEZWZhdWx0JzsKCiAgICBpZiAodGhpcy52YWx1ZT8uc3BlYz8uc3RvcmFnZUxvY2F0aW9uPy5zMykgewogICAgICBzdG9yYWdlU291cmNlID0gJ2NvbmZpZ3VyZVMzJzsKICAgICAgczMgPSB0aGlzLnZhbHVlLnNwZWMuc3RvcmFnZUxvY2F0aW9uLnMzOwogICAgfQoKICAgIHJldHVybiB7CiAgICAgIGFsbFNlY3JldHM6IFtdLCBhbGxCYWNrdXBzOiBbXSwgczMsIHRhcmdldEJhY2t1cDogbnVsbCwgc3RvcmFnZVNvdXJjZSwgYXBwczogW10KICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGlzQ2xvbmUoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9DUkVBVEUgJiYgISF0aGlzLmxpdmVWYWx1ZS5pZDsKICAgIH0sCgogICAgYXZhaWxhYmxlQmFja3VwcygpIHsKICAgICAgcmV0dXJuIHRoaXMuYWxsQmFja3Vwcy5maWx0ZXIoKGJhY2t1cCkgPT4gYmFja3VwLnN0YXRlICE9PSAnZXJyb3InKTsKICAgIH0sCgogICAgY2hhcnROYW1lc3BhY2UoKSB7CiAgICAgIGNvbnN0IEJST1JlbGVhc2UgPSB0aGlzLmFwcHMuZmlsdGVyKChyZWxlYXNlKSA9PiBnZXQocmVsZWFzZSwgJ3NwZWMubmFtZScpID09PSAncmFuY2hlci1iYWNrdXAnKVswXTsKCiAgICAgIHJldHVybiBCUk9SZWxlYXNlID8gQlJPUmVsZWFzZS5zcGVjLm5hbWVzcGFjZSA6ICcnOwogICAgfSwKCiAgICBlbmNyeXB0aW9uU2VjcmV0TmFtZXMoKSB7CiAgICAgIHJldHVybiBmb3JtYXRFbmNyeXB0aW9uU2VjcmV0TmFtZXModGhpcy5hbGxTZWNyZXRzLCB0aGlzLmNoYXJ0TmFtZXNwYWNlKTsKICAgIH0sCgogICAgaXNFbmNyeXB0ZWQoKSB7CiAgICAgIHJldHVybiAhISgodGhpcy52YWx1ZS5zcGVjLmJhY2t1cEZpbGVuYW1lIHx8ICcnKS5tYXRjaCgvLipcLmVuYyQvKSk7CiAgICB9LAoKICAgIHJhZGlvT3B0aW9ucygpIHsKICAgICAgY29uc3Qgb3B0aW9ucyA9IFsndXNlRGVmYXVsdCcsICdjb25maWd1cmVTMyddOwogICAgICBjb25zdCBsYWJlbHMgPSBbdGhpcy50KCdiYWNrdXBSZXN0b3JlT3BlcmF0b3IucmVzdG9yZUZyb20uZGVmYXVsdCcpLCB0aGlzLnQoJ2JhY2t1cFJlc3RvcmVPcGVyYXRvci5yZXN0b3JlRnJvbS5zMycpXTsKCiAgICAgIGlmICh0aGlzLmF2YWlsYWJsZUJhY2t1cHMubGVuZ3RoIHx8IHRoaXMuc3RvcmFnZVNvdXJjZSA9PT0gJ3VzZUJhY2t1cCcpIHsKICAgICAgICBvcHRpb25zLnVuc2hpZnQoJ3VzZUJhY2t1cCcpOwogICAgICAgIGxhYmVscy51bnNoaWZ0KCB0aGlzLnQoJ2JhY2t1cFJlc3RvcmVPcGVyYXRvci5yZXN0b3JlRnJvbS5leGlzdGluZycpKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsgb3B0aW9ucywgbGFiZWxzIH07CiAgICB9LAoKICAgIHZhbGlkYXRpb25QYXNzZWQoKSB7CiAgICAgIGNvbnN0IGhhc0JhY2t1cEZpbGUgPSAoISF0aGlzLnZhbHVlLnNwZWMuYmFja3VwRmlsZW5hbWUgJiYgISF0aGlzLnZhbHVlLnNwZWMuYmFja3VwRmlsZW5hbWUubGVuZ3RoKTsKICAgICAgY29uc3QgaGFzRW5jcnlwdGlvbiA9ICEhdGhpcy52YWx1ZS5zcGVjLmVuY3J5cHRpb25Db25maWdTZWNyZXROYW1lOwoKICAgICAgaWYgKCFoYXNCYWNrdXBGaWxlKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICByZXR1cm4gIXRoaXMuaXNFbmNyeXB0ZWQgfHwgaGFzRW5jcnlwdGlvbjsKICAgIH0sCgogICAgdGFyZ2V0QmFja3VwRmlsZW5hbWUoKSB7CiAgICAgIHJldHVybiBnZXQodGhpcy50YXJnZXRCYWNrdXAsICdzdGF0dXMuZmlsZW5hbWUnKTsKICAgIH0sCgogICAgLi4ubWFwR2V0dGVycyh7IHQ6ICdpMThuL3QnIH0pCiAgfSwKCiAgd2F0Y2g6IHsKICAgIHN0b3JhZ2VTb3VyY2UobmV1LCBvbGQpIHsKICAgICAgaWYgKG5ldSA9PT0gJ3VzZURlZmF1bHQnKSB7CiAgICAgICAgZGVsZXRlIHRoaXMudmFsdWUuc3BlYy5zdG9yYWdlTG9jYXRpb247CiAgICAgICAgZGVsZXRlIHRoaXMudmFsdWUuc3BlYy5iYWNrdXBGaWxlbmFtZTsKICAgICAgfSBlbHNlIGlmICghdGhpcy52YWx1ZS5zcGVjLnN0b3JhZ2VMb2NhdGlvbiAmJiBuZXUgPT09ICdjb25maWd1cmVTMycpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAnc3RvcmFnZUxvY2F0aW9uJywgeyBzMzoge30gfSk7CiAgICAgICAgdGhpcy5zMyA9IHRoaXMudmFsdWUuc3BlYy5zdG9yYWdlTG9jYXRpb24uczM7CiAgICAgIH0KICAgICAgaWYgKG5ldSA9PT0gJ3VzZUJhY2t1cCcpIHsKICAgICAgICBkZWxldGUgdGhpcy52YWx1ZS5zcGVjLnN0b3JhZ2VMb2NhdGlvbjsKCiAgICAgICAgaWYgKHRoaXMuYXZhaWxhYmxlQmFja3Vwcy5sZW5ndGggPT09IDEpIHsKICAgICAgICAgIHRoaXMudXBkYXRlVGFyZ2V0QmFja3VwKHRoaXMuYXZhaWxhYmxlQmFja3Vwc1swXSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGRlbGV0ZSB0aGlzLnZhbHVlLnNwZWMuYmFja3VwRmlsZW5hbWU7CiAgICAgICAgdGhpcy52YWx1ZS5zcGVjLnN0b3JhZ2VMb2NhdGlvbiA9IHsgczM6IHRoaXMuczMgfTsKICAgICAgfQogICAgfSwKCiAgICBhdmFpbGFibGVCYWNrdXBzKG5ldSwgb2xkKSB7CiAgICAgIGlmICgobmV1Lmxlbmd0aCAmJiAhb2xkLmxlbmd0aCkgJiYgIXRoaXMuaXNDbG9uZSAmJiB0aGlzLm1vZGUgIT09ICd2aWV3JykgewogICAgICAgIHRoaXMuc3RvcmFnZVNvdXJjZSA9ICd1c2VCYWNrdXAnOwogICAgICB9CiAgICB9LAoKICAgIHRhcmdldEJhY2t1cEZpbGVuYW1lKG5ldSkgewogICAgICB0aGlzLnZhbHVlLnNwZWMuYmFja3VwRmlsZW5hbWUgPSBuZXU7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgdXBkYXRlVGFyZ2V0QmFja3VwKG5ldSkgewogICAgICBjb25zdCBvdXQgPSB7IGJhY2t1cEZpbGVuYW1lOiBuZXU/LnN0YXR1cz8uZmlsZW5hbWUgfTsKCiAgICAgIGlmIChuZXU/LnNwZWM/LnN0b3JhZ2VMb2NhdGlvbj8uczMpIHsKICAgICAgICBvdXQuc3RvcmFnZUxvY2F0aW9uID0gbmV1LnNwZWMuc3RvcmFnZUxvY2F0aW9uOwogICAgICB9IGVsc2UgewogICAgICAgIGRlbGV0ZSB0aGlzLnZhbHVlLnNwZWMuc3RvcmFnZUxvY2F0aW9uOwogICAgICB9CiAgICAgIGlmIChuZXUuc3BlYy5lbmNyeXB0aW9uQ29uZmlnU2VjcmV0TmFtZSAmJiB0aGlzLmVuY3J5cHRpb25TZWNyZXROYW1lcy5pbmNsdWRlcyhuZXUuc3BlYy5lbmNyeXB0aW9uQ29uZmlnU2VjcmV0TmFtZSkpIHsKICAgICAgICBvdXQuZW5jcnlwdGlvbkNvbmZpZ1NlY3JldE5hbWUgPSBuZXUuc3BlYy5lbmNyeXB0aW9uQ29uZmlnU2VjcmV0TmFtZTsKICAgICAgfQogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3NwZWMnLCB7IC4uLnRoaXMudmFsdWUuc3BlYywgLi4ub3V0IH0pOwoKICAgICAgdGhpcy50YXJnZXRCYWNrdXAgPSBuZXU7CiAgICB9CiAgfQoKfTsK"},{"version":3,"sources":["resources.cattle.io.restore.vue"],"names":[],"mappingsfile":"resources.cattle.io.restore.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Loading from '@shell/components/Loading';\nimport { RadioGroup } from '@components/Form/Radio';\nimport S3 from '@shell/chart/rancher-backup/S3';\nimport { mapGetters } from 'vuex';\nimport { SECRET, BACKUP_RESTORE, CATALOG } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { get } from '@shell/utils/object';\nimport { _CREATE } from '@shell/config/query-params';\nimport { formatEncryptionSecretNames } from '@shell/utils/formatter';\n\nexport default {\n\n  components: {\n    CruResource,\n    UnitInput,\n    LabeledInput,\n    Checkbox,\n    S3,\n    LabeledSelect,\n    Loading,\n    RadioGroup,\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load');\n\n    const hash = await allHash({\n      secrets: this.$store.dispatch('cluster/findAll', { type: SECRET }),\n      backups: this.$store.dispatch('cluster/findAll', { type: BACKUP_RESTORE.BACKUP }),\n      apps:    this.$store.dispatch('cluster/findAll', { type: CATALOG.APP })\n    });\n\n    this.allSecrets = hash.secrets;\n    this.allBackups = hash.backups;\n    this.apps = hash.apps;\n  },\n\n  data() {\n    if (!this.value.spec) {\n      this.$set(this.value, 'spec', { prune: true, deleteTimeoutSeconds: 10 });\n    }\n\n    if (!this.value.metadata.name) {\n      this.value.metadata.generateName = 'restore-';\n    }\n\n    let s3 = {};\n    let storageSource = 'useDefault';\n\n    if (this.value?.spec?.storageLocation?.s3) {\n      storageSource = 'configureS3';\n      s3 = this.value.spec.storageLocation.s3;\n    }\n\n    return {\n      allSecrets: [], allBackups: [], s3, targetBackup: null, storageSource, apps: []\n    };\n  },\n\n  computed: {\n    isClone() {\n      return this.mode === _CREATE && !!this.liveValue.id;\n    },\n\n    availableBackups() {\n      return this.allBackups.filter((backup) => backup.state !== 'error');\n    },\n\n    chartNamespace() {\n      const BRORelease = this.apps.filter((release) => get(release, 'spec.name') === 'rancher-backup')[0];\n\n      return BRORelease ? BRORelease.spec.namespace : '';\n    },\n\n    encryptionSecretNames() {\n      return formatEncryptionSecretNames(this.allSecrets, this.chartNamespace);\n    },\n\n    isEncrypted() {\n      return !!((this.value.spec.backupFilename || '').match(/.*\\.enc$/));\n    },\n\n    radioOptions() {\n      const options = ['useDefault', 'configureS3'];\n      const labels = [this.t('backupRestoreOperator.restoreFrom.default'), this.t('backupRestoreOperator.restoreFrom.s3')];\n\n      if (this.availableBackups.length || this.storageSource === 'useBackup') {\n        options.unshift('useBackup');\n        labels.unshift( this.t('backupRestoreOperator.restoreFrom.existing'));\n      }\n\n      return { options, labels };\n    },\n\n    validationPassed() {\n      const hasBackupFile = (!!this.value.spec.backupFilename && !!this.value.spec.backupFilename.length);\n      const hasEncryption = !!this.value.spec.encryptionConfigSecretName;\n\n      if (!hasBackupFile) {\n        return false;\n      }\n\n      return !this.isEncrypted || hasEncryption;\n    },\n\n    targetBackupFilename() {\n      return get(this.targetBackup, 'status.filename');\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    storageSource(neu, old) {\n      if (neu === 'useDefault') {\n        delete this.value.spec.storageLocation;\n        delete this.value.spec.backupFilename;\n      } else if (!this.value.spec.storageLocation && neu === 'configureS3') {\n        this.$set(this.value.spec, 'storageLocation', { s3: {} });\n        this.s3 = this.value.spec.storageLocation.s3;\n      }\n      if (neu === 'useBackup') {\n        delete this.value.spec.storageLocation;\n\n        if (this.availableBackups.length === 1) {\n          this.updateTargetBackup(this.availableBackups[0]);\n        }\n      } else {\n        delete this.value.spec.backupFilename;\n        this.value.spec.storageLocation = { s3: this.s3 };\n      }\n    },\n\n    availableBackups(neu, old) {\n      if ((neu.length && !old.length) && !this.isClone && this.mode !== 'view') {\n        this.storageSource = 'useBackup';\n      }\n    },\n\n    targetBackupFilename(neu) {\n      this.value.spec.backupFilename = neu;\n    }\n  },\n\n  methods: {\n    updateTargetBackup(neu) {\n      const out = { backupFilename: neu?.status?.filename };\n\n      if (neu?.spec?.storageLocation?.s3) {\n        out.storageLocation = neu.spec.storageLocation;\n      } else {\n        delete this.value.spec.storageLocation;\n      }\n      if (neu.spec.encryptionConfigSecretName && this.encryptionSecretNames.includes(neu.spec.encryptionConfigSecretName)) {\n        out.encryptionConfigSecretName = neu.spec.encryptionConfigSecretName;\n      }\n      this.$set(this.value, 'spec', { ...this.value.spec, ...out });\n\n      this.targetBackup = neu;\n    }\n  }\n\n};\n</script>\n\n<template>\n  <div>\n    <Loading v-if=\"$fetchState.pending\" />\n\n    <CruResource\n      :validation-passed=\"validationPassed\"\n      :done-route=\"doneRoute\"\n      :resource=\"value\"\n      :mode=\"mode\"\n      @finish=\"save\"\n    >\n      <template>\n        <div>\n          <div class=\"row mb-10\">\n            <div class=\"col span-12\">\n              <RadioGroup\n                v-model=\"storageSource\"\n                name=\"storageSource\"\n                :label=\"t('backupRestoreOperator.s3.titles.backupLocation')\"\n                :options=\"radioOptions.options\"\n                :labels=\"radioOptions.labels\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n          <template v-if=\"storageSource === 'configureS3'\">\n            <S3\n              v-model=\"s3\"\n              :mode=\"mode\"\n              :secrets=\"allSecrets\"\n            />\n          </template>\n          <div\n            v-else-if=\"storageSource==='useBackup'\"\n            class=\"row mb-10\"\n          >\n            <div class=\"col span-6\">\n              <LabeledSelect\n                :disabled=\"!availableBackups.length\"\n                :value=\"targetBackup\"\n                :options=\"availableBackups\"\n                :mode=\"mode\"\n                option-label=\"metadata.name\"\n                :label=\"t('backupRestoreOperator.targetBackup')\"\n                @input=\"updateTargetBackup\"\n              />\n            </div>\n          </div>\n        </div>\n        <div class=\"spacer\" />\n\n        <div>\n          <div\n            :style=\"{'align-items':'center'}\"\n            class=\"row mb-10\"\n          >\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"value.spec.backupFilename\"\n                :spellcheck=\"false\"\n                required\n                :mode=\"mode\"\n                :label=\"t('backupRestoreOperator.backupFilename')\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-if=\"isEncrypted\"\n                v-model=\"value.spec.encryptionConfigSecretName\"\n                :status=\"mode === 'view' ? null : 'warning'\"\n                :tooltip=\"mode === 'view' ? null : t('backupRestoreOperator.encryptionConfigName.restoretip')\"\n                :hover-tooltip=\"true\"\n                :mode=\"mode\"\n                :options=\"encryptionSecretNames\"\n                :label=\"t('backupRestoreOperator.encryptionConfigName.label')\"\n              />\n            </div>\n          </div>\n          <div\n            :style=\"{'align-items':'center'}\"\n            class=\"row\"\n          >\n            <div class=\"col span-6\">\n              <Checkbox\n                v-model=\"value.spec.prune\"\n                class=\"mb-5\"\n                :label=\"t('backupRestoreOperator.prune.label')\"\n                :mode=\"mode\"\n              >\n                <template #label>\n                  <span\n                    v-clean-tooltip=\"t('backupRestoreOperator.prune.tip')\"\n                    class=\"text-label\"\n                  >\n                    {{ t('backupRestoreOperator.prune.label') }} <i class=\"icon icon-info\" />\n                  </span>\n                </template>\n              </Checkbox>\n              <UnitInput\n                v-if=\"value.spec.prune\"\n                v-model=\"value.spec.deleteTimeoutSeconds\"\n                :suffix=\"t('suffix.seconds', {count: value.spec.deleteTimeoutSeconds})\"\n                :mode=\"mode\"\n                :label=\"t('backupRestoreOperator.deleteTimeout.label')\"\n              >\n                <template #label>\n                  <label\n                    v-clean-tooltip=\"t('backupRestoreOperator.deleteTimeout.tip')\"\n                    class=\"has-tooltip\"\n                  >\n                    {{ t('backupRestoreOperator.deleteTimeout.label') }} <i class=\"icon icon-info\" />\n                  </label>\n                </template>\n              </UnitInput>\n            </div>\n          </div>\n        </div>\n      </template>\n    </CruResource>\n  </div>\n</template>\n"]}]}