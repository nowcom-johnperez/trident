{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/rancher-backup/S3.vue?vue&type=style&index=0&id=1f2d306a&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/rancher-backup/S3.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5jYS1jb250cm9scyB7CiAgZGlzcGxheTogZmxleDsKCiAgLmNhLXRvb2x0aXAgewogICAgZmxleDogMTsKICAgIG1hcmdpbi10b3A6IDRweDsKICAgIHRleHQtYWxpZ246IHJpZ2h0OwoKICAgID4gaSB7CiAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgIH07CiAgfQp9Cg=="},{"version":3,"sources":["S3.vue"],"names":[],"mappings":";AA2LA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"S3.vue","sourceRoot":"node_modules/@rancher/shell/chart/rancher-backup","sourcesContent":["<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { mapGetters } from 'vuex';\n\nexport default {\n  components: {\n    LabeledInput,\n    Checkbox,\n    FileSelector,\n    LabeledSelect,\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    secrets: {\n      type:    Array,\n      default: () => []\n    }\n  },\n\n  mounted() {\n    this.$emit('valid', this.valid);\n  },\n\n  beforeDestroy() {\n    this.$emit('valid', true);\n  },\n\n  watch: {\n    valid() {\n      this.$emit('valid', this.valid);\n    }\n  },\n  computed: {\n    credentialSecret: {\n      get() {\n        const { credentialSecretName, credentialSecretNamespace } = this.value;\n\n        return { metadata: { name: credentialSecretName, namespace: credentialSecretNamespace } };\n      },\n\n      set(neu) {\n        const { name, namespace } = neu.metadata;\n\n        this.$set(this.value, 'credentialSecretName', name);\n        this.$set(this.value, 'credentialSecretNamespace', namespace);\n      }\n    },\n    valid() {\n      return !!this.value.endpoint && !!this.value.bucketName;\n    },\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  methods: {\n    setCA(ca) {\n      try {\n        const encoded = btoa(ca);\n\n        this.$set(this.value, 'endpointCA', encoded);\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        console.warn(e);\n      }\n    }\n  },\n\n  created() {\n    const { credentialSecretName, credentialSecretNamespace } = this.value;\n\n    if (credentialSecretName && !credentialSecretNamespace) {\n      this.value.credentialSecretName = '';\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"credentialSecret\"\n          :get-option-label=\"opt=>opt.metadata.name || ''\"\n          option-key=\"id\"\n          :mode=\"mode\"\n          :options=\"secrets\"\n          :label=\"t('backupRestoreOperator.s3.credentialSecretName')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.bucketName\"\n          data-testid=\"S3-bucketName\"\n          :mode=\"mode\"\n          :label=\"t('backupRestoreOperator.s3.bucketName')\"\n          required\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.region\"\n          :mode=\"mode\"\n          :label=\"t('backupRestoreOperator.s3.region')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.folder\"\n          :mode=\"mode\"\n          :label=\"t('backupRestoreOperator.s3.folder')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.endpoint\"\n          :mode=\"mode\"\n          :label=\"t('backupRestoreOperator.s3.endpoint')\"\n          data-testid=\"S3-endpoint\"\n          required\n        />\n        <Checkbox\n          v-model=\"value.insecureTLSSkipVerify\"\n          class=\"mt-10\"\n          :mode=\"mode\"\n          :label=\"t('backupRestoreOperator.s3.insecureTLSSkipVerify')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.endpointCA\"\n          :mode=\"mode\"\n          type=\"multiline\"\n          :label=\"t('backupRestoreOperator.s3.endpointCA.label')\"\n        />\n        <div class=\"ca-controls\">\n          <FileSelector\n            v-if=\"mode!=='view'\"\n            class=\"btn btn-sm role-primary mt-5\"\n            :mode=\"mode\"\n            :label=\"t('generic.readFromFile')\"\n            @selected=\"e=> setCA(e)\"\n          />\n          <div class=\"ca-tooltip\">\n            <i\n              v-clean-tooltip=\"t('backupRestoreOperator.s3.endpointCA.prompt')\"\n              class=\"icon icon-info\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n  .ca-controls {\n    display: flex;\n\n    .ca-tooltip {\n      flex: 1;\n      margin-top: 4px;\n      text-align: right;\n\n      > i {\n        font-size: 16px;\n      };\n    }\n  }\n</style>\n"]}]}