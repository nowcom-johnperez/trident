{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/PolicyRule.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/PolicyRule.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgppbXBvcnQgUG9saWN5UnVsZVBvcnQgZnJvbSAnQHNoZWxsL2VkaXQvbmV0d29ya2luZy5rOHMuaW8ubmV0d29ya3BvbGljeS9Qb2xpY3lSdWxlUG9ydCc7CmltcG9ydCBBcnJheUxpc3RHcm91cGVkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vQXJyYXlMaXN0R3JvdXBlZCc7CmltcG9ydCB7IF9FRElUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgUG9saWN5UnVsZVRhcmdldCBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5uZXR3b3JrcG9saWN5L1BvbGljeVJ1bGVUYXJnZXQnOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFycmF5TGlzdEdyb3VwZWQsIFBvbGljeVJ1bGVQb3J0LCBQb2xpY3lSdWxlVGFyZ2V0CiAgfSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9LAogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBfRURJVCwKICAgIH0sCiAgICB0eXBlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2luZ3Jlc3MnCiAgICB9LAogICAgbmFtZXNwYWNlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBhbGxQb2RzOiB7CiAgICAgIHR5cGU6ICAgIEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9LAogICAgfSwKICAgIGFsbE5hbWVzcGFjZXM6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7IHRhcmdldEtleTogdGhpcy50eXBlID09PSAnaW5ncmVzcycgPyAnZnJvbScgOiAndG8nIH07CiAgfQp9Owo="},{"version":3,"sources":["PolicyRule.vue"],"names":[],"mappings":";;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PolicyRule.vue","sourceRoot":"node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy","sourcesContent":["<script>\n\nimport PolicyRulePort from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRulePort';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { _EDIT } from '@shell/config/query-params';\nimport PolicyRuleTarget from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget';\n\nexport default {\n  components: {\n    ArrayListGrouped, PolicyRulePort, PolicyRuleTarget\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    type: {\n      type:    String,\n      default: 'ingress'\n    },\n    namespace: {\n      type:    String,\n      default: ''\n    },\n    allPods: {\n      type:    Array,\n      default: () => {\n        return [];\n      },\n    },\n    allNamespaces: {\n      type:    Array,\n      default: () => {\n        return [];\n      },\n    },\n  },\n  data() {\n    return { targetKey: this.type === 'ingress' ? 'from' : 'to' };\n  }\n};\n</script>\n\n<template>\n  <div class=\"rule\">\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <h2>\n          {{ t(`networkpolicy.${type}.ruleLabel`) }}\n          <i\n            v-clean-tooltip=\"t(`networkpolicy.${type}.ruleHint`)\"\n            class=\"icon icon-info\"\n          />\n        </h2>\n        <ArrayListGrouped\n          v-model=\"value[targetKey]\"\n          :add-label=\"t(`networkpolicy.rules.${type}.add`)\"\n          :default-add-value=\"{}\"\n          :mode=\"mode\"\n        >\n          <template #default=\"props\">\n            <PolicyRuleTarget\n              ref=\"lastTarget\"\n              v-model=\"props.row.value\"\n              :mode=\"mode\"\n              :type=\"type\"\n              :namespace=\"namespace\"\n              :all-namespaces=\"allNamespaces\"\n              :all-pods=\"allPods\"\n            />\n          </template>\n        </ArrayListGrouped>\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <h2>\n          {{ t('networkpolicy.rules.ports.label') }}\n          <i\n            v-clean-tooltip=\"t(`networkpolicy.${type}.portHint`)\"\n            class=\"icon icon-info\"\n          />\n        </h2>\n        <ArrayListGrouped\n          v-model=\"value.ports\"\n          :add-label=\"t('networkpolicy.rules.addPort')\"\n          :default-add-value=\"{}\"\n          :mode=\"mode\"\n        >\n          <template #default=\"props\">\n            <PolicyRulePort\n              ref=\"lastPort\"\n              v-model=\"props.row.value\"\n              :mode=\"mode\"\n            />\n          </template>\n        </ArrayListGrouped>\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}