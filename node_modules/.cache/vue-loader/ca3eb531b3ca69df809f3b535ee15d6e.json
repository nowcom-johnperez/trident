{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.prometheusrule/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.prometheusrule/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgRm9ybVZhbGlkYXRpb24gZnJvbSAnQHNoZWxsL21peGlucy9mb3JtLXZhbGlkYXRpb24nOwppbXBvcnQgeyByZW1vdmVBdCB9IGZyb20gJ0BzaGVsbC91dGlscy9hcnJheSc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IE5hbWVOc0Rlc2NyaXB0aW9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTmFtZU5zRGVzY3JpcHRpb24nOwppbXBvcnQgVGFiIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZC9UYWInOwppbXBvcnQgVGFiYmVkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1RhYmJlZCc7CmltcG9ydCBVbml0SW5wdXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9Vbml0SW5wdXQnOwppbXBvcnQgeyBfQ1JFQVRFLCBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IGlzU3RyaW5nIGZyb20gJ2xvZGFzaC9pc1N0cmluZyc7CmltcG9ydCBpc0VtcHR5IGZyb20gJ2xvZGFzaC9pc0VtcHR5JzsKaW1wb3J0IEdyb3VwUnVsZXMgZnJvbSAnLi9Hcm91cFJ1bGVzJzsKaW1wb3J0IHsgdG9NaWxsaXNlY29uZHMgfSBmcm9tICcuL2R1cmF0aW9uLmpzJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCYW5uZXIsCiAgICBDcnVSZXNvdXJjZSwKICAgIEdyb3VwUnVsZXMsCiAgICBMYWJlbGVkSW5wdXQsCiAgICBOYW1lTnNEZXNjcmlwdGlvbiwKICAgIFRhYiwKICAgIFRhYmJlZCwKICAgIFVuaXRJbnB1dCwKICB9LAoKICBtaXhpbnM6IFtDcmVhdGVFZGl0VmlldywgRm9ybVZhbGlkYXRpb25dLAoKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAoKICAgIG1vZGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnY3JlYXRlJywKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGZ2Rm9ybVJ1bGVTZXRzOiAgICAgIFt7IHBhdGg6ICdtZXRhZGF0YS5uYW1lJywgcnVsZXM6IFsnZG5zTGFiZWwnXSB9XSwKICAgICAgY2xvc2VkRXJyb3JNZXNzYWdlczogW10KICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGZpbHRlcmVkR3JvdXBzKCkgewogICAgICByZXR1cm4gdGhpcy52YWx1ZT8uc3BlYz8uZ3JvdXBzIHx8IFtdOwogICAgfSwKICAgIGVycm9yTWVzc2FnZXMoKSB7CiAgICAgIGlmICh0aGlzLm1vZGUgPT09IF9WSUVXICYmICh0aGlzLnZhbHVlPy5tZXRhZGF0YT8ubmFtZSB8fCAnJykuaW5jbHVkZXMoJy4nKSkgewogICAgICAgIHJldHVybiBbdGhpcy50KCd2YWxpZGF0aW9uLnByb21ldGhldXNSdWxlLm5vRWRpdCcpXTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRoaXMuZnZVbnJlcG9ydGVkVmFsaWRhdGlvbkVycm9ycy5maWx0ZXIoKGUpID0+ICF0aGlzLmNsb3NlZEVycm9yTWVzc2FnZXMuaW5jbHVkZXMoZSkpOwogICAgfQogIH0sCgogIG1vdW50ZWQoKSB7CiAgICBpZiAodGhpcy5pc0NyZWF0ZSkgewogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3NwZWMnLCB7IGdyb3VwczogW10gfSk7CiAgICAgIHRoaXMuYWRkUnVsZUdyb3VwKCk7CiAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMucmVnaXN0ZXJCZWZvcmVIb29rKHRoaXMud2lsbFNhdmUsICd3aWxsU2F2ZScpOwoKICAgIGlmICh0aGlzLm1vZGUgPT09IF9DUkVBVEUpIHsKICAgICAgdGhpcy4kc2V0KHRoaXMudmFsdWUubWV0YWRhdGEsICduYW1lc3BhY2UnLCAnY2F0dGxlLW1vbml0b3Jpbmctc3lzdGVtJyk7CiAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgYWRkUnVsZUdyb3VwKCkgewogICAgICB0aGlzLnZhbHVlLnNwZWMuZ3JvdXBzLnB1c2goewogICAgICAgIG5hbWU6ICAgICAnJywKICAgICAgICBpbnRlcnZhbDogbnVsbCwKICAgICAgICBydWxlczogICAgW10sCiAgICAgIH0pOwogICAgfSwKICAgIHJlbW92ZUdyb3VwUnVsZShpZHgpIHsKICAgICAgcmVtb3ZlQXQodGhpcy52YWx1ZS5zcGVjLmdyb3VwcywgaWR4KTsKICAgIH0sCiAgICBydWxlR3JvdXBMYWJlbChpZHgpIHsKICAgICAgcmV0dXJuIHRoaXMudCgncHJvbWV0aGV1c1J1bGUuZ3JvdXBzLmdyb3VwUm93TGFiZWwnLCB7IGluZGV4OiBpZHggKyAxIH0pOwogICAgfSwKICAgIHdpbGxTYXZlKCkgewogICAgICB0aGlzLnZhbHVlLnNwZWMuZ3JvdXBzLmZvckVhY2goKGdyb3VwKSA9PiB7CiAgICAgICAgaWYgKGlzRW1wdHkoZ3JvdXAuaW50ZXJ2YWwpKSB7CiAgICAgICAgICBkZWxldGUgZ3JvdXAuaW50ZXJ2YWw7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnN0IGludGVydmFsID0gZ3JvdXAuaW50ZXJ2YWw7CgogICAgICAgICAgaWYgKGlzU3RyaW5nKGludGVydmFsKSkgewogICAgICAgICAgICB0aGlzLiRzZXQoZ3JvdXAsICdpbnRlcnZhbCcsIGludGVydmFsLmluY2x1ZGVzKCdzJykgPyBpbnRlcnZhbCA6IGAkeyBpbnRlcnZhbCB9c2ApOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdGhpcy4kc2V0KGdyb3VwLCAnaW50ZXJ2YWwnLCBgJHsgaW50ZXJ2YWwgfXNgKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgdGhpcy5jbG9zZWRFcnJvck1lc3NhZ2VzID0gW107CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0sCgogICAgdXBkYXRlR3JvdXBJbnRlcnZhbChncm91cCwgaW50ZXJ2YWwpIHsKICAgICAgdGhpcy4kc2V0KGdyb3VwLCAnaW50ZXJ2YWwnLCBbbnVsbCwgdW5kZWZpbmVkXS5pbmNsdWRlcyhpbnRlcnZhbCkgPyB1bmRlZmluZWQgOiBgJHsgaW50ZXJ2YWwgfXNgKTsKICAgIH0sCgogICAgZ2V0R3JvdXBJbnRlcnZhbChpbnRlcnZhbCkgewogICAgICBpZiAoIVtudWxsLCB1bmRlZmluZWRdLmluY2x1ZGVzKGludGVydmFsKSkgewogICAgICAgIHJldHVybiBNYXRoLmZsb29yKHRvTWlsbGlzZWNvbmRzKGludGVydmFsKSAvIDEwMDApOwogICAgICB9CiAgICB9CiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/monitoring.coreos.com.prometheusrule","sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\nimport { removeAt } from '@shell/utils/array';\nimport { Banner } from '@components/Banner';\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Tabbed from '@shell/components/Tabbed';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { _CREATE, _VIEW } from '@shell/config/query-params';\nimport isString from 'lodash/isString';\nimport isEmpty from 'lodash/isEmpty';\nimport GroupRules from './GroupRules';\nimport { toMilliseconds } from './duration.js';\n\nexport default {\n  components: {\n    Banner,\n    CruResource,\n    GroupRules,\n    LabeledInput,\n    NameNsDescription,\n    Tab,\n    Tabbed,\n    UnitInput,\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n  },\n\n  data() {\n    return {\n      fvFormRuleSets:      [{ path: 'metadata.name', rules: ['dnsLabel'] }],\n      closedErrorMessages: []\n    };\n  },\n\n  computed: {\n    filteredGroups() {\n      return this.value?.spec?.groups || [];\n    },\n    errorMessages() {\n      if (this.mode === _VIEW && (this.value?.metadata?.name || '').includes('.')) {\n        return [this.t('validation.prometheusRule.noEdit')];\n      }\n\n      return this.fvUnreportedValidationErrors.filter((e) => !this.closedErrorMessages.includes(e));\n    }\n  },\n\n  mounted() {\n    if (this.isCreate) {\n      this.$set(this.value, 'spec', { groups: [] });\n      this.addRuleGroup();\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n\n    if (this.mode === _CREATE) {\n      this.$set(this.value.metadata, 'namespace', 'cattle-monitoring-system');\n    }\n  },\n\n  methods: {\n    addRuleGroup() {\n      this.value.spec.groups.push({\n        name:     '',\n        interval: null,\n        rules:    [],\n      });\n    },\n    removeGroupRule(idx) {\n      removeAt(this.value.spec.groups, idx);\n    },\n    ruleGroupLabel(idx) {\n      return this.t('prometheusRule.groups.groupRowLabel', { index: idx + 1 });\n    },\n    willSave() {\n      this.value.spec.groups.forEach((group) => {\n        if (isEmpty(group.interval)) {\n          delete group.interval;\n        } else {\n          const interval = group.interval;\n\n          if (isString(interval)) {\n            this.$set(group, 'interval', interval.includes('s') ? interval : `${ interval }s`);\n          } else {\n            this.$set(group, 'interval', `${ interval }s`);\n          }\n        }\n      });\n\n      this.closedErrorMessages = [];\n\n      return true;\n    },\n\n    updateGroupInterval(group, interval) {\n      this.$set(group, 'interval', [null, undefined].includes(interval) ? undefined : `${ interval }s`);\n    },\n\n    getGroupInterval(interval) {\n      if (![null, undefined].includes(interval)) {\n        return Math.floor(toMilliseconds(interval) / 1000);\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <CruResource\n    :done-route=\"doneRoute\"\n    :errors=\"errorMessages\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :validation-passed=\"fvFormIsValid\"\n    @error=\"(_, closedError) => closedErrorMessages.push(closedError)\"\n    @finish=\"save\"\n  >\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <NameNsDescription\n          v-if=\"!isView\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :rules=\"{ name: fvGetAndReportPathRules('metadata.name'), namespace: [], description: [] }\"\n          @change=\"name = value.metadata.name\"\n        />\n      </div>\n    </div>\n    <div>\n      <Tabbed\n        v-if=\"filteredGroups.length > 0\"\n        :side-tabs=\"true\"\n        :show-tabs-add-remove=\"mode !== 'view'\"\n        @addTab=\"addRuleGroup\"\n        @removeTab=\"removeGroupRule\"\n      >\n        <Tab\n          v-for=\"(group, idx) in filteredGroups\"\n          :key=\"'filtered-group-' + idx\"\n          :name=\"'group-' + idx\"\n          :label=\"ruleGroupLabel(idx)\"\n          class=\"container-group\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"group.name\"\n                :label=\"t('prometheusRule.groups.name')\"\n                :mode=\"mode\"\n                :required=\"true\"\n              />\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col span-6\">\n              <UnitInput\n                :value=\"getGroupInterval(group.interval)\"\n                :suffix=\"t('suffix.seconds', {count: group.interval})\"\n                :placeholder=\"\n                  t('prometheusRule.groups.groupInterval.placeholder')\n                \"\n                :label=\"t('prometheusRule.groups.groupInterval.label')\"\n                :mode=\"mode\"\n                @input=\"(e) => updateGroupInterval(filteredGroups[idx], e)\"\n              />\n            </div>\n          </div>\n          <GroupRules\n            v-model=\"group.rules\"\n            class=\"mb-20\"\n            :mode=\"mode\"\n          />\n        </Tab>\n      </Tabbed>\n      <Banner\n        v-else\n        color=\"warning\"\n        :label=\"t('prometheusRule.groups.none')\"\n      />\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n.container-group {\n  position: relative;\n\n  .remove {\n    position: absolute;\n    top: -40px;\n    right: 5px;\n  }\n\n  .row:not(:first-child) {\n    margin-top: 20px;\n  }\n}\n</style>\n"]}]}