{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/SecretType.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/SecretType.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFNFUlZJQ0VfQUNDT1VOVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIFtTdHJpbmcsIE9iamVjdF0sCiAgICAgIGRlZmF1bHQ6ICdPcGFxdWUnCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgaWYgKHRoaXMudmFsdWUudHlwZURpc3BsYXkpIHsKICAgICAgdGhpcy5maW5kU2VydmljZUFjY291bnQoKTsKCiAgICAgIHJldHVybiB7IHR5cGVEaXNwbGF5OiB0aGlzLnZhbHVlLnR5cGVEaXNwbGF5LCBzZXJ2aWNlQWNjb3VudExpbms6IG51bGwgfTsKICAgIH0KCiAgICByZXR1cm4geyB0eXBlRGlzcGxheTogdGhpcy52YWx1ZSwgc2VydmljZUFjY291bnRMaW5rOiBudWxsIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmaW5kU2VydmljZUFjY291bnQoKSB7CiAgICAgIGNvbnN0IHNlcnZpY2VBY2NvdW50ID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZCcsIHsgdHlwZTogU0VSVklDRV9BQ0NPVU5ULCBpZDogdGhpcy52YWx1ZS5zZXJ2aWNlQWNjb3VudElEIH0pOwoKICAgICAgaWYgKHNlcnZpY2VBY2NvdW50KSB7CiAgICAgICAgdGhpcy5zZXJ2aWNlQWNjb3VudExpbmsgPSBzZXJ2aWNlQWNjb3VudC5kZXRhaWxMb2NhdGlvbjsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["SecretType.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"SecretType.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport { SERVICE_ACCOUNT } from '@shell/config/types';\nexport default {\n  props: {\n    value: {\n      type:    [String, Object],\n      default: 'Opaque'\n    }\n  },\n  data() {\n    if (this.value.typeDisplay) {\n      this.findServiceAccount();\n\n      return { typeDisplay: this.value.typeDisplay, serviceAccountLink: null };\n    }\n\n    return { typeDisplay: this.value, serviceAccountLink: null };\n  },\n  methods: {\n    async findServiceAccount() {\n      const serviceAccount = await this.$store.dispatch('cluster/find', { type: SERVICE_ACCOUNT, id: this.value.serviceAccountID });\n\n      if (serviceAccount) {\n        this.serviceAccountLink = serviceAccount.detailLocation;\n      }\n    }\n  }\n};\n</script>>\n\n<template>\n  <nuxt-link\n    v-if=\"serviceAccountLink\"\n    :to=\"serviceAccountLink\"\n  >\n    {{ typeDisplay }}\n  </nuxt-link>\n  <div v-else>\n    {{ typeDisplay }}\n  </div>\n</template>\n"]}]}