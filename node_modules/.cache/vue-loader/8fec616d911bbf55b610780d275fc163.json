{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ExtensionPanel.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/ExtensionPanel.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IGdldEFwcGxpY2FibGVFeHRlbnNpb25FbmhhbmNlbWVudHMgfSBmcm9tICdAc2hlbGwvY29yZS9wbHVnaW4taGVscGVycyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogICdFeHRlbnNpb25QYW5lbCcsCiAgcHJvcHM6IHsKICAgIHJlc291cmNlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKICAgIHR5cGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGxvY2F0aW9uOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsgZXh0ZW5zaW9uRGF0YTogZ2V0QXBwbGljYWJsZUV4dGVuc2lvbkVuaGFuY2VtZW50cyh0aGlzLCB0aGlzLnR5cGUsIHRoaXMubG9jYXRpb24sIHRoaXMuJHJvdXRlKSB9OwogIH0sCn07Cg=="},{"version":3,"sources":["ExtensionPanel.vue"],"names":[],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExtensionPanel.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\n\nexport default {\n  name:  'ExtensionPanel',\n  props: {\n    resource: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    type: {\n      type:    String,\n      default: ''\n    },\n    location: {\n      type:    String,\n      default: ''\n    },\n  },\n  data() {\n    return { extensionData: getApplicableExtensionEnhancements(this, this.type, this.location, this.$route) };\n  },\n};\n</script>\n\n<template>\n  <div\n    v-if=\"extensionData.length\"\n  >\n    <div\n      v-for=\"item, i in extensionData\"\n      :key=\"`extensionData${location}${i}`\"\n    >\n      <component\n        :is=\"item.component\"\n        :resource=\"resource\"\n      />\n    </div>\n  </div>\n</template>\n"]}]}