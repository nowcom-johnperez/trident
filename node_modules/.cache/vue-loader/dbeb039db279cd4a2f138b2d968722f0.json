{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/alerting/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/alerting/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBpc0VtcHR5IGZyb20gJ2xvZGFzaC9pc0VtcHR5JzsKCmltcG9ydCB7IENoZWNrYm94IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9DaGVja2JveCc7CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CmltcG9ydCB7IFJhZGlvR3JvdXAgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1JhZGlvJzsKCmNvbnN0IERFRkFVTFRfTU9OSVRPUklOR19OQU1FU1BBQ0UgPSAnY2F0dGxlLW1vbml0b3Jpbmctc3lzdGVtJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDaGVja2JveCwKICAgIExhYmVsZWRTZWxlY3QsCiAgICBSYWRpb0dyb3VwLAogIH0sCgogIHByb3BzOiB7CiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NyZWF0ZScsCiAgICB9LAoKICAgIHNlY3JldHM6IHsKICAgICAgdHlwZTogICAgQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFtdLAogICAgfSwKCiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+ICh7fSksCiAgICB9LAogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VFeGlzdGluZ0xhYmVsczogWwogICAgICAgIHRoaXMudCgnbW9uaXRvcmluZy5hbGVydGluZy5zZWNyZXRzLm5ldycpLAogICAgICAgIHRoaXMudCgnbW9uaXRvcmluZy5hbGVydGluZy5zZWNyZXRzLmV4aXN0aW5nJyksCiAgICAgIF0sCiAgICAgIHVzZUV4aXN0aW5nT3B0aW9uczogW2ZhbHNlLCB0cnVlXSwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIGFsbFNlY3JldHMoKSB7CiAgICAgIGNvbnN0IHsgc2VjcmV0cyB9ID0gdGhpczsKCiAgICAgIHJldHVybiBzZWNyZXRzCiAgICAgICAgLmZpbHRlcigKICAgICAgICAgIChzZWMpID0+IHNlYy5tZXRhZGF0YS5uYW1lc3BhY2UgPT09IERFRkFVTFRfTU9OSVRPUklOR19OQU1FU1BBQ0UKICAgICAgICApCiAgICAgICAgLm1hcCgoc2VjKSA9PiAoeyBsYWJlbDogc2VjLm1ldGFkYXRhLm5hbWUsIHZhbHVlOiBzZWMubWV0YWRhdGEubmFtZSB9KSk7CiAgICB9LAoKICAgIGNhblVzZUV4aXN0aW5nU2VjcmV0KCkgewogICAgICBjb25zdCB7IGZpbHRlcmVkU2VjcmV0cyB9ID0gdGhpczsKCiAgICAgIHJldHVybiAoCiAgICAgICAgZmlsdGVyZWRTZWNyZXRzLmxlbmd0aCA+IDAgJiYKICAgICAgICAhdGhpcy52YWx1ZS5hbGVydG1hbmFnZXIuYWxlcnRtYW5hZ2VyU3BlYy51c2VFeGlzdGluZ1NlY3JldAogICAgICApOwogICAgfSwKCiAgICBleGlzdGluZ1NlY3JldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuc2VjcmV0cy5maW5kKAogICAgICAgIChzZWMpID0+IHNlYz8ubWV0YWRhdGE/Lm5hbWUgPT09CiAgICAgICAgICAgICdhbGVydG1hbmFnZXItcmFuY2hlci1tb25pdG9yaW5nLWFsZXJ0bWFuYWdlcicgJiYKICAgICAgICAgIHNlYz8ubWV0YWRhdGE/Lm5hbWVzcGFjZSA9PT0gREVGQVVMVF9NT05JVE9SSU5HX05BTUVTUEFDRQogICAgICApOwogICAgfSwKCiAgICBmaWx0ZXJlZFNlY3JldHMoKSB7CiAgICAgIGNvbnN0IHsgc2VjcmV0cyB9ID0gdGhpczsKICAgICAgY29uc3QgZmlsdGVyZWQgPSBbXTsKCiAgICAgIHNlY3JldHMuZm9yRWFjaCgoc2VjcmV0KSA9PiB7CiAgICAgICAgaWYgKAogICAgICAgICAgc2VjcmV0Lm1ldGFkYXRhLm5hbWUgJiYKICAgICAgICAgIHNlY3JldC5tZXRhZGF0YS5uYW1lc3BhY2UgPT09IERFRkFVTFRfTU9OSVRPUklOR19OQU1FU1BBQ0UKICAgICAgICApIHsKICAgICAgICAgIGZpbHRlcmVkLnB1c2goc2VjcmV0Lm1ldGFkYXRhLm5hbWUpOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICByZXR1cm4gZmlsdGVyZWQ7CiAgICB9LAoKICAgIGZvcmNlQ3JlYXRlTmV3U2VjcmV0KCkgewogICAgICBjb25zdCB7IGZpbHRlcmVkU2VjcmV0cyB9ID0gdGhpczsKCiAgICAgIHJldHVybiBpc0VtcHR5KGZpbHRlcmVkU2VjcmV0cyk7CiAgICB9LAogIH0sCgogIHdhdGNoOiB7CiAgICBmaWx0ZXJlZFNlY3JldHMobmV3VmFsdWUsIG9sZFZhbHVlKSB7CiAgICAgIGlmIChpc0VtcHR5KG5ld1ZhbHVlKSkgewogICAgICAgIHRoaXMuJHNldCgKICAgICAgICAgIHRoaXMudmFsdWUuYWxlcnRtYW5hZ2VyLmFsZXJ0bWFuYWdlclNwZWMsCiAgICAgICAgICAndXNlRXhpc3RpbmdTZWNyZXQnLAogICAgICAgICAgZmFsc2UKICAgICAgICApOwogICAgICB9CgogICAgICBjb25zdCB7IGV4aXN0aW5nU2VjcmV0IH0gPSB0aGlzOwoKICAgICAgaWYgKGV4aXN0aW5nU2VjcmV0KSB7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgdGhpcy4kc2V0KAogICAgICAgICAgICB0aGlzLnZhbHVlLmFsZXJ0bWFuYWdlci5hbGVydG1hbmFnZXJTcGVjLAogICAgICAgICAgICAndXNlRXhpc3RpbmdTZWNyZXQnLAogICAgICAgICAgICB0cnVlCiAgICAgICAgICApOwogICAgICAgICAgdGhpcy4kc2V0KAogICAgICAgICAgICB0aGlzLnZhbHVlLmFsZXJ0bWFuYWdlci5hbGVydG1hbmFnZXJTcGVjLAogICAgICAgICAgICAnY29uZmlnU2VjcmV0JywKICAgICAgICAgICAgZXhpc3RpbmdTZWNyZXQubWV0YWRhdGEubmFtZQogICAgICAgICAgKTsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgICd2YWx1ZS5hbGVydG1hbmFnZXIuYWxlcnRtYW5hZ2VyU3BlYy51c2VFeGlzdGluZ1NlY3JldCcodXNlRXhpc3RpbmdTZWNyZXQpIHsKICAgICAgY29uc3QgeyBleGlzdGluZ1NlY3JldCB9ID0gdGhpczsKCiAgICAgIGlmICh1c2VFeGlzdGluZ1NlY3JldCkgewogICAgICAgIGlmIChleGlzdGluZ1NlY3JldD8ubWV0YWRhdGE/Lm5hbWUpIHsKICAgICAgICAgIHRoaXMuJHNldCgKICAgICAgICAgICAgdGhpcy52YWx1ZS5hbGVydG1hbmFnZXIuYWxlcnRtYW5hZ2VyU3BlYywKICAgICAgICAgICAgJ2NvbmZpZ1NlY3JldCcsCiAgICAgICAgICAgIGV4aXN0aW5nU2VjcmV0Lm1ldGFkYXRhLm5hbWUKICAgICAgICAgICk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLmFsZXJ0bWFuYWdlci5hbGVydG1hbmFnZXJTcGVjLCAnY29uZmlnU2VjcmV0JywgJycpOwogICAgICB9CiAgICB9LAogIH0sCgogIGJlZm9yZU1vdW50KCkgewogICAgY29uc3QgYW1TZWNyZXRzID0gdGhpcy52YWx1ZT8uYWxlcnRtYW5hZ2VyPy5hbGVydG1hbmFnZXJTcGVjPy5zZWNyZXRzID8/IFtdOwoKICAgIGlmICh0aGlzLmV4aXN0aW5nU2VjcmV0ICYmIGFtU2VjcmV0cy5sZW5ndGggPD0gMCkgewogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5hbGVydG1hbmFnZXIuYWxlcnRtYW5hZ2VyU3BlYywgJ3VzZUV4aXN0aW5nU2VjcmV0JywgdHJ1ZSk7CiAgICB9CiAgfSwKfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/chart/monitoring/alerting","sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\n\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { RadioGroup } from '@components/Form/Radio';\n\nconst DEFAULT_MONITORING_NAMESPACE = 'cattle-monitoring-system';\n\nexport default {\n  components: {\n    Checkbox,\n    LabeledSelect,\n    RadioGroup,\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n\n    secrets: {\n      type:    Array,\n      default: () => [],\n    },\n\n    value: {\n      type:    Object,\n      default: () => ({}),\n    },\n  },\n\n  data() {\n    return {\n      useExistingLabels: [\n        this.t('monitoring.alerting.secrets.new'),\n        this.t('monitoring.alerting.secrets.existing'),\n      ],\n      useExistingOptions: [false, true],\n    };\n  },\n\n  computed: {\n    allSecrets() {\n      const { secrets } = this;\n\n      return secrets\n        .filter(\n          (sec) => sec.metadata.namespace === DEFAULT_MONITORING_NAMESPACE\n        )\n        .map((sec) => ({ label: sec.metadata.name, value: sec.metadata.name }));\n    },\n\n    canUseExistingSecret() {\n      const { filteredSecrets } = this;\n\n      return (\n        filteredSecrets.length > 0 &&\n        !this.value.alertmanager.alertmanagerSpec.useExistingSecret\n      );\n    },\n\n    existingSecret() {\n      return this.secrets.find(\n        (sec) => sec?.metadata?.name ===\n            'alertmanager-rancher-monitoring-alertmanager' &&\n          sec?.metadata?.namespace === DEFAULT_MONITORING_NAMESPACE\n      );\n    },\n\n    filteredSecrets() {\n      const { secrets } = this;\n      const filtered = [];\n\n      secrets.forEach((secret) => {\n        if (\n          secret.metadata.name &&\n          secret.metadata.namespace === DEFAULT_MONITORING_NAMESPACE\n        ) {\n          filtered.push(secret.metadata.name);\n        }\n      });\n\n      return filtered;\n    },\n\n    forceCreateNewSecret() {\n      const { filteredSecrets } = this;\n\n      return isEmpty(filteredSecrets);\n    },\n  },\n\n  watch: {\n    filteredSecrets(newValue, oldValue) {\n      if (isEmpty(newValue)) {\n        this.$set(\n          this.value.alertmanager.alertmanagerSpec,\n          'useExistingSecret',\n          false\n        );\n      }\n\n      const { existingSecret } = this;\n\n      if (existingSecret) {\n        this.$nextTick(() => {\n          this.$set(\n            this.value.alertmanager.alertmanagerSpec,\n            'useExistingSecret',\n            true\n          );\n          this.$set(\n            this.value.alertmanager.alertmanagerSpec,\n            'configSecret',\n            existingSecret.metadata.name\n          );\n        });\n      }\n    },\n    'value.alertmanager.alertmanagerSpec.useExistingSecret'(useExistingSecret) {\n      const { existingSecret } = this;\n\n      if (useExistingSecret) {\n        if (existingSecret?.metadata?.name) {\n          this.$set(\n            this.value.alertmanager.alertmanagerSpec,\n            'configSecret',\n            existingSecret.metadata.name\n          );\n        }\n      } else {\n        this.$set(this.value.alertmanager.alertmanagerSpec, 'configSecret', '');\n      }\n    },\n  },\n\n  beforeMount() {\n    const amSecrets = this.value?.alertmanager?.alertmanagerSpec?.secrets ?? [];\n\n    if (this.existingSecret && amSecrets.length <= 0) {\n      this.$set(this.value.alertmanager.alertmanagerSpec, 'useExistingSecret', true);\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"title\">\n      <h3><t k=\"monitoring.alerting.title\" /></h3>\n    </div>\n    <div class=\"alerting-config\">\n      <div class=\"row\">\n        <div class=\"col span-6\">\n          <Checkbox\n            v-model=\"value.alertmanager.enabled\"\n            :label=\"t('monitoring.alerting.enable.label')\"\n          />\n        </div>\n      </div>\n      <template v-if=\"value.alertmanager.enabled\">\n        <div class=\"row\">\n          <div class=\"col span-6\">\n            <RadioGroup\n              v-model=\"value.alertmanager.alertmanagerSpec.useExistingSecret\"\n              name=\"useExistingSecret\"\n              :disabled=\"forceCreateNewSecret\"\n              label-key=\"monitoring.alerting.secrets.radio.label\"\n              :tooltip=\"t('monitoring.alerting.secrets.info', {}, raw=true)\"\n              :mode=\"mode\"\n              :labels=\"useExistingLabels\"\n              :options=\"useExistingOptions\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-if=\"value.alertmanager.alertmanagerSpec.useExistingSecret\"\n              v-model=\"value.alertmanager.alertmanagerSpec.configSecret\"\n              class=\"provider\"\n              :label=\"t('monitoring.alerting.secrets.label')\"\n              :options=\"filteredSecrets\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"allSecrets.length > 0\"\n          class=\"row\"\n        >\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-model=\"value.alertmanager.alertmanagerSpec.secrets\"\n              :options=\"allSecrets\"\n              :label=\"t('monitoring.alerting.secrets.additional.label')\"\n              :mode=\"mode\"\n              :multiple=\"true\"\n            />\n          </div>\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.alerting-config {\n  > .row {\n    padding: 10px 0;\n  }\n  .banner {\n    &.info {\n      margin-bottom: 0;\n      margin-top: 0;\n    }\n  }\n}\n</style>\n"]}]}