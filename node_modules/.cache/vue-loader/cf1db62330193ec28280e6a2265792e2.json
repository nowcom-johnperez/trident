{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/auth/ldap/config.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/auth/ldap/config.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFJhZGlvR3JvdXAgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1JhZGlvJzsKaW1wb3J0IHsgTGFiZWxlZElucHV0IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQnOwppbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vQ2hlY2tib3gnOwppbXBvcnQgVW5pdElucHV0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vVW5pdElucHV0JzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IEZpbGVTZWxlY3RvciBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0ZpbGVTZWxlY3Rvcic7CmltcG9ydCB7IE9LVEEsIFNISUJCT0xFVEggfSBmcm9tICcuLi9zYW1sJzsKCmNvbnN0IERFRkFVTFRfTk9OX1RMU19QT1JUID0gMzg5Owpjb25zdCBERUZBVUxUX1RMU19QT1JUID0gNjM2OwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIFJhZGlvR3JvdXAsCiAgICBMYWJlbGVkSW5wdXQsCiAgICBCYW5uZXIsCiAgICBDaGVja2JveCwKICAgIFVuaXRJbnB1dCwKICAgIEZpbGVTZWxlY3RvcgogIH0sCgogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICAgT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2VkaXQnCiAgICB9LAoKICAgIHR5cGU6IHsKICAgICAgdHlwZTogICAgIFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCgogICAgaXNDcmVhdGU6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KCiAgfSwKCiAgZGF0YSgpIHsKICAgIGlmICghdGhpcy52YWx1ZS5zZXJ2ZXJzKSB7CiAgICAgIHRoaXMudmFsdWUuc2VydmVycyA9IFtdOwogICAgfQoKICAgIHJldHVybiB7CiAgICAgIG1vZGVsOiAgICAgICAgIHRoaXMudmFsdWUsCiAgICAgIGhvc3RuYW1lOiAgICAgIHRoaXMudmFsdWUuc2VydmVycy5qb2luKCcsJyksCiAgICAgIHNlcnZlclNldHRpbmc6IG51bGwsCiAgICAgIE9LVEEKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC8vIERvZXMgdGhlIGF1dGggcHJvdmlkZXIgc3VwcG9ydCBMREFQIGZvciBzZWFyY2ggaW4gYWRkaXRpb24gdG8gU0FNTD8KICAgIGlzU2FtbFByb3ZpZGVyKCkgewogICAgICByZXR1cm4gdGhpcy50eXBlID09PSBTSElCQk9MRVRIIHx8IHRoaXMudHlwZSA9PT0gT0tUQTsKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgaG9zdG5hbWUobmV1LCBvbGQpIHsKICAgICAgdGhpcy52YWx1ZS5zZXJ2ZXJzID0gbmV1LnNwbGl0KCcsJyk7CiAgICB9LAogICAgJ21vZGVsLnN0YXJ0dGxzJyhuZXUpIHsKICAgICAgaWYgKG5ldSkgewogICAgICAgIHRoaXMubW9kZWwudGxzID0gZmFsc2U7CiAgICAgIH0KICAgIH0sCiAgICAnbW9kZWwudGxzJyhuZXUpIHsKICAgICAgaWYgKG5ldSkgewogICAgICAgIHRoaXMubW9kZWwuc3RhcnR0bHMgPSBmYWxzZTsKICAgICAgfQoKICAgICAgY29uc3QgZXhwZWN0ZWRDdXJyZW50RGVmYXVsdCA9IG5ldSA/IERFRkFVTFRfTk9OX1RMU19QT1JUIDogREVGQVVMVF9UTFNfUE9SVDsKICAgICAgY29uc3QgbmV3RGVmYXVsdCA9IG5ldSA/IERFRkFVTFRfVExTX1BPUlQgOiBERUZBVUxUX05PTl9UTFNfUE9SVDsKCiAgICAgIC8vIE5vdGU6IFRoZSBkZWZhdWx0IHBvcnQgdmFsdWUgaXMgYSBudW1iZXIKICAgICAgLy8gSWYgdGhlIHVzZXIgZWRpdHMgdGhpcyB2YWx1ZSwgdGhlIHR5cGUgd2lsbCBiZSBhIHN0cmluZwogICAgICAvLyBUaHVzLCB3ZSB3aWxsIG9ubHkgY2hhbmdlIHRoZSB2YWx1ZSB3aGVuIHRoZSB1c2VyIHRvZ2dsZXMgdGhlIFRMUyBmbGFnIGlmIHRoZXkgaGF2ZQogICAgICAvLyBOT1QgZWRpdGVkIHRoZSBwb3J0IHZhbHVlIGluIGFueSB3YXkKICAgICAgaWYgKHRoaXMubW9kZWwucG9ydCA9PT0gZXhwZWN0ZWRDdXJyZW50RGVmYXVsdCkgewogICAgICAgIHRoaXMudmFsdWUucG9ydCA9IG5ld0RlZmF1bHQ7CiAgICAgIH0KICAgIH0KICB9LAoKfTsK"},{"version":3,"sources":["config.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"config.vue","sourceRoot":"node_modules/@rancher/shell/edit/auth/ldap","sourcesContent":["<script>\nimport { RadioGroup } from '@components/Form/Radio';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { Banner } from '@components/Banner';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport { OKTA, SHIBBOLETH } from '../saml';\n\nconst DEFAULT_NON_TLS_PORT = 389;\nconst DEFAULT_TLS_PORT = 636;\n\nexport default {\n  components: {\n    RadioGroup,\n    LabeledInput,\n    Banner,\n    Checkbox,\n    UnitInput,\n    FileSelector\n  },\n\n  props: {\n    value: {\n      type:     Object,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: 'edit'\n    },\n\n    type: {\n      type:     String,\n      required: true\n    },\n\n    isCreate: {\n      type:    Boolean,\n      default: false\n    }\n\n  },\n\n  data() {\n    if (!this.value.servers) {\n      this.value.servers = [];\n    }\n\n    return {\n      model:         this.value,\n      hostname:      this.value.servers.join(','),\n      serverSetting: null,\n      OKTA\n    };\n  },\n\n  computed: {\n    // Does the auth provider support LDAP for search in addition to SAML?\n    isSamlProvider() {\n      return this.type === SHIBBOLETH || this.type === OKTA;\n    }\n  },\n\n  watch: {\n    hostname(neu, old) {\n      this.value.servers = neu.split(',');\n    },\n    'model.starttls'(neu) {\n      if (neu) {\n        this.model.tls = false;\n      }\n    },\n    'model.tls'(neu) {\n      if (neu) {\n        this.model.starttls = false;\n      }\n\n      const expectedCurrentDefault = neu ? DEFAULT_NON_TLS_PORT : DEFAULT_TLS_PORT;\n      const newDefault = neu ? DEFAULT_TLS_PORT : DEFAULT_NON_TLS_PORT;\n\n      // Note: The default port value is a number\n      // If the user edits this value, the type will be a string\n      // Thus, we will only change the value when the user toggles the TLS flag if they have\n      // NOT edited the port value in any way\n      if (this.model.port === expectedCurrentDefault) {\n        this.value.port = newDefault;\n      }\n    }\n  },\n\n};\n</script>\n\n<template>\n  <div @input=\"$emit('input', model)\">\n    <template>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"hostname\"\n            required\n            :mode=\"mode\"\n            :hoover-tooltip=\"true\"\n            :tooltip=\"t('authConfig.ldap.hostname.hint')\"\n            :label=\"t('authConfig.ldap.hostname.label')\"\n            :placeholder=\"t('authConfig.ldap.hostname.placeholder')\"\n          />\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            :value=\"model.port\"\n            type=\"number\"\n            required\n            :min=\"0\"\n            :step=\"1\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.port')\"\n            @input=\"e=>$set(model, 'port', e.replace(/[^0-9]*/g, ''))\"\n          />\n        </div>\n\n        <div class=\"col\">\n          <Checkbox\n            v-model=\"model.tls\"\n            :mode=\"mode\"\n            class=\"full-height\"\n            :label=\"t('authConfig.ldap.tls')\"\n          />\n        </div>\n        <div class=\"col span-1\">\n          <Checkbox\n            v-model=\"model.starttls\"\n            :tooltip=\"t('authConfig.ldap.starttls.tip')\"\n            :mode=\"mode\"\n            class=\"full-height\"\n            :label=\"t('authConfig.ldap.starttls.label')\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"model.tls || model.starttls\"\n        class=\"row mb-20\"\n      >\n        <div class=\"col span-12\">\n          <LabeledInput\n            v-model=\"model.certificate\"\n            required\n            type=\"multiline\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.cert')\"\n          />\n          <FileSelector\n            class=\"role-tertiary add mt-5\"\n            :label=\"t('generic.readFromFile')\"\n            :mode=\"mode\"\n            @selected=\"$set(model, 'certificate', $event)\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <UnitInput\n            v-model=\"model.connectionTimeout\"\n            required\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.serverConnectionTimeout')\"\n            suffix=\"milliseconds\"\n          />\n        </div>\n      </div>\n      <Banner\n        color=\"info\"\n        :label=\"t('authConfig.ldap.serviceAccountInfo')\"\n      />\n      <div class=\"row mb-20\">\n        <div\n          v-if=\"type==='activedirectory'\"\n          class=\"col span-6\"\n        >\n          <LabeledInput\n            v-model=\"model.serviceAccountUsername\"\n            required\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.serviceAccountDN')\"\n          />\n        </div>\n\n        <div\n          v-else\n          class=\"col span-6\"\n        >\n          <LabeledInput\n            v-model=\"model.serviceAccountDistinguishedName\"\n            required\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.serviceAccountDN')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.serviceAccountPassword\"\n            required\n            type=\"password\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.serviceAccountPassword')\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"type==='activedirectory'\"\n        class=\"row mb-20\"\n      >\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.defaultLoginDomain\"\n            :hoover-tooltip=\"true\"\n            :tooltip=\"t('authConfig.ldap.defaultLoginDomain.hint')\"\n            :placeholder=\"t('authConfig.ldap.defaultLoginDomain.placeholder')\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.defaultLoginDomain.label')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userSearchBase\"\n            required\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.userSearchBase.label')\"\n            :placeholder=\"t('authConfig.ldap.userSearchBase.placeholder')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupSearchBase\"\n            :mode=\"mode\"\n            :placeholder=\"t('authConfig.ldap.groupSearchBase.placeholder')\"\n            :label=\"t('authConfig.ldap.groupSearchBase.label')\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <h3>  {{ t('authConfig.ldap.customizeSchema') }}</h3>\n      </div>\n      <Banner\n        v-if=\"type === OKTA && isCreate\"\n        class=\"row\"\n        color=\"info\"\n        label-key=\"authConfig.ldap.oktaSchema\"\n      />\n      <div class=\"row\">\n        <div class=\"col span-6\">\n          <h4>{{ t('authConfig.ldap.users') }}</h4>\n        </div>\n        <div class=\"col span-6\">\n          <h4>{{ t('authConfig.ldap.groups') }}</h4>\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userObjectClass\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.objectClass')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupObjectClass\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.objectClass')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userNameAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.usernameAttribute')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupNameAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.nameAttribute')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userLoginAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.loginAttribute')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupMemberUserAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.groupMemberUserAttribute')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userMemberAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.userMemberAttribute')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupSearchAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.searchAttribute')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userSearchAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.searchAttribute')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupSearchFilter\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.searchFilter')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userSearchFilter\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.searchFilter')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupMemberMappingAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.groupMemberMappingAttribute')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.userEnabledAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.userEnabledAttribute')\"\n          />\n        </div>\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.groupDNAttribute\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.groupDNAttribute')\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-20\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"model.disabledStatusBitmask\"\n            :mode=\"mode\"\n            :label=\"t('authConfig.ldap.disabledStatusBitmask')\"\n          />\n        </div>\n        <div\n          v-if=\"!isSamlProvider\"\n          class=\" col span-6\"\n        >\n          <RadioGroup\n            v-model=\"model.nestedGroupMembershipEnabled\"\n            :mode=\"mode\"\n            name=\"nested\"\n            class=\"full-height\"\n            :options=\"[true, false]\"\n            :labels=\"[t('authConfig.ldap.nestedGroupMembership.options.nested'), t('authConfig.ldap.nestedGroupMembership.options.direct')]\"\n          />\n        </div>\n      </div>\n    </template>\n  </div>\n</template>\n"]}]}