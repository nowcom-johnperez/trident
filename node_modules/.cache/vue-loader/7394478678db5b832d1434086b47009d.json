{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/Reference.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/Reference.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgZmlsdGVyQnkgfSBmcm9tICdAc2hlbGwvdXRpbHMvYXJyYXknOwppbXBvcnQgeyBQVkMsIFNUT1JBR0VfQ0xBU1MgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IFF1ZXN0aW9uIGZyb20gJy4vUXVlc3Rpb24nOwoKLy8gT2xkZXIgdmVyc2lvbnMgb2YgcmFuY2hlciBkb2N1bWVudCB0aGVzZSB3b3JkcyBhcyB2YWxpZCB0eXBlcwpjb25zdCBMRUdBQ1lfTUFQID0gewogIHN0b3JhZ2VjbGFzczogU1RPUkFHRV9DTEFTUywKICBwdmM6ICAgICAgICAgIFBWQywKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IExhYmVsZWRJbnB1dCwgTGFiZWxlZFNlbGVjdCB9LAogIG1peGluczogICAgIFtRdWVzdGlvbl0sCgogIHByb3BzOiB7CiAgICBpblN0b3JlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NsdXN0ZXInLAogICAgfSwKCiAgICB0YXJnZXROYW1lc3BhY2U6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiBudWxsLAogICAgfSwKICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGlmICggdGhpcy50eXBlU2NoZW1hICkgewogICAgICB0aGlzLmFsbCA9IGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKGAkeyB0aGlzLmluU3RvcmUgfS9maW5kQWxsYCwgeyB0eXBlOiB0aGlzLnR5cGVOYW1lIH0pOwogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCB0ID0gdGhpcy5xdWVzdGlvbi50eXBlOwoKICAgIGxldCB0eXBlTmFtZTsKCiAgICBjb25zdCBtYXRjaCA9IHQubWF0Y2goL15yZWZlcmVuY2VcWyguKilcXSQvKTsKCiAgICBpZiAoIG1hdGNoICkgewogICAgICB0eXBlTmFtZSA9IG1hdGNoPy5bMV07CiAgICB9IGVsc2UgewogICAgICB0eXBlTmFtZSA9IExFR0FDWV9NQVBbdF0gfHwgdDsKICAgIH0KCiAgICBsZXQgdHlwZVNjaGVtYTsKCiAgICBpZiAoIHR5cGVOYW1lICkgewogICAgICB0eXBlU2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1tgJHsgdGhpcy5pblN0b3JlIH0vc2NoZW1hRm9yYF0odHlwZU5hbWUpOwogICAgfQoKICAgIHJldHVybiB7CiAgICAgIHR5cGVOYW1lLAogICAgICB0eXBlU2NoZW1hLAogICAgICBhbGw6IFtdLAogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgaXNOYW1lc3BhY2VkKCkgewogICAgICByZXR1cm4gISF0aGlzLnR5cGVTY2hlbWE/LmF0dHJpYnV0ZXM/Lm5hbWVzcGFjZWQ7CiAgICB9LAoKICAgIG9wdGlvbnMoKSB7CiAgICAgIGxldCBvdXQgPSB0aGlzLmFsbDsKCiAgICAgIGlmICggdGhpcy5pc05hbWVzcGFjZWQgKSB7CiAgICAgICAgb3V0ID0gZmlsdGVyQnkodGhpcy5hbGwsICdtZXRhZGF0YS5uYW1lc3BhY2UnLCB0aGlzLnRhcmdldE5hbWVzcGFjZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBvdXQubWFwKCh4KSA9PiB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsOiB4Lm5hbWVEaXNwbGF5IHx8IHgubWV0YWRhdGEubmFtZSwKICAgICAgICAgIHZhbHVlOiB4Lm1ldGFkYXRhLm5hbWUKICAgICAgICB9OwogICAgICB9KTsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["Reference.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Reference.vue","sourceRoot":"node_modules/@rancher/shell/components/Questions","sourcesContent":["<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { filterBy } from '@shell/utils/array';\nimport { PVC, STORAGE_CLASS } from '@shell/config/types';\nimport Question from './Question';\n\n// Older versions of rancher document these words as valid types\nconst LEGACY_MAP = {\n  storageclass: STORAGE_CLASS,\n  pvc:          PVC,\n};\n\nexport default {\n  components: { LabeledInput, LabeledSelect },\n  mixins:     [Question],\n\n  props: {\n    inStore: {\n      type:    String,\n      default: 'cluster',\n    },\n\n    targetNamespace: {\n      type:    String,\n      default: null,\n    },\n  },\n\n  async fetch() {\n    if ( this.typeSchema ) {\n      this.all = await this.$store.dispatch(`${ this.inStore }/findAll`, { type: this.typeName });\n    }\n  },\n\n  data() {\n    const t = this.question.type;\n\n    let typeName;\n\n    const match = t.match(/^reference\\[(.*)\\]$/);\n\n    if ( match ) {\n      typeName = match?.[1];\n    } else {\n      typeName = LEGACY_MAP[t] || t;\n    }\n\n    let typeSchema;\n\n    if ( typeName ) {\n      typeSchema = this.$store.getters[`${ this.inStore }/schemaFor`](typeName);\n    }\n\n    return {\n      typeName,\n      typeSchema,\n      all: [],\n    };\n  },\n\n  computed: {\n    isNamespaced() {\n      return !!this.typeSchema?.attributes?.namespaced;\n    },\n\n    options() {\n      let out = this.all;\n\n      if ( this.isNamespaced ) {\n        out = filterBy(this.all, 'metadata.namespace', this.targetNamespace);\n      }\n\n      return out.map((x) => {\n        return {\n          label: x.nameDisplay || x.metadata.name,\n          value: x.metadata.name\n        };\n      });\n    }\n  },\n};\n</script>\n\n<template>\n  <div\n    v-if=\"typeSchema\"\n    class=\"row\"\n  >\n    <div class=\"col span-6\">\n      <LabeledSelect\n        :mode=\"mode\"\n        :options=\"options\"\n        :disabled=\"$fetchState.pending || disabled\"\n        :label=\"displayLabel\"\n        :placeholder=\"question.description\"\n        :required=\"question.required\"\n        :value=\"value\"\n        :tooltip=\"displayTooltip\"\n        @input=\"!$fetchState.pending && $emit('input', $event)\"\n      />\n    </div>\n    <div class=\"col span-6 mt-10\">\n      {{ typeSchema.attributes.kind }}<span v-if=\"isNamespaced\"> in namespace {{ targetNamespace }}</span>\n      <div v-if=\"showDescription\">\n        {{ question.description }}\n      </div>\n    </div>\n  </div>\n  <div\n    v-else\n    class=\"row\"\n  >\n    <div class=\"col span-6\">\n      <LabeledInput\n        :mode=\"mode\"\n        :disabled=\"$fetchState.pending || disabled\"\n        :label=\"displayLabel\"\n        :placeholder=\"question.description\"\n        :required=\"question.required\"\n        :value=\"value\"\n        :tooltip=\"displayTooltip\"\n        @input=\"!$fetchState.pending && $emit('input', $event)\"\n      />\n    </div>\n    <div class=\"col span-6 mt-10\">\n      {{ question.type }}<span v-if=\"isNamespaced\"> in namespace {{ targetNamespace }}</span>\n      <div v-if=\"showDescription\">\n        {{ question.description }}\n      </div>\n      <div class=\"text-error\">\n        (You do not have access to list this type)\n      </div>\n    </div>\n  </div>\n</template>\n"]}]}