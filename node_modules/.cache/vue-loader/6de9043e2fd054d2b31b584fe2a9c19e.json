{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/explorer/tools/index.vue?vue&type=style&index=0&id=3ab32096&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/explorer/tools/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiRtYXJnaW46IDEwcHg7CiRsb2dvOiA1MHB4OwoKLmdyaWQgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0OwogIGZsZXgtd3JhcDogd3JhcDsKICBtYXJnaW46IDAgLTEqJG1hcmdpbjsKCiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiBtYXAtZ2V0KCRicmVha3BvaW50cywgJy0tdmlld3BvcnQtNCcpKSB7CiAgICAuaXRlbSB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgfQogIH0KICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IG1hcC1nZXQoJGJyZWFrcG9pbnRzLCAnLS12aWV3cG9ydC03JykpIHsKICAgIC5pdGVtIHsKICAgICAgd2lkdGg6IDEwMCU7CiAgICB9CiAgfQogIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsICctLXZpZXdwb3J0LTknKSkgewogICAgLml0ZW0gewogICAgICB3aWR0aDogY2FsYyg1MCUgLSAyICogI3skbWFyZ2lufSk7CiAgICB9CiAgfQogIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogbWFwLWdldCgkYnJlYWtwb2ludHMsICctLXZpZXdwb3J0LTEyJykpIHsKICAgIC5pdGVtIHsKICAgICAgd2lkdGg6IGNhbGMoMzMuMzMzMzMlIC0gMiAqICN7JG1hcmdpbn0pOwogICAgfQogIH0KCiAgLml0ZW0gewogICAgZGlzcGxheTogZ3JpZDsKICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICAibG9nbyBuYW1lLXZlcnNpb24gbmFtZS12ZXJzaW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICJkZXNjcmlwdGlvbiBkZXNjcmlwdGlvbiBkZXNjcmlwdGlvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAic3RhdGUgc3RhdGUgYWN0aW9uIjsKICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogJGxvZ28gYXV0byBtaW4tY29udGVudDsKICAgIGdyaWQtdGVtcGxhdGUtcm93czogNTBweCA1NXB4IDM1cHg7CiAgICByb3ctZ2FwOiAkbWFyZ2luOwogICAgY29sdW1uLWdhcDogJG1hcmdpbjsKCiAgICBtYXJnaW46ICRtYXJnaW47CiAgICBwYWRkaW5nOiAkbWFyZ2luOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tYm9yZGVyKTsKICAgIGJvcmRlci1yYWRpdXM6IGNhbGMoIDEuNSAqIHZhcigtLWJvcmRlci1yYWRpdXMpKTsKCiAgICAubG9nbyB7CiAgICAgIGdyaWQtYXJlYTogbG9nbzsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICB3aWR0aDogJGxvZ287CiAgICAgIGhlaWdodDogJGxvZ287CiAgICAgIGJvcmRlci1yYWRpdXM6IGNhbGMoMiAqIHZhcigtLWJvcmRlci1yYWRpdXMpKTsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CgogICAgICAmLmxlZ2FjeSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICAgIH0KCiAgICAgIGltZyB7CiAgICAgICAgd2lkdGg6ICRsb2dvIC0gNHB4OwogICAgICAgIGhlaWdodDogJGxvZ28gLSA0cHg7CiAgICAgICAgb2JqZWN0LWZpdDogY29udGFpbjsKICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAgICAgdG9wOiAycHg7CiAgICAgIH0KCiAgICAgID4gaSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYm94LWJnKTsKICAgICAgICBib3JkZXItcmFkaXVzOiA1MCU7CiAgICAgICAgZm9udC1zaXplOiAzMnB4OwogICAgICAgIGxpbmUtaGVpZ2h0OiA1MHB4OwogICAgICAgIHdpZHRoOiA1MHB4OwogICAgICB9CiAgICB9CgogICAgLm5hbWUtdmVyc2lvbiB7CiAgICAgIGdyaWQtYXJlYTogbmFtZS12ZXJzaW9uOwogICAgICBwYWRkaW5nOiAxMHB4IDAgMCAwOwogICAgfQoKICAgIC5uYW1lIHsKICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAgIG1hcmdpbjogMDsKICAgIH0KCiAgICAub3MtbGFiZWwgewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIHRvcDogMTBweDsKICAgICAgcmlnaHQ6IDEwcHg7CiAgICAgIHBhZGRpbmc6IDNweDsKICAgICAgZm9udC1zaXplOiAxMnB4OwogICAgICBsaW5lLWhlaWdodDogMTJweDsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7CiAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LXRleHQpOwogICAgfQoKICAgIC52ZXJzaW9uIHsKICAgICAgY29sb3I6IHZhcigtLW11dGVkKTsKICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAgIGZvbnQtc2l6ZTogMC45ZW07CiAgICAgIG1hcmdpbi10b3A6IDRweDsKICAgIH0KCiAgICAuZGVzY3JpcHRpb24gewogICAgICBncmlkLWFyZWE6IGRlc2NyaXB0aW9uOwogICAgfQoKICAgIC5kZXNjcmlwdGlvbi1jb250ZW50IHsKICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7CiAgICAgIC13ZWJraXQtYm94LW9yaWVudDogdmVydGljYWw7CiAgICAgIC13ZWJraXQtbGluZS1jbGFtcDogMzsKICAgICAgbGluZS1jbGFtcDogMzsKICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAgIGNvbG9yOiB2YXIoLS10ZXh0LW11dGVkKTsKICAgIH0KCiAgICAuc3RhdGUgewogICAgICBncmlkLWFyZWE6IHN0YXRlOwogICAgfQoKICAgIC5hY3Rpb24gewogICAgICBncmlkLWFyZWE6IGFjdGlvbjsKICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKCiAgICAgIGJ1dHRvbiB7CiAgICAgICAgaGVpZ2h0OiAzMHB4OwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAqifile":"index.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/explorer/tools","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport Loading from '@shell/components/Loading';\nimport { _FLAGGED, DEPRECATED, HIDDEN, FROM_TOOLS } from '@shell/config/query-params';\nimport { filterAndArrangeCharts } from '@shell/store/catalog';\nimport { CATALOG, MANAGEMENT, NORMAN } from '@shell/config/types';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport LazyImage from '@shell/components/LazyImage';\nimport AppSummaryGraph from '@shell/components/formatter/AppSummaryGraph';\nimport { sortBy } from '@shell/utils/sort';\nimport { LEGACY } from '@shell/store/features';\nimport { isAlternate } from '@shell/utils/platform';\nimport IconMessage from '@shell/components/IconMessage';\nimport TypeDescription from '@shell/components/TypeDescription';\n\nexport default {\n  components: {\n    AppSummaryGraph, LazyImage, Loading, IconMessage, TypeDescription\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load', { force: true, reset: true });\n\n    const query = this.$route.query;\n    const projects = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT });\n\n    this.showDeprecated = query[DEPRECATED] === _FLAGGED;\n    this.showHidden = query[HIDDEN] === _FLAGGED;\n\n    this.allInstalled = await this.$store.dispatch('cluster/findAll', { type: CATALOG.APP });\n\n    // If legacy feature flag enabled\n    if (this.legacyEnabled) {\n      const res = await this.$store.dispatch('management/findMatching', {\n        type:     MANAGEMENT.CATALOG_TEMPLATE,\n        selector: 'catalog.cattle.io/name=system-library'\n      });\n\n      if (res) {\n        this.v1SystemCatalog = res.reduce((map, template) => {\n          map[template.spec.displayName] = template;\n\n          return map;\n        }, {});\n      } else {\n        this.v1SystemCatalog = {};\n      }\n\n      // Need the project ID of the system project in order to get the apps\n      const systemProject = projects.find((p) => p.spec?.displayName === 'System');\n\n      if (systemProject) {\n        const id = systemProject.id.replace('/', ':');\n\n        this.systemProject = id;\n        await this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.APP,\n          opt:  { url: `/v3/project/${ id }/apps`, force: true }\n        });\n      }\n    }\n  },\n\n  data() {\n    const legacyEnabled = this.$store.getters['features/get'](LEGACY);\n\n    return {\n      allInstalled:    null,\n      v1SystemCatalog: null,\n      systemProject:   null,\n      legacyEnabled,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    ...mapGetters({ allCharts: 'catalog/charts', loadingErrors: 'catalog/errors' }),\n    ...mapGetters({ t: 'i18n/t' }),\n\n    v1Apps() {\n      return this.$store.getters['rancher/all'](NORMAN.APP);\n    },\n\n    namespaces() {\n      return this.$store.getters['activeNamespaceCache'];\n    },\n\n    rancherCatalog() {\n      return this.$store.getters['catalog/repos'].find((x) => x.isRancher);\n    },\n\n    installedApps() {\n      return this.allInstalled;\n    },\n\n    installedAppForChart() {\n      const out = {};\n\n      for ( const app of this.installedApps ) {\n        const matching = app.matchingChart();\n\n        if ( !matching ) {\n          continue;\n        }\n\n        out[matching.id] = app;\n      }\n\n      return out;\n    },\n\n    options() {\n      const clusterProvider = this.currentCluster.status.provider || 'other';\n      const enabledCharts = (this.allCharts || []);\n\n      let charts = filterAndArrangeCharts(enabledCharts, {\n        clusterProvider,\n        showDeprecated: this.showDeprecated,\n        showHidden:     this.showHidden,\n        showRepos:      [this.rancherCatalog?._key],\n        showTypes:      [CATALOG_ANNOTATIONS._CLUSTER_TOOL],\n      });\n\n      charts = charts.filter((c) => c.sideLabel !== 'Experimental');\n\n      //  If legacy support is enabled, show V1 charts for some V1 Cluster tools\n      if (this.legacyEnabled) {\n        charts = charts.concat(this.legacyCharts);\n        charts = sortBy(charts, ['certifiedSort', 'chartNameDisplay']);\n      }\n\n      let chartsWithApps = charts.map((chart) => {\n        return {\n          chart,\n          app: this.installedAppForChart[chart.id],\n        };\n      });\n\n      // V1 Legacy support\n      if (this.legacyEnabled) {\n        chartsWithApps = this.checkLegacyApp(chartsWithApps, this.v1Apps, 'v1-monitoring', 'rancher-monitoring', 'cluster-monitoring', false);\n        chartsWithApps = this.checkLegacyApp(chartsWithApps, this.v1Apps, 'v1-istio', 'rancher-istio', 'cluster-istio', true);\n        chartsWithApps = this.checkLegacyApp(chartsWithApps, this.v1Apps, 'v1-logging', 'rancher-logging', 'rancher-logging', true);\n      }\n\n      return chartsWithApps;\n    },\n\n    legacyCharts() {\n      // Fake charts for the legacy V1 tools\n      return [\n        this._legacyChart('monitoring'),\n        this._legacyChart('logging'),\n        this._legacyChart('istio'),\n      ];\n    }\n  },\n\n  watch: {\n    namespaces() {\n      // When the namespaces change, check the v1 apps - might indicate add or removal of a v1 app\n      if (this.legacyEnabled && this.systemProject) {\n        this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.APP,\n          opt:  { url: `/v3/project/${ this.systemProject }/apps`, force: true }\n        });\n      }\n    }\n  },\n\n  mounted() {\n    window.c = this;\n  },\n\n  methods: {\n    _legacyChart(id) {\n      return {\n        certifiedSort:    1,\n        chartNameDisplay: this.t(`v1ClusterTools.${ id }.label`),\n        chartDescription: this.t(`v1ClusterTools.${ id }.description`),\n        id:               `v1-${ id }`,\n        chartName:        `v1-${ id }`,\n        key:              `v1-${ id }`,\n        versions:         this.getLegacyVersions(`rancher-${ id }`),\n        repoKey:          this.rancherCatalog?._key,\n        legacy:           true,\n        legacyPage:       id,\n        iconName:         `icon-${ id }`,\n      };\n    },\n\n    edit(app, version) {\n      app.goToUpgrade(version, true);\n    },\n\n    remove(app, event) {\n      const alt = isAlternate(event);\n\n      if (!alt) {\n        app.promptRemove();\n      } else {\n        // User held alt key, so don't prompt\n        app.remove();\n      }\n    },\n\n    install(chart) {\n      chart.goToInstall(FROM_TOOLS);\n    },\n\n    openV1Tool(id) {\n      const cluster = this.$store.getters['currentCluster'];\n      const route = {\n        name:   'c-cluster-explorer-tools-pages-page',\n        params: {\n          cluster: cluster.id,\n          product: 'explorer',\n          page:    id,\n        }\n      };\n\n      this.$router.replace(route);\n    },\n\n    getLegacyVersions(id) {\n      const versions = [];\n      const c = this.v1SystemCatalog?.[id];\n\n      if (c?.spec?.versions) {\n        c.spec.versions.forEach((v) => versions.push({ version: v.version }));\n      }\n\n      return versions;\n    },\n\n    checkLegacyApp(chartsWithApps, v1Apps, v1ChartName, v2ChartName, v1AppName, showOnlyIfInstalled) {\n      const v1 = chartsWithApps.find((a) => a.chart.chartName === v1ChartName);\n      const v2 = chartsWithApps.find((a) => a.chart.chartName === v2ChartName);\n\n      if (v1) {\n        const v1App = v1Apps.find((a) => a.id.indexOf(v1AppName) > 0);\n\n        v1.app = v1App;\n\n        // Add in the upgrade version information for a legacy v1 app\n        if (v1.app) {\n          v1.app.upgradeAvailable = undefined;\n          // Check if an upgrade is available\n          if (v1.chart.versions?.length) {\n            const latest = v1.chart.versions[0]?.version;\n\n            if (v1.app.currentVersion !== latest) {\n              v1.app.upgradeAvailable = latest;\n            }\n          }\n        } else if (showOnlyIfInstalled) {\n          // Remove the v1 chart if it is not already installed for charts which we no longer support\n          chartsWithApps = chartsWithApps.filter((c) => c !== v1);\n        }\n\n        if (v2) {\n          if (v1.app) {\n            v2.app = undefined;\n            v2.blocked = true;\n          } else if (v2.app) {\n            v1.blocked = true;\n          }\n        }\n      }\n\n      return chartsWithApps;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  $margin: 10px;\n  $logo: 50px;\n\n  .grid {\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    margin: 0 -1*$margin;\n\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-4')) {\n      .item {\n        width: 100%;\n      }\n    }\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-7')) {\n      .item {\n        width: 100%;\n      }\n    }\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-9')) {\n      .item {\n        width: calc(50% - 2 * #{$margin});\n      }\n    }\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-12')) {\n      .item {\n        width: calc(33.33333% - 2 * #{$margin});\n      }\n    }\n\n    .item {\n      display: grid;\n      grid-template-areas:  \"logo name-version name-version\"\n                            \"description description description\"\n                            \"state state action\";\n      grid-template-columns: $logo auto min-content;\n      grid-template-rows: 50px 55px 35px;\n      row-gap: $margin;\n      column-gap: $margin;\n\n      margin: $margin;\n      padding: $margin;\n      position: relative;\n      border: 1px solid var(--border);\n      border-radius: calc( 1.5 * var(--border-radius));\n\n      .logo {\n        grid-area: logo;\n        text-align: center;\n        width: $logo;\n        height: $logo;\n        border-radius: calc(2 * var(--border-radius));\n        overflow: hidden;\n        background-color: white;\n\n        &.legacy {\n          background-color: transparent;\n        }\n\n        img {\n          width: $logo - 4px;\n          height: $logo - 4px;\n          object-fit: contain;\n          position: relative;\n          top: 2px;\n        }\n\n        > i {\n          background-color: var(--box-bg);\n          border-radius: 50%;\n          font-size: 32px;\n          line-height: 50px;\n          width: 50px;\n        }\n      }\n\n      .name-version {\n        grid-area: name-version;\n        padding: 10px 0 0 0;\n      }\n\n      .name {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        margin: 0;\n      }\n\n      .os-label {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        padding: 3px;\n        font-size: 12px;\n        line-height: 12px;\n        background-color: var(--primary);\n        color: var(--primary-text);\n      }\n\n      .version {\n        color: var(--muted);\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        font-size: 0.9em;\n        margin-top: 4px;\n      }\n\n      .description {\n        grid-area: description;\n      }\n\n      .description-content {\n        display: -webkit-box;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 3;\n        line-clamp: 3;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        color: var(--text-muted);\n      }\n\n      .state {\n        grid-area: state;\n      }\n\n      .action {\n        grid-area: action;\n        white-space: nowrap;\n\n        button {\n          height: 30px;\n        }\n      }\n    }\n  }\n</style>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else-if=\"options.length\">\n    <h1 v-clean-html=\"t('catalog.tools.header')\" />\n    <TypeDescription\n      v-if=\"!legacyEnabled\"\n      resource=\"chart\"\n    />\n\n    <div class=\"grid\">\n      <div\n        v-for=\"opt in options\"\n        :key=\"opt.chart.id\"\n        class=\"item\"\n      >\n        <div\n          class=\"logo\"\n          :class=\"{'legacy': opt.chart.legacy}\"\n        >\n          <i\n            v-if=\"opt.chart.iconName\"\n            class=\"icon\"\n            :class=\"opt.chart.iconName\"\n          />\n          <LazyImage\n            v-else\n            :src=\"opt.chart.icon\"\n          />\n        </div>\n        <div class=\"name-version\">\n          <div>\n            <h3 class=\"name\">\n              {{ opt.chart.chartNameDisplay }}\n            </h3>\n            <label\n              v-if=\"opt.chart.deploysOnWindows\"\n              class=\"os-label\"\n            >{{ t('catalog.charts.deploysOnWindows') }}</label>\n          </div>\n          <div class=\"version\">\n            <template v-if=\"opt.app && opt.app.upgradeAvailable\">\n              v{{ opt.app.currentVersion }} <b><i class=\"icon icon-chevron-right\" /> v{{ opt.app.upgradeAvailable }}</b>\n            </template>\n            <template v-else-if=\"opt.app\">\n              v{{ opt.app.currentVersion }}\n            </template>\n            <template v-else-if=\"opt.chart.versions.length\">\n              v{{ opt.chart.versions[0].version }}\n            </template>\n          </div>\n        </div>\n        <div class=\"description\">\n          <div\n            v-clean-html=\"opt.chart.chartDescription\"\n            class=\"description-content\"\n          />\n        </div>\n        <div\n          v-if=\"opt.app && !opt.chart.legacy\"\n          class=\"state\"\n        >\n          <AppSummaryGraph\n            :row=\"opt.app\"\n            label-key=\"generic.resourceCount\"\n            :link-to=\"opt.app.detailLocation\"\n          />\n        </div>\n        <div class=\"action\">\n          <template v-if=\"opt.blocked\">\n            <button\n              v-clean-html=\"t('catalog.tools.action.install')\"\n              disabled=\"true\"\n              class=\"btn btn-sm role-primary\"\n            />\n          </template>\n          <template v-else-if=\"opt.app && opt.chart.legacy\">\n            <button\n              v-clean-html=\"t('catalog.tools.action.manage')\"\n              class=\"btn btn-sm role-secondary\"\n              @click=\"openV1Tool(opt.chart.legacyPage)\"\n            />\n          </template>\n          <template v-else-if=\"opt.app && opt.upgradeAvailable && !opt.chart.legacy\">\n            <button\n              class=\"btn btn-sm role-secondary\"\n              @click=\"remove(opt.app, $event)\"\n            >\n              <i class=\"icon icon-delete icon-lg\" />\n            </button>\n            <button\n              v-clean-html=\"t('catalog.tools.action.upgrade')\"\n              class=\"btn btn-sm role-secondary\"\n              @click=\"edit(opt.app, opt.app.upgradeAvailable)\"\n            />\n          </template>\n          <template v-else-if=\"opt.app\">\n            <button\n              class=\"btn btn-sm role-secondary\"\n              @click=\"remove(opt.app, $event)\"\n            >\n              <i class=\"icon icon-delete icon-lg\" />\n            </button>\n            <button\n              v-clean-html=\"t('catalog.tools.action.edit')\"\n              class=\"btn btn-sm role-secondary\"\n              @click=\"edit(opt.app)\"\n            />\n          </template>\n          <template v-else-if=\"opt.chart.legacy\">\n            <button\n              v-clean-html=\"t('catalog.tools.action.install')\"\n              class=\"btn btn-sm role-primary\"\n              @click=\"openV1Tool(opt.chart.legacyPage)\"\n            />\n          </template>\n          <template v-else>\n            <button\n              v-clean-html=\"t('catalog.tools.action.install')\"\n              class=\"btn btn-sm role-primary\"\n              @click=\"install(opt.chart)\"\n            />\n          </template>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div v-else>\n    <IconMessage\n      icon=\"icon-warning\"\n      message-key=\"catalog.tools.noTools\"\n    />\n  </div>\n</template>\n"]}]}