{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/istio.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/istio.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnOwppbXBvcnQganN5YW1sIGZyb20gJ2pzLXlhbWwnOwppbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vQ2hlY2tib3gnOwppbXBvcnQgWWFtbEVkaXRvciBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9ZYW1sRWRpdG9yJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgRmlsZVNlbGVjdG9yIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vRmlsZVNlbGVjdG9yJzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IENoYXJ0UHNwIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NoYXJ0UHNwJzsKCmNvbnN0IGRlZmF1bHRPdmVybGF5RmlsZSA9IGAjYXBpVmVyc2lvbjogaW5zdGFsbC5pc3Rpby5pby92MWFscGhhMQoja2luZDogSXN0aW9PcGVyYXRvcgojc3BlYzoKIyAgY29tcG9uZW50czoKIyAgICBpbmdyZXNzR2F0ZXdheXM6CiMgICAgLSBlbmFibGVkOiB0cnVlCiMgICAgICBuYW1lOiBpc3Rpby1pbmdyZXNzZ2F0ZXdheQojICAgIC0gZW5hYmxlZDogdHJ1ZQojICAgICAgazhzOgojICAgICAgICByZXNvdXJjZXM6CiMgICAgICAgICAgcmVxdWVzdHM6CiMgICAgICAgICAgICBjcHU6IDIwMG0KIyAgICAgICAgc2VydmljZToKIyAgICAgICAgICBwb3J0czoKIyAgICAgICAgICAtIG5hbWU6IHRjcC1jaXRhZGVsLWdycGMtdGxzCiMgICAgICAgICAgICBwb3J0OiA4MDYwCiMgICAgICAgICAgICB0YXJnZXRQb3J0OiA4MDYwCiMgICAgICAgICAgLSBuYW1lOiB0Y3AtZG5zCiMgICAgICAgICAgICBwb3J0OiA1MzUzCiMgICAgICAgIHNlcnZpY2VBbm5vdGF0aW9uczoKIyAgICAgICAgICBjbG91ZC5nb29nbGUuY29tL2xvYWQtYmFsYW5jZXItdHlwZTogaW50ZXJuYWwKIyAgICAgIG5hbWU6IGlsYi1nYXRld2F5CiMgICAgICBuYW1lc3BhY2U6IHVzZXItaW5ncmVzc2dhdGV3YXktbnMKIyAgICAtIGVuYWJsZWQ6IHRydWUKIyAgICAgIGs4czoKIyAgICAgICAgcmVzb3VyY2VzOgojICAgICAgICAgIHJlcXVlc3RzOgojICAgICAgICAgICAgY3B1OiAyMDBtCiMgICAgICAgIHNlcnZpY2U6CiMgICAgICAgICAgcG9ydHM6CiMgICAgICAgICAgLSBuYW1lOiB0Y3AtY2l0YWRlbC1ncnBjLXRscwojICAgICAgICAgICAgcG9ydDogODA2MAojICAgICAgICAgICAgdGFyZ2V0UG9ydDogODA2MAojICAgICAgICAgIC0gbmFtZTogdGNwLWRucwojICAgICAgICAgICAgcG9ydDogNTM1MwojICAgICAgICBzZXJ2aWNlQW5ub3RhdGlvbnM6CiMgICAgICAgICAgY2xvdWQuZ29vZ2xlLmNvbS9sb2FkLWJhbGFuY2VyLXR5cGU6IGludGVybmFsCiMgICAgICBuYW1lOiBvdGhlci1nYXRld2F5CiMgICAgICBuYW1lc3BhY2U6IGlzdGlvLXN5c3RlbQpgOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENoZWNrYm94LAogICAgRmlsZVNlbGVjdG9yLAogICAgWWFtbEVkaXRvciwKICAgIEJhbm5lciwKICAgIENoYXJ0UHNwCiAgfSwKCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICBsZXQgb3ZlcmxheUZpbGUgPSB0aGlzLnZhbHVlLm92ZXJsYXlGaWxlOwoKICAgIGlmICghb3ZlcmxheUZpbGU/Lmxlbmd0aCkgewogICAgICBvdmVybGF5RmlsZSA9IGRlZmF1bHRPdmVybGF5RmlsZTsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBvdmVybGF5RmlsZSwKICAgICAgc2hvd0tpYWxpQmFubmVyOiB0aGlzLnZhbHVlLmtpYWxpPy5lbmFibGVkCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsnY3VycmVudENsdXN0ZXInXSwgeyB0OiAnaTE4bi90JyB9KSwKICAgIHZhbHVlc1lhbWw6IHsKICAgICAgZ2V0KCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCB5YW1sID0ganN5YW1sLmR1bXAodGhpcy52YWx1ZSk7CgogICAgICAgICAgcmV0dXJuIHlhbWw7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQogICAgICB9LAogICAgICBzZXQ6IGRlYm91bmNlKGZ1bmN0aW9uKG5ldSkgewogICAgICAgIHRyeSB7CiAgICAgICAgICBjb25zdCBvYmogPSBqc3lhbWwubG9hZChuZXUpOwoKICAgICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy52YWx1ZSwgb2JqKTsKICAgICAgICB9IGNhdGNoIChlKSB7CgogICAgICAgIH0KICAgICAgfSwgNTAwKQogICAgfSwKICB9LAoKICBtZXRob2RzOiB7CiAgICB1cGRhdGUoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy52YWx1ZSk7CiAgICB9LAoKICAgIHZhbHVlc0NoYW5nZWQodmFsdWUpIHsKICAgICAgdHJ5IHsKICAgICAgICBqc3lhbWwubG9hZCh2YWx1ZSk7CiAgICAgICAgaWYgKHZhbHVlID09PSBkZWZhdWx0T3ZlcmxheUZpbGUpIHsKICAgICAgICAgIHZhbHVlID0gJyc7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMub3ZlcmxheUZpbGUgPSB2YWx1ZTsKICAgICAgICB9CiAgICAgICAgdGhpcy52YWx1ZS5vdmVybGF5RmlsZSA9IHZhbHVlOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgIH0KICAgIH0sCgogICAgb25GaWxlU2VsZWN0ZWQodmFsdWUpIHsKICAgICAgdGhpcy4kcmVmc1sneWFtbC1lZGl0b3InXS51cGRhdGVWYWx1ZSh2YWx1ZSk7CiAgICB9LAoKICAgIGNoYW5nZUtpYWxpKHZhbHVlKSB7CiAgICAgIGlmICh2YWx1ZSAmJiB0aGlzLnZhbHVlLnBpbG90KSB7CiAgICAgICAgdGhpcy52YWx1ZS5waWxvdC5lbmFibGVkID0gdHJ1ZTsKICAgICAgICB0aGlzLnNob3dLaWFsaUJhbm5lciA9IHRydWU7CiAgICAgIH0gZWxzZSBpZiAoIXZhbHVlKSB7CiAgICAgICAgdGhpcy5zaG93S2lhbGlCYW5uZXIgPSBmYWxzZTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["istio.vue"],"names":[],"mappingsfile":"istio.vue","sourceRoot":"node_modules/@rancher/shell/chart","sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport jsyaml from 'js-yaml';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport YamlEditor from '@shell/components/YamlEditor';\nimport { mapGetters } from 'vuex';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport { Banner } from '@components/Banner';\nimport ChartPsp from '@shell/components/ChartPsp';\n\nconst defaultOverlayFile = `#apiVersion: install.istio.io/v1alpha1\n#kind: IstioOperator\n#spec:\n#  components:\n#    ingressGateways:\n#    - enabled: true\n#      name: istio-ingressgateway\n#    - enabled: true\n#      k8s:\n#        resources:\n#          requests:\n#            cpu: 200m\n#        service:\n#          ports:\n#          - name: tcp-citadel-grpc-tls\n#            port: 8060\n#            targetPort: 8060\n#          - name: tcp-dns\n#            port: 5353\n#        serviceAnnotations:\n#          cloud.google.com/load-balancer-type: internal\n#      name: ilb-gateway\n#      namespace: user-ingressgateway-ns\n#    - enabled: true\n#      k8s:\n#        resources:\n#          requests:\n#            cpu: 200m\n#        service:\n#          ports:\n#          - name: tcp-citadel-grpc-tls\n#            port: 8060\n#            targetPort: 8060\n#          - name: tcp-dns\n#            port: 5353\n#        serviceAnnotations:\n#          cloud.google.com/load-balancer-type: internal\n#      name: other-gateway\n#      namespace: istio-system\n`;\n\nexport default {\n  components: {\n    Checkbox,\n    FileSelector,\n    YamlEditor,\n    Banner,\n    ChartPsp\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  data() {\n    let overlayFile = this.value.overlayFile;\n\n    if (!overlayFile?.length) {\n      overlayFile = defaultOverlayFile;\n    }\n\n    return {\n      overlayFile,\n      showKialiBanner: this.value.kiali?.enabled\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster'], { t: 'i18n/t' }),\n    valuesYaml: {\n      get() {\n        try {\n          const yaml = jsyaml.dump(this.value);\n\n          return yaml;\n        } catch (e) {\n          return null;\n        }\n      },\n      set: debounce(function(neu) {\n        try {\n          const obj = jsyaml.load(neu);\n\n          Object.assign(this.value, obj);\n        } catch (e) {\n\n        }\n      }, 500)\n    },\n  },\n\n  methods: {\n    update() {\n      this.$emit('input', this.value);\n    },\n\n    valuesChanged(value) {\n      try {\n        jsyaml.load(value);\n        if (value === defaultOverlayFile) {\n          value = '';\n        } else {\n          this.overlayFile = value;\n        }\n        this.value.overlayFile = value;\n      } catch (e) {\n      }\n    },\n\n    onFileSelected(value) {\n      this.$refs['yaml-editor'].updateValue(value);\n    },\n\n    changeKiali(value) {\n      if (value && this.value.pilot) {\n        this.value.pilot.enabled = true;\n        this.showKialiBanner = true;\n      } else if (!value) {\n        this.showKialiBanner = false;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <!-- Conditionally display PSP checkbox -->\n    <ChartPsp\n      :value=\"value\"\n      :title=\"t('catalog.chart.global')\"\n      :cluster=\"currentCluster\"\n    />\n\n    <h3>\n      {{ t('istio.titles.components') }}\n    </h3>\n    <div class=\"row mb-10\">\n      <div\n        v-if=\"value.cni\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.cni.enabled\"\n          :label=\"t('istio.cni')\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        v-if=\"value.ingressGateways\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.ingressGateways.enabled\"\n          :label=\"t('istio.ingressGateway')\"\n        />\n      </div>\n      <div\n        v-if=\"value.egressGateways\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.egressGateways.enabled\"\n          :label=\"t('istio.egressGateway')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div\n        v-if=\"value.pilot\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.pilot.enabled\"\n          :label=\"t('istio.pilot')\"\n          :disabled=\"value.kiali && value.kiali.enabled\"\n        />\n      </div>\n      <div\n        v-if=\"value.policy\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.policy.enabled\"\n          :label=\"t('istio.policy')\"\n        />\n      </div>\n      <div\n        v-if=\"value.telemetry\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.telemetry.enabled\"\n          :label=\"t('istio.telemetry')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div\n        v-if=\"value.kiali\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.kiali.enabled\"\n          :label=\"t('istio.kiali')\"\n          @input=\"changeKiali\"\n        />\n      </div>\n      <div\n        v-if=\"value.tracing\"\n        class=\"col span-4\"\n      >\n        <Checkbox\n          v-model=\"value.tracing.enabled\"\n          :label=\"t('istio.tracing')\"\n        />\n      </div>\n      <div class=\"col span-4\" />\n    </div>\n    <div\n      v-if=\"showKialiBanner\"\n      class=\"row\"\n    >\n      <div class=\"col span-12\">\n        <Banner color=\"info\">\n          <span\n            v-clean-html=\"t('istio.pilotRequired', {}, true)\"\n          />\n        </Banner>\n      </div>\n    </div>\n\n    <h3>{{ t('istio.customOverlayFile.label') }}</h3>\n    <div class=\"custom-overlay\">\n      <Banner color=\"info\">\n        <span\n          v-clean-html=\"t('istio.customOverlayFile.tip', {}, true)\"\n        />\n      </Banner>\n      <YamlEditor\n        ref=\"yaml-editor\"\n        class=\"yaml-editor mb-10\"\n        :value=\"overlayFile\"\n        @onInput=\"valuesChanged\"\n      />\n      <FileSelector\n        class=\"role-primary  btn-sm\"\n        :label=\"t('generic.readFromFile')\"\n        @selected=\"onFileSelected\"\n      />\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n  $yaml-height: 200px;\n\n  .custom-overlay {\n    &>DIV{\n      color: var(--input-label);\n      &>*{\n        padding: 3px;\n      }\n    }\n\n    & .yaml-editor{\n      flex: 1;\n      min-height: $yaml-height;\n      & .code-mirror .CodeMirror {\n        position: initial;\n        height: auto;\n        min-height: $yaml-height;\n      }\n    }\n  }\n</style>\n"]}]}