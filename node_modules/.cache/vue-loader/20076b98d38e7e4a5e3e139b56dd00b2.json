{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/YamlEditor.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/YamlEditor.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBqc3lhbWwgZnJvbSAnanMteWFtbCc7CmltcG9ydCB7IG1hcFByZWYsIERJRkYgfSBmcm9tICdAc2hlbGwvc3RvcmUvcHJlZnMnOwppbXBvcnQgaXNFbXB0eSBmcm9tICdsb2Rhc2gvaXNFbXB0eSc7CmltcG9ydCB7IHNhZmVyRHVtcCB9IGZyb20gJ0BzaGVsbC91dGlscy9jcmVhdGUteWFtbCc7CmltcG9ydCBDb2RlTWlycm9yIGZyb20gJy4vQ29kZU1pcnJvcic7CmltcG9ydCBGaWxlRGlmZiBmcm9tICcuL0ZpbGVEaWZmJzsKCmV4cG9ydCBjb25zdCBFRElUT1JfTU9ERVMgPSB7CiAgRURJVF9DT0RFOiAnRURJVF9DT0RFJywKICBWSUVXX0NPREU6ICdWSUVXX0NPREUnLAogIERJRkZfQ09ERTogJ0RJRkZfQ09ERScKfTsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDb2RlTWlycm9yLAogICAgRmlsZURpZmYKICB9LAogIHByb3BzOiB7CiAgICBlZGl0b3JNb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogRURJVE9SX01PREVTLkVESVRfQ09ERSwKICAgICAgdmFsaWRhdG9yKHZhbHVlKSB7CiAgICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoRURJVE9SX01PREVTKS5pbmNsdWRlcyh2YWx1ZSk7CiAgICAgIH0KICAgIH0sCgogICAgYXNPYmplY3Q6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAoKICAgIGluaXRpYWxZYW1sVmFsdWVzOiB7CiAgICAgIHR5cGU6ICAgIFtTdHJpbmcsIE9iamVjdF0sCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKCiAgICBzY3JvbGxpbmc6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZSwKICAgIH0sCgogICAgdmFsdWU6IHsKICAgICAgdHlwZTogICAgW1N0cmluZywgT2JqZWN0XSwKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAoKICAgIGhpZGVQcmV2aWV3QnV0dG9uczogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCgogICAgLyoqCiAgICAgKiBJbmhlcml0ZWQgZ2xvYmFsIGlkZW50aWZpZXIgcHJlZml4IGZvciB0ZXN0cwogICAgICogRGVmaW5lIGEgdGVybSBiYXNlZCBvbiB0aGUgcGFyZW50IGNvbXBvbmVudCB0byBhdm9pZCBjb25mbGljdHMgb24gbXVsdGlwbGUgY29tcG9uZW50cwogICAgICovCiAgICBjb21wb25lbnRUZXN0aWQ6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAneWFtbC1lZGl0b3InCiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIGNvbnN0IHsgaW5pdGlhbFlhbWxWYWx1ZXMsIHZhbHVlIH0gPSB0aGlzOwogICAgbGV0IGN1clZhbHVlOwogICAgbGV0IG9yaWdpbmFsOwoKICAgIGlmICggdGhpcy5hc09iamVjdCApIHsKICAgICAgY3VyVmFsdWUgPSBzYWZlckR1bXAodmFsdWUpOwogICAgfSBlbHNlIHsKICAgICAgY3VyVmFsdWUgPSB2YWx1ZSB8fCAnJzsKICAgIH0KCiAgICBpZiAoIHRoaXMuYXNPYmplY3QgJiYgaW5pdGlhbFlhbWxWYWx1ZXMpIHsKICAgICAgb3JpZ2luYWwgPSBzYWZlckR1bXAoaW5pdGlhbFlhbWxWYWx1ZXMpOwogICAgfSBlbHNlIHsKICAgICAgb3JpZ2luYWwgPSBpbml0aWFsWWFtbFZhbHVlczsKICAgIH0KCiAgICBpZiAoIGlzRW1wdHkob3JpZ2luYWwpICkgewogICAgICBvcmlnaW5hbCA9IHZhbHVlOwogICAgfQoKICAgIHJldHVybiB7IG9yaWdpbmFsLCBjdXJWYWx1ZSB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBjb2RlTWlycm9yT3B0aW9ucygpIHsKICAgICAgY29uc3QgcmVhZE9ubHkgPSB0aGlzLmVkaXRvck1vZGUgPT09IEVESVRPUl9NT0RFUy5WSUVXX0NPREU7CgogICAgICBjb25zdCBndXR0ZXJzID0gW107CgogICAgICBpZiAoICFyZWFkT25seSApIHsKICAgICAgICBndXR0ZXJzLnB1c2goJ0NvZGVNaXJyb3ItbGludC1tYXJrZXJzJyk7CiAgICAgIH0KCiAgICAgIGd1dHRlcnMucHVzaCgnQ29kZU1pcnJvci1mb2xkZ3V0dGVyJyk7CgogICAgICByZXR1cm4gewogICAgICAgIHJlYWRPbmx5LAogICAgICAgIGd1dHRlcnMsCiAgICAgICAgbW9kZTogICAgICAgICAgICAneWFtbCcsCiAgICAgICAgbGludDogICAgICAgICAgICAhcmVhZE9ubHksCiAgICAgICAgbGluZU51bWJlcnM6ICAgICAhcmVhZE9ubHksCiAgICAgICAgc3R5bGVBY3RpdmVMaW5lOiB0cnVlLAogICAgICAgIHRhYlNpemU6ICAgICAgICAgMiwKICAgICAgICBpbmRlbnRXaXRoVGFiczogIGZhbHNlLAogICAgICAgIGN1cnNvckJsaW5rUmF0ZTogKCByZWFkT25seSA/IC0xIDogNTMwICksCiAgICAgICAgZXh0cmFLZXlzOiAgICAgICB7CiAgICAgICAgICAnQ3RybC1TcGFjZSc6ICdhdXRvY29tcGxldGUnLAoKICAgICAgICAgIFRhYjogKGNtKSA9PiB7CiAgICAgICAgICAgIGlmIChjbS5zb21ldGhpbmdTZWxlY3RlZCgpKSB7CiAgICAgICAgICAgICAgY20uaW5kZW50U2VsZWN0aW9uKCdhZGQnKTsKCiAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICB9CgogICAgICAgICAgICBjbS5leGVjQ29tbWFuZCgnaW5zZXJ0U29mdFRhYicpOwogICAgICAgICAgfSwKCiAgICAgICAgICAnU2hpZnQtVGFiJzogKGNtKSA9PiB7CiAgICAgICAgICAgIGNtLmluZGVudFNlbGVjdGlvbignc3VidHJhY3QnKTsKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIC8vIEBUT0RPIGZpbmQgYSBiZXR0ZXIgd2F5IHRvIGRpc3BsYXkgdGhlIG91dGxpbmUKICAgICAgICAvLyBmb2xkT3B0aW9uczogewogICAgICAgIC8vICAgd2lkZ2V0OiAoZnJvbSwgdG8pID0+IHsKICAgICAgICAvLyAgICAgY29uc3QgY291bnQgPSB0by5saW5lIC0gZnJvbS5saW5lOwoKICAgICAgICAvLyAgICAgcmV0dXJuIGNvdW50ID8gYFx1MjFBNCR7IGNvdW50IH1cdTIxQTZgIDogJ1x1MjE5NCc7CiAgICAgICAgLy8gICB9CiAgICAgICAgLy8gfQogICAgICB9OwogICAgfSwKCiAgICBpc1ByZXZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLmVkaXRvck1vZGUgPT09IEVESVRPUl9NT0RFUy5ESUZGX0NPREU7CiAgICB9LAoKICAgIGRpZmZNb2RlOiBtYXBQcmVmKERJRkYpLAoKICAgIHNob3dDb2RlRWRpdG9yKCkgewogICAgICByZXR1cm4gW0VESVRPUl9NT0RFUy5FRElUX0NPREUsIEVESVRPUl9NT0RFUy5WSUVXX0NPREVdLmluY2x1ZGVzKHRoaXMuZWRpdG9yTW9kZSk7CiAgICB9LAogIH0sCgogIHdhdGNoOiB7CiAgICBzaG93VXBsb2FkUHJvbXB0KG5ldSkgewogICAgICBpZiAobmV1KSB7CiAgICAgICAgdGhpcy4kcmVmcy55YW1sdXBsb2FkZXIuY2xpY2soKTsKICAgICAgfQogICAgfSwKICB9LAoKICBtZXRob2RzOiB7CiAgICBmb2N1cygpIHsKICAgICAgaWYgKCB0aGlzLiRyZWZzLmNtICkgewogICAgICAgIHRoaXMuJHJlZnMuY20uZm9jdXMoKTsKICAgICAgfQogICAgfSwKCiAgICByZWZyZXNoKCkgewogICAgICBpZiAoIHRoaXMuJHJlZnMuY20gKSB7CiAgICAgICAgdGhpcy4kcmVmcy5jbS5yZWZyZXNoKCk7CiAgICAgIH0KICAgIH0sCgogICAgb25JbnB1dCh2YWx1ZSkgewogICAgICBpZiAoICF0aGlzLmFzT2JqZWN0ICkgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgLi4uYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgdHJ5IHsKICAgICAgICBjb25zdCBwYXJzZWQgPSBqc3lhbWwubG9hZCh2YWx1ZSk7CgogICAgICAgIGlmICggdGhpcy5hc09iamVjdCApIHsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgcGFyc2VkKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kZW1pdCgnbmV3T2JqZWN0JywgcGFyc2VkKTsKICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGV4KSB7fQoKICAgICAgdGhpcy4kZW1pdCgnb25JbnB1dCcsIC4uLmFyZ3VtZW50cyk7CiAgICB9LAoKICAgIG9uUmVhZHkoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ29uUmVhZHknLCAuLi5hcmd1bWVudHMpOwogICAgfSwKCiAgICBvbkNoYW5nZXMoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ29uQ2hhbmdlcycsIC4uLmFyZ3VtZW50cyk7CiAgICB9LAoKICAgIHVwZGF0ZVZhbHVlKHZhbHVlKSB7CiAgICAgIHRoaXMuY3VyVmFsdWUgPSB2YWx1ZTsKICAgICAgdGhpcy4kcmVmcy5jbS51cGRhdGVWYWx1ZSh2YWx1ZSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["YamlEditor.vue"],"names":[],"mappingsfile":"YamlEditor.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport jsyaml from 'js-yaml';\nimport { mapPref, DIFF } from '@shell/store/prefs';\nimport isEmpty from 'lodash/isEmpty';\nimport { saferDump } from '@shell/utils/create-yaml';\nimport CodeMirror from './CodeMirror';\nimport FileDiff from './FileDiff';\n\nexport const EDITOR_MODES = {\n  EDIT_CODE: 'EDIT_CODE',\n  VIEW_CODE: 'VIEW_CODE',\n  DIFF_CODE: 'DIFF_CODE'\n};\n\nexport default {\n  components: {\n    CodeMirror,\n    FileDiff\n  },\n  props: {\n    editorMode: {\n      type:    String,\n      default: EDITOR_MODES.EDIT_CODE,\n      validator(value) {\n        return Object.values(EDITOR_MODES).includes(value);\n      }\n    },\n\n    asObject: {\n      type:    Boolean,\n      default: false,\n    },\n\n    initialYamlValues: {\n      type:    [String, Object],\n      default: '',\n    },\n\n    scrolling: {\n      type:    Boolean,\n      default: true,\n    },\n\n    value: {\n      type:    [String, Object],\n      default: '',\n    },\n\n    hidePreviewButtons: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'yaml-editor'\n    }\n  },\n\n  data() {\n    const { initialYamlValues, value } = this;\n    let curValue;\n    let original;\n\n    if ( this.asObject ) {\n      curValue = saferDump(value);\n    } else {\n      curValue = value || '';\n    }\n\n    if ( this.asObject && initialYamlValues) {\n      original = saferDump(initialYamlValues);\n    } else {\n      original = initialYamlValues;\n    }\n\n    if ( isEmpty(original) ) {\n      original = value;\n    }\n\n    return { original, curValue };\n  },\n\n  computed: {\n    codeMirrorOptions() {\n      const readOnly = this.editorMode === EDITOR_MODES.VIEW_CODE;\n\n      const gutters = [];\n\n      if ( !readOnly ) {\n        gutters.push('CodeMirror-lint-markers');\n      }\n\n      gutters.push('CodeMirror-foldgutter');\n\n      return {\n        readOnly,\n        gutters,\n        mode:            'yaml',\n        lint:            !readOnly,\n        lineNumbers:     !readOnly,\n        styleActiveLine: true,\n        tabSize:         2,\n        indentWithTabs:  false,\n        cursorBlinkRate: ( readOnly ? -1 : 530 ),\n        extraKeys:       {\n          'Ctrl-Space': 'autocomplete',\n\n          Tab: (cm) => {\n            if (cm.somethingSelected()) {\n              cm.indentSelection('add');\n\n              return;\n            }\n\n            cm.execCommand('insertSoftTab');\n          },\n\n          'Shift-Tab': (cm) => {\n            cm.indentSelection('subtract');\n          }\n        },\n        // @TODO find a better way to display the outline\n        // foldOptions: {\n        //   widget: (from, to) => {\n        //     const count = to.line - from.line;\n\n        //     return count ? `\\u21A4${ count }\\u21A6` : '\\u2194';\n        //   }\n        // }\n      };\n    },\n\n    isPreview() {\n      return this.editorMode === EDITOR_MODES.DIFF_CODE;\n    },\n\n    diffMode: mapPref(DIFF),\n\n    showCodeEditor() {\n      return [EDITOR_MODES.EDIT_CODE, EDITOR_MODES.VIEW_CODE].includes(this.editorMode);\n    },\n  },\n\n  watch: {\n    showUploadPrompt(neu) {\n      if (neu) {\n        this.$refs.yamluploader.click();\n      }\n    },\n  },\n\n  methods: {\n    focus() {\n      if ( this.$refs.cm ) {\n        this.$refs.cm.focus();\n      }\n    },\n\n    refresh() {\n      if ( this.$refs.cm ) {\n        this.$refs.cm.refresh();\n      }\n    },\n\n    onInput(value) {\n      if ( !this.asObject ) {\n        this.$emit('input', ...arguments);\n      }\n\n      try {\n        const parsed = jsyaml.load(value);\n\n        if ( this.asObject ) {\n          this.$emit('input', parsed);\n        } else {\n          this.$emit('newObject', parsed);\n        }\n      } catch (ex) {}\n\n      this.$emit('onInput', ...arguments);\n    },\n\n    onReady() {\n      this.$emit('onReady', ...arguments);\n    },\n\n    onChanges() {\n      this.$emit('onChanges', ...arguments);\n    },\n\n    updateValue(value) {\n      this.curValue = value;\n      this.$refs.cm.updateValue(value);\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"yaml-editor\">\n    <div class=\"text-right\">\n      <span\n        v-if=\"isPreview && !hidePreviewButtons\"\n        v-trim-whitespace\n        class=\"btn-group btn-sm diff-mode\"\n      >\n        <button\n          type=\"button\"\n          class=\"btn btn-sm bg-default\"\n          :class=\"{'active': diffMode !== 'split'}\"\n          @click=\"diffMode='unified'\"\n        >Unified</button>\n        <button\n          type=\"button\"\n          class=\"btn btn-sm bg-default\"\n          :class=\"{'active': diffMode === 'split'}\"\n          @click=\"diffMode='split'\"\n        >Split</button>\n      </span>\n    </div>\n    <CodeMirror\n      v-if=\"showCodeEditor\"\n      ref=\"cm\"\n      :class=\"{fill: true, scrolling: scrolling}\"\n      :value=\"curValue\"\n      :options=\"codeMirrorOptions\"\n      :data-testid=\"componentTestid + '-code-mirror'\"\n      @onInput=\"onInput\"\n      @onReady=\"onReady\"\n      @onChanges=\"onChanges\"\n    />\n    <FileDiff\n      v-else\n      :class=\"{fill: true, scrolling: scrolling}\"\n      :filename=\"'.yaml'\"\n      :side-by-side=\"diffMode === 'split'\"\n      :orig=\"original\"\n      :neu=\"curValue\"\n      :footer-space=\"80\"\n    />\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.yaml-editor {\n  display: flex;\n  flex-direction: column;\n\n  .fill {\n    flex: 1;\n  }\n\n  ::v-deep .code-mirror  {\n    position: relative;\n\n    .CodeMirror {\n      background-color: var(--yaml-editor-bg);\n      & .CodeMirror-gutters {\n        background-color: var(--yaml-editor-bg);\n      }\n    }\n  }\n\n  .diff-mode {\n    background-color: var(--diff-header-bg);\n    padding: 5px 5px;\n\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  .d2h-file-wrapper {\n    border-top-right-radius: 0;\n  }\n}\n</style>\n"]}]}