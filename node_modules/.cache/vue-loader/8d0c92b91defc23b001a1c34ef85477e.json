{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/RotateEncryptionKeyDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/RotateEncryptionKeyDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IFNOQVBTSE9ULCBOT1JNQU4gfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IEFzeW5jQnV0dG9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FzeW5jQnV0dG9uJzsKaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ0Bjb21wb25lbnRzL0NhcmQnOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgeyBleGNlcHRpb25Ub0Vycm9yc0FycmF5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Vycm9yJzsKCmltcG9ydCB7IHNvcnRCeSB9IGZyb20gJ0BzaGVsbC91dGlscy9zb3J0JzsKaW1wb3J0IGRheSBmcm9tICdkYXlqcyc7CmltcG9ydCB7IGVzY2FwZUh0bWwgfSBmcm9tICdAc2hlbGwvdXRpbHMvc3RyaW5nJzsKaW1wb3J0IHsgREFURV9GT1JNQVQsIFRJTUVfRk9STUFUIH0gZnJvbSAnQHNoZWxsL3N0b3JlL3ByZWZzJzsKaW1wb3J0IHsgc2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ2FyZCwKICAgIEFzeW5jQnV0dG9uLAogICAgQmFubmVyLAogIH0sCgogIHByb3BzOiB7CiAgICBjbHVzdGVyOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCgogIGFzeW5jIGZldGNoKCkgewogICAgaWYgKCF0aGlzLiRzdG9yZS5nZXR0ZXJzWydpc1JhbmNoZXInXSkgewogICAgICAvLyBUaGlzIGZldGNoIGZ1bmN0aW9uIGlzIGdldHRpbmcgc25hcHNob3RzLCB3aGljaCBhcmUgYXNzb2NpYXRlZAogICAgICAvLyB3aXRoIGNsdXN0ZXIgbWFuYWdlci4gUmFuY2hlciBEZXNrdG9wIGRvZXNuJ3QgY29tZSB3aXRoIGNsdXN0ZXIKICAgICAgLy8gbWFuYWdlciwgc28gZm9yIFJhbmNoZXIgRGVza3RvcCB3ZSByZXR1cm4gbm90aGluZy4KICAgICAgcmV0dXJuIFtdOwogICAgfQoKICAgIGNvbnN0IGV0Y2RCYWNrdXBzID0gYXdhaXQgdGhpcy5nZXRFdGNkQmFja3VwcygpOwoKICAgIGlmIChldGNkQmFja3Vwcy5sZW5ndGggPiAwKSB7CiAgICAgIGNvbnN0IGJhY2t1cHMgPSBzb3J0QnkoZXRjZEJhY2t1cHMsIFsnY3JlYXRlZCddKS5yZXZlcnNlKCk7CiAgICAgIGNvbnN0IG5hbWUgPSBiYWNrdXBzWzBdLmlkLnNwbGl0KCc6Jyk7CiAgICAgIGNvbnN0IGNyZWF0ZWREYXRlID0gYmFja3Vwc1swXS5jcmVhdGVkOwoKICAgICAgdGhpcy5sYXRlc3RCYWNrdXAgPSB7CiAgICAgICAgbmFtZTogbmFtZVswXSwKICAgICAgICBkYXRlOiB0aGlzLmdldEZvcm1hdHRlZENyZWF0ZWREYXRlKGNyZWF0ZWREYXRlKQogICAgICB9OwogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICByZXR1cm4geyBlcnJvcnM6IFtdLCBsYXRlc3RCYWNrdXA6IG51bGwgfTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBjbG9zZShidXR0b25Eb25lKSB7CiAgICAgIGlmIChidXR0b25Eb25lICYmIHR5cGVvZiBidXR0b25Eb25lID09PSAnZnVuY3Rpb24nKSB7CiAgICAgICAgYnV0dG9uRG9uZSh0cnVlKTsKICAgICAgfQogICAgICB0aGlzLiRlbWl0KCdjbG9zZScpOwogICAgfSwKCiAgICBhc3luYyBnZXRFdGNkQmFja3VwcygpIHsKICAgICAgaWYgKCB0aGlzLmNsdXN0ZXIuaXNSa2UxKSB7CiAgICAgICAgbGV0IGV0Y2RCYWNrdXBzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvZmluZEFsbCcsIHsgdHlwZTogTk9STUFOLkVUQ0RfQkFDS1VQIH0pOwoKICAgICAgICBldGNkQmFja3VwcyA9IGV0Y2RCYWNrdXBzLmZpbHRlcigoYmFja3VwKSA9PiBiYWNrdXAuY2x1c3RlcklkID09PSB0aGlzLmNsdXN0ZXIubWV0YWRhdGEubmFtZSk7CgogICAgICAgIHJldHVybiBldGNkQmFja3VwczsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY2x1c3Rlci5pc1JrZTIpIHsKICAgICAgICBsZXQgZXRjZEJhY2t1cHMgPSBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kQWxsJywgeyB0eXBlOiBTTkFQU0hPVCB9KTsKCiAgICAgICAgZXRjZEJhY2t1cHMgPSBldGNkQmFja3Vwcy5maWx0ZXIoKGJhY2t1cCkgPT4gYmFja3VwLmNsdXN0ZXJJZCA9PT0gdGhpcy5jbHVzdGVyLmlkKTsKCiAgICAgICAgcmV0dXJuIGV0Y2RCYWNrdXBzOwogICAgICB9CgogICAgICByZXR1cm4gW107CiAgICB9LAoKICAgIGdldEZvcm1hdHRlZENyZWF0ZWREYXRlKGNyZWF0ZWREYXRlKSB7CiAgICAgIGNvbnN0IGRhdGVGb3JtYXQgPSBlc2NhcGVIdG1sKHRoaXMuJHN0b3JlLmdldHRlcnNbJ3ByZWZzL2dldCddKERBVEVfRk9STUFUKSk7CiAgICAgIGNvbnN0IHRpbWVGb3JtYXQgPSBlc2NhcGVIdG1sKCB0aGlzLiRzdG9yZS5nZXR0ZXJzWydwcmVmcy9nZXQnXShUSU1FX0ZPUk1BVCkpOwogICAgICBjb25zdCBkID0gZGF5KGNyZWF0ZWREYXRlKS5mb3JtYXQoZGF0ZUZvcm1hdCk7CiAgICAgIGNvbnN0IHQgPSBkYXkoY3JlYXRlZERhdGUpLmZvcm1hdCh0aW1lRm9ybWF0KTsKCiAgICAgIHJldHVybiBgJHsgZCB9ICR7IHQgfWA7CiAgICB9LAoKICAgIGFzeW5jIGFwcGx5KGJ1dHRvbkRvbmUpIHsKICAgICAgY29uc3QgaXNSa2UyID0gdGhpcy5jbHVzdGVyLmlzUmtlMjsKCiAgICAgIHRyeSB7CiAgICAgICAgaWYgKGlzUmtlMikgewogICAgICAgICAgY29uc3QgY3VycmVudEdlbmVyYXRpb24gPSB0aGlzLmNsdXN0ZXIuc3BlYz8ucmtlQ29uZmlnPy5yb3RhdGVFbmNyeXB0aW9uS2V5cz8uZ2VuZXJhdGlvbiB8fCAwOwoKICAgICAgICAgIC8vIFRvIHJvdGF0ZSB0aGUgZW5jcnlwdGlvbiBrZXlzLCBpbmNyZW1lbnQKICAgICAgICAgIC8vIHJrZUNvbmZpZy5yb3RhdGVFbmN5cnB0aW9uS2V5cy5nZW5lcmF0aW9uIGluIHRoZSBZQU1MLgogICAgICAgICAgc2V0KHRoaXMuY2x1c3RlciwgJ3NwZWMucmtlQ29uZmlnLnJvdGF0ZUVuY3J5cHRpb25LZXlzLmdlbmVyYXRpb24nLCBjdXJyZW50R2VuZXJhdGlvbiArIDEpOwogICAgICAgICAgYXdhaXQgdGhpcy5jbHVzdGVyLnNhdmUoKTsKCiAgICAgICAgICB0aGlzLmNsb3NlKGJ1dHRvbkRvbmUpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBhd2FpdCB0aGlzLmNsdXN0ZXIubWdtdC5kb0FjdGlvbigncm90YXRlRW5jcnlwdGlvbktleScpOwoKICAgICAgICAgIHRoaXMuY2xvc2UoYnV0dG9uRG9uZSk7CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICB0aGlzLmVycm9ycyA9IGV4Y2VwdGlvblRvRXJyb3JzQXJyYXkoZXJyKTsKICAgICAgICBidXR0b25Eb25lKGZhbHNlKTsKICAgICAgfQogICAgfQogIH0KfTsK"},{"version":3,"sources":["RotateEncryptionKeyDialog.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RotateEncryptionKeyDialog.vue","sourceRoot":"node_modules/@rancher/shell/dialog","sourcesContent":["<script>\nimport { SNAPSHOT, NORMAN } from '@shell/config/types';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport { Banner } from '@components/Banner';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\n\nimport { sortBy } from '@shell/utils/sort';\nimport day from 'dayjs';\nimport { escapeHtml } from '@shell/utils/string';\nimport { DATE_FORMAT, TIME_FORMAT } from '@shell/store/prefs';\nimport { set } from '@shell/utils/object';\n\nexport default {\n  components: {\n    Card,\n    AsyncButton,\n    Banner,\n  },\n\n  props: {\n    cluster: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    if (!this.$store.getters['isRancher']) {\n      // This fetch function is getting snapshots, which are associated\n      // with cluster manager. Rancher Desktop doesn't come with cluster\n      // manager, so for Rancher Desktop we return nothing.\n      return [];\n    }\n\n    const etcdBackups = await this.getEtcdBackups();\n\n    if (etcdBackups.length > 0) {\n      const backups = sortBy(etcdBackups, ['created']).reverse();\n      const name = backups[0].id.split(':');\n      const createdDate = backups[0].created;\n\n      this.latestBackup = {\n        name: name[0],\n        date: this.getFormattedCreatedDate(createdDate)\n      };\n    }\n  },\n\n  data() {\n    return { errors: [], latestBackup: null };\n  },\n\n  methods: {\n    close(buttonDone) {\n      if (buttonDone && typeof buttonDone === 'function') {\n        buttonDone(true);\n      }\n      this.$emit('close');\n    },\n\n    async getEtcdBackups() {\n      if ( this.cluster.isRke1) {\n        let etcdBackups = await this.$store.dispatch('rancher/findAll', { type: NORMAN.ETCD_BACKUP });\n\n        etcdBackups = etcdBackups.filter((backup) => backup.clusterId === this.cluster.metadata.name);\n\n        return etcdBackups;\n      }\n\n      if (this.cluster.isRke2) {\n        let etcdBackups = await this.$store.dispatch('management/findAll', { type: SNAPSHOT });\n\n        etcdBackups = etcdBackups.filter((backup) => backup.clusterId === this.cluster.id);\n\n        return etcdBackups;\n      }\n\n      return [];\n    },\n\n    getFormattedCreatedDate(createdDate) {\n      const dateFormat = escapeHtml(this.$store.getters['prefs/get'](DATE_FORMAT));\n      const timeFormat = escapeHtml( this.$store.getters['prefs/get'](TIME_FORMAT));\n      const d = day(createdDate).format(dateFormat);\n      const t = day(createdDate).format(timeFormat);\n\n      return `${ d } ${ t }`;\n    },\n\n    async apply(buttonDone) {\n      const isRke2 = this.cluster.isRke2;\n\n      try {\n        if (isRke2) {\n          const currentGeneration = this.cluster.spec?.rkeConfig?.rotateEncryptionKeys?.generation || 0;\n\n          // To rotate the encryption keys, increment\n          // rkeConfig.rotateEncyrptionKeys.generation in the YAML.\n          set(this.cluster, 'spec.rkeConfig.rotateEncryptionKeys.generation', currentGeneration + 1);\n          await this.cluster.save();\n\n          this.close(buttonDone);\n        } else {\n          await this.cluster.mgmt.doAction('rotateEncryptionKey');\n\n          this.close(buttonDone);\n        }\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-rotate\"\n    :show-highlight-border=\"false\"\n  >\n    <h4\n      slot=\"title\"\n      v-clean-html=\"t('promptRotateEncryptionKey.title')\"\n      class=\"text-default-text\"\n    />\n\n    <div\n      slot=\"body\"\n      class=\"pl-10 pr-10\"\n    >\n      <Banner\n        color=\"warning\"\n        label-key=\"promptRotateEncryptionKey.warning\"\n      />\n\n      <div v-if=\"!$fetchState.pending\">\n        <p\n          v-if=\"latestBackup\"\n          class=\"pt-10 pb-10\"\n        >\n          {{ t('promptRotateEncryptionKey.description', latestBackup, true) }}\n        </p>\n        <Banner\n          v-else\n          color=\"error\"\n          label-key=\"promptRotateEncryptionKey.error\"\n        />\n      </div>\n    </div>\n\n    <div\n      slot=\"actions\"\n      class=\"buttons\"\n    >\n      <button\n        class=\"btn role-secondary mr-10\"\n        @click=\"close\"\n      >\n        {{ t('generic.cancel') }}\n      </button>\n\n      <AsyncButton\n        mode=\"rotate\"\n        :disabled=\"$fetchState.pending || !latestBackup\"\n        @click=\"apply\"\n      />\n\n      <Banner\n        v-for=\"(err, i) in errors\"\n        :key=\"i\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </div>\n  </Card>\n</template>\n<style lang='scss' scoped>\n  .prompt-rotate {\n    margin: 0;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    width: 100%;\n  }\n</style>\n"]}]}