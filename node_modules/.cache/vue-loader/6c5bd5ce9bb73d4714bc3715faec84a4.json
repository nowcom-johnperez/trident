{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/gatekeeper.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/gatekeeper.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgVW5pdElucHV0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vVW5pdElucHV0JzsNCmltcG9ydCBDaGFydFBzcCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DaGFydFBzcCc7DQppbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vQ2hlY2tib3gnOw0KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBVbml0SW5wdXQsIENoYXJ0UHNwLCBDaGVja2JveA0KICB9LA0KICBwcm9wczogew0KICAgIHZhbHVlOiB7DQogICAgICB0eXBlOiAgICBPYmplY3QsDQogICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgIHJldHVybiB7fTsNCiAgICAgIH0NCiAgICB9LA0KICAgIGF1dG9JbnN0YWxsSW5mbzogew0KICAgICAgdHlwZTogICAgQXJyYXksDQogICAgICBkZWZhdWx0OiAoKSA9PiBbXQ0KICAgIH0NCiAgfSwNCg0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoWydjdXJyZW50Q2x1c3RlciddKSwNCiAgICBjcmRWYWx1ZXM6IHsNCiAgICAgIGdldCgpIHsNCiAgICAgICAgY29uc3QgY3JkSW5mbyA9IHRoaXMuYXV0b0luc3RhbGxJbmZvLmZpbmQoKGluZm8pID0+IGluZm8uY2hhcnQubmFtZS5pbmNsdWRlcygnY3JkJykpOw0KDQogICAgICAgIC8vIHZhbHVlcyBhcmUgZGVmYXVsdHMgZnJvbSB0aGUgY2hhcnQ7IGFsbFZhbHVlcyBhcmUgZGVmYXVsdHMgKyBhbnl0aGluZyBzZXQgb24gcHJldmlvdXMgaW5zdGFsbCBpZiB0aGlzIGlzIGFuIHVwZGF0ZS91cGdyYWRlDQogICAgICAgIHJldHVybiBjcmRJbmZvID8gY3JkSW5mby5hbGxWYWx1ZXMgOiBudWxsOw0KICAgICAgfSwNCiAgICAgIHNldCh2YWx1ZXMpIHsNCiAgICAgICAgY29uc3QgY3JkSW5mbyA9IHRoaXMuYXV0b0luc3RhbGxJbmZvLmZpbmQoKGluZm8pID0+IGluZm8uY2hhcnQubmFtZS5pbmNsdWRlcygnY3JkJykpOw0KDQogICAgICAgIHRoaXMuJHNldChjcmRJbmZvLCAnYWxsVmFsdWVzJywgdmFsdWVzKTsNCiAgICAgIH0NCiAgICB9DQogIH0NCn07DQo="},{"version":3,"sources":["gatekeeper.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"gatekeeper.vue","sourceRoot":"node_modules/@rancher/shell/chart","sourcesContent":["<script>\r\nimport UnitInput from '@shell/components/form/UnitInput';\r\nimport ChartPsp from '@shell/components/ChartPsp';\r\nimport { Checkbox } from '@components/Form/Checkbox';\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  components: {\r\n    UnitInput, ChartPsp, Checkbox\r\n  },\r\n  props: {\r\n    value: {\r\n      type:    Object,\r\n      default: () => {\r\n        return {};\r\n      }\r\n    },\r\n    autoInstallInfo: {\r\n      type:    Array,\r\n      default: () => []\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters(['currentCluster']),\r\n    crdValues: {\r\n      get() {\r\n        const crdInfo = this.autoInstallInfo.find((info) => info.chart.name.includes('crd'));\r\n\r\n        // values are defaults from the chart; allValues are defaults + anything set on previous install if this is an update/upgrade\r\n        return crdInfo ? crdInfo.allValues : null;\r\n      },\r\n      set(values) {\r\n        const crdInfo = this.autoInstallInfo.find((info) => info.chart.name.includes('crd'));\r\n\r\n        this.$set(crdInfo, 'allValues', values);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<template>\r\n  <div>\r\n    <div class=\"row\">\r\n      <div class=\"col span-6\">\r\n        <UnitInput\r\n          v-model=\"value.auditInterval\"\r\n          :label=\"t('gatekeeperInstall.auditInterval')\"\r\n          :suffix=\"t('suffix.seconds', {count: value.auditInterval})\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-10\">\r\n      <div class=\"col span-6\">\r\n        <UnitInput\r\n          v-model=\"value.constraintViolationsLimit\"\r\n          :label=\"t('gatekeeperInstall.constraintViolationsLimit')\"\r\n          :suffix=\"t('gatekeeperIndex.violations')\"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Conditionally display PSP checkbox -->\r\n    <ChartPsp\r\n      :value=\"value\"\r\n      :cluster=\"currentCluster\"\r\n    />\r\n\r\n    <template v-if=\"crdValues\">\r\n      <!-- gatekeeper versions <1.0.2 do not have this option -->\r\n      <Checkbox\r\n        v-if=\"crdValues.enableRuntimeDefaultSeccompProfile ||crdValues.enableRuntimeDefaultSeccompProfile === false\"\r\n        v-model=\"crdValues.enableRuntimeDefaultSeccompProfile\"\r\n        :label=\"t('gatekeeperInstall.runtimeDefaultSeccompProfile')\"\r\n      />\r\n    </template>\r\n  </div>\r\n</template>\r\n"]}]}