{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/secret/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/secret/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/@rancher/shell/edit/secret","sourcesContent":["<script>\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\nimport { MANAGEMENT, NAMESPACE, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport CruResource from '@shell/components/CruResource';\nimport {\n  CLOUD_CREDENTIAL, _CLONE, _CREATE, _EDIT, _FLAGGED\n} from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport Labels from '@shell/components/form/Labels';\nimport { HIDE_SENSITIVE } from '@shell/store/prefs';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear, uniq } from '@shell/utils/array';\nimport { NAME as MANAGER } from '@shell/config/product/manager';\nimport SelectIconGrid from '@shell/components/SelectIconGrid';\nimport { sortBy } from '@shell/utils/sort';\nimport { ucFirst } from '@shell/utils/string';\n\nconst creatableTypes = [\n  TYPES.OPAQUE,\n  TYPES.DOCKER_JSON,\n  TYPES.TLS,\n  TYPES.SSH,\n  TYPES.BASIC,\n];\n\nexport default {\n  name: 'CruSecret',\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n    Loading,\n    NameNsDescription,\n    CruResource,\n    Tabbed,\n    Tab,\n    Labels,\n    SelectIconGrid\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    if ( this.isCloud ) {\n      this.nodeDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE_DRIVER });\n    }\n  },\n\n  data() {\n    const newCloudCred = this.$route.query[CLOUD_CREDENTIAL] === _FLAGGED;\n    const editCloudCred = this.mode === _EDIT && this.value._type === TYPES.CLOUD_CREDENTIAL;\n    const cloneCloudCred = this.realMode === _CLONE && this.liveValue._type === TYPES.CLOUD_CREDENTIAL;\n    const isCloud = newCloudCred || editCloudCred || cloneCloudCred;\n\n    if ( newCloudCred ) {\n      this.value.metadata.namespace = DEFAULT_WORKSPACE;\n\n      this.$set(this.value.metadata, 'name', '');\n\n      this.$set(this.value, 'data', {});\n    }\n\n    const secretTypes = [\n      {\n        label: 'Custom',\n        value: 'custom'\n      },\n      {\n        label:    'divider',\n        disabled: true,\n        kind:     'divider'\n      }\n    ];\n\n    Object.values(TYPES).forEach((t) => {\n      secretTypes.push({\n        label: t,\n        value: t\n      });\n    });\n\n    return {\n      isCloud,\n      nodeDrivers:       null,\n      secretTypes,\n      secretType:        this.value._type,\n      initialSecretType: this.value._type\n    };\n  },\n\n  computed: {\n    isCustomSecretCreate() {\n      return this.mode === _CREATE && this.$route.query.type === 'custom';\n    },\n    showCustomSecretType() {\n      return this.secretType === 'custom';\n    },\n    typeKey() {\n      if ( this.isCloud ) {\n        return 'cloud';\n      }\n\n      switch ( this.value._type ) {\n      case TYPES.TLS: return 'tls';\n      case TYPES.BASIC: return 'basic';\n      case TYPES.DOCKER_JSON: return 'registry';\n      case TYPES.SSH: return 'ssh';\n      }\n\n      return 'generic';\n    },\n\n    dataComponent() {\n      return require(`@shell/edit/secret/${ this.typeKey }`).default;\n    },\n\n    driverName() {\n      const driver = this.value.metadata?.annotations?.[CAPI.CREDENTIAL_DRIVER];\n\n      return driver;\n    },\n\n    cloudComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    // array of id, label, description, initials for type selection step\n    secretSubTypes() {\n      const out = [];\n\n      // Cloud credentials\n      if ( this.isCloud ) {\n        const machineTypes = uniq(this.nodeDrivers\n          .filter((x) => x.spec.active)\n          .map((x) => x.spec.displayName || x.id)\n          .map((x) => this.$store.getters['plugins/credentialDriverFor'](x))\n        );\n\n        for ( const id of machineTypes ) {\n          let bannerImage, bannerAbbrv;\n\n          try {\n            bannerImage = require(`~shell/assets/images/providers/${ id }.svg`);\n          } catch (e) {\n            bannerImage = null;\n            bannerAbbrv = this.initialDisplayFor(id);\n          }\n\n          out.push({\n            id,\n            label: this.typeDisplay(CAPI.CREDENTIAL_DRIVER, id),\n            bannerImage,\n            bannerAbbrv\n          });\n        }\n      } else {\n        // Other kinds\n        for ( const id of creatableTypes ) {\n          out.push({\n            id,\n            label:       this.typeDisplay(id),\n            bannerAbbrv: this.initialDisplayFor(id),\n            description: this.t(`secret.typeDescriptions.'${ id }'.description`),\n            docLink:     this.t(`secret.typeDescriptions.'${ id }'.docLink`)\n          });\n        }\n\n        out.push({\n          id:          'custom',\n          label:       this.t('secret.customType'),\n          bannerAbbrv: this.initialDisplayFor('custom'),\n          description: this.t('secret.typeDescriptions.custom.description')\n        });\n      }\n\n      return sortBy(out, 'label');\n    },\n\n    namespaces() {\n      return this.$store.getters['cluster/all'](NAMESPACE).map((obj) => {\n        return {\n          label: obj.nameDisplay,\n          value: obj.id,\n        };\n      });\n    },\n\n    hideSensitiveData() {\n      return this.$store.getters['prefs/get'](HIDE_SENSITIVE);\n    },\n\n    dataLabel() {\n      switch (this.value._type) {\n      case TYPES.TLS:\n        return this.t('secret.certificate.certificate');\n      case TYPES.SSH:\n        return this.t('secret.ssh.keys');\n      case TYPES.BASIC:\n        return this.t('secret.authentication');\n      default:\n        return this.t('secret.data');\n      }\n    },\n\n    doneRoute() {\n      if ( this.$store.getters['currentProduct'].name === MANAGER ) {\n        return 'c-cluster-manager-secret';\n      } else {\n        return 'c-cluster-product-resource';\n      }\n    },\n  },\n\n  methods: {\n    async saveSecret(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      if ( typeof this.$refs.cloudComponent?.test === 'function' ) {\n        try {\n          const res = await this.$refs.cloudComponent.test();\n\n          if ( !res || res?.errors) {\n            if (res?.errors) {\n              this.errors = res.errors;\n            } else {\n              this.errors = ['Authentication test failed, please check your credentials'];\n            }\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n\n          return;\n        }\n      }\n\n      return this.save(btnCb);\n    },\n\n    selectType(type) {\n      let driver;\n\n      if ( this.isCloud ) {\n        if ( type === TYPES.CLOUD_CREDENTIAL ) {\n          // Clone goes through here\n          driver = this.driverName;\n        } else {\n          driver = type;\n          type = TYPES.CLOUD_CREDENTIAL;\n        }\n\n        if ( this.mode === _CREATE ) {\n          this.value.setAnnotation(CAPI.CREDENTIAL_DRIVER, driver);\n        }\n      }\n\n      this.$set(this.value, '_type', type);\n      this.$emit('set-subtype', this.typeDisplay(type, driver));\n\n      this.secretType = type;\n\n      if (this.mode === _CREATE && type === 'custom') {\n        this.$set(this.value, '_type', '');\n      }\n    },\n\n    typeDisplay(type, driver) {\n      if ( type === CAPI.CREDENTIAL_DRIVER ) {\n        return this.$store.getters['i18n/withFallback'](`cluster.provider.\"${ driver }\"`, null, driver);\n      } else {\n        const fallback = type.replace(/^kubernetes.io\\//, '');\n\n        return this.$store.getters['i18n/withFallback'](`secret.types.\"${ type }\"`, null, fallback);\n      }\n    },\n\n    initialDisplayFor(type) {\n      const fallback = (ucFirst(this.typeDisplay(type) || '').replace(/[^A-Z]/g, '') || type).substr(0, 3);\n\n      return this.$store.getters['i18n/withFallback'](`secret.initials.\"${ type }\"`, null, fallback);\n    },\n\n    selectCustomType(type) {\n      if (type !== 'custom') {\n        this.$set(this.value, '_type', type);\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <form class=\"filled-height\">\n    <Loading v-if=\"$fetchState.pending\" />\n    <CruResource\n      v-else\n      :mode=\"mode\"\n      :validation-passed=\"true\"\n      :selected-subtype=\"value._type\"\n      :resource=\"value\"\n      :errors=\"errors\"\n      :done-route=\"doneRoute\"\n      :subtypes=\"secretSubTypes\"\n      @finish=\"saveSecret\"\n      @select-type=\"selectType\"\n      @error=\"e=>errors = e\"\n    >\n      <NameNsDescription\n        v-model=\"value\"\n        :mode=\"mode\"\n        :namespaced=\"!isCloud\"\n      />\n\n      <div\n        v-if=\"isCustomSecretCreate\"\n        class=\"row\"\n      >\n        <div class=\"col span-3\">\n          <LabeledSelect\n            v-model=\"secretType\"\n            :options=\"secretTypes\"\n            :searchable=\"false\"\n            :mode=\"mode\"\n            :multiple=\"false\"\n            :reduce=\"(e) => e.value\"\n            label-key=\"secret.type\"\n            required\n            @input=\"selectCustomType\"\n          />\n        </div>\n\n        <div class=\"col span-3\">\n          <LabeledInput\n            v-if=\"showCustomSecretType\"\n            ref=\"customType\"\n            v-model=\"value._type\"\n            v-focus\n            label-key=\"secret.customType\"\n            :mode=\"mode\"\n            required\n          />\n        </div>\n      </div>\n\n      <div class=\"spacer\" />\n      <component\n        :is=\"cloudComponent\"\n        v-if=\"isCloud\"\n        ref=\"cloudComponent\"\n        :driver-name=\"driverName\"\n        :value=\"value\"\n        :mode=\"mode\"\n        :hide-sensitive-data=\"hideSensitiveData\"\n      />\n      <Tabbed\n        v-else\n        :side-tabs=\"true\"\n        default-tab=\"data\"\n      >\n        <Tab\n          name=\"data\"\n          :label=\"dataLabel\"\n          :weight=\"99\"\n        >\n          <component\n            :is=\"dataComponent\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :hide-sensitive-data=\"hideSensitiveData\"\n          />\n        </Tab>\n        <Tab\n          name=\"labels\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"-1\"\n        >\n          <Labels\n            v-model=\"value\"\n            :mode=\"mode\"\n          />\n        </Tab>\n      </Tabbed>\n    </CruResource>\n  </form>\n</template>\n\n<style lang='scss'>\n</style>\n"]}]}