{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/fleet.cattle.io.clustergroup.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/fleet.cattle.io.clustergroup.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBDcmVhdGVFZGl0VmlldyBmcm9tICdAc2hlbGwvbWl4aW5zL2NyZWF0ZS1lZGl0LXZpZXcnOwppbXBvcnQgQ3J1UmVzb3VyY2UgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ3J1UmVzb3VyY2UnOwppbXBvcnQgTGFiZWxzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxzJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBNYXRjaEV4cHJlc3Npb25zIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTWF0Y2hFeHByZXNzaW9ucyc7CmltcG9ydCBOYW1lTnNEZXNjcmlwdGlvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL05hbWVOc0Rlc2NyaXB0aW9uJzsKCmltcG9ydCB7IHNldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBGTEVFVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBjb252ZXJ0LCBtYXRjaGluZywgc2ltcGxpZnkgfSBmcm9tICdAc2hlbGwvdXRpbHMvc2VsZWN0b3InOwppbXBvcnQgdGhyb3R0bGUgZnJvbSAnbG9kYXNoL3Rocm90dGxlJzsKaW1wb3J0IHsgYWxsSGFzaCB9IGZyb20gJ0BzaGVsbC91dGlscy9wcm9taXNlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQ3J1Q2x1c3Rlckdyb3VwJywKCiAgY29tcG9uZW50czogewogICAgQmFubmVyLAogICAgQ3J1UmVzb3VyY2UsCiAgICBMYWJlbHMsCiAgICBMb2FkaW5nLAogICAgTWF0Y2hFeHByZXNzaW9ucywKICAgIE5hbWVOc0Rlc2NyaXB0aW9uLAogIH0sCgogIG1peGluczogW0NyZWF0ZUVkaXRWaWV3XSwKCiAgYXN5bmMgZmV0Y2goKSB7CiAgICBjb25zdCBfaGFzaCA9IHt9OwoKICAgIGlmICh0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L3NjaGVtYUZvciddKEZMRUVULkNMVVNURVIpKSB7CiAgICAgIF9oYXNoLmFsbENsdXN0ZXJzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsgdHlwZTogRkxFRVQuQ0xVU1RFUiB9KTsKICAgIH0KCiAgICBpZiAodGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShGTEVFVC5XT1JLU1BBQ0UpKSB7CiAgICAgIF9oYXNoLmFsbFdvcmtzcGFjZXMgPSB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kQWxsJywgeyB0eXBlOiBGTEVFVC5XT1JLU1BBQ0UgfSk7CiAgICB9CgogICAgY29uc3QgaGFzaCA9IGF3YWl0IGFsbEhhc2goX2hhc2gpOwoKICAgIHRoaXMuYWxsQ2x1c3RlcnMgPSBoYXNoLmFsbENsdXN0ZXJzIHx8IFtdOwogICAgdGhpcy5hbGxXb3Jrc3BhY2VzID0gaGFzaC5hbGxXb3Jrc3BhY2VzIHx8IFtdOwoKICAgIGlmICggIXRoaXMudmFsdWUuc3BlYz8uc2VsZWN0b3IgKSB7CiAgICAgIHRoaXMudmFsdWUuc3BlYyA9IHRoaXMudmFsdWUuc3BlYyB8fCB7fTsKICAgICAgdGhpcy52YWx1ZS5zcGVjLnNlbGVjdG9yID0gewogICAgICAgIG1hdGNoRXhwcmVzc2lvbnM6IFtdLAogICAgICAgIG1hdGNoTGFiZWxzOiAgICAgIHt9LAogICAgICB9OwogICAgfQoKICAgIGNvbnN0IGV4cHJlc3Npb25zID0gY29udmVydCgKICAgICAgdGhpcy52YWx1ZS5zcGVjLnNlbGVjdG9yLm1hdGNoTGFiZWxzIHx8IHt9LAogICAgICB0aGlzLnZhbHVlLnNwZWMuc2VsZWN0b3IubWF0Y2hFeHByZXNzaW9ucyB8fCBbXQogICAgKTsKCiAgICB0aGlzLm1hdGNoQ2hhbmdlZChleHByZXNzaW9ucyk7CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbENsdXN0ZXJzOiAgICAgIG51bGwsCiAgICAgIGFsbFdvcmtzcGFjZXM6ICAgIG51bGwsCiAgICAgIG1hdGNoaW5nQ2x1c3RlcnM6IG51bGwsCiAgICAgIGV4cHJlc3Npb25zOiAgICAgIG51bGwsCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBGTEVFVF9XT1JLU1BBQ0UoKSB7CiAgICAgIHJldHVybiBGTEVFVC5XT1JLU1BBQ0U7CiAgICB9LAoKICAgIGNsdXN0ZXJzRm9yV29ya3NwYWNlKCkgewogICAgICBjb25zdCBuYW1lc3BhY2UgPSB0aGlzLnZhbHVlLm1ldGFkYXRhPy5uYW1lc3BhY2U7CgogICAgICBpZiAoICFuYW1lc3BhY2UgKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CgogICAgICBjb25zdCB3b3Jrc3BhY2UgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2J5SWQnXShGTEVFVC5XT1JLU1BBQ0UsIG5hbWVzcGFjZSk7CgogICAgICBpZiAoIHdvcmtzcGFjZSApIHsKICAgICAgICByZXR1cm4gd29ya3NwYWNlLmNsdXN0ZXJzOwogICAgICB9CgogICAgICByZXR1cm4gW107CiAgICB9LAogIH0sCgogIHdhdGNoOiB7ICd2YWx1ZS5tZXRhZGF0YS5uYW1lc3BhY2UnOiAndXBkYXRlTWF0Y2hpbmdDbHVzdGVycycgfSwKCiAgbWV0aG9kczogewogICAgc2V0LAoKICAgIG1hdGNoQ2hhbmdlZChleHByZXNzaW9ucykgewogICAgICBjb25zdCB7IG1hdGNoTGFiZWxzLCBtYXRjaEV4cHJlc3Npb25zIH0gPSBzaW1wbGlmeShleHByZXNzaW9ucyk7CgogICAgICBzZXQodGhpcywgJ2V4cHJlc3Npb25zJywgZXhwcmVzc2lvbnMpOwogICAgICBzZXQodGhpcywgJ3ZhbHVlLnNwZWMuc2VsZWN0b3IubWF0Y2hMYWJlbHMnLCBtYXRjaExhYmVscyk7CiAgICAgIHNldCh0aGlzLCAndmFsdWUuc3BlYy5zZWxlY3Rvci5tYXRjaEV4cHJlc3Npb25zJywgbWF0Y2hFeHByZXNzaW9ucyk7CgogICAgICB0aGlzLnVwZGF0ZU1hdGNoaW5nQ2x1c3RlcnMoKTsKICAgIH0sCgogICAgdXBkYXRlTWF0Y2hpbmdDbHVzdGVyczogdGhyb3R0bGUoZnVuY3Rpb24oKSB7CiAgICAgIGNvbnN0IGFsbCA9IHRoaXMuY2x1c3RlcnNGb3JXb3Jrc3BhY2U7CiAgICAgIGNvbnN0IG1hdGNoID0gbWF0Y2hpbmcoYWxsLCB0aGlzLmV4cHJlc3Npb25zKTsKICAgICAgY29uc3QgbWF0Y2hlZCA9IG1hdGNoLmxlbmd0aCB8fCAwOwogICAgICBjb25zdCBzYW1wbGUgPSBtYXRjaFswXT8ubmFtZURpc3BsYXk7CgogICAgICB0aGlzLm1hdGNoaW5nQ2x1c3RlcnMgPSB7CiAgICAgICAgbWF0Y2hlZCwKICAgICAgICB0b3RhbDogIGFsbC5sZW5ndGgsCiAgICAgICAgaXNBbGw6ICBtYXRjaGVkID09PSBhbGwubGVuZ3RoLAogICAgICAgIGlzTm9uZTogbWF0Y2hlZCA9PT0gMCwKICAgICAgICBzYW1wbGUsCiAgICAgIH07CiAgICB9LCAyNTAsIHsgbGVhZGluZzogdHJ1ZSB9KSwKICB9LAp9Owo="},{"version":3,"sources":["fleet.cattle.io.clustergroup.vue"],"names":[],"mappingsfile":"fleet.cattle.io.clustergroup.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Loading from '@shell/components/Loading';\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\n\nimport { set } from '@shell/utils/object';\nimport { FLEET } from '@shell/config/types';\nimport { convert, matching, simplify } from '@shell/utils/selector';\nimport throttle from 'lodash/throttle';\nimport { allHash } from '@shell/utils/promise';\n\nexport default {\n  name: 'CruClusterGroup',\n\n  components: {\n    Banner,\n    CruResource,\n    Labels,\n    Loading,\n    MatchExpressions,\n    NameNsDescription,\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    const _hash = {};\n\n    if (this.$store.getters['management/schemaFor'](FLEET.CLUSTER)) {\n      _hash.allClusters = await this.$store.dispatch('management/findAll', { type: FLEET.CLUSTER });\n    }\n\n    if (this.$store.getters['management/schemaFor'](FLEET.WORKSPACE)) {\n      _hash.allWorkspaces = this.$store.dispatch('management/findAll', { type: FLEET.WORKSPACE });\n    }\n\n    const hash = await allHash(_hash);\n\n    this.allClusters = hash.allClusters || [];\n    this.allWorkspaces = hash.allWorkspaces || [];\n\n    if ( !this.value.spec?.selector ) {\n      this.value.spec = this.value.spec || {};\n      this.value.spec.selector = {\n        matchExpressions: [],\n        matchLabels:      {},\n      };\n    }\n\n    const expressions = convert(\n      this.value.spec.selector.matchLabels || {},\n      this.value.spec.selector.matchExpressions || []\n    );\n\n    this.matchChanged(expressions);\n  },\n\n  data() {\n    return {\n      allClusters:      null,\n      allWorkspaces:    null,\n      matchingClusters: null,\n      expressions:      null,\n    };\n  },\n\n  computed: {\n    FLEET_WORKSPACE() {\n      return FLEET.WORKSPACE;\n    },\n\n    clustersForWorkspace() {\n      const namespace = this.value.metadata?.namespace;\n\n      if ( !namespace ) {\n        return [];\n      }\n\n      const workspace = this.$store.getters['management/byId'](FLEET.WORKSPACE, namespace);\n\n      if ( workspace ) {\n        return workspace.clusters;\n      }\n\n      return [];\n    },\n  },\n\n  watch: { 'value.metadata.namespace': 'updateMatchingClusters' },\n\n  methods: {\n    set,\n\n    matchChanged(expressions) {\n      const { matchLabels, matchExpressions } = simplify(expressions);\n\n      set(this, 'expressions', expressions);\n      set(this, 'value.spec.selector.matchLabels', matchLabels);\n      set(this, 'value.spec.selector.matchExpressions', matchExpressions);\n\n      this.updateMatchingClusters();\n    },\n\n    updateMatchingClusters: throttle(function() {\n      const all = this.clustersForWorkspace;\n      const match = matching(all, this.expressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      this.matchingClusters = {\n        matched,\n        total:  all.length,\n        isAll:  matched === all.length,\n        isNone: matched === 0,\n        sample,\n      };\n    }, 250, { leading: true }),\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-if=\"!isView\"\n      v-model=\"value\"\n      :mode=\"mode\"\n      :namespaced=\"false\"\n      namespace-label=\"nameNsDescription.workspace.label\"\n      :namespace-type=\"FLEET_WORKSPACE\"\n    />\n\n    <h2 v-t=\"'fleet.clusterGroup.selector.label'\" />\n    <MatchExpressions\n      :mode=\"mode\"\n      :value=\"expressions\"\n      :show-remove=\"false\"\n      @input=\"matchChanged($event)\"\n    />\n    <Banner\n      v-if=\"matchingClusters\"\n      :color=\"(matchingClusters.isNone || matchingClusters.isAll ? 'warning' : 'success')\"\n    >\n      <span\n        v-if=\"matchingClusters.isAll\"\n        v-clean-html=\"t('fleet.clusterGroup.selector.matchesAll', matchingClusters)\"\n      />\n      <span\n        v-else-if=\"matchingClusters.isNone\"\n        v-clean-html=\"t('fleet.clusterGroup.selector.matchesNone', matchingClusters)\"\n      />\n      <span\n        v-else\n        v-clean-html=\"t('fleet.clusterGroup.selector.matchesSome', matchingClusters)\"\n      />\n    </Banner>\n\n    <div class=\"spacer\" />\n\n    <Labels\n      default-section-class=\"mt-20\"\n      :value=\"value\"\n      :mode=\"mode\"\n      :display-side-by-side=\"false\"\n    />\n  </CruResource>\n</template>\n"]}]}