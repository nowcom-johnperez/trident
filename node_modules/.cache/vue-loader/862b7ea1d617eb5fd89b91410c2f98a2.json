{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ServicePorts.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ServicePorts.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnOwppbXBvcnQgeyBfRURJVCwgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IHJlbW92ZUF0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2FycmF5JzsKaW1wb3J0IHsgY2xvbmUgfSBmcm9tICdAc2hlbGwvdXRpbHMvb2JqZWN0JzsKaW1wb3J0IFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL1NlbGVjdCc7CmltcG9ydCBFcnJvciBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0Vycm9yJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFNlbGVjdCwgRXJyb3IgfSwKICBwcm9wczogICAgICB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiAgICBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbCwKICAgIH0sCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogX0VESVQsCiAgICB9LAogICAgc3BlY1R5cGU6IHsKICAgICAgdHlwZTogICAgU3RyaW5nLAogICAgICBkZWZhdWx0OiAnQ2x1c3RlcklQJywKICAgIH0sCiAgICBwYWRMZWZ0OiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlLAogICAgfSwKICAgIGF1dG9BZGRJZkVtcHR5OiB7CiAgICAgIHR5cGU6ICAgIEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICB9LAogICAgcnVsZXM6IHsKICAgICAgZGVmYXVsdDogICAoKSA9PiBbXSwKICAgICAgdHlwZTogICAgICBBcnJheSwKICAgICAgLy8gd2Ugb25seSB3YW50IGZ1bmN0aW9ucyBpbiB0aGUgcnVsZXMgYXJyYXkKICAgICAgdmFsaWRhdG9yOiAocnVsZXMpID0+IHJ1bGVzLmV2ZXJ5KChydWxlKSA9PiBbJ2Z1bmN0aW9uJ10uaW5jbHVkZXModHlwZW9mIHJ1bGUpKQogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCByb3dzID0gY2xvbmUodGhpcy52YWx1ZSB8fCBbXSk7CgogICAgcmV0dXJuIHsgcm93cyB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKCiAgICBzaG93QWRkKCkgewogICAgICByZXR1cm4gIXRoaXMuaXNWaWV3OwogICAgfSwKCiAgICBzaG93UmVtb3ZlKCkgewogICAgICByZXR1cm4gIXRoaXMuaXNWaWV3OwogICAgfSwKCiAgICBzaG93UHJvdG9jb2woKSB7CiAgICAgIHJldHVybiB0aGlzLnNwZWNUeXBlICE9PSAnTm9kZVBvcnQnOwogICAgfSwKCiAgICBzaG93Tm9kZVBvcnQoKSB7CiAgICAgIHJldHVybiB0aGlzLnNwZWNUeXBlID09PSAnTm9kZVBvcnQnIHx8IHRoaXMuc3BlY1R5cGUgPT09ICdMb2FkQmFsYW5jZXInOwogICAgfSwKCiAgICBwcm90b2NvbE9wdGlvbnMoKSB7CiAgICAgIHJldHVybiBbJ1RDUCcsICdVRFAnXTsKICAgIH0sCiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMucXVldWVVcGRhdGUgPSBkZWJvdW5jZSh0aGlzLnVwZGF0ZSwgNTAwKTsKICB9LAoKICBtb3VudGVkKCkgewogICAgaWYgKCB0aGlzLmlzVmlldyApIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIGlmICh0aGlzLmF1dG9BZGRJZkVtcHR5ICYmIHRoaXMubW9kZSAhPT0gX0VESVQgJiYgdGhpcz8ucm93cy5sZW5ndGggPCAxKSB7CiAgICAgIC8vIGRvbid0IGZvY3VzIG9uIG1vdW50IGJlY2F1c2Ugd2UnbGwgcHVsbCBmb2N1cyBmcm9tIG5hbWUvbmFtZXNwYWNlIGlucHV0CiAgICAgIHRoaXMuYWRkKGZhbHNlKTsKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBhZGQoZm9jdXMgPSB0cnVlKSB7CiAgICAgIHRoaXMucm93cy5wdXNoKHsKICAgICAgICBuYW1lOiAgICAgICAnJywKICAgICAgICBwb3J0OiAgICAgICBudWxsLAogICAgICAgIHByb3RvY29sOiAgICdUQ1AnLAogICAgICAgIHRhcmdldFBvcnQ6IG51bGwsCiAgICAgIH0pOwoKICAgICAgdGhpcy5xdWV1ZVVwZGF0ZSgpOwoKICAgICAgaWYgKHRoaXMucm93cy5sZW5ndGggPiAwICYmIGZvY3VzKSB7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgY29uc3QgaW5wdXRzID0gdGhpcy4kcmVmc1sncG9ydC1uYW1lJ107CgogICAgICAgICAgaW5wdXRzW2lucHV0cy5sZW5ndGggLSAxXS5mb2N1cygpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAoKICAgIHJlbW92ZShpZHgpIHsKICAgICAgcmVtb3ZlQXQodGhpcy5yb3dzLCBpZHgpOwogICAgICB0aGlzLnF1ZXVlVXBkYXRlKCk7CiAgICB9LAoKICAgIHVwZGF0ZSgpIHsKICAgICAgaWYgKCB0aGlzLmlzVmlldyApIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5yb3dzKTsKICAgIH0KICB9LAp9Owo="},{"version":3,"sources":["ServicePorts.vue"],"names":[],"mappingsfile":"ServicePorts.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { removeAt } from '@shell/utils/array';\nimport { clone } from '@shell/utils/object';\nimport Select from '@shell/components/form/Select';\nimport Error from '@shell/components/form/Error';\n\nexport default {\n  components: { Select, Error },\n  props:      {\n    value: {\n      type:    Array,\n      default: null,\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    specType: {\n      type:    String,\n      default: 'ClusterIP',\n    },\n    padLeft: {\n      type:    Boolean,\n      default: false,\n    },\n    autoAddIfEmpty: {\n      type:    Boolean,\n      default: true,\n    },\n    rules: {\n      default:   () => [],\n      type:      Array,\n      // we only want functions in the rules array\n      validator: (rules) => rules.every((rule) => ['function'].includes(typeof rule))\n    }\n  },\n\n  data() {\n    const rows = clone(this.value || []);\n\n    return { rows };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    showAdd() {\n      return !this.isView;\n    },\n\n    showRemove() {\n      return !this.isView;\n    },\n\n    showProtocol() {\n      return this.specType !== 'NodePort';\n    },\n\n    showNodePort() {\n      return this.specType === 'NodePort' || this.specType === 'LoadBalancer';\n    },\n\n    protocolOptions() {\n      return ['TCP', 'UDP'];\n    },\n  },\n\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n\n  mounted() {\n    if ( this.isView ) {\n      return;\n    }\n\n    if (this.autoAddIfEmpty && this.mode !== _EDIT && this?.rows.length < 1) {\n      // don't focus on mount because we'll pull focus from name/namespace input\n      this.add(false);\n    }\n  },\n\n  methods: {\n    add(focus = true) {\n      this.rows.push({\n        name:       '',\n        port:       null,\n        protocol:   'TCP',\n        targetPort: null,\n      });\n\n      this.queueUpdate();\n\n      if (this.rows.length > 0 && focus) {\n        this.$nextTick(() => {\n          const inputs = this.$refs['port-name'];\n\n          inputs[inputs.length - 1].focus();\n        });\n      }\n    },\n\n    remove(idx) {\n      removeAt(this.rows, idx);\n      this.queueUpdate();\n    },\n\n    update() {\n      if ( this.isView ) {\n        return;\n      }\n\n      this.$emit('input', this.rows);\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div v-if=\"rows.length\">\n      <div\n        class=\"ports-headers\"\n        :class=\"{'show-protocol':showProtocol, 'show-node-port':showNodePort}\"\n      >\n        <span\n          v-if=\"padLeft\"\n          class=\"left\"\n        />\n        <span class=\"port-name\">\n          <t k=\"servicePorts.rules.name.label\" />\n        </span>\n        <span class=\"port\">\n          <t k=\"servicePorts.rules.listening.label\" />\n          <i\n            v-clean-tooltip=\"t('servicesPage.listeningPorts')\"\n            class=\"icon icon-info flex\"\n          />\n          <span class=\"text-error\">*</span>\n        </span>\n        <span\n          v-if=\"showProtocol\"\n          class=\"port-protocol\"\n        >\n          <t k=\"servicePorts.rules.protocol.label\" />\n        </span>\n        <span class=\"target-port\">\n          <t k=\"servicePorts.rules.target.label\" />\n          <i\n            v-clean-tooltip=\"t('servicesPage.targetPorts')\"\n            class=\"icon icon-info flex\"\n          />\n          <span class=\"text-error\">*</span>\n\n        </span>\n        <span\n          v-if=\"showNodePort\"\n          class=\"node-port\"\n        >\n          <t k=\"servicePorts.rules.node.label\" />\n        </span>\n        <span\n          v-if=\"showRemove\"\n          class=\"remove\"\n        />\n      </div>\n      <div\n        v-for=\"(row, idx) in rows\"\n        :key=\"idx\"\n        class=\"ports-row\"\n        :class=\"{'show-protocol':showProtocol, 'show-node-port':showNodePort}\"\n      >\n        <div\n          v-if=\"padLeft\"\n          class=\"left\"\n        />\n        <div class=\"port-name\">\n          <span v-if=\"isView\">{{ row.name }}</span>\n          <input\n            v-else\n            ref=\"port-name\"\n            v-model.number=\"row.name\"\n            type=\"text\"\n            :placeholder=\"t('servicePorts.rules.name.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div class=\"port\">\n          <span v-if=\"isView\">{{ row.port }}</span>\n          <input\n            v-else\n            ref=\"port\"\n            v-model.number=\"row.port\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            :placeholder=\"t('servicePorts.rules.listening.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div\n          v-if=\"showProtocol\"\n          class=\"port-protocol\"\n        >\n          <span v-if=\"isView\">{{ row.protocol }}</span>\n          <Select\n            v-else\n            v-model=\"row.protocol\"\n            :options=\"protocolOptions\"\n            @input=\"queueUpdate\"\n          />\n        </div>\n        <div class=\"target-port\">\n          <span v-if=\"isView\">{{ row.targetPort }}</span>\n          <input\n            v-else\n            v-model=\"row.targetPort\"\n            :placeholder=\"t('servicePorts.rules.target.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div\n          v-if=\"showNodePort\"\n          class=\"node-port\"\n        >\n          <span v-if=\"isView\">{{ row.nodePort }}</span>\n          <input\n            v-else\n            v-model.number=\"row.nodePort\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            :placeholder=\"t('servicePorts.rules.node.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div\n          v-if=\"showRemove\"\n          class=\"remove\"\n        >\n          <button\n            type=\"button\"\n            class=\"btn role-link\"\n            @click=\"remove(idx)\"\n          >\n            <t k=\"generic.remove\" />\n          </button>\n        </div>\n        <Error\n          :value=\"{...row, idx}\"\n          :rules=\"rules\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"showAdd\"\n      class=\"footer\"\n    >\n      <button\n        type=\"button\"\n        class=\"btn role-tertiary add\"\n        @click=\"add()\"\n      >\n        <t k=\"generic.add\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n $remove: 75;\n  $checkbox: 75;\n\n  .title {\n    margin-bottom: 10px;\n\n    .read-from-file {\n      float: right;\n    }\n  }\n\n  .ports-headers, .ports-row{\n    display: grid;\n    grid-column-gap: $column-gutter;\n    margin-bottom: 10px;\n    align-items: center;\n\n    &.show-protocol{\n      grid-template-columns: 23% 23% 10% 15% 15% 10%;\n      &:not(.show-node-port){\n        grid-template-columns: 31% 31% 10% 15% 10%;\n      }\n    }\n    &.show-node-port:not(.show-protocol){\n      grid-template-columns: 28% 28% 15% 15% 10%;\n    }\n  }\n\n  .ports-headers {\n    color: var(--input-label);\n  }\n\n  .toggle-host-ports {\n    color: var(--primary);\n  }\n\n  .remove BUTTON {\n    padding: 0px;\n  }\n\n  .ports-row {\n    > div {\n      height: 100%;\n    }\n\n    .port-protocol ::v-deep {\n      .unlabeled-select {\n        .v-select.inline {\n          margin-top: 2px;\n        }\n      }\n    }\n  }\n\n  .footer {\n    margin-top: 10px;\n    margin-left: 5px;\n\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n</style>\n"]}]}