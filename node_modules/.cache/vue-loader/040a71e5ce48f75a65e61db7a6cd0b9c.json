{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/NodeAffinity.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/NodeAffinity.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBkZWJvdW5jZSBmcm9tICdsb2Rhc2gvZGVib3VuY2UnOwppbXBvcnQgeyBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBnZXQsIGlzRW1wdHksIGNsb25lIH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmltcG9ydCB7IE5PREUgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IE1hdGNoRXhwcmVzc2lvbnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9NYXRjaEV4cHJlc3Npb25zJzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgTGFiZWxlZElucHV0IH0gZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQnOwppbXBvcnQgeyByYW5kb21TdHIgfSBmcm9tICdAc2hlbGwvdXRpbHMvc3RyaW5nJzsKaW1wb3J0IEFycmF5TGlzdEdyb3VwZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9BcnJheUxpc3RHcm91cGVkJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBBcnJheUxpc3RHcm91cGVkLCBNYXRjaEV4cHJlc3Npb25zLCBMYWJlbGVkU2VsZWN0LCBMYWJlbGVkSW5wdXQKICB9LAoKICBwcm9wczogewogICAgLy8gdmFsdWUgc2hvdWxkIGJlIE5vZGVBZmZpbml0eSBvciBWb2x1bWVOb2RlQWZmaW5pdHkKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgIE9iamVjdCwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfSwKCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgIFN0cmluZywKICAgICAgZGVmYXVsdDogJ2NyZWF0ZScKICAgIH0sCgogICAgLy8gaGFzIHNlbGVjdCBmb3IgbWF0Y2hpbmcgZmllbGRzIG9yIGV4cHJlc3Npb25zICh1c2VkIGZvciBub2RlIGFmZmluaXR5KQogICAgLy8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2dlbmVyYXRlZC9rdWJlcm5ldGVzLWFwaS92MS4yNS8jbm9kZXNlbGVjdG9ydGVybS12MS1jb3JlCiAgICBtYXRjaGluZ1NlbGVjdG9yRGlzcGxheTogewogICAgICB0eXBlOiAgICBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgfSwKCiAgZGF0YSgpIHsKICAgIC8vIFZvbHVtZU5vZGVBZmZpbml0eSBvbmx5IGhhcyAncmVxdWlyZWQnIGZpZWxkCiAgICBpZiAodGhpcy52YWx1ZS5yZXF1aXJlZCkgewogICAgICByZXR1cm4geyBub2RlU2VsZWN0b3JUZXJtczogdGhpcy52YWx1ZS5yZXF1aXJlZC5ub2RlU2VsZWN0b3JUZXJtcyB9OwogICAgfSBlbHNlIHsKICAgICAgY29uc3QgeyBwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiA9IFtdLCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uID0ge30gfSA9IHRoaXMudmFsdWU7CiAgICAgIGNvbnN0IHsgbm9kZVNlbGVjdG9yVGVybXMgPSBbXSB9ID0gcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbjsKICAgICAgY29uc3QgYWxsU2VsZWN0b3JUZXJtcyA9IFsuLi5wcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiwgLi4ubm9kZVNlbGVjdG9yVGVybXNdLm1hcCgodGVybSkgPT4gewogICAgICAgIGNvbnN0IG5ldSA9IGNsb25lKHRlcm0pOwoKICAgICAgICBuZXUuX2lkID0gcmFuZG9tU3RyKDQpOwogICAgICAgIGlmICh0ZXJtLnByZWZlcmVuY2UpIHsKICAgICAgICAgIE9iamVjdC5hc3NpZ24obmV1LCB0ZXJtLnByZWZlcmVuY2UpOwogICAgICAgICAgZGVsZXRlIG5ldS5wcmVmZXJlbmNlOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIG5ldTsKICAgICAgfSk7CgogICAgICByZXR1cm4gewogICAgICAgIGFsbFNlbGVjdG9yVGVybXMsCiAgICAgICAgd2VpZ2h0ZWROb2RlU2VsZWN0b3JUZXJtczogcHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24sCiAgICAgICAgZGVmYXVsdFdlaWdodDogICAgICAgICAgICAgMSwKICAgICAgICAvLyBydWxlcyBpbiBNYXRjaEV4cHJlc3Npb25zLnZ1ZSBjYW4gbm90IGNhdGNoIGNoYW5nZXMgd2hhdCBoYXBwZW5zIG9uIHBhcmVudCBjb21wb25lbnQKICAgICAgICAvLyB3ZSBuZWVkIHJlLXJlbmRlciBpdCB2aWEga2V5IGNoYW5naW5nCiAgICAgICAgcmVyZW5kZXJOdW1zOiAgICAgICAgICAgICAgcmFuZG9tU3RyKDQpCiAgICAgIH07CiAgICB9CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoeyB0OiAnaTE4bi90JyB9KSwKICAgIGlzVmlldygpIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gX1ZJRVc7CiAgICB9LAogICAgaGFzV2VpZ2h0ZWQoKSB7CiAgICAgIHJldHVybiAhIXRoaXMud2VpZ2h0ZWROb2RlU2VsZWN0b3JUZXJtczsKICAgIH0sCiAgICBub2RlKCkgewogICAgICByZXR1cm4gTk9ERTsKICAgIH0sCiAgICBhZmZpbml0eU9wdGlvbnMoKSB7CiAgICAgIGNvbnN0IG91dCA9IFt0aGlzLnQoJ3dvcmtsb2FkLnNjaGVkdWxpbmcuYWZmaW5pdHkucHJlZmVycmVkJyksIHRoaXMudCgnd29ya2xvYWQuc2NoZWR1bGluZy5hZmZpbml0eS5yZXF1aXJlZCcpXTsKCiAgICAgIHJldHVybiBvdXQ7CiAgICB9CiAgfSwKCiAgY3JlYXRlZCgpIHsKICAgIHRoaXMucXVldWVVcGRhdGUgPSBkZWJvdW5jZSh0aGlzLnVwZGF0ZSwgNTAwKTsKICB9LAoKICBtZXRob2RzOiB7CiAgICB1cGRhdGUoKSB7CiAgICAgIGNvbnN0IG91dCA9IHt9OwogICAgICBjb25zdCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uID0geyBub2RlU2VsZWN0b3JUZXJtczogW10gfTsKICAgICAgY29uc3QgcHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24gPSBbXSA7CgogICAgICB0aGlzLmFsbFNlbGVjdG9yVGVybXMuZm9yRWFjaCgodCkgPT4gewogICAgICAgIGNvbnN0IHRlcm0gPSB7IC4uLnQgfTsKCiAgICAgICAgLy8gdGhlICdtYXRjaGluZycgZmllbGQgaXNuJ3QgcGFydCBvZiB0aGUgYWZmaW5pdHkgc3BlYzogaW5jbHVkaW5nIHRoaXMgaW4gdGhlIHNhdmUgcmVxdWVzdCB3aWxsIGNhdXNlIGEgZmxvb2Qgb2YgZXJyb3JzIHRoYXQgbWlnaHQgY2F1c2UgdGhlIHJlcXVlc3QgdG8gZmFpbAogICAgICAgIC8vIHNhbWUgZGVhbCB3aXRoIHRlcm0ucHJlZmVyZW5jZS53ZWlnaHQKICAgICAgICBpZiAodGVybS5tYXRjaEV4cHJlc3Npb25zKSB7CiAgICAgICAgICB0ZXJtLm1hdGNoRXhwcmVzc2lvbnMgPSAodGVybS5tYXRjaEV4cHJlc3Npb25zIHx8IFtdKS5tYXAoKGV4cHJlc3Npb24pID0+IHsKICAgICAgICAgICAgY29uc3Qgb3V0ID0geyAuLi5leHByZXNzaW9uIH07CgogICAgICAgICAgICBkZWxldGUgb3V0Lm1hdGNoaW5nOwoKICAgICAgICAgICAgcmV0dXJuIG91dDsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRlcm0ubWF0Y2hGaWVsZHMpIHsKICAgICAgICAgIHRlcm0ubWF0Y2hGaWVsZHMgPSAodGVybS5tYXRjaEZpZWxkcyB8fCBbXSkubWFwKChmaWVsZCkgPT4gewogICAgICAgICAgICBjb25zdCBvdXQgPSB7IC4uLmZpZWxkIH07CgogICAgICAgICAgICBkZWxldGUgb3V0Lm1hdGNoaW5nOwoKICAgICAgICAgICAgcmV0dXJuIG91dDsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgaWYgKHRlcm0ud2VpZ2h0KSB7CiAgICAgICAgICBjb25zdCBuZXUgPSB7IHdlaWdodDogdGVybS53ZWlnaHQsIHByZWZlcmVuY2U6IHRlcm0gfTsKCiAgICAgICAgICBkZWxldGUgbmV1LnByZWZlcmVuY2Uud2VpZ2h0OwoKICAgICAgICAgIHByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uLnB1c2gobmV1KTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbi5ub2RlU2VsZWN0b3JUZXJtcy5wdXNoKHRlcm0pOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICBpZiAocHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24ubGVuZ3RoKSB7CiAgICAgICAgb3V0LnByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uID0gcHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb247CiAgICAgIH0KICAgICAgaWYgKHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24ubm9kZVNlbGVjdG9yVGVybXMubGVuZ3RoKSB7CiAgICAgICAgb3V0LnJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24gPSByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uOwogICAgICB9CgogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIG91dCk7CiAgICB9LAoKICAgIHJlbW92ZSgpIHsKICAgICAgdGhpcy5yZXJlbmRlck51bXMgPSByYW5kb21TdHIoNCk7CiAgICAgIHRoaXMucXVldWVVcGRhdGUoKTsKICAgIH0sCgogICAgY2hhbmdlUHJpb3JpdHkodGVybSkgewogICAgICBpZiAodGVybS53ZWlnaHQpIHsKICAgICAgICB0aGlzLiRkZWxldGUodGVybSwgJ3dlaWdodCcpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHNldCh0ZXJtLCAnd2VpZ2h0JywgMSk7CiAgICAgIH0KICAgICAgdGhpcy51cGRhdGUoKTsKICAgIH0sCgogICAgcHJpb3JpdHlEaXNwbGF5KHRlcm0pIHsKICAgICAgcmV0dXJuICd3ZWlnaHQnIGluIHRlcm0gPyB0aGlzLnQoJ3dvcmtsb2FkLnNjaGVkdWxpbmcuYWZmaW5pdHkucHJlZmVycmVkJykgOiB0aGlzLnQoJ3dvcmtsb2FkLnNjaGVkdWxpbmcuYWZmaW5pdHkucmVxdWlyZWQnKTsKICAgIH0sCgogICAgdXBkYXRlRXhwcmVzc2lvbnMocm93LCBleHByZXNzaW9ucykgewogICAgICBjb25zdCBleHByZXNzaW9uc01hdGNoaW5nID0gewogICAgICAgIG1hdGNoRmllbGRzOiAgICAgIFtdLAogICAgICAgIG1hdGNoRXhwcmVzc2lvbnM6IFtdCiAgICAgIH07CgogICAgICBpZiAoZXhwcmVzc2lvbnMubGVuZ3RoKSB7CiAgICAgICAgZXhwcmVzc2lvbnMuZm9yRWFjaCgoZXhwcmVzc2lvbikgPT4gewogICAgICAgICAgZXhwcmVzc2lvbnNNYXRjaGluZ1tleHByZXNzaW9uLm1hdGNoaW5nIHx8ICdtYXRjaEV4cHJlc3Npb25zJ10ucHVzaChleHByZXNzaW9uKTsKICAgICAgICB9KTsKCiAgICAgICAgdGhpcy4kc2V0KHJvdywgJ21hdGNoRmllbGRzJywgZXhwcmVzc2lvbnNNYXRjaGluZy5tYXRjaEZpZWxkcyk7CiAgICAgICAgdGhpcy4kc2V0KHJvdywgJ21hdGNoRXhwcmVzc2lvbnMnLCBleHByZXNzaW9uc01hdGNoaW5nLm1hdGNoRXhwcmVzc2lvbnMpOwoKICAgICAgICB0aGlzLnVwZGF0ZSgpOwogICAgICB9CiAgICB9LAoKICAgIGdldCwKCiAgICBpc0VtcHR5CiAgfQoKfTsK"},{"version":3,"sources":["NodeAffinity.vue"],"names":[],"mappingsfile":"NodeAffinity.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _VIEW } from '@shell/config/query-params';\nimport { mapGetters } from 'vuex';\nimport { get, isEmpty, clone } from '@shell/utils/object';\nimport { NODE } from '@shell/config/types';\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { randomStr } from '@shell/utils/string';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\n\nexport default {\n  components: {\n    ArrayListGrouped, MatchExpressions, LabeledSelect, LabeledInput\n  },\n\n  props: {\n    // value should be NodeAffinity or VolumeNodeAffinity\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    // has select for matching fields or expressions (used for node affinity)\n    // https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeselectorterm-v1-core\n    matchingSelectorDisplay: {\n      type:    Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    // VolumeNodeAffinity only has 'required' field\n    if (this.value.required) {\n      return { nodeSelectorTerms: this.value.required.nodeSelectorTerms };\n    } else {\n      const { preferredDuringSchedulingIgnoredDuringExecution = [], requiredDuringSchedulingIgnoredDuringExecution = {} } = this.value;\n      const { nodeSelectorTerms = [] } = requiredDuringSchedulingIgnoredDuringExecution;\n      const allSelectorTerms = [...preferredDuringSchedulingIgnoredDuringExecution, ...nodeSelectorTerms].map((term) => {\n        const neu = clone(term);\n\n        neu._id = randomStr(4);\n        if (term.preference) {\n          Object.assign(neu, term.preference);\n          delete neu.preference;\n        }\n\n        return neu;\n      });\n\n      return {\n        allSelectorTerms,\n        weightedNodeSelectorTerms: preferredDuringSchedulingIgnoredDuringExecution,\n        defaultWeight:             1,\n        // rules in MatchExpressions.vue can not catch changes what happens on parent component\n        // we need re-render it via key changing\n        rerenderNums:              randomStr(4)\n      };\n    }\n  },\n\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n    isView() {\n      return this.mode === _VIEW;\n    },\n    hasWeighted() {\n      return !!this.weightedNodeSelectorTerms;\n    },\n    node() {\n      return NODE;\n    },\n    affinityOptions() {\n      const out = [this.t('workload.scheduling.affinity.preferred'), this.t('workload.scheduling.affinity.required')];\n\n      return out;\n    }\n  },\n\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n\n  methods: {\n    update() {\n      const out = {};\n      const requiredDuringSchedulingIgnoredDuringExecution = { nodeSelectorTerms: [] };\n      const preferredDuringSchedulingIgnoredDuringExecution = [] ;\n\n      this.allSelectorTerms.forEach((t) => {\n        const term = { ...t };\n\n        // the 'matching' field isn't part of the affinity spec: including this in the save request will cause a flood of errors that might cause the request to fail\n        // same deal with term.preference.weight\n        if (term.matchExpressions) {\n          term.matchExpressions = (term.matchExpressions || []).map((expression) => {\n            const out = { ...expression };\n\n            delete out.matching;\n\n            return out;\n          });\n        }\n\n        if (term.matchFields) {\n          term.matchFields = (term.matchFields || []).map((field) => {\n            const out = { ...field };\n\n            delete out.matching;\n\n            return out;\n          });\n        }\n\n        if (term.weight) {\n          const neu = { weight: term.weight, preference: term };\n\n          delete neu.preference.weight;\n\n          preferredDuringSchedulingIgnoredDuringExecution.push(neu);\n        } else {\n          requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.push(term);\n        }\n      });\n\n      if (preferredDuringSchedulingIgnoredDuringExecution.length) {\n        out.preferredDuringSchedulingIgnoredDuringExecution = preferredDuringSchedulingIgnoredDuringExecution;\n      }\n      if (requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.length) {\n        out.requiredDuringSchedulingIgnoredDuringExecution = requiredDuringSchedulingIgnoredDuringExecution;\n      }\n\n      this.$emit('input', out);\n    },\n\n    remove() {\n      this.rerenderNums = randomStr(4);\n      this.queueUpdate();\n    },\n\n    changePriority(term) {\n      if (term.weight) {\n        this.$delete(term, 'weight');\n      } else {\n        this.$set(term, 'weight', 1);\n      }\n      this.update();\n    },\n\n    priorityDisplay(term) {\n      return 'weight' in term ? this.t('workload.scheduling.affinity.preferred') : this.t('workload.scheduling.affinity.required');\n    },\n\n    updateExpressions(row, expressions) {\n      const expressionsMatching = {\n        matchFields:      [],\n        matchExpressions: []\n      };\n\n      if (expressions.length) {\n        expressions.forEach((expression) => {\n          expressionsMatching[expression.matching || 'matchExpressions'].push(expression);\n        });\n\n        this.$set(row, 'matchFields', expressionsMatching.matchFields);\n        this.$set(row, 'matchExpressions', expressionsMatching.matchExpressions);\n\n        this.update();\n      }\n    },\n\n    get,\n\n    isEmpty\n  }\n\n};\n</script>\n\n<template>\n  <div\n    class=\"row\"\n    @input=\"queueUpdate\"\n  >\n    <div class=\"col span-12\">\n      <ArrayListGrouped\n        v-model=\"allSelectorTerms\"\n        class=\"mt-20\"\n        :mode=\"mode\"\n        :default-add-value=\"{matchExpressions:[]}\"\n        :add-label=\"t('workload.scheduling.affinity.addNodeSelector')\"\n        @remove=\"remove\"\n      >\n        <template #default=\"props\">\n          <div class=\"row\">\n            <div class=\"col span-9\">\n              <LabeledSelect\n                :options=\"affinityOptions\"\n                :value=\"priorityDisplay(props.row.value)\"\n                :label=\"t('workload.scheduling.affinity.priority')\"\n                :mode=\"mode\"\n                :data-testid=\"`node-affinity-priority-index${props.i}`\"\n                @input=\"(changePriority(props.row.value))\"\n              />\n            </div>\n            <div\n              v-if=\"'weight' in props.row.value\"\n              class=\"col span-3\"\n            >\n              <LabeledInput\n                v-model.number=\"props.row.value.weight\"\n                :mode=\"mode\"\n                type=\"number\"\n                min=\"1\"\n                max=\"100\"\n                :label=\"t('workload.scheduling.affinity.weight.label')\"\n                :placeholder=\"t('workload.scheduling.affinity.weight.placeholder')\"\n                :data-testid=\"`node-affinity-weight-index${props.i}`\"\n              />\n            </div>\n          </div>\n          <MatchExpressions\n            :key=\"rerenderNums\"\n            :value=\"matchingSelectorDisplay ? props.row.value : props.row.value.matchExpressions\"\n            :matching-selector-display=\"matchingSelectorDisplay\"\n            :mode=\"mode\"\n            class=\"col span-12 mt-20\"\n            :type=\"node\"\n            :show-remove=\"false\"\n            :data-testid=\"`node-affinity-expressions-index${props.i}`\"\n            @input=\"(updateExpressions(props.row.value, $event))\"\n          />\n        </template>\n      </ArrayListGrouped>\n    </div>\n  </div>\n</template>\n\n<style>\n</style>\n"]}]}