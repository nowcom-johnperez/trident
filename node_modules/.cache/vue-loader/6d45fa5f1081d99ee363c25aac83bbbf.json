{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/RotateCertificatesDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/RotateCertificatesDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IENhcmQgfSBmcm9tICdAY29tcG9uZW50cy9DYXJkJzsKaW1wb3J0IEFzeW5jQnV0dG9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FzeW5jQnV0dG9uJzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKCmltcG9ydCB7IFJhZGlvR3JvdXAgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL1JhZGlvJzsKaW1wb3J0IFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL1NlbGVjdCc7CgppbXBvcnQgeyBnZXQsIHNldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBleGNlcHRpb25Ub0Vycm9yc0FycmF5IH0gZnJvbSAnQHNoZWxsL3V0aWxzL2Vycm9yJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBTZWxlY3QsCiAgICBSYWRpb0dyb3VwLAogICAgQ2FyZCwKICAgIEFzeW5jQnV0dG9uLAogICAgQmFubmVyCiAgfSwKCiAgcHJvcHM6IHsKICAgIGNsdXN0ZXI6IHsKICAgICAgdHlwZTogICAgT2JqZWN0LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdGVkU2VydmljZTogICAnJywKICAgICAgcm90YXRlQWxsU2VydmljZXM6IHRydWUsCiAgICAgIGVycm9yczogICAgICAgICAgICBbXQogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgc2VydmljZU9wdGlvbnMoKSB7CiAgICAgIGlmICh0aGlzLmNsdXN0ZXIuaXNSa2UyKSB7CiAgICAgICAgY29uc3Qgb3B0aW9ucyA9IFsKICAgICAgICAgICdhZG1pbicsCiAgICAgICAgICAnYXBpLXNlcnZlcicsCiAgICAgICAgICAnY29udHJvbGxlci1tYW5hZ2VyJywKICAgICAgICAgICdzY2hlZHVsZXInLAogICAgICAgICAgJ2Nsb3VkLWNvbnRyb2xsZXInLAogICAgICAgICAgJ2V0Y2QnLAogICAgICAgICAgJ2F1dGgtcHJveHknLAogICAgICAgICAgJ2t1YmVsZXQnLAogICAgICAgICAgJ2t1YmUtcHJveHknCiAgICAgICAgXTsKCiAgICAgICAgaWYgKCB0aGlzLmNsdXN0ZXIuaXNLM3MgKSB7CiAgICAgICAgICBvcHRpb25zLnB1c2goJ2szcy1jb250cm9sbGVyJywgJ2szcy1zZXJ2ZXInKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgb3B0aW9ucy5wdXNoKCdya2UyLWNvbnRyb2xsZXInLCAncmtlMi1zZXJ2ZXInKTsKICAgICAgICB9CgogICAgICAgIHJldHVybiBvcHRpb25zLnNvcnQoKTsKICAgICAgfQogICAgICAvLyBGb3IgUktFMSBjbHVzdGVycywgTm9ybWFuIHByb3ZpZGVzIHRoZSBsaXN0IG9mIHNlcnZpY2Ugb3B0aW9uczoKICAgICAgLy8gdHlwZSBSb3RhdGVDZXJ0aWZpY2F0ZUlucHV0IHN0cnVjdCB7CiAgICAgIC8vICAgQ0FDZXJ0aWZpY2F0ZXMgYm9vbCAgICAgYGpzb246ImNhQ2VydGlmaWNhdGVzLG9taXRlbXB0eSJgCiAgICAgIC8vICAgU2VydmljZXMgICAgICAgW11zdHJpbmcgYGpzb246InNlcnZpY2VzLG9taXRlbXB0eSIgbm9ybWFuOiJ0eXBlPWVudW0sb3B0aW9ucz1ldGNkfGt1YmVsZXR8a3ViZS1hcGlzZXJ2ZXJ8a3ViZS1wcm94eXxrdWJlLXNjaGVkdWxlcnxrdWJlLWNvbnRyb2xsZXItbWFuYWdlciJgCiAgICAgIC8vIH0KICAgICAgY29uc3Qgc2NoZW1hID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1sncmFuY2hlci9zY2hlbWFGb3InXSgncm90YXRlY2VydGlmaWNhdGVpbnB1dCcpOwoKICAgICAgcmV0dXJuIGdldChzY2hlbWEsICdyZXNvdXJjZUZpZWxkcy5zZXJ2aWNlcy5vcHRpb25zJykgfHwgW107CiAgICB9LAoKICAgIGFjdGlvblBhcmFtcygpIHsKICAgICAgaWYgKHRoaXMucm90YXRlQWxsU2VydmljZXMpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgLy8gVG8gcm90YXRlIGFsbCBzZXJ2aWNlcywgUktFMSBjbHVzdGVycyBuZWVkIHNlcnZpY2VzCiAgICAgICAgICAvLyB0byBiZSBudWxsLCB3aGlsZSBSS0UyIHJlcXVpcmVzIGFuIGVtcHR5IGFycmF5LgogICAgICAgICAgc2VydmljZXM6ICAgICAgIHRoaXMuY2x1c3Rlci5pc1JrZTIgPyBbXSA6IG51bGwsCiAgICAgICAgICBjYUNlcnRpZmljYXRlczogZmFsc2UsCiAgICAgICAgfTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgc2VydmljZXM6ICAgICAgIHRoaXMuc2VsZWN0ZWRTZXJ2aWNlLAogICAgICAgICAgY2FDZXJ0aWZpY2F0ZXM6IGZhbHNlLAogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy5zZWxlY3RlZFNlcnZpY2UgPSB0aGlzLnNlcnZpY2VPcHRpb25zWzBdIHx8ICcnOwogIH0sCgogIG1ldGhvZHM6IHsKICAgIGNsb3NlKCkgewogICAgICB0aGlzLiRlbWl0KCdjbG9zZScpOwogICAgfSwKCiAgICBhc3luYyByb3RhdGUoYnV0dG9uRG9uZSkgewogICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLmFjdGlvblBhcmFtczsKCiAgICAgIHRyeSB7CiAgICAgICAgaWYgKHRoaXMuY2x1c3Rlci5pc1JrZTIpIHsKICAgICAgICAvLyBUaGUgU3RldmUgQVBJIGRvZXNuJ3Qgc3VwcG9ydCBhY3Rpb25zLCBzbyBmb3IgUktFMiBjbHVzdGVyIGNlcnQgcm90YXRpb24sIHdlIHBhdGNoIHRoZSBjbHVzdGVyLgogICAgICAgICAgY29uc3QgY3VycmVudEdlbmVyYXRpb24gPSB0aGlzLmNsdXN0ZXIuc3BlYz8ucmtlQ29uZmlnPy5yb3RhdGVDZXJ0aWZpY2F0ZXM/LmdlbmVyYXRpb24gfHwgMDsKCiAgICAgICAgICBzZXQodGhpcy5jbHVzdGVyLCAnc3BlYy5ya2VDb25maWcucm90YXRlQ2VydGlmaWNhdGVzJywgewogICAgICAgICAgICBnZW5lcmF0aW9uOiBjdXJyZW50R2VuZXJhdGlvbiArIDEsCiAgICAgICAgICAgIHNlcnZpY2VzOiAgICh0aGlzLnNlbGVjdGVkU2VydmljZSAmJiAhdGhpcy5yb3RhdGVBbGxTZXJ2aWNlcykgPyBbdGhpcy5zZWxlY3RlZFNlcnZpY2VdIDogW10KICAgICAgICAgIH0pOwoKICAgICAgICAgIGF3YWl0IHRoaXMuY2x1c3Rlci5zYXZlKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGF3YWl0IHRoaXMuY2x1c3Rlci5tZ210LmRvQWN0aW9uKCdyb3RhdGVDZXJ0aWZpY2F0ZXMnLCBwYXJhbXMpOwogICAgICAgIH0KICAgICAgICBidXR0b25Eb25lKHRydWUpOwogICAgICAgIHRoaXMuY2xvc2UoKTsKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgdGhpcy5lcnJvcnMgPSBleGNlcHRpb25Ub0Vycm9yc0FycmF5KGVycik7CiAgICAgICAgYnV0dG9uRG9uZShmYWxzZSk7CiAgICAgIH0KICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["RotateCertificatesDialog.vue"],"names":[],"mappingsfile":"RotateCertificatesDialog.vue","sourceRoot":"node_modules/@rancher/shell/dialog","sourcesContent":["<script>\nimport { Card } from '@components/Card';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Banner } from '@components/Banner';\n\nimport { RadioGroup } from '@components/Form/Radio';\nimport Select from '@shell/components/form/Select';\n\nimport { get, set } from '@shell/utils/object';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\n\nexport default {\n  components: {\n    Select,\n    RadioGroup,\n    Card,\n    AsyncButton,\n    Banner\n  },\n\n  props: {\n    cluster: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  data() {\n    return {\n      selectedService:   '',\n      rotateAllServices: true,\n      errors:            []\n    };\n  },\n\n  computed: {\n    serviceOptions() {\n      if (this.cluster.isRke2) {\n        const options = [\n          'admin',\n          'api-server',\n          'controller-manager',\n          'scheduler',\n          'cloud-controller',\n          'etcd',\n          'auth-proxy',\n          'kubelet',\n          'kube-proxy'\n        ];\n\n        if ( this.cluster.isK3s ) {\n          options.push('k3s-controller', 'k3s-server');\n        } else {\n          options.push('rke2-controller', 'rke2-server');\n        }\n\n        return options.sort();\n      }\n      // For RKE1 clusters, Norman provides the list of service options:\n      // type RotateCertificateInput struct {\n      //   CACertificates bool     `json:\"caCertificates,omitempty\"`\n      //   Services       []string `json:\"services,omitempty\" norman:\"type=enum,options=etcd|kubelet|kube-apiserver|kube-proxy|kube-scheduler|kube-controller-manager\"`\n      // }\n      const schema = this.$store.getters['rancher/schemaFor']('rotatecertificateinput');\n\n      return get(schema, 'resourceFields.services.options') || [];\n    },\n\n    actionParams() {\n      if (this.rotateAllServices) {\n        return {\n          // To rotate all services, RKE1 clusters need services\n          // to be null, while RKE2 requires an empty array.\n          services:       this.cluster.isRke2 ? [] : null,\n          caCertificates: false,\n        };\n      } else {\n        return {\n          services:       this.selectedService,\n          caCertificates: false,\n        };\n      }\n    }\n  },\n\n  mounted() {\n    this.selectedService = this.serviceOptions[0] || '';\n  },\n\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n\n    async rotate(buttonDone) {\n      const params = this.actionParams;\n\n      try {\n        if (this.cluster.isRke2) {\n        // The Steve API doesn't support actions, so for RKE2 cluster cert rotation, we patch the cluster.\n          const currentGeneration = this.cluster.spec?.rkeConfig?.rotateCertificates?.generation || 0;\n\n          set(this.cluster, 'spec.rkeConfig.rotateCertificates', {\n            generation: currentGeneration + 1,\n            services:   (this.selectedService && !this.rotateAllServices) ? [this.selectedService] : []\n          });\n\n          await this.cluster.save();\n        } else {\n          await this.cluster.mgmt.doAction('rotateCertificates', params);\n        }\n        buttonDone(true);\n        this.close();\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-rotate\"\n    :show-highlight-border=\"false\"\n    :style=\"{'height':'100%'}\"\n  >\n    <template #title>\n      <h3>{{ t('cluster.rotateCertificates.modalTitle') }}</h3>\n    </template>\n    <template #body>\n      <Banner\n        v-for=\"(error, i) in errors\"\n        :key=\"i\"\n        class=\"\"\n        color=\"error\"\n        :label=\"error\"\n      />\n      <div class=\"options\">\n        <RadioGroup\n          v-model=\"rotateAllServices\"\n          name=\"service-mode\"\n          :options=\"[\n            {\n              value: true,\n              label:t('cluster.rotateCertificates.allServices')\n            },\n            {\n              value: false,\n              label:t('cluster.rotateCertificates.selectService')\n            }\n          ]\"\n        />\n        <Select\n          v-model=\"selectedService\"\n          :options=\"serviceOptions\"\n          class=\"service-select\"\n          :class=\"{'invisible': rotateAllServices}\"\n        />\n      </div>\n    </template>\n    <div\n      slot=\"actions\"\n      class=\"buttons\"\n    >\n      <button\n        class=\"btn role-secondary mr-20\"\n        @click=\"close\"\n      >\n        {{ t('generic.cancel') }}\n      </button>\n      <AsyncButton\n        mode=\"rotate\"\n        :disabled=\"!rotateAllServices && !selectedService\"\n        @click=\"rotate\"\n      />\n    </div>\n  </Card>\n</template>\n\n<style lang='scss' scoped>\n  .prompt-rotate {\n    margin: 0;\n  }\n  .buttons {\n    display: flex;\n    justify-content: flex-end;\n    width: 100%;\n  }\n  .options {\n    display: flex;\n    flex-direction: column;\n\n    .service-select {\n      margin-left: 20px;\n      margin-top: 10px;\n      width: fit-content;\n      min-width: 260px;\n    }\n  }\n\n.rotate-modal ::v-deep.v--modal-box{\n  border:none;\n\n  & .card-container{\n    margin: 0;\n\n    & .card-wrap {\n      display:flex;\n      flex-direction:column;\n    }\n\n    & .card-body {\n      flex: 1;\n    }\n\n    & .card-actions{\n      align-self: center\n    };\n  }\n}\n</style>\n"]}]}