{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/Enum.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/Enum.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CmltcG9ydCBRdWVzdGlvbiBmcm9tICcuL1F1ZXN0aW9uJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IExhYmVsZWRTZWxlY3QgfSwKICBtaXhpbnM6ICAgICBbUXVlc3Rpb25dLAogIGNvbXB1dGVkOiAgIHsKICAgIG9wdGlvbnMoKSB7CiAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnF1ZXN0aW9uLm9wdGlvbnM7CgogICAgICBpZiAoQXJyYXkuaXNBcnJheShvcHRpb25zKSkgewogICAgICAgIHJldHVybiBvcHRpb25zOwogICAgICB9CgogICAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMob3B0aW9ucykubWFwKChba2V5LCB2YWx1ZV0pID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdmFsdWU6IGtleSwKICAgICAgICAgIGxhYmVsOiB2YWx1ZSwKICAgICAgICB9OwogICAgICB9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["Enum.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Enum.vue","sourceRoot":"node_modules/@rancher/shell/components/Questions","sourcesContent":["<script>\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Question from './Question';\n\nexport default {\n  components: { LabeledSelect },\n  mixins:     [Question],\n  computed:   {\n    options() {\n      const options = this.question.options;\n\n      if (Array.isArray(options)) {\n        return options;\n      }\n\n      return Object.entries(options).map(([key, value]) => {\n        return {\n          value: key,\n          label: value,\n        };\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <div class=\"row\">\n    <div class=\"col span-6\">\n      <LabeledSelect\n        :mode=\"mode\"\n        :label=\"displayLabel\"\n        :options=\"options\"\n        :placeholder=\"question.description\"\n        :required=\"question.required\"\n        :multiple=\"question.multiple\"\n        :value=\"value\"\n        :disabled=\"disabled\"\n        :tooltip=\"displayTooltip\"\n        :searchable=\"question.searchable\"\n        @input=\"$emit('input', $event)\"\n      />\n    </div>\n    <div\n      v-if=\"showDescription\"\n      class=\"col span-6 mt-10\"\n    >\n      {{ displayDescription }}\n    </div>\n  </div>\n</template>\n"]}]}