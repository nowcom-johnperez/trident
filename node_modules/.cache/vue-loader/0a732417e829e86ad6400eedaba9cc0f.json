{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/auth/verify.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/auth/verify.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEdJVEhVQl9DT0RFLCBHSVRIVUJfTk9OQ0UsIEJBQ0tfVE8gfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBiYXNlNjREZWNvZGUgfSBmcm9tICdAc2hlbGwvdXRpbHMvY3J5cHRvJzsKaW1wb3J0IGxvYWRQbHVnaW5zIGZyb20gJ0BzaGVsbC9wbHVnaW5zL3BsdWdpbic7Cgpjb25zdCBzYW1sUHJvdmlkZXJzID0gWydwaW5nJywgJ2FkZnMnLCAna2V5Y2xvYWsnLCAnb2t0YScsICdzaGliYm9sZXRoJ107CgpmdW5jdGlvbiByZXBseShlcnIsIGNvZGUpIHsKICB0cnkgewogICAgd2luZG93Lm9wZW5lci53aW5kb3cub25BdXRoVGVzdChlcnIsIGNvZGUpOwogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHdpbmRvdy5jbG9zZSgpOwogICAgfSwgMjUwKTsKICB9IGNhdGNoIChlKSB7CiAgICB3aW5kb3cuY2xvc2UoKTsKICB9Cn0KCmV4cG9ydCBkZWZhdWx0IHsKICBsYXlvdXQ6ICd1bmF1dGhlbnRpY2F0ZWQnLAoKICBhc3luYyBmZXRjaCh7IHN0b3JlLCByb3V0ZSwgcmVkaXJlY3QgfSkgewogICAgY29uc3QgY29kZSA9IHJvdXRlLnF1ZXJ5W0dJVEhVQl9DT0RFXTsKICAgIGNvbnN0IHN0YXRlU3RyID0gcm91dGUucXVlcnlbR0lUSFVCX05PTkNFXTsKICAgIGNvbnN0IHsKICAgICAgZXJyb3IsIGVycm9yX2Rlc2NyaXB0aW9uOiBlcnJvckRlc2NyaXB0aW9uLCBlcnJvckNvZGUsIGVycm9yTXNnCiAgICB9ID0gcm91dGUucXVlcnk7CgogICAgaWYgKGVycm9yIHx8IGVycm9yRGVzY3JpcHRpb24gfHwgZXJyb3JDb2RlIHx8IGVycm9yTXNnKSB7CiAgICAgIGxldCBvdXQgPSBlcnJvckRlc2NyaXB0aW9uIHx8IGVycm9yIHx8IGVycm9yQ29kZTsKCiAgICAgIGlmIChlcnJvck1zZykgewogICAgICAgIG91dCA9IHN0b3JlLmdldHRlcnNbJ2kxOG4vd2l0aEZhbGxiYWNrJ10oYGxvZ2luLnNlcnZlckVycm9yLiR7IGVycm9yTXNnIH1gLCBudWxsLCBlcnJvck1zZyk7CiAgICAgIH0KCiAgICAgIHJlZGlyZWN0KGAvYXV0aC9sb2dpbj9lcnI9JHsgZXNjYXBlKG91dCkgfWApOwoKICAgICAgcmV0dXJuOwogICAgfQogICAgbGV0IHBhcnNlZDsKCiAgICB0cnkgewogICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGJhc2U2NERlY29kZSgoc3RhdGVTdHIpKSk7CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgY29uc3Qgb3V0ID0gc3RvcmUuZ2V0dGVyc1snaTE4bi90J10oYGxvZ2luLmVycm9yYCk7CgogICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gcGFyc2Ugbm9uY2UnKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlCgogICAgICByZWRpcmVjdChgL2F1dGgvbG9naW4/ZXJyPSR7IGVzY2FwZShvdXQpIH1gKTsKCiAgICAgIHJldHVybjsKICAgIH0KCiAgICBjb25zdCB7IHRlc3QsIHByb3ZpZGVyLCBub25jZSB9ID0gcGFyc2VkOwoKICAgIGlmICh0ZXN0KSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0cnkgewogICAgICBjb25zdCByZXMgPSBhd2FpdCBzdG9yZS5kaXNwYXRjaCgnYXV0aC92ZXJpZnlPQXV0aCcsIHsKICAgICAgICBjb2RlLAogICAgICAgIG5vbmNlLAogICAgICAgIHByb3ZpZGVyCiAgICAgIH0pOwoKICAgICAgaWYgKCByZXMuX3N0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgY29uc3QgYmFja1RvID0gcm91dGUucXVlcnlbQkFDS19UT10gfHwgJy8nOwoKICAgICAgICAvLyBMb2FkIHBsdWdpbnMKICAgICAgICBhd2FpdCBsb2FkUGx1Z2lucyh7CiAgICAgICAgICBhcHA6ICAgICBzdG9yZS5hcHAsCiAgICAgICAgICBzdG9yZSwKICAgICAgICAgICRwbHVnaW46IHN0b3JlLiRwbHVnaW4KICAgICAgICB9KTsKCiAgICAgICAgcmVkaXJlY3QoYmFja1RvKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZWRpcmVjdChgL2F1dGgvbG9naW4/ZXJyPSR7IGVzY2FwZShyZXMpIH1gKTsKICAgICAgfQogICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgIHJlZGlyZWN0KGAvYXV0aC9sb2dpbj9lcnI9JHsgZXNjYXBlKGVycikgfWApOwogICAgfQogIH0sCgogIGRhdGEoKSB7CiAgICBjb25zdCBzdGF0ZUpTT04gPSB0aGlzLiRyb3V0ZS5xdWVyeVtHSVRIVUJfTk9OQ0VdIHx8ICcnOwoKICAgIGxldCBwYXJzZWQgPSB7fTsKCiAgICB0cnkgewogICAgICBwYXJzZWQgPSBKU09OLnBhcnNlKGJhc2U2NERlY29kZShzdGF0ZUpTT04pKTsKICAgIH0gY2F0Y2ggewogICAgfQoKICAgIGNvbnN0IHsgdGVzdCB9ID0gcGFyc2VkOwoKICAgIHJldHVybiB7IHRlc3Rpbmc6IHRlc3QgfTsKICB9LAoKICBtb3VudGVkKCkgewogICAgaWYgKCB0aGlzLnRlc3RpbmcgKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgewogICAgICAgICAgZXJyb3I6IHJlc3BFcnJvciwgZXJyb3JfZGVzY3JpcHRpb246IHJlc3BFcnJvckRlc2NyaXB0aW9uLCBbR0lUSFVCX0NPREVdOiBjb2RlLCBlcnJvck1zZwogICAgICAgIH0gPSB0aGlzLiRyb3V0ZS5xdWVyeTsKCiAgICAgICAgbGV0IGVycm9yID0gcmVzcEVycm9yRGVzY3JpcHRpb24gfHwgcmVzcEVycm9yIHx8ICghY29kZSA/ICdObyBjb2RlIHN1cHBsaWVkIGJ5IGF1dGggcHJvdmlkZXInIDogbnVsbCk7CgogICAgICAgIGlmIChlcnJvck1zZykgewogICAgICAgICAgZXJyb3IgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydpMThuL3dpdGhGYWxsYmFjayddKGBsb2dpbi5zZXJ2ZXJFcnJvci4keyBlcnJvck1zZyB9YCwgbnVsbCwgZXJyb3JNc2cpOwogICAgICAgIH0KCiAgICAgICAgcmVwbHkoZXJyb3IsIGNvZGUgKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHdpbmRvdy5jbG9zZSgpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBjb25zdCB7IHF1ZXJ5IH0gPSB0aGlzLiRyb3V0ZTsKCiAgICAgIGlmICggd2luZG93Lm9wZW5lciApIHsKICAgICAgICBjb25zdCBjb25maWdRdWVyeSA9IGdldChxdWVyeSwgJ2NvbmZpZycpOwoKICAgICAgICBpZiAoIHNhbWxQcm92aWRlcnMuaW5jbHVkZXMoY29uZmlnUXVlcnkpICkgewogICAgICAgICAgaWYgKCB3aW5kb3cub3BlbmVyLndpbmRvdy5vbkF1dGhUZXN0ICkgewogICAgICAgICAgICByZXBseShudWxsLCBudWxsKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHJlcGx5KHsgZXJyOiAnZmFpbHVyZScgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["verify.vue"],"names":[],"mappingsfile":"verify.vue","sourceRoot":"node_modules/@rancher/shell/pages/auth","sourcesContent":["<script>\nimport { GITHUB_CODE, GITHUB_NONCE, BACK_TO } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nexport default {\n  layout: 'unauthenticated',\n\n  async fetch({ store, route, redirect }) {\n    const code = route.query[GITHUB_CODE];\n    const stateStr = route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (errorMsg) {\n        out = store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n      }\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      const out = store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce'); // eslint-disable-line no-console\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     store.app,\n          store,\n          $plugin: store.$plugin\n        });\n\n        redirect(backTo);\n      } else {\n        redirect(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      redirect(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    return { testing: test };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      const { query } = this.$route;\n\n      if ( window.opener ) {\n        const configQuery = get(query, 'config');\n\n        if ( samlProviders.includes(configQuery) ) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n"]}]}