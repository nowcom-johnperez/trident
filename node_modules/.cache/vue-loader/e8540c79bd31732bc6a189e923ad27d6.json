{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/networking.k8s.io.ingress.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/networking.k8s.io.ingress.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgeyBhbGxIYXNoIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3Byb21pc2UnOw0KaW1wb3J0IHsgU0VDUkVULCBTRVJWSUNFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7DQppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsNCmltcG9ydCBSdWxlcyBmcm9tICdAc2hlbGwvZWRpdC9uZXR3b3JraW5nLms4cy5pby5pbmdyZXNzL1J1bGVzJzsNCmltcG9ydCBSZXNvdXJjZVRhYnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9SZXNvdXJjZVRhYnMnOw0KaW1wb3J0IFRhYiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9UYWJiZWQvVGFiJzsNCmltcG9ydCB7IFNFQ1JFVF9UWVBFUyBhcyBUWVBFUyB9IGZyb20gJ0BzaGVsbC9jb25maWcvc2VjcmV0JzsNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAgICAgICAnQ1JVSW5ncmVzcycsDQogIGNvbXBvbmVudHM6IHsNCiAgICBSZXNvdXJjZVRhYnMsDQogICAgUnVsZXMsDQogICAgVGFiDQogIH0sDQogIG1peGluczogW0NyZWF0ZUVkaXRWaWV3XSwNCiAgYXN5bmMgZmV0Y2goKSB7DQogICAgY29uc3QgaGFzaCA9IGF3YWl0IGFsbEhhc2goew0KICAgICAgc2VjcmV0czogIHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdjbHVzdGVyL2ZpbmRBbGwnLCB7IHR5cGU6IFNFQ1JFVCB9KSwNCiAgICAgIHNlcnZpY2VzOiB0aGlzLiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kQWxsJywgeyB0eXBlOiBTRVJWSUNFIH0pLA0KICAgIH0pOw0KDQogICAgdGhpcy5hbGxTZXJ2aWNlcyA9IGhhc2guc2VydmljZXM7DQogICAgdGhpcy5hbGxTZWNyZXRzID0gaGFzaC5zZWNyZXRzOw0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7IGFsbFNlY3JldHM6IFtdLCBhbGxTZXJ2aWNlczogW10gfTsNCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBzZXJ2aWNlVGFyZ2V0cygpIHsNCiAgICAgIHJldHVybiB0aGlzLmZpbHRlckJ5Q3VycmVudFJlc291cmNlTmFtZXNwYWNlKHRoaXMuYWxsU2VydmljZXMpDQogICAgICAgIC5tYXAoKHNlcnZpY2UpID0+ICh7DQogICAgICAgICAgbGFiZWw6IHNlcnZpY2UubWV0YWRhdGEubmFtZSwNCiAgICAgICAgICB2YWx1ZTogc2VydmljZS5tZXRhZGF0YS5uYW1lLA0KICAgICAgICAgIHBvcnRzOiBzZXJ2aWNlLnNwZWMucG9ydHM/Lm1hcCgocCkgPT4gcC5wb3J0KQ0KICAgICAgICB9KSk7DQogICAgfSwNCiAgICBmaXJzdFRhYkxhYmVsKCkgew0KICAgICAgcmV0dXJuIHRoaXMuaXNWaWV3ID8gdGhpcy50KCdpbmdyZXNzLnJ1bGVzQW5kQ2VydGlmaWNhdGVzLnRpdGxlJykgOiB0aGlzLnQoJ2luZ3Jlc3MucnVsZXMudGl0bGUnKTsNCiAgICB9LA0KICAgIGNlcnRpZmljYXRlcygpIHsNCiAgICAgIHJldHVybiB0aGlzLmZpbHRlckJ5Q3VycmVudFJlc291cmNlTmFtZXNwYWNlKHRoaXMuYWxsU2VjcmV0cy5maWx0ZXIoKHNlY3JldCkgPT4gc2VjcmV0Ll90eXBlID09PSBUWVBFUy5UTFMpKS5tYXAoKHNlY3JldCkgPT4gew0KICAgICAgICBjb25zdCB7IGlkIH0gPSBzZWNyZXQ7DQoNCiAgICAgICAgcmV0dXJuIGlkLnNsaWNlKGlkLmluZGV4T2YoJy8nKSArIDEpOw0KICAgICAgfSk7DQogICAgfSwNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGZpbHRlckJ5Q3VycmVudFJlc291cmNlTmFtZXNwYWNlKHJlc291cmNlcykgew0KICAgICAgcmV0dXJuIHJlc291cmNlcy5maWx0ZXIoKHJlc291cmNlKSA9PiB7DQogICAgICAgIHJldHVybiByZXNvdXJjZS5tZXRhZGF0YS5uYW1lc3BhY2UgPT09IHRoaXMudmFsdWUubWV0YWRhdGEubmFtZXNwYWNlOw0KICAgICAgfSk7DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["networking.k8s.io.ingress.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"networking.k8s.io.ingress.vue","sourceRoot":"node_modules/@rancher/shell/detail","sourcesContent":["<script>\r\nimport { allHash } from '@shell/utils/promise';\r\nimport { SECRET, SERVICE } from '@shell/config/types';\r\nimport CreateEditView from '@shell/mixins/create-edit-view';\r\nimport Rules from '@shell/edit/networking.k8s.io.ingress/Rules';\r\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\r\nimport Tab from '@shell/components/Tabbed/Tab';\r\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\r\n\r\nexport default {\r\n  name:       'CRUIngress',\r\n  components: {\r\n    ResourceTabs,\r\n    Rules,\r\n    Tab\r\n  },\r\n  mixins: [CreateEditView],\r\n  async fetch() {\r\n    const hash = await allHash({\r\n      secrets:  this.$store.dispatch('cluster/findAll', { type: SECRET }),\r\n      services: this.$store.dispatch('cluster/findAll', { type: SERVICE }),\r\n    });\r\n\r\n    this.allServices = hash.services;\r\n    this.allSecrets = hash.secrets;\r\n  },\r\n  data() {\r\n    return { allSecrets: [], allServices: [] };\r\n  },\r\n  computed: {\r\n    serviceTargets() {\r\n      return this.filterByCurrentResourceNamespace(this.allServices)\r\n        .map((service) => ({\r\n          label: service.metadata.name,\r\n          value: service.metadata.name,\r\n          ports: service.spec.ports?.map((p) => p.port)\r\n        }));\r\n    },\r\n    firstTabLabel() {\r\n      return this.isView ? this.t('ingress.rulesAndCertificates.title') : this.t('ingress.rules.title');\r\n    },\r\n    certificates() {\r\n      return this.filterByCurrentResourceNamespace(this.allSecrets.filter((secret) => secret._type === TYPES.TLS)).map((secret) => {\r\n        const { id } = secret;\r\n\r\n        return id.slice(id.indexOf('/') + 1);\r\n      });\r\n    },\r\n  },\r\n  methods: {\r\n    filterByCurrentResourceNamespace(resources) {\r\n      return resources.filter((resource) => {\r\n        return resource.metadata.namespace === this.value.metadata.namespace;\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<template>\r\n  <ResourceTabs\n    v-model=\"value\"\n    mode=\"view\"\n    class=\"mt-20\"\n  >\r\n    <Tab\n      :label=\"t('ingress.rules.title')\"\n      name=\"rules\"\n      :weight=\"1\"\n    >\r\n      <Rules\n        v-model=\"value\"\n        :mode=\"mode\"\n        :service-targets=\"serviceTargets\"\n        :certificates=\"certificates\"\n      />\r\n    </Tab>\r\n  </ResourceTabs>\r\n</template>\r\n"]}]}