{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/SetupUIPlugins.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/uiplugins/SetupUIPlugins.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SetupUIPlugins.vue"],"names":[],"mappingsfile":"SetupUIPlugins.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/uiplugins","sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport AsyncButton, { ASYNC_BUTTON_STATES } from '@shell/components/AsyncButton';\nimport IconMessage from '@shell/components/IconMessage.vue';\nimport { CATALOG, MANAGEMENT } from '@shell/config/types';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport Dialog from '@shell/components/Dialog.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport Banner from '@components/Banner/Banner.vue';\n\nimport {\n  UI_PLUGIN_NAMESPACE,\n  UI_PLUGIN_CHARTS,\n  UI_PLUGIN_OPERATOR_REPO_NAME,\n  UI_PLUGINS_REPO_NAME,\n  UI_PLUGINS_REPO_URL,\n  UI_PLUGINS_REPO_BRANCH,\n  UI_PLUGINS_PARTNERS_REPO_NAME,\n  UI_PLUGINS_PARTNERS_REPO_URL,\n  UI_PLUGINS_PARTNERS_REPO_BRANCH,\n} from '@shell/config/uiplugins';\n\nexport default {\n  components: {\n    AsyncButton,\n    Checkbox,\n    Banner,\n    IconMessage,\n    Dialog,\n  },\n\n  async fetch() {\n    // Check to see that the charts we need are available\n    const c = this.$store.getters['catalog/rawCharts'];\n    const charts = Object.values(c);\n    const found = [];\n\n    UI_PLUGIN_CHARTS.forEach((c) => {\n      const f = charts.find((chart) => chart.repoName === UI_PLUGIN_OPERATOR_REPO_NAME & chart.chartName === c);\n\n      if (f) {\n        found.push(f);\n      }\n    });\n\n    this.haveCharts = (found.length === UI_PLUGIN_CHARTS.length);\n\n    if (this.haveCharts) {\n      this.installCharts = found;\n\n      if (this.$store.getters['management/schemaFor'](CATALOG.CLUSTER_REPO)) {\n        // we need to force the request, so that we know at all times if what's the status of the offical and partners repos (installed or not)\n        await this.$store.dispatch('management/findAll', { type: CATALOG.CLUSTER_REPO, opt: { force: true } });\n      }\n    }\n\n    this.defaultRegistrySetting = await this.$store.dispatch('management/find', {\n      type: MANAGEMENT.SETTING,\n      id:   'system-default-registry'\n    });\n\n    this.loading = false;\n  },\n\n  data() {\n    return {\n      loading:       true,\n      haveCharts:    false,\n      installCharts: [],\n      errors:        [],\n      addRepos:      {\n        official: true,\n        partners: true,\n      },\n      reposInfo: {\n        official: {\n          name:   UI_PLUGINS_REPO_NAME,\n          url:    UI_PLUGINS_REPO_URL,\n          branch: UI_PLUGINS_REPO_BRANCH,\n        },\n        partners: {\n          name:   UI_PLUGINS_PARTNERS_REPO_NAME,\n          url:    UI_PLUGINS_PARTNERS_REPO_URL,\n          branch: UI_PLUGINS_PARTNERS_REPO_BRANCH,\n        }\n      },\n      buttonState:            ASYNC_BUTTON_STATES.ACTION,\n      defaultRegistrySetting: null,\n    };\n  },\n\n  computed: {\n    ...mapGetters({ repos: 'catalog/repos' }),\n    hasRancherUIPluginsRepo() {\n      return !!this.repos.find((r) => r.urlDisplay === UI_PLUGINS_REPO_URL);\n    },\n    hasRancherUIPartnersPluginsRepo() {\n      return !!this.repos.find((r) => r.urlDisplay === UI_PLUGINS_PARTNERS_REPO_URL);\n    },\n    isAnyRepoAvailableForInstall() {\n      return !this.hasRancherUIPluginsRepo || !this.hasRancherUIPartnersPluginsRepo;\n    }\n  },\n\n  methods: {\n    async installChart(installChart) {\n      const version = installChart.versions[0];\n      const repoType = version.repoType;\n      const repoName = version.repoName;\n      const repo = this.$store.getters['catalog/repo']({ repoType, repoName });\n\n      const chart = {\n        chartName:   installChart.chartName,\n        version:     version.version,\n        releaseName: installChart.chartName,\n        annotations: {\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_TYPE]: repoType,\n          [CATALOG_ANNOTATIONS.SOURCE_REPO_NAME]: repoName\n        },\n        values: {}\n      };\n\n      // Pass in the system default registry property if set\n      const defaultRegistry = this.defaultRegistrySetting?.value || '';\n\n      if (defaultRegistry) {\n        chart.values.global = chart.values.global || {};\n        chart.values.global.cattle = chart.values.global.cattle || {};\n        chart.values.global.cattle.systemDefaultRegistry = defaultRegistry;\n      }\n\n      const input = {\n        charts:    [chart],\n        wait:      true,\n        namespace: UI_PLUGIN_NAMESPACE,\n      };\n\n      const action = 'install';\n      const res = await repo.doAction(action, input);\n      const operationId = `${ res.operationNamespace }/${ res.operationName }`;\n\n      await repo.waitForOperation(operationId);\n\n      return this.$store.dispatch(`management/find`, {\n        type: CATALOG.OPERATION,\n        id:   operationId\n      });\n    },\n\n    async enable() {\n      this.errors = [];\n\n      // force update of cluster repos so that modal have the correct information about the official and partners repo\n      this.$emit('refreshCharts');\n\n      // Reset checkbox based on if the repo is already installed\n      this.addRepos = {\n        official: !this.hasRancherUIPluginsRepo,\n        partners: !this.hasRancherUIPartnersPluginsRepo,\n      };\n\n      this.$modal.show('confirm-uiplugins-setup');\n    },\n\n    async dialogClosed(ok) {\n      this.errors = [];\n\n      // User wants to proceed\n      if (ok) {\n        this.buttonState = ASYNC_BUTTON_STATES.WAITING;\n\n        if (Object.values(this.addRepos).find((v) => v)) {\n          await this.addDefaultHelmRepositories();\n        }\n\n        await this.installPluginCharts();\n\n        await new Promise((resolve) => setTimeout(resolve, 5000));\n\n        this.buttonState = this.errors.length > 0 ? ASYNC_BUTTON_STATES.ERROR : ASYNC_BUTTON_STATES.ACTION;\n\n        this.$emit('done');\n      }\n    },\n\n    async addDefaultHelmRepositories() {\n      const promises = [];\n\n      for (const key in this.addRepos) {\n        if (this.addRepos[key]) {\n          const pluginCR = await this.$store.dispatch('management/create', {\n            type:     CATALOG.CLUSTER_REPO,\n            metadata: { name: this.reposInfo[key].name },\n            spec:     {\n              gitBranch: this.reposInfo[key].branch,\n              gitRepo:   this.reposInfo[key].url,\n            }\n          });\n\n          promises.push(pluginCR.save());\n        }\n      }\n\n      const res = await Promise.allSettled(promises);\n\n      res.forEach((result) => {\n        if (result.status === 'rejected') {\n          console.error(result.reason); // eslint-disable-line no-console\n\n          this.errors.push(result.reason);\n        }\n      });\n    },\n\n    async installPluginCharts() {\n      for (let i = 0; i < this.installCharts.length; i++) {\n        const chart = this.installCharts[i];\n\n        try {\n          await this.installChart(chart);\n        } catch (e) {\n          this.errors.push(e.message);\n        }\n      }\n\n      return new Promise((resolve) => setTimeout(resolve, 2000));\n    }\n  }\n};\n</script>\n<template>\n  <div>\n    <IconMessage\n      :vertical=\"true\"\n      :subtle=\"false\"\n      icon=\"icon-gear\"\n    >\n      <template v-slot:message>\n        <h2>\n          {{ t('plugins.setup.title') }}\n        </h2>\n        <div v-if=\"!loading\">\n          <div v-if=\"!haveCharts\">\n            <p>\n              {{ t('plugins.setup.prompt.cant') }}\n            </p>\n          </div>\n          <div v-else>\n            <p>\n              {{ t('plugins.setup.prompt.can') }}\n            </p>\n            <AsyncButton\n              mode=\"enable\"\n              :manual=\"true\"\n              :current-phase=\"buttonState\"\n              class=\"enable-plugin-support\"\n              data-testid=\"extension-enable-operator\"\n              @click=\"enable\"\n            />\n          </div>\n          <div\n            v-for=\"(e, i) in errors\"\n            :key=\"i\"\n            class=\"plugin-setup-error\"\n          >\n            {{ e }}\n          </div>\n        </div>\n      </template>\n    </IconMessage>\n    <Dialog\n      name=\"confirm-uiplugins-setup\"\n      :title=\"t('plugins.setup.install.title')\"\n      @closed=\"dialogClosed\"\n    >\n      <template>\n        <p class=\"mb-20\">\n          {{ t('plugins.setup.install.prompt') }}\n        </p>\n        <Banner\n          v-if=\"isAnyRepoAvailableForInstall\"\n          color=\"info\"\n          class=\"mb-20\"\n        >\n          {{ t('plugins.setup.install.airgap') }}\n        </Banner>\n        <!-- Official rancher repo -->\n        <div\n          class=\"mb-15\"\n        >\n          <Checkbox\n            v-model=\"addRepos.official\"\n            :disabled=\"hasRancherUIPluginsRepo\"\n            :primary=\"true\"\n            label-key=\"plugins.setup.install.addRancherRepo\"\n            data-testid=\"extension-enable-operator-official-repo\"\n          />\n          <div\n            v-if=\"hasRancherUIPluginsRepo\"\n            class=\"checkbox-info\"\n          >\n            ({{ t('plugins.setup.installed') }})\n          </div>\n        </div>\n        <!-- Partners rancher repo -->\n        <div\n          class=\"mb-15\"\n        >\n          <Checkbox\n            v-model=\"addRepos.partners\"\n            :disabled=\"hasRancherUIPartnersPluginsRepo\"\n            :primary=\"true\"\n            label-key=\"plugins.setup.install.addPartnersRancherRepo\"\n            data-testid=\"extension-enable-operator-partners-repo\"\n          />\n          <div\n            v-if=\"hasRancherUIPartnersPluginsRepo\"\n            class=\"checkbox-info\"\n          >\n            ({{ t('plugins.setup.installed') }})\n          </div>\n        </div>\n      </template>\n    </Dialog>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n  .enable-plugin-support {\n    font-size: 14px;\n    margin-top: 20px;\n  }\n\n  .plugin-setup-error {\n    font-size: 14px;\n    color: var(--error);\n    margin: 10px 0 0 0;\n  }\n\n  .checkbox-info {\n    margin-left: 20px;\n    opacity: 0.7;\n  }\n</style>\n"]}]}