{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SelectOrCreateAuthSecret.vue"],"names":[],"mappingsfile":"SelectOrCreateAuthSecret.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script>\nimport { _EDIT } from '@shell/config/query-params';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { AUTH_TYPE, NORMAN, SECRET } from '@shell/config/types';\nimport { SECRET_TYPES } from '@shell/config/secret';\nimport { base64Encode } from '@shell/utils/crypto';\nimport { addObjects, insertAt } from '@shell/utils/array';\nimport { sortBy } from '@shell/utils/sort';\n\nexport default {\n  name: 'SelectOrCreateAuthSecret',\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    preSelect: {\n      type:    Object,\n      default: null,\n    },\n\n    value: {\n      type:    [String, Object],\n      default: null,\n    },\n\n    inStore: {\n      type:    String,\n      default: 'cluster',\n    },\n\n    labelKey: {\n      type:    String,\n      default: 'selectOrCreateAuthSecret.label',\n    },\n\n    namespace: {\n      type:     String,\n      required: true,\n    },\n\n    limitToNamespace: {\n      type:    Boolean,\n      default: true,\n    },\n\n    generateName: {\n      type:    String,\n      default: 'auth-',\n    },\n\n    allowNone: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowSsh: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowBasic: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowS3: {\n      type:    Boolean,\n      default: false,\n    },\n\n    allowRke: {\n      type:    Boolean,\n      default: false,\n    },\n\n    registerBeforeHook: {\n      type:     Function,\n      required: true,\n    },\n\n    hookName: {\n      type:    String,\n      default: 'registerAuthSecret'\n    },\n\n    appendUniqueIdToHook: {\n      type:    Boolean,\n      default: false\n    },\n\n    hookPriority: {\n      type:    Number,\n      default: 99,\n    },\n\n    vertical: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * This component is used in MultiStep Priocess\n     * So when user click through to final step and submit the form\n     * This component get recreated therefore register `doCreate` as a hook each time\n     * Also, the parent step component is not aware that credential is created\n     *\n     * This property is implement to prevent this issue and delegate it to parent component.\n     */\n    delegateCreateToParent: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    if ( (this.allowSsh || this.allowBasic || this.allowRke) && this.$store.getters[`${ this.inStore }/schemaFor`](SECRET) ) {\n      // Avoid an async call and loading screen if already loaded by someone else\n      if ( this.$store.getters[`${ this.inStore }/haveAll`](SECRET) ) {\n        this.allSecrets = this.$store.getters[`${ this.inStore }/all`](SECRET);\n      } else {\n        this.allSecrets = await this.$store.dispatch(`${ this.inStore }/findAll`, { type: SECRET });\n      }\n    }\n\n    if ( this.allowS3 && this.$store.getters['rancher/canList'](NORMAN.CLOUD_CREDENTIAL) ) {\n      // Avoid an async call and loading screen if already loaded by someone else\n      if ( this.$store.getters['rancher/haveAll'](NORMAN.CLOUD_CREDENTIAL) ) {\n        this.allCloudCreds = this.$store.getters['rancher/all'](NORMAN.CLOUD_CREDENTIAL);\n      } else {\n        this.allCloudCreds = await this.$store.dispatch('rancher/findAll', { type: NORMAN.CLOUD_CREDENTIAL });\n      }\n    } else {\n      this.allCloudCreds = [];\n    }\n\n    let selected = this.preSelect?.selected || AUTH_TYPE._NONE;\n\n    if ( !this.value ) {\n      this.publicKey = this.preSelect?.publicKey || '';\n      this.privateKey = this.preSelect?.privateKey || '';\n    }\n\n    if ( this.value ) {\n      if ( typeof this.value === 'object' ) {\n        selected = `${ this.value.namespace }/${ this.value.name }`;\n      } else if ( this.value.includes('/') || this.value.includes(':') ) {\n        selected = this.value;\n      } else if ( this.namespace ) {\n        selected = `${ this.namespace }/${ this.value }`;\n      } else {\n        selected = this.value;\n      }\n    }\n\n    this.selected = selected;\n\n    this.update();\n  },\n\n  data(props) {\n    return {\n      allCloudCreds: [],\n      allSecrets:    [],\n      selected:      null,\n\n      publicKey:  '',\n      privateKey: '',\n      uniqueId:   new Date().getTime() // Allows form state to be individually tracked if the form is in a list\n    };\n  },\n\n  computed: {\n    _SSH() {\n      return AUTH_TYPE._SSH;\n    },\n\n    _BASIC() {\n      return AUTH_TYPE._BASIC;\n    },\n\n    _S3() {\n      return AUTH_TYPE._S3;\n    },\n\n    options() {\n      const types = [];\n      const keys = [];\n\n      if ( this.allowSsh ) {\n        types.push(SECRET_TYPES.SSH);\n      }\n\n      if ( this.allowBasic ) {\n        types.push(SECRET_TYPES.BASIC);\n      }\n\n      if ( this.allowRke ) {\n        types.push(SECRET_TYPES.RKE_AUTH_CONFIG);\n      }\n\n      const out = this.allSecrets\n        .filter((x) => this.namespace && this.limitToNamespace ? x.metadata.namespace === this.namespace : true)\n        .filter((x) => {\n          // Must match one of the types if given\n          if ( types.length && !types.includes(x._type) ) {\n            return false;\n          }\n\n          // Must match ALL of the keys if given\n          if ( keys.length ) {\n            const dataKeys = Object.keys(x.data || {});\n\n            if ( !keys.every((key) => dataKeys.includes(key)) ) {\n              return false;\n            }\n          }\n\n          return true;\n        }).map((x) => {\n          const {\n            dataPreview, subTypeDisplay, metadata, id\n          } = x;\n\n          const label = subTypeDisplay && dataPreview ? `${ metadata.name } (${ subTypeDisplay }: ${ dataPreview })` : `${ metadata.name } (${ subTypeDisplay })`;\n\n          return {\n            label,\n            group: metadata.namespace,\n            value: id,\n          };\n        });\n\n      if ( this.allowS3 ) {\n        const more = this.allCloudCreds\n          .filter((x) => ['aws', 's3'].includes(x.provider) )\n          .map((x) => {\n            return {\n              label: `${ x.nameDisplay } (${ x.providerDisplay })`,\n              group: 'Cloud Credentials',\n              value: x.id,\n            };\n          });\n\n        addObjects(out, more);\n      }\n\n      if ( !this.limitToNamespace ) {\n        sortBy(out, 'group');\n        if ( out.length ) {\n          let lastGroup = '';\n\n          for ( let i = 0 ; i < out.length ; i++ ) {\n            if ( out[i].group !== lastGroup ) {\n              lastGroup = out[i].group;\n\n              insertAt(out, i, {\n                kind:     'title',\n                label:    this.t('selectOrCreateAuthSecret.namespaceGroup', { name: lastGroup }),\n                disabled: true,\n              });\n\n              i++;\n            }\n          }\n        }\n      }\n\n      if ( out.length ) {\n        out.unshift({\n          kind:     'title',\n          label:    this.t('selectOrCreateAuthSecret.chooseExisting'),\n          disabled: true\n        });\n      }\n      if ( this.allowNone ) {\n        out.unshift({\n          label: this.t('generic.none'),\n          value: AUTH_TYPE._NONE,\n        });\n      }\n\n      if (this.allowSsh || this.allowS3 || this.allowBasic) {\n        out.unshift({\n          label:    'divider',\n          disabled: true,\n          kind:     'divider'\n        });\n      }\n\n      if ( this.allowSsh ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createSsh'),\n          value: AUTH_TYPE._SSH,\n          kind:  'highlighted'\n        });\n      }\n\n      if ( this.allowS3 ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createS3'),\n          value: AUTH_TYPE._S3,\n          kind:  'highlighted'\n        });\n      }\n\n      if ( this.allowBasic ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createBasic'),\n          value: AUTH_TYPE._BASIC,\n          kind:  'highlighted'\n        });\n      }\n\n      return out;\n    },\n\n    firstCol() {\n      if ( this.vertical ) {\n        return '';\n      }\n\n      if ( this.selected === AUTH_TYPE._SSH || this.selected === AUTH_TYPE._BASIC || this.selected === AUTH_TYPE._S3 ) {\n        return 'col span-4';\n      }\n\n      return 'col span-6';\n    },\n\n    moreCols() {\n      if ( this.vertical ) {\n        return 'mt-20';\n      }\n\n      return 'col span-4';\n    }\n  },\n\n  watch: {\n    selected:   'update',\n    publicKey:  'updateKeyVal',\n    privateKey: 'updateKeyVal',\n\n    namespace(ns) {\n      if ( ns && !this.selected.startsWith(`${ ns }/`) ) {\n        this.selected = AUTH_TYPE._NONE;\n      }\n    }\n  },\n\n  created() {\n    if (this.registerBeforeHook) {\n      const hookName = this.appendUniqueIdToHook ? this.hookName + this.uniqueId : this.hookName;\n\n      if (!this.delegateCreateToParent) {\n        this.registerBeforeHook(this.doCreate, hookName, this.hookPriority);\n      }\n    } else {\n      throw new Error('Before Hook is missing');\n    }\n  },\n\n  methods: {\n    updateKeyVal() {\n      if ( ![AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3].includes(this.selected)) {\n        this.privateKey = '';\n        this.publicKey = '';\n      }\n\n      this.$emit('inputauthval', {\n        selected:   this.selected,\n        privateKey: this.privateKey,\n        publicKey:  this.publicKey\n      });\n    },\n\n    update() {\n      if ( (!this.selected || [AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3, AUTH_TYPE._NONE].includes(this.selected))) {\n        this.$emit('input', null);\n      } else if ( this.selected.includes(':') ) {\n        // Cloud creds\n        this.$emit('input', this.selected);\n      } else {\n        const split = this.selected.split('/');\n\n        if ( this.limitToNamespace ) {\n          this.$emit('input', split[1]);\n        } else {\n          const out = {\n            namespace: split[0],\n            name:      split[1]\n          };\n\n          this.$emit('input', out);\n        }\n      }\n\n      this.updateKeyVal();\n    },\n\n    async doCreate() {\n      if ( ![AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3].includes(this.selected) || this.delegateCreateToParent ) {\n        return;\n      }\n\n      let secret;\n\n      if ( this.selected === AUTH_TYPE._S3 ) {\n        secret = await this.$store.dispatch(`rancher/create`, {\n          type:               NORMAN.CLOUD_CREDENTIAL,\n          s3credentialConfig: {\n            accessKey: this.publicKey,\n            secretKey: this.privateKey,\n          },\n        });\n      } else {\n        secret = await this.$store.dispatch(`${ this.inStore }/create`, {\n          type:     SECRET,\n          metadata: {\n            namespace:    this.namespace,\n            generateName: this.generateName\n          },\n        });\n\n        let type, publicField, privateField;\n\n        switch ( this.selected ) {\n        case AUTH_TYPE._SSH:\n          type = SECRET_TYPES.SSH;\n          publicField = 'ssh-publickey';\n          privateField = 'ssh-privatekey';\n          break;\n        case AUTH_TYPE._BASIC:\n          type = SECRET_TYPES.BASIC;\n          publicField = 'username';\n          privateField = 'password';\n          break;\n        default:\n          throw new Error('Unknown type');\n        }\n\n        secret._type = type;\n        secret.data = {\n          [publicField]:  base64Encode(this.publicKey),\n          [privateField]: base64Encode(this.privateKey),\n        };\n      }\n\n      await secret.save();\n\n      await this.$nextTick(() => {\n        this.selected = secret.id;\n      });\n\n      return secret;\n    },\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"select-or-create-auth-secret\"\n  >\n    <div\n      class=\"mt-20\"\n      :class=\"{'row': !vertical}\"\n    >\n      <div :class=\"firstCol\">\n        <LabeledSelect\n          v-model=\"selected\"\n          data-testid=\"auth-secret-select\"\n          :mode=\"mode\"\n          :label-key=\"labelKey\"\n          :loading=\"$fetchState.pending\"\n          :options=\"options\"\n          :selectable=\"option => !option.disabled\"\n        />\n      </div>\n      <template v-if=\"selected === _SSH\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-ssh-public-key\"\n            :mode=\"mode\"\n            type=\"multiline\"\n            label-key=\"selectOrCreateAuthSecret.ssh.publicKey\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-ssh-private-key\"\n            :mode=\"mode\"\n            type=\"multiline\"\n            label-key=\"selectOrCreateAuthSecret.ssh.privateKey\"\n          />\n        </div>\n      </template>\n      <template v-else-if=\"selected === _BASIC\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-basic-public-key\"\n            :mode=\"mode\"\n            label-key=\"selectOrCreateAuthSecret.basic.username\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-basic-private-key\"\n            :mode=\"mode\"\n            type=\"password\"\n            label-key=\"selectOrCreateAuthSecret.basic.password\"\n          />\n        </div>\n      </template>\n      <template v-else-if=\"selected === _S3\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-s3-public-key\"\n            :mode=\"mode\"\n            label-key=\"selectOrCreateAuthSecret.s3.accessKey\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-s3-private-key\"\n            :mode=\"mode\"\n            type=\"password\"\n            label-key=\"selectOrCreateAuthSecret.s3.secretKey\"\n          />\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.select-or-create-auth-secret div.labeled-select {\n  min-height: $input-height;\n}\n</style>\n"]}]}