{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.route.vue?vue&type=style&index=0&id=37c2f210&lang=scss","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.route.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yb3V0ZSB7CiAgJltyZWFsLW1vZGU9dmlld10gLmxhYmVsIHsKICAgIGNvbG9yOiB2YXIoLS1pbnB1dC1sYWJlbCk7CiAgfQp9Cg=="},{"version":3,"sources":["monitoring.coreos.com.route.vue"],"names":[],"mappings":";AA4OA;AACA;AACA;AACA;AACA","file":"monitoring.coreos.com.route.vue","sourceRoot":"node_modules/@rancher/shell/edit","sourcesContent":["<script>\n/**\n * The Route and Receiver resources are deprecated. Going forward,\n * routes and receivers should be configured within AlertmanagerConfigs.\n * Any updates to route configuration should be made to the route form\n * that is based on the AlertmanagerConfig resource, which has a\n * different API. The new forms are located in\n * @shell/edit/monitoring.coreos.com.alertmanagerconfig/routeConfig.vue.\n */\nimport CruResource from '@shell/components/CruResource';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { MONITORING } from '@shell/config/types';\nimport { Banner } from '@components/Banner';\nimport { createDefaultRouteName } from '@shell/utils/alertmanagerconfig';\nimport Loading from '@shell/components/Loading';\n\nexport default {\n  components: {\n    ArrayList,\n    Banner,\n    CruResource,\n    KeyValue,\n    LabeledInput,\n    LabeledSelect,\n    Loading,\n    Tab,\n    Tabbed\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    const receivers = this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.RECEIVER });\n    const routes = this.$store.dispatch('cluster/findAll', { type: MONITORING.SPOOFED.ROUTE });\n\n    this.receiverOptions = (await receivers).map((receiver) => receiver.spec.name);\n\n    if (this.isCreate) {\n      const nonRootRoutes = (await routes).filter((route) => !route.isRoot);\n\n      this.$set(this.value.spec, 'name', createDefaultRouteName(nonRootRoutes.length));\n    }\n  },\n\n  data() {\n    this.$set(this.value.spec, 'group_by', this.value.spec.group_by || []);\n\n    return {\n      receiverOptions:      [],\n      doneLocationOverride: {\n        name:   'c-cluster-monitoring-route-receiver',\n        params: { cluster: this.$store.getters['clusterId'] },\n        query:  { resource: MONITORING.SPOOFED.ROUTE }\n      }\n    };\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    class=\"route\"\n    :done-route=\"doneRoute\"\n    :errors=\"errors\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :cancel-event=\"true\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <div\n      v-if=\"!isView\"\n      class=\"row mb-10\"\n    >\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.spec.name\"\n          :disabled=\"true\"\n          :label=\"t('generic.name')\"\n          :mode=\"mode\"\n        />\n      </div>\n    </div>\n    <Banner\n      v-if=\"value.isRoot\"\n      color=\"info\"\n    >\n      {{ t(\"monitoringRoute.info\") }}\n    </Banner>\n    <Tabbed\n      ref=\"tabbed\"\n      :side-tabs=\"true\"\n      default-tab=\"overview\"\n    >\n      <Tab\n        label=\"Receiver\"\n        :weight=\"2\"\n        name=\"receiver\"\n      >\n        <div class=\"row\">\n          <div class=\"col span-6\">\n            <LabeledSelect\n              v-model=\"value.spec.receiver\"\n              :options=\"receiverOptions\"\n              :label=\"t('monitoringRoute.receiver.label')\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        label=\"Grouping\"\n        :weight=\"1\"\n        name=\"groups\"\n      >\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <span class=\"label\">\n              {{ t(\"monitoringRoute.groups.label\") }}:\n            </span>\n            <ArrayList\n              v-if=\"!isView || value.spec.group_by.length > 0\"\n              v-model=\"value.spec.group_by\"\n              :label=\"t('monitoringRoute.groups.label')\"\n              :mode=\"mode\"\n              :initial-empty-row=\"true\"\n            />\n            <div v-else>\n              {{ t('generic.none') }}\n            </div>\n          </div>\n        </div>\n        <hr class=\"divider\">\n        <div class=\"row mb-10\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.spec.group_wait\"\n              :label=\"t('monitoringRoute.wait.label')\"\n              :mode=\"mode\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.spec.group_interval\"\n              :label=\"t('monitoringRoute.interval.label')\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n        <div class=\"row mb-10\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.spec.repeat_interval\"\n              :label=\"t('monitoringRoute.repeatInterval.label')\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n      </Tab>\n      <Tab\n        label=\"Matching\"\n        :weight=\"1\"\n        name=\"matching\"\n      >\n        <Banner\n          v-if=\"value.isRoot\"\n          color=\"info\"\n        >\n          {{ t('monitoringRoute.matching.info') }}\n        </Banner>\n        <div\n          v-else\n          class=\"row\"\n        >\n          <div class=\"col span-12\">\n            <span class=\"label\">\n              {{ t('monitoringRoute.matching.label') }}\n            </span>\n            <KeyValue\n              v-if=\"!isView || Object.keys(value.spec.match || {}).length > 0\"\n              v-model=\"value.spec.match\"\n              :disabled=\"value.isRoot\"\n              :options=\"receiverOptions\"\n              :label=\"t('monitoringRoute.receiver.label')\"\n              :mode=\"mode\"\n              :read-allowed=\"false\"\n              add-label=\"Add match\"\n            />\n            <div v-else>\n              {{ t('generic.none') }}\n            </div>\n          </div>\n        </div>\n        <div class=\"row mt-40\">\n          <div class=\"col span-12\">\n            <span class=\"label\">\n              {{ t('monitoringRoute.regex.label') }}:\n            </span>\n            <KeyValue\n              v-if=\"!isView || Object.keys(value.spec.match_re || {}).length > 0\"\n              v-model=\"value.spec.match_re\"\n              :disabled=\"value.isRoot\"\n              :options=\"receiverOptions\"\n              :label=\"t('monitoringRoute.receiver.label')\"\n              :mode=\"mode\"\n              :read-allowed=\"false\"\n              add-label=\"Add match regex\"\n            />\n            <div v-else>\n              {{ t('generic.none') }}\n            </div>\n          </div>\n        </div>\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n\n<style lang=\"scss\">\n  .route {\n    &[real-mode=view] .label {\n      color: var(--input-label);\n    }\n  }\n</style>\n"]}]}