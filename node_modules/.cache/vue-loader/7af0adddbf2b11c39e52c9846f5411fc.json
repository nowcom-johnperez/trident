{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/AddProjectMemberDialog.vue?vue&type=style&index=0&id=c77a78aa&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/AddProjectMemberDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5wcm9tcHQtcm90YXRlIHsKICBtYXJnaW46IDA7Cn0KLmJ1dHRvbnMgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsKICB3aWR0aDogMTAwJTsKfQo="},{"version":3,"sources":["AddProjectMemberDialog.vue"],"names":[],"mappings":";AAqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AddProjectMemberDialog.vue","sourceRoot":"node_modules/@rancher/shell/dialog","sourcesContent":["<script>\r\nimport { Card } from '@components/Card';\r\nimport ProjectMemberEditor from '@shell/components/form/ProjectMemberEditor';\r\nimport AsyncButton from '@shell/components/AsyncButton';\r\nimport Banner from '@components/Banner/Banner.vue';\r\nimport { NORMAN } from '@shell/config/types';\r\n\r\nexport default {\r\n  components: {\r\n    Card,\r\n    ProjectMemberEditor,\r\n    AsyncButton,\r\n    Banner\r\n  },\r\n\r\n  props: {\r\n    resources: {\r\n      type:     Array,\r\n      required: true\r\n    },\r\n\r\n    onAdd: {\r\n      type:    Function,\r\n      default: () => {}\r\n    },\r\n\r\n    projectId: {\r\n      type:    String,\r\n      default: null\r\n    },\r\n\r\n    saveInModal: {\r\n      type:    Boolean,\r\n      default: false\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      member: {\r\n        permissionGroup: 'member',\r\n        custom:          {},\r\n        principalId:     '',\r\n        roleTemplateIds: []\r\n      },\r\n      error: null\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    principal() {\r\n      const principalId = this.member.principalId.replace(/\\//g, '%2F');\r\n\r\n      return this.$store.dispatch('rancher/find', {\r\n        type: NORMAN.PRINCIPAL,\r\n        id:   this.member.principalId,\r\n        opt:  { url: `/v3/principals/${ principalId }` }\r\n      }, { root: true });\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    async principalProperty() {\r\n      const principal = await this.principal;\r\n\r\n      return principal?.principalType === 'group' ? 'groupPrincipalId' : 'userPrincipalId';\r\n    },\r\n\r\n    close() {\r\n      this.$emit('close');\r\n    },\r\n\r\n    async apply() {\r\n      this.onAdd(await this.createBindings());\r\n      this.close();\r\n    },\r\n\r\n    async createBindings() {\r\n      const principalProperty = await this.principalProperty();\r\n      const promises = this.member.roleTemplateIds.map((roleTemplateId) => this.$store.dispatch(`rancher/create`, {\r\n        type:                NORMAN.PROJECT_ROLE_TEMPLATE_BINDING,\r\n        roleTemplateId,\r\n        [principalProperty]: this.member.principalId,\r\n        projectId:           this.projectId,\r\n      }));\r\n\r\n      return Promise.all(promises);\r\n    },\r\n\r\n    saveBindings(btnCB) {\r\n      this.error = null;\r\n      this.createBindings()\r\n        .then((bindings) => {\r\n          return Promise.all(bindings.map((b) => b.save()));\r\n        })\r\n        .then(() => {\r\n          btnCB(true);\r\n          setTimeout(this.close, 500);\r\n        })\r\n        .catch((err) => {\r\n          this.error = err;\r\n          btnCB(false);\r\n        });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Card\r\n    class=\"prompt-rotate\"\r\n    :show-highlight-border=\"false\"\r\n    :sticky=\"true\"\r\n  >\r\n    <h4\r\n      slot=\"title\"\r\n      v-clean-html=\"t('addProjectMemberDialog.title')\"\r\n      class=\"text-default-text\"\r\n    />\r\n\r\n    <div\r\n      slot=\"body\"\r\n      class=\"pl-10 pr-10\"\r\n    >\r\n      <Banner\r\n        v-if=\"error\"\r\n        color=\"error\"\r\n      >\r\n        {{ error }}\r\n      </Banner>\r\n      <ProjectMemberEditor\r\n        v-model=\"member\"\r\n        :use-two-columns-for-custom=\"true\"\r\n      />\r\n    </div>\r\n\r\n    <div\r\n      slot=\"actions\"\r\n      class=\"buttons\"\r\n    >\r\n      <button\r\n        class=\"btn role-secondary mr-10\"\r\n        @click=\"close\"\r\n      >\r\n        {{ t('generic.cancel') }}\r\n      </button>\r\n\r\n      <AsyncButton\r\n        v-if=\"saveInModal\"\r\n        mode=\"create\"\r\n        @click=\"cb=>saveBindings(cb)\"\r\n      />\r\n\r\n      <button\r\n        v-else\r\n        class=\"btn role-primary\"\r\n        @click=\"apply\"\r\n      >\r\n        {{ t('generic.add') }}\r\n      </button>\r\n    </div>\r\n  </Card>\r\n</template>\r\n<style lang='scss' scoped>\r\n  .prompt-rotate {\r\n    margin: 0;\r\n  }\r\n  .buttons {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    width: 100%;\r\n  }\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n  .card-container {\r\n    border: 1px solid var(--border);\r\n    box-shadow: none;\r\n  }\r\n</style>\r\n"]}]}