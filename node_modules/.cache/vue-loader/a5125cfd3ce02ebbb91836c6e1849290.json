{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/home.vue?vue&type=template&id=3bb87230&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/home.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYKICB2LWlmPSJtYW5hZ2VtZW50UmVhZHkiCiAgY2xhc3M9ImhvbWUtcGFnZSIKPgogIDxCYW5uZXJHcmFwaGljCiAgICA6c21hbGw9InRydWUiCiAgICA6dGl0bGU9InQoJ2xhbmRpbmcud2VsY29tZVRvUmFuY2hlcicsIHt2ZW5kb3J9KSIKICAgIDpwcmVmPSJISURFX0hPTUVfUEFHRV9DQVJEUyIKICAgIHByZWYta2V5PSJ3ZWxjb21lQmFubmVyIgogICAgZGF0YS10ZXN0aWQ9ImhvbWUtYmFubmVyLWdyYXBoaWMiCiAgLz4KICA8SW5kZW50ZWRQYW5lbCBjbGFzcz0ibXQtMjAgbWItMjAiPgogICAgPGRpdgogICAgICB2LWlmPSIhcmVhZFdoYXRzTmV3QWxyZWFkeSIKICAgICAgY2xhc3M9InJvdyIKICAgID4KICAgICAgPGRpdiBjbGFzcz0iY29sIHNwYW4tMTIiPgogICAgICAgIDxCYW5uZXIKICAgICAgICAgIGRhdGEtdGVzdGlkPSJjaGFuZ2Vsb2ctYmFubmVyIgogICAgICAgICAgY29sb3I9ImluZm8gd2hhdHMtbmV3IgogICAgICAgID4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIHt7IHQoJ2xhbmRpbmcuc2VlV2hhdHNOZXcnKSB9fQogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8YQogICAgICAgICAgICBjbGFzcz0iaGFuZCIKICAgICAgICAgICAgOmhyZWY9InJlbGVhc2VOb3Rlc1VybCIKICAgICAgICAgICAgdGFyZ2V0PSJfYmxhbmsiCiAgICAgICAgICAgIHJlbD0ibm9vcGVuZXIgbm9yZWZlcnJlciBub2ZvbGxvdyIKICAgICAgICAgICAgQGNsaWNrLnN0b3A9InNob3dXaGF0c05ldyIKICAgICAgICAgID48c3BhbiB2LWNsZWFuLWh0bWw9InQoJ2xhbmRpbmcud2hhdHNOZXdMaW5rJykiIC8+PC9hPgogICAgICAgIDwvQmFubmVyPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKICAgIDxkaXYgY2xhc3M9InJvdyBob21lLXBhbmVscyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbCBtYWluLXBhbmVsIj4KICAgICAgICA8ZGl2CiAgICAgICAgICB2LWlmPSIhc2hvd1NldExvZ2luQmFubmVyIgogICAgICAgICAgY2xhc3M9Im1iLTEwIHJvdyIKICAgICAgICA+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgc3Bhbi0xMiI+CiAgICAgICAgICAgIDxCYW5uZXIKICAgICAgICAgICAgICBjb2xvcj0ic2V0LWxvZ2luLXBhZ2UgbXQtMCIKICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0ic2V0LWxvZ2luLXBhZ2UtYmFubmVyIgogICAgICAgICAgICAgIDpjbG9zYWJsZT0idHJ1ZSIKICAgICAgICAgICAgICBAY2xvc2U9ImNsb3NlU2V0TG9naW5CYW5uZXIoKSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICB7eyB0KCdsYW5kaW5nLmxhbmRpbmdQcmVmcy50aXRsZScpIH19CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgIGNsYXNzPSJoYW5kIG1yLTIwIgogICAgICAgICAgICAgICAgQGNsaWNrLnByZXZlbnQuc3RvcD0ic2hvd1VzZXJQcmVmcyIKICAgICAgICAgICAgICA+PHNwYW4gdi1jbGVhbi1odG1sPSJ0KCdsYW5kaW5nLmxhbmRpbmdQcmVmcy51c2VyUHJlZnMnKSIgLz48L2E+CiAgICAgICAgICAgIDwvQmFubmVyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icm93IHBhbmVsIj4KICAgICAgICAgIDxkaXYKICAgICAgICAgICAgdi1pZj0ibWNtIgogICAgICAgICAgICBjbGFzcz0iY29sIHNwYW4tMTIiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxTb3J0YWJsZVRhYmxlCiAgICAgICAgICAgICAgOnRhYmxlLWFjdGlvbnM9ImZhbHNlIgogICAgICAgICAgICAgIDpyb3ctYWN0aW9ucz0iZmFsc2UiCiAgICAgICAgICAgICAga2V5LWZpZWxkPSJpZCIKICAgICAgICAgICAgICA6cm93cz0ia3ViZUNsdXN0ZXJzIgogICAgICAgICAgICAgIDpoZWFkZXJzPSJjbHVzdGVySGVhZGVycyIKICAgICAgICAgICAgICA6bG9hZGluZz0iIWt1YmVDbHVzdGVycyIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSAjaGVhZGVyLWxlZnQ+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgdGFibGUtaGVhZGluZyI+CiAgICAgICAgICAgICAgICAgIDxoMiBjbGFzcz0ibWItMCI+CiAgICAgICAgICAgICAgICAgICAge3sgdCgnbGFuZGluZy5jbHVzdGVycy50aXRsZScpIH19CiAgICAgICAgICAgICAgICAgIDwvaDI+CiAgICAgICAgICAgICAgICAgIDxCYWRnZVN0YXRlCiAgICAgICAgICAgICAgICAgICAgdi1pZj0ia3ViZUNsdXN0ZXJzIgogICAgICAgICAgICAgICAgICAgIDpsYWJlbD0ia3ViZUNsdXN0ZXJzLmxlbmd0aC50b1N0cmluZygpIgogICAgICAgICAgICAgICAgICAgIGNvbG9yPSJyb2xlLXRlcnRpYXJ5IG1sLTIwIG1yLTIwIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8dGVtcGxhdGUKICAgICAgICAgICAgICAgIHYtaWY9ImNhbkNyZWF0ZUNsdXN0ZXIgfHwgY2FuTWFuYWdlQ2x1c3RlcnMiCiAgICAgICAgICAgICAgICAjaGVhZGVyLW1pZGRsZQogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRhYmxlLWhlYWRpbmciPgogICAgICAgICAgICAgICAgICA8bi1saW5rCiAgICAgICAgICAgICAgICAgICAgdi1pZj0iY2FuTWFuYWdlQ2x1c3RlcnMiCiAgICAgICAgICAgICAgICAgICAgOnRvPSJtYW5hZ2VMb2NhdGlvbiIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1zbSByb2xlLXNlY29uZGFyeSIKICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0iY2x1c3Rlci1tYW5hZ2VtZW50LW1hbmFnZS1idXR0b24iCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICB7eyB0KCdjbHVzdGVyLm1hbmFnZUFjdGlvbicpIH19CiAgICAgICAgICAgICAgICAgIDwvbi1saW5rPgogICAgICAgICAgICAgICAgICA8bi1saW5rCiAgICAgICAgICAgICAgICAgICAgdi1pZj0iY2FuQ3JlYXRlQ2x1c3RlciIKICAgICAgICAgICAgICAgICAgICA6dG89ImltcG9ydExvY2F0aW9uIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLXNtIHJvbGUtcHJpbWFyeSIKICAgICAgICAgICAgICAgICAgICBkYXRhLXRlc3RpZD0iY2x1c3Rlci1jcmVhdGUtaW1wb3J0LWJ1dHRvbiIKICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgIHt7IHQoJ2NsdXN0ZXIuaW1wb3J0QWN0aW9uJykgfX0KICAgICAgICAgICAgICAgICAgPC9uLWxpbms+CiAgICAgICAgICAgICAgICAgIDxuLWxpbmsKICAgICAgICAgICAgICAgICAgICB2LWlmPSJjYW5DcmVhdGVDbHVzdGVyIgogICAgICAgICAgICAgICAgICAgIDp0bz0iY3JlYXRlTG9jYXRpb24iCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tc20gcm9sZS1wcmltYXJ5IgogICAgICAgICAgICAgICAgICAgIGRhdGEtdGVzdGlkPSJjbHVzdGVyLWNyZWF0ZS1idXR0b24iCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICB7eyB0KCdnZW5lcmljLmNyZWF0ZScpIH19CiAgICAgICAgICAgICAgICAgIDwvbi1saW5rPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8dGVtcGxhdGUgI2NvbDpuYW1lPSJ7cm93fSI+CiAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxpc3QtY2x1c3Rlci1uYW1lIj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJyb3cubWdtdCI+CiAgICAgICAgICAgICAgICAgICAgICA8bi1saW5rCiAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9InJvdy5tZ210LmlzUmVhZHkgJiYgIXJvdy5oYXNFcnJvciIKICAgICAgICAgICAgICAgICAgICAgICAgOnRvPSJ7IG5hbWU6ICdjLWNsdXN0ZXItZXhwbG9yZXInLCBwYXJhbXM6IHsgY2x1c3Rlcjogcm93Lm1nbXQuaWQgfX0iCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIHt7IHJvdy5uYW1lRGlzcGxheSB9fQogICAgICAgICAgICAgICAgICAgICAgPC9uLWxpbms+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+e3sgcm93Lm5hbWVEaXNwbGF5IH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8aQogICAgICAgICAgICAgICAgICAgICAgdi1pZj0icm93LnVuYXZhaWxhYmxlTWFjaGluZXMiCiAgICAgICAgICAgICAgICAgICAgICB2LWNsZWFuLXRvb2x0aXA9InJvdy51bmF2YWlsYWJsZU1hY2hpbmVzIgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImNvbmRpdGlvbnMtYWxlcnQtaWNvbiBpY29uLWFsZXJ0IGljb24iCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPHRlbXBsYXRlICNjb2w6Y3B1PSJ7cm93fSI+CiAgICAgICAgICAgICAgICA8dGQgdi1pZj0icm93Lm1nbXQgJiYgY3B1QWxsb2NhdGFibGUocm93Lm1nbXQpIj4KICAgICAgICAgICAgICAgICAge3sgYCR7Y3B1QWxsb2NhdGFibGUocm93Lm1nbXQpfSAke3QoJ2xhbmRpbmcuY2x1c3RlcnMuY29yZXMnLCB7Y291bnQ6Y3B1QWxsb2NhdGFibGUocm93Lm1nbXQpIH0pfWAgfX0KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgdi1lbHNlPgogICAgICAgICAgICAgICAgICAmbWRhc2g7CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPHRlbXBsYXRlICNjb2w6bWVtb3J5PSJ7cm93fSI+CiAgICAgICAgICAgICAgICA8dGQgdi1pZj0icm93Lm1nbXQgJiYgbWVtb3J5QWxsb2NhdGFibGUocm93Lm1nbXQpICYmICFtZW1vcnlBbGxvY2F0YWJsZShyb3cubWdtdCkubWF0Y2goL14wIFthLXpBLXpdLykiPgogICAgICAgICAgICAgICAgICB7eyBtZW1vcnlBbGxvY2F0YWJsZShyb3cubWdtdCkgfX0KICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICA8dGQgdi1lbHNlPgogICAgICAgICAgICAgICAgICAmbWRhc2g7CiAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgPCEtLSA8dGVtcGxhdGUgI2NlbGw6ZXhwbG9yZXI9Intyb3d9Ij4KICAgICAgICAgICAgICAgIDxuLWxpbmsgdi1pZj0icm93ICYmIHJvdy5pc1JlYWR5IiBjbGFzcz0iYnRuIGJ0bi1zbSByb2xlLXByaW1hcnkiIDp0bz0ie25hbWU6ICdjLWNsdXN0ZXInLCBwYXJhbXM6IHtjbHVzdGVyOiByb3cuaWR9fSI+CiAgICAgICAgICAgICAgICAgIHt7IHQoJ2xhbmRpbmcuY2x1c3RlcnMuZXhwbG9yZScpIH19CiAgICAgICAgICAgICAgICA8L24tbGluaz4KICAgICAgICAgICAgICAgIDxidXR0b24gdi1lbHNlIDpkaXNhYmxlZD0idHJ1ZSIgY2xhc3M9ImJ0biBidG4tc20gcm9sZS1wcmltYXJ5Ij4KICAgICAgICAgICAgICAgICAge3sgdCgnbGFuZGluZy5jbHVzdGVycy5leHBsb3JlJykgfX0KICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+IC0tPgogICAgICAgICAgICA8L1NvcnRhYmxlVGFibGU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYKICAgICAgICAgICAgdi1lbHNlCiAgICAgICAgICAgIGNsYXNzPSJjb2wgc3Bhbi0xMiIKICAgICAgICAgID4KICAgICAgICAgICAgPFNpbmdsZUNsdXN0ZXJJbmZvIC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxDb21tdW5pdHlMaW5rcyBjbGFzcz0iY29sIHNwYW4tMyBzaWRlLXBhbmVsIiAvPgogICAgPC9kaXY+CiAgPC9JbmRlbnRlZFBhbmVsPgo8L2Rpdj4K"},null]}