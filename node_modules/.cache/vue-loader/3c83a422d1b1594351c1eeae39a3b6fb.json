{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/manager/cloudCredential/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/manager/cloudCredential/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IE1hc3RoZWFkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlTGlzdC9NYXN0aGVhZCc7CmltcG9ydCB7IE5PUk1BTiwgU0VDUkVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IEFHRV9OT1JNQU4sIERFU0NSSVBUSU9OLCBJRF9VTkxJTktFRCwgTkFNRV9VTkxJTktFRCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdGFibGUtaGVhZGVycyc7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTG9hZGluZywgUmVzb3VyY2VUYWJsZSwgTWFzdGhlYWQKICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGlmICggdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9zY2hlbWFGb3InXShTRUNSRVQpICkgewogICAgICAvLyBIYXZpbmcgc2VjcmV0cyBhbGxvd3Mgc2hvd2luZyB0aGUgcHVibGljIHBvcnRpb24gb2YgbW9yZSB0eXBlcyBidXQgbm90IGFsbCB1c2VycyBjYW4gc2VlIHRoZW0uCiAgICAgIGF3YWl0IHRoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7IHR5cGU6IFNFQ1JFVCB9KTsKICAgIH0KCiAgICB0aGlzLmFsbENyZWRlbnRpYWxzID0gYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ3JhbmNoZXIvZmluZEFsbCcsIHsgdHlwZTogTk9STUFOLkNMT1VEX0NSRURFTlRJQUwgfSk7CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGFsbENyZWRlbnRpYWxzOiBudWxsLAogICAgICByZXNvdXJjZTogICAgICAgTk9STUFOLkNMT1VEX0NSRURFTlRJQUwsCiAgICAgIHNjaGVtYTogICAgICAgICB0aGlzLiRzdG9yZS5nZXR0ZXJzWydyYW5jaGVyL3NjaGVtYUZvciddKE5PUk1BTi5DTE9VRF9DUkVERU5USUFMKSwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsKICAgIHJvd3MoKSB7CiAgICAgIHJldHVybiB0aGlzLmFsbENyZWRlbnRpYWxzIHx8IFtdOwogICAgfSwKCiAgICBoZWFkZXJzKCkgewogICAgICByZXR1cm4gWwogICAgICAgIElEX1VOTElOS0VELAogICAgICAgIE5BTUVfVU5MSU5LRUQsCiAgICAgICAgewogICAgICAgICAgbmFtZTogICAgICAgICdhcGlrZXknLAogICAgICAgICAgbGFiZWxLZXk6ICAgICd0YWJsZUhlYWRlcnMuYXBpa2V5JywKICAgICAgICAgIHZhbHVlOiAgICAgICAncHVibGljRGF0YScsCiAgICAgICAgICBzb3J0OiAgICAgICAgJ3B1YmxpY0RhdGEnLAogICAgICAgICAgc2VhcmNoOiAgICAgICdwdWJsaWNEYXRhJywKICAgICAgICAgIGRhc2hJZkVtcHR5OiB0cnVlLAogICAgICAgIH0sCiAgICAgICAgREVTQ1JJUFRJT04sCiAgICAgICAgQUdFX05PUk1BTiwKICAgICAgXTsKICAgIH0sCgogICAgY3JlYXRlTG9jYXRpb24oKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbmFtZTogICAnYy1jbHVzdGVyLW1hbmFnZXItY2xvdWRDcmVkZW50aWFsLWNyZWF0ZScsCiAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICBwcm9kdWN0OiAgdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudFByb2R1Y3QnXS5uYW1lLAogICAgICAgICAgcmVzb3VyY2U6IHRoaXMucmVzb3VyY2UKICAgICAgICB9LAogICAgICB9OwogICAgfSwKICB9LAoKICBtb3VudGVkKCkgewogICAgd2luZG93LmMgPSB0aGlzOwogIH0sCn07Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"node_modules/@rancher/shell/pages/c/_cluster/manager/cloudCredential","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { NORMAN, SECRET } from '@shell/config/types';\nimport { AGE_NORMAN, DESCRIPTION, ID_UNLINKED, NAME_UNLINKED } from '@shell/config/table-headers';\n\nexport default {\n  components: {\n    Loading, ResourceTable, Masthead\n  },\n\n  async fetch() {\n    if ( this.$store.getters['management/schemaFor'](SECRET) ) {\n      // Having secrets allows showing the public portion of more types but not all users can see them.\n      await this.$store.dispatch('management/findAll', { type: SECRET });\n    }\n\n    this.allCredentials = await this.$store.dispatch('rancher/findAll', { type: NORMAN.CLOUD_CREDENTIAL });\n  },\n\n  data() {\n    return {\n      allCredentials: null,\n      resource:       NORMAN.CLOUD_CREDENTIAL,\n      schema:         this.$store.getters['rancher/schemaFor'](NORMAN.CLOUD_CREDENTIAL),\n    };\n  },\n\n  computed: {\n    rows() {\n      return this.allCredentials || [];\n    },\n\n    headers() {\n      return [\n        ID_UNLINKED,\n        NAME_UNLINKED,\n        {\n          name:        'apikey',\n          labelKey:    'tableHeaders.apikey',\n          value:       'publicData',\n          sort:        'publicData',\n          search:      'publicData',\n          dashIfEmpty: true,\n        },\n        DESCRIPTION,\n        AGE_NORMAN,\n      ];\n    },\n\n    createLocation() {\n      return {\n        name:   'c-cluster-manager-cloudCredential-create',\n        params: {\n          product:  this.$store.getters['currentProduct'].name,\n          resource: this.resource\n        },\n      };\n    },\n  },\n\n  mounted() {\n    window.c = this;\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :create-location=\"createLocation\"\n      :type-display=\"t('manager.cloudCredentials.label')\"\n    />\n\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"rows\"\n      :headers=\"headers\"\n      :namespaced=\"false\"\n      group-by=\"providerDisplay\"\n    >\n      <template #cell:id=\"{row}\">\n        {{ row.id.replace('cattle-global-data:','') }}\n      </template>\n      <template #cell:apikey=\"{row}\">\n        <span\n          v-if=\"row.publicData\"\n          v-clean-html=\"row.publicData\"\n        />\n        <span\n          v-else\n          class=\"text-muted\"\n        >&mdash;</span>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"]}]}