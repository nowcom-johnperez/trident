{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/WorkloadHealthScale.vue?vue&type=style&index=0&id=e203cfc2&lang=scss&scoped=true","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/WorkloadHealthScale.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgokaGVpZ2h0OiAzMHB4Owokd2lkdGg6IDE1MHB4OwoKLmhzLXBvcG92ZXIgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKCiAgJl9fbG9hZGVyIHsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBib3JkZXI6IHNvbGlkIHRoaW4gdmFyKC0tc29ydGFibGUtdGFibGUtdG9wLWRpdmlkZXIpOwogICAgZGlzcGxheTogZmxleDsKICAgIGhlaWdodDogJGhlaWdodDsKICAgIHdpZHRoOiAkd2lkdGg7CgogICAgPiBpIHsKICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICBoZWlnaHQ6IDE2cHg7CiAgICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgICAgIHdpZHRoOiAxNnB4OwogICAgfQogIH0KCiAgJl9fdHJpZ2dlciB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKCiAgICB3aWR0aDogJHdpZHRoOwogICAgaGVpZ2h0OiAkaGVpZ2h0OwoKICAgIGJvcmRlcjogc29saWQgdGhpbiB2YXIoLS1zb3J0YWJsZS10YWJsZS10b3AtZGl2aWRlcik7CgogICAgJi5leHBhbmRlZCB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNvcnRhYmxlLXRhYmxlLXJvdy1iZyk7CiAgICB9CiAgICAmOm5vdCguZXhwYW5kZWQpOmhvdmVyIHsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LWJ0bik7CiAgICAgIC5pY29uIHsKICAgICAgICBjb2xvcjogdW5zZXQ7CiAgICAgIH0KICAgIH0KCiAgICAkaWNvbi13aWR0aDogMjFweDsKCiAgICAuaGVhbHRoIHsKICAgICAgd2lkdGg6ICR3aWR0aCAtICRpY29uLXdpZHRoOwogICAgICBtYXJnaW4tbGVmdDogNXB4OwogICAgfQogICAgLmljb24gewogICAgICB3aWR0aDogJGljb24td2lkdGg7CiAgICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5KTsKICAgICAgbWFyZ2luLXRvcDogMXB4OwogICAgICBwYWRkaW5nOiAwIDVweCAwIDNweDsgLy8gSXQgd291bGQgYmUgYmV0dGVyIHRvIGRpc3BsYXkgZmxleCBoZXJlLi4uIGJ1dCB0aGUgaWNvbiBsb29rcyBhIHBpeGVsIG9mZiB0byB0aGUgcmlnaHQKICAgIH0KICB9CgogICZfX2NvbnRlbnQgewogICAgei1pbmRleDogMTQ7CiAgICB3aWR0aDogJHdpZHRoOwoKICAgIGJvcmRlcjogc29saWQgdGhpbiB2YXIoLS1zb3J0YWJsZS10YWJsZS10b3AtZGl2aWRlcik7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1zb3J0YWJsZS10YWJsZS1yb3ctYmcpOwoKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIG1hcmdpbi10b3A6IC0xcHg7CgogICAgZGlzcGxheTogbm9uZTsKICAgIHZpc2liaWxpdHk6IGhpZGRlbjsKICAgICYuZXhwYW5kZWQgewogICAgICBkaXNwbGF5OiBpbmxpbmU7CiAgICB9CiAgICAmLmV4cGFuZGVkLWNoZWNrZWQgewogICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOwogICAgfQoKICAgICYub3V0LW9mLXZpZXcgewogICAgICAvLyBGbGlwIHRvIHNob3cgZHJvcCBkb3duIGFib3ZlIHRyaWdnZXIKICAgICAgYm90dG9tOiAwOwogICAgICBtYXJnaW4tYm90dG9tOiAkaGVpZ2h0IC0gMXB4OwogICAgfQoKICAgICYgPiBkaXYgewogICAgICBwYWRkaW5nOiAxMHB4OwogICAgfQoKICAgIC5jb3VudHMgewogICAgICBkaXNwbGF5OiBmbGV4OwogICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CgogICAgICAmLWxhYmVsIHsKICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwogICAgICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAgIH0KICAgIH0KICAgIC5zY2FsZSB7CiAgICAgIG1hcmdpbi10b3A6IDEwcHg7CiAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKICAgICAgYWxpZ24taXRlbXM6IGJhc2VsaW5lOwogICAgfQogIH0KfQoK"},{"version":3,"sources":["WorkloadHealthScale.vue"],"names":[],"mappings":";;AAqOA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"WorkloadHealthScale.vue","sourceRoot":"node_modules/@rancher/shell/components/formatter","sourcesContent":["<script>\nimport Vue from 'vue';\nimport ProgressBarMulti from '@shell/components/ProgressBarMulti';\nimport PlusMinus from '@shell/components/form/PlusMinus';\nimport { POD, SCALABLE_WORKLOAD_TYPES } from '@shell/config/types';\nimport { ucFirst } from '@shell/utils/string';\n\nconst SCALABLE_TYPES = Object.values(SCALABLE_WORKLOAD_TYPES);\nconst INVALID_TYPES = [POD];\n\nexport default {\n  components: { PlusMinus, ProgressBarMulti },\n\n  props: {\n    row: {\n      type:     Object,\n      required: true\n    },\n    col: {\n      type:     Object,\n      required: true\n    },\n    rowKey: {\n      type:     String,\n      required: true\n    },\n  },\n\n  beforeDestroy() {\n    document.removeEventListener('click', this.onClickOutside);\n  },\n\n  data() {\n    return {\n      disabled: false,\n      expanded: false,\n      loading:  true,\n      cParts:   [],\n    };\n  },\n\n  computed: {\n    id() {\n      return `${ this.rowKey }-workload-health-scale`.replaceAll('-', '');\n    },\n\n    canScale() {\n      return !!SCALABLE_TYPES.includes(this.row.type) && this.row.canUpdate;\n    },\n\n    canShow() {\n      return !INVALID_TYPES.includes(this.row.type);\n    },\n\n    parts() {\n      return this.cParts;\n    },\n  },\n\n  methods: {\n    liveUpdate() {\n      if (this.loading) {\n        return 5;\n      }\n\n      this.cParts = Object.entries(this.row.jobGauges || this.row.podGauges || [])\n        .map(([name, value]) => ({\n          color: `bg-${ value.color }`,\n          value: value.count || 0,\n          label: ucFirst(name)\n        })).filter((x) => x.value > 0);\n\n      return 5;\n    },\n    startDelayedLoading() {\n      this.loading = false;\n      this.liveUpdate();\n    },\n\n    onClickOutside(event) {\n      const { [`root-${ this.id }`]: component } = this.$refs;\n\n      if (!component || component.contains(event.target)) {\n        return;\n      }\n      this.expanded = false;\n      event.preventDefault();\n      event.stopPropagation();\n    },\n\n    async scaleDown() {\n      await this.scale(false);\n    },\n    async scaleUp() {\n      await this.scale(true);\n    },\n    async scale(isUp) {\n      Vue.set(this, 'disabled', true);\n      try {\n        if (isUp) {\n          await this.row.scaleUp();\n        } else {\n          await this.row.scaleDown();\n        }\n      } catch (err) {\n        this.$store.dispatch('growl/fromError', {\n          title: this.t('workload.list.errorCannotScale', { direction: isUp ? 'up' : 'down', workloadName: this.row.name }),\n          err\n        },\n        { root: true });\n      }\n      Vue.set(this, 'disabled', false);\n    },\n\n    insideBounds(bounding, bounds) {\n      return bounding.top >= bounds.top &&\n        bounding.left >= bounds.left &&\n        bounding.right <= bounds.right &&\n        bounding.bottom <= bounds.bottom;\n    },\n\n  },\n\n  watch: {\n    expanded(neu) {\n      if (neu) {\n        document.addEventListener('click', this.onClickOutside);\n      } else {\n        document.removeEventListener('click', this.onClickOutside);\n      }\n\n      // If the drop down content appears outside of the window then move it to be above the trigger\n      // Do this is three steps\n      // expanded: false & expanded-checked = false - Content does not appear in DOM\n      // expanded: true & expanded-checked = false - Content appears in DOM (so it's location can be calculated to be in or out of an area) but isn't visible (user doesn't see content blip from below to above trigger)\n      // expanded: true & expanded-checked = true - Content appears in DOM and is visible (it's final location is known so user can see)\n      setTimeout(() => { // There be beasts without this (classes don't get applied... so drop down never gets shown)\n        const dropdown = document.getElementById(this.id);\n\n        if (!neu) {\n          dropdown.classList.remove('expanded-checked');\n\n          return;\n        }\n\n        // Ensure drop down will be inside of the window, otherwise show above the trigger\n        const bounding = dropdown.getBoundingClientRect();\n        const insideWindow = this.insideBounds(bounding, {\n          top:    0,\n          left:   0,\n          right:  window.innerWidth || document.documentElement.clientWidth,\n          bottom: window.innerHeight || document.documentElement.clientHeight,\n        });\n\n        if (insideWindow) {\n          dropdown.classList.remove('out-of-view');\n        } else {\n          dropdown.classList.add('out-of-view');\n        }\n\n        // This will trigger the actual display of the drop down (after we've calculated if it goes below or above trigger)\n        dropdown.classList.add('expanded-checked');\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <div v-if=\"!canShow\" />\n  <div\n    v-else-if=\"loading\"\n    class=\"hs-popover__loader\"\n  >\n    <i class=\"icon icon-spinner\" />\n  </div>\n  <div\n    v-else\n    :id=\"`root-${id}`\"\n    :ref=\"`root-${id}`\"\n    class=\"hs-popover\"\n  >\n    <div\n      id=\"trigger\"\n      class=\"hs-popover__trigger\"\n      :class=\"{expanded}\"\n      @click=\"expanded = !expanded\"\n    >\n      <ProgressBarMulti\n        v-if=\"parts\"\n        class=\"health\"\n        :values=\"parts\"\n        :show-zeros=\"true\"\n      />\n      <i :class=\"{icon: true, 'icon-chevron-up': expanded, 'icon-chevron-down': !expanded}\" />\n    </div>\n    <div\n      :id=\"id\"\n      class=\"hs-popover__content\"\n      :class=\"{expanded, [id]:true}\"\n    >\n      <div>\n        <div\n          v-for=\"obj in parts\"\n          :key=\"obj.label\"\n          class=\"counts\"\n        >\n          <span class=\"counts-label\">{{ obj.label }}</span>\n          <span>{{ obj.value }}</span>\n        </div>\n        <div\n          v-if=\"canScale\"\n          class=\"text-center scale\"\n        >\n          <span>{{ t('tableHeaders.scale') }} </span>\n          <PlusMinus\n            :value=\"row.spec.replicas\"\n            :disabled=\"disabled\"\n            @minus=\"scaleDown\"\n            @plus=\"scaleUp\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n\n$height: 30px;\n$width: 150px;\n\n.hs-popover {\n  position: relative;\n\n  &__loader {\n    align-items: center;\n    border: solid thin var(--sortable-table-top-divider);\n    display: flex;\n    height: $height;\n    width: $width;\n\n    > i {\n      font-size: 16px;\n      height: 16px;\n      margin-left: 5px;\n      width: 16px;\n    }\n  }\n\n  &__trigger {\n    display: flex;\n    align-items: center;\n\n    width: $width;\n    height: $height;\n\n    border: solid thin var(--sortable-table-top-divider);\n\n    &.expanded {\n      background-color: var(--sortable-table-row-bg);\n    }\n    &:not(.expanded):hover {\n      background-color: var(--accent-btn);\n      .icon {\n        color: unset;\n      }\n    }\n\n    $icon-width: 21px;\n\n    .health {\n      width: $width - $icon-width;\n      margin-left: 5px;\n    }\n    .icon {\n      width: $icon-width;\n      color: var(--primary);\n      margin-top: 1px;\n      padding: 0 5px 0 3px; // It would be better to display flex here... but the icon looks a pixel off to the right\n    }\n  }\n\n  &__content {\n    z-index: 14;\n    width: $width;\n\n    border: solid thin var(--sortable-table-top-divider);\n    background-color: var(--sortable-table-row-bg);\n\n    position: absolute;\n    margin-top: -1px;\n\n    display: none;\n    visibility: hidden;\n    &.expanded {\n      display: inline;\n    }\n    &.expanded-checked {\n      visibility: visible;\n    }\n\n    &.out-of-view {\n      // Flip to show drop down above trigger\n      bottom: 0;\n      margin-bottom: $height - 1px;\n    }\n\n    & > div {\n      padding: 10px;\n    }\n\n    .counts {\n      display: flex;\n      justify-content: space-between;\n\n      &-label {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n    .scale {\n      margin-top: 10px;\n      display: flex;\n      justify-content: space-between;\n      align-items: baseline;\n    }\n  }\n}\n\n</style>\n"]}]}