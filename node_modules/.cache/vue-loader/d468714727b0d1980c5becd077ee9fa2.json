{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/fleet.cattle.io.clusterregistrationtoken.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/fleet.cattle.io.clusterregistrationtoken.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IEZMRUVUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IEJhbm5lciB9IGZyb20gJ0Bjb21wb25lbnRzL0Jhbm5lcic7CmltcG9ydCBSZXNvdXJjZVRhYmxlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlVGFibGUnOwppbXBvcnQgeyBpc0hhcnZlc3RlckNsdXN0ZXIgfSBmcm9tICdAc2hlbGwvdXRpbHMvY2x1c3Rlcic7CmltcG9ydCBSZXNvdXJjZUZldGNoIGZyb20gJ0BzaGVsbC9taXhpbnMvcmVzb3VyY2UtZmV0Y2gnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICAgICAgICdMaXN0Q2x1c3Rlckdyb3VwJywKICBjb21wb25lbnRzOiB7IEJhbm5lciwgUmVzb3VyY2VUYWJsZSB9LAogIG1peGluczogICAgIFtSZXNvdXJjZUZldGNoXSwKICBwcm9wczogICAgICB7CiAgICByZXNvdXJjZTogewogICAgICB0eXBlOiAgICAgU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgIH0sCiAgICBzY2hlbWE6IHsKICAgICAgdHlwZTogICAgIE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICB9LAogICAgdXNlUXVlcnlQYXJhbXNGb3JTaW1wbGVGaWx0ZXJpbmc6IHsKICAgICAgdHlwZTogICAgQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAoKICBhc3luYyBmZXRjaCgpIHsKICAgIGF3YWl0IHRoaXMuJGZldGNoVHlwZSh0aGlzLnJlc291cmNlKTsKICAgIGlmICh0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L3NjaGVtYUZvciddKCBGTEVFVC5DTFVTVEVSICkpIHsKICAgICAgdGhpcy5hbGxGbGVldCA9IGF3YWl0IHRoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvYWxsJ10oRkxFRVQuQ0xVU1RFUik7CiAgICB9CiAgfSwKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7IGFsbEZsZWV0OiBbXSB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBoYXJ2ZXN0ZXJDbHVzdGVycygpIHsKICAgICAgY29uc3QgaGFydmVzdGVyID0ge307CgogICAgICB0aGlzLmFsbEZsZWV0LmZvckVhY2goKGMpID0+IHsKICAgICAgICBpZiAoaXNIYXJ2ZXN0ZXJDbHVzdGVyKGMpKSB7CiAgICAgICAgICBoYXJ2ZXN0ZXJbYy5tZXRhZGF0YS51aWRdID0gYzsKICAgICAgICB9CiAgICAgIH0pOwoKICAgICAgcmV0dXJuIGhhcnZlc3RlcjsKICAgIH0sCiAgICB0b2tlbnMoKSB7CiAgICAgIGNvbnN0IGhhcnZlc3RlciA9IHRoaXMuaGFydmVzdGVyQ2x1c3RlcnM7CgogICAgICByZXR1cm4gdGhpcy5yb3dzLmZpbHRlcigodG9rZW4pID0+IHsKICAgICAgICBjb25zdCByZWZzID0gdG9rZW4ubWV0YWRhdGE/Lm93bmVyUmVmZXJlbmNlcyB8fCBbXTsKCiAgICAgICAgZm9yIChjb25zdCBvd25lciBvZiByZWZzKSB7CiAgICAgICAgICBpZiAoaGFydmVzdGVyW293bmVyLnVpZF0pIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0pOwogICAgfSwKCiAgICBoaWRkZW4oKSB7CiAgICAgIHJldHVybiB0aGlzLnJvd3MubGVuZ3RoIC0gdGhpcy50b2tlbnMubGVuZ3RoOwogICAgfQogIH0sCiAgLy8gb3ZlcnJpZGUgd2l0aCByZWxldmFudCBpbmZvIGZvciB0aGUgbG9hZGluZyBpbmRpY2F0b3Igc2luY2UgdGhpcyBkb2Vzbid0IHVzZSBpdCdzIG93biBtYXN0aGVhZAogICRsb2FkaW5nUmVzb3VyY2VzKCkgewogICAgLy8gcmVzdWx0cyBhcmUgZmlsdGVyZWQgc28gd2Ugd291bGRuJ3QgZ2V0IHRoZSBjb3JyZWN0IGNvdW50IG9uIGluZGljYXRvci4uLgogICAgcmV0dXJuIHsgbG9hZEluZGV0ZXJtaW5hdGU6IHRydWUgfTsKICB9LAp9Owo="},{"version":3,"sources":["fleet.cattle.io.clusterregistrationtoken.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fleet.cattle.io.clusterregistrationtoken.vue","sourceRoot":"node_modules/@rancher/shell/list","sourcesContent":["<script>\nimport { FLEET } from '@shell/config/types';\nimport { Banner } from '@components/Banner';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { isHarvesterCluster } from '@shell/utils/cluster';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\n\nexport default {\n  name:       'ListClusterGroup',\n  components: { Banner, ResourceTable },\n  mixins:     [ResourceFetch],\n  props:      {\n    resource: {\n      type:     String,\n      required: true,\n    },\n    schema: {\n      type:     Object,\n      required: true,\n    },\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.allFleet = await this.$store.getters['management/all'](FLEET.CLUSTER);\n    }\n  },\n\n  data() {\n    return { allFleet: [] };\n  },\n\n  computed: {\n    harvesterClusters() {\n      const harvester = {};\n\n      this.allFleet.forEach((c) => {\n        if (isHarvesterCluster(c)) {\n          harvester[c.metadata.uid] = c;\n        }\n      });\n\n      return harvester;\n    },\n    tokens() {\n      const harvester = this.harvesterClusters;\n\n      return this.rows.filter((token) => {\n        const refs = token.metadata?.ownerReferences || [];\n\n        for (const owner of refs) {\n          if (harvester[owner.uid]) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    },\n\n    hidden() {\n      return this.rows.length - this.tokens.length;\n    }\n  },\n  // override with relevant info for the loading indicator since this doesn't use it's own masthead\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hidden\"\n      color=\"info\"\n      :label=\"t('fleet.tokens.harvester', {count: hidden} )\"\n    />\n    <ResourceTable\n      v-bind=\"$attrs\"\n      :schema=\"schema\"\n      :rows=\"tokens\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    />\n  </div>\n</template>\n"]}]}