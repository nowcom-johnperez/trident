{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/auth/saml.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/auth/saml.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IEF1dGhDb25maWcgZnJvbSAnQHNoZWxsL21peGlucy9hdXRoLWNvbmZpZyc7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IEFsbG93ZWRQcmluY2lwYWxzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2F1dGgvQWxsb3dlZFByaW5jaXBhbHMnOwppbXBvcnQgRmlsZVNlbGVjdG9yIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vRmlsZVNlbGVjdG9yJzsKaW1wb3J0IEF1dGhCYW5uZXIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvYXV0aC9BdXRoQmFubmVyJzsKaW1wb3J0IGNvbmZpZyBmcm9tICdAc2hlbGwvZWRpdC9hdXRoL2xkYXAvY29uZmlnJzsKCmV4cG9ydCBjb25zdCBTSElCQk9MRVRIID0gJ3NoaWJib2xldGgnOwpleHBvcnQgY29uc3QgT0tUQSA9ICdva3RhJzsKCi8vIFN0YW5kYXJkIExEQVAgZGVmYXVsdHMKY29uc3QgTERBUF9ERUZBVUxUUyA9IHsKICBjb25uZWN0aW9uVGltZW91dDogICAgICAgICAgICA1MDAwLAogIGdyb3VwRE5BdHRyaWJ1dGU6ICAgICAgICAgICAgICdlbnRyeUROJywKICBncm91cE1lbWJlck1hcHBpbmdBdHRyaWJ1dGU6ICAnbWVtYmVyJywKICBncm91cE1lbWJlclVzZXJBdHRyaWJ1dGU6ICAgICAnZW50cnlETicsCiAgZ3JvdXBOYW1lQXR0cmlidXRlOiAgICAgICAgICAgJ2NuJywKICBncm91cE9iamVjdENsYXNzOiAgICAgICAgICAgICAnZ3JvdXBPZk5hbWVzJywKICBncm91cFNlYXJjaEF0dHJpYnV0ZTogICAgICAgICAnY24nLAogIG5lc3RlZEdyb3VwTWVtYmVyc2hpcEVuYWJsZWQ6IGZhbHNlLAogIHBvcnQ6ICAgICAgICAgICAgICAgICAgICAgICAgIDM4OSwKICBzZXJ2ZXJzOiAgICAgICAgICAgICAgICAgICAgICBbXSwKICBzdGFydHRsczogICAgICAgICAgICAgICAgICAgICBmYWxzZSwKICB0bHM6ICAgICAgICAgICAgICAgICAgICAgICAgICBmYWxzZSwKICBkaXNhYmxlZFN0YXR1c0JpdG1hc2s6ICAgICAgICAwLAogIHVzZXJMb2dpbkF0dHJpYnV0ZTogICAgICAgICAgICd1aWQnLAogIHVzZXJNZW1iZXJBdHRyaWJ1dGU6ICAgICAgICAgICdtZW1iZXJPZicsCiAgdXNlck5hbWVBdHRyaWJ1dGU6ICAgICAgICAgICAgJ2NuJywKICB1c2VyT2JqZWN0Q2xhc3M6ICAgICAgICAgICAgICAnaW5ldE9yZ1BlcnNvbicsCiAgdXNlclNlYXJjaEF0dHJpYnV0ZTogICAgICAgICAgJ3VpZHxzbnxnaXZlbk5hbWUnCn07CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTG9hZGluZywKICAgIENydVJlc291cmNlLAogICAgTGFiZWxlZElucHV0LAogICAgQmFubmVyLAogICAgQWxsb3dlZFByaW5jaXBhbHMsCiAgICBDaGVja2JveCwKICAgIEZpbGVTZWxlY3RvciwKICAgIGNvbmZpZywKICAgIEF1dGhCYW5uZXIKICB9LAoKICBtaXhpbnM6IFtDcmVhdGVFZGl0VmlldywgQXV0aENvbmZpZ10sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3dMZGFwOiAgICAgICAgZmFsc2UsCiAgICAgIHNob3dMZGFwRGV0YWlsczogZmFsc2UsCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICB0QXJncygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBiYXNlVXJsOiAgdGhpcy5zZXJ2ZXJTZXR0aW5nLAogICAgICAgIHByb3ZpZGVyOiB0aGlzLmRpc3BsYXlOYW1lLAogICAgICAgIHVzZXJuYW1lOiB0aGlzLnByaW5jaXBhbC5sb2dpbk5hbWUgfHwgdGhpcy5wcmluY2lwYWwubmFtZSwKICAgICAgfTsKICAgIH0sCgogICAgdG9TYXZlKCkgewogICAgICByZXR1cm4geyBlbmFibGVkOiB0cnVlLCAuLi50aGlzLm1vZGVsIH07CiAgICB9LAoKICAgIC8vIERvZXMgdGhlIGF1dGggcHJvdmlkZXIgc3VwcG9ydCBMREFQIGZvciBzZWFyY2ggaW4gYWRkaXRpb24gdG8gU0FNTD8KICAgIHN1cHBvcnRzTERBUFNlYXJjaCgpIHsKICAgICAgcmV0dXJuIHRoaXMuTkFNRSA9PT0gU0hJQkJPTEVUSCB8fCB0aGlzLk5BTUUgPT09IE9LVEE7CiAgICB9LAoKICAgIGxkYXBIb3N0cygpIHsKICAgICAgY29uc3QgaG9zdHMgPSB0aGlzLm1vZGVsPy5vcGVuTGRhcENvbmZpZy5zZXJ2ZXJzIHx8IFtdOwoKICAgICAgcmV0dXJuIGhvc3RzLmpvaW4oJywnKTsKICAgIH0sCgogICAgbGRhcFByb3RvY29sKCkgewogICAgICBpZiAodGhpcy5tb2RlbD8ub3BlbkxkYXBDb25maWc/LnN0YXJ0dGxzKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCgnYXV0aENvbmZpZy5sZGFwLnByb3RvY29scy5zdGFydHRscycpOwogICAgICB9IGVsc2UgaWYgKHRoaXMubW9kZWw/Lm9wZW5MZGFwQ29uZmlnPy50bHMpIHsKICAgICAgICByZXR1cm4gdGhpcy50KCdhdXRoQ29uZmlnLmxkYXAucHJvdG9jb2xzLnRscycpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy50KCdhdXRoQ29uZmlnLmxkYXAucHJvdG9jb2xzLmxkYXAnKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzaG93TGRhcChuZXUsIG9sZCkgewogICAgICBpZiAobmV1ICYmICF0aGlzLm1vZGVsLm9wZW5MZGFwQ29uZmlnKSB7CiAgICAgICAgLy8gVXNlIGEgc3ByZWFkIG9mIGNvbmZpZywgc28gdGhhdCBpZiBkb24ndCBtYWtlIGNoYW5nZXMgdG8gdGhlIGRlZmF1bHRzIGlmIHRoZSB1c2VyIGVkaXRzIHRoZW0KICAgICAgICB0aGlzLiRzZXQodGhpcy5tb2RlbCwgJ29wZW5MZGFwQ29uZmlnJywgeyAuLi5MREFQX0RFRkFVTFRTIH0pOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["saml.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"saml.vue","sourceRoot":"node_modules/@rancher/shell/edit/auth","sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport AuthConfig from '@shell/mixins/auth-config';\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { Banner } from '@components/Banner';\nimport AllowedPrincipals from '@shell/components/auth/AllowedPrincipals';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport AuthBanner from '@shell/components/auth/AuthBanner';\nimport config from '@shell/edit/auth/ldap/config';\n\nexport const SHIBBOLETH = 'shibboleth';\nexport const OKTA = 'okta';\n\n// Standard LDAP defaults\nconst LDAP_DEFAULTS = {\n  connectionTimeout:            5000,\n  groupDNAttribute:             'entryDN',\n  groupMemberMappingAttribute:  'member',\n  groupMemberUserAttribute:     'entryDN',\n  groupNameAttribute:           'cn',\n  groupObjectClass:             'groupOfNames',\n  groupSearchAttribute:         'cn',\n  nestedGroupMembershipEnabled: false,\n  port:                         389,\n  servers:                      [],\n  starttls:                     false,\n  tls:                          false,\n  disabledStatusBitmask:        0,\n  userLoginAttribute:           'uid',\n  userMemberAttribute:          'memberOf',\n  userNameAttribute:            'cn',\n  userObjectClass:              'inetOrgPerson',\n  userSearchAttribute:          'uid|sn|givenName'\n};\n\nexport default {\n  components: {\n    Loading,\n    CruResource,\n    LabeledInput,\n    Banner,\n    AllowedPrincipals,\n    Checkbox,\n    FileSelector,\n    config,\n    AuthBanner\n  },\n\n  mixins: [CreateEditView, AuthConfig],\n  data() {\n    return {\n      showLdap:        false,\n      showLdapDetails: false,\n    };\n  },\n\n  computed: {\n    tArgs() {\n      return {\n        baseUrl:  this.serverSetting,\n        provider: this.displayName,\n        username: this.principal.loginName || this.principal.name,\n      };\n    },\n\n    toSave() {\n      return { enabled: true, ...this.model };\n    },\n\n    // Does the auth provider support LDAP for search in addition to SAML?\n    supportsLDAPSearch() {\n      return this.NAME === SHIBBOLETH || this.NAME === OKTA;\n    },\n\n    ldapHosts() {\n      const hosts = this.model?.openLdapConfig.servers || [];\n\n      return hosts.join(',');\n    },\n\n    ldapProtocol() {\n      if (this.model?.openLdapConfig?.starttls) {\n        return this.t('authConfig.ldap.protocols.starttls');\n      } else if (this.model?.openLdapConfig?.tls) {\n        return this.t('authConfig.ldap.protocols.tls');\n      }\n\n      return this.t('authConfig.ldap.protocols.ldap');\n    }\n  },\n  watch: {\n    showLdap(neu, old) {\n      if (neu && !this.model.openLdapConfig) {\n        // Use a spread of config, so that if don't make changes to the defaults if the user edits them\n        this.$set(this.model, 'openLdapConfig', { ...LDAP_DEFAULTS });\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <CruResource\n      :cancel-event=\"true\"\n      :done-route=\"doneRoute\"\n      :mode=\"mode\"\n      :resource=\"model\"\n      :subtypes=\"[]\"\n      :validation-passed=\"true\"\n      :finish-button-mode=\"model.enabled ? 'edit' : 'enable'\"\n      :can-yaml=\"false\"\n      :errors=\"errors\"\n      :show-cancel=\"showCancel\"\n      @error=\"e=>errors = e\"\n      @finish=\"save\"\n      @cancel=\"cancel\"\n    >\n      <template v-if=\"model.enabled && !isEnabling && !editConfig\">\n        <AuthBanner\n          :t-args=\"tArgs\"\n          :disable=\"disable\"\n          :edit=\"goToEdit\"\n        >\n          <template\n            slot=\"rows\"\n          >\n            <tr><td>{{ t(`authConfig.saml.displayName`) }}: </td><td>{{ model.displayNameField }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.userName`) }}: </td><td>{{ model.userNameField }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.UID`) }}: </td><td>{{ model.uidField }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.entityID`) }}: </td><td>{{ model.entityID }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.api`) }}: </td><td>{{ model.rancherApiHost }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.groups`) }}: </td><td>{{ model.groupsField }}</td></tr>\n          </template>\n\n          <template\n            v-if=\"supportsLDAPSearch\"\n            slot=\"footer\"\n          >\n            <Banner\n              v-if=\"showLdap\"\n              color=\"success\"\n              class=\"banner\"\n            >\n              <div\n                class=\"advanced-ldap-banner\"\n              >\n                <div>{{ t('authConfig.saml.search.on') }}</div>\n                <div>\n                  <a\n                    class=\"toggle-btn\"\n                    @click=\"showLdapDetails = !showLdapDetails\"\n                  >\n                    <template v-if=\"showLdapDetails\">{{ t('authConfig.saml.search.hide') }}</template>\n                    <template v-else>{{ t('authConfig.saml.search.show') }}</template>\n                  </a>\n                </div>\n              </div>\n            </Banner>\n            <Banner\n              v-else\n              color=\"info\"\n            >\n              {{ t('authConfig.saml.search.off') }}\n            </Banner>\n\n            <table v-if=\"showLdapDetails && model.openLdapConfig\">\n              <tr><td>{{ t('authConfig.ldap.hostname.label') }}:</td><td>{{ ldapHosts }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.port') }}:</td><td>{{ model.openLdapConfig.port }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.protocol') }}:</td><td>{{ ldapProtocol }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.serviceAccountDN') }}:</td><td>{{ model.openLdapConfig.serviceAccountDistinguishedName }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.userSearchBase.label') }}:</td><td>{{ model.openLdapConfig.userSearchBase }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.groupSearchBase.label') }}:</td><td>{{ model.openLdapConfig.groupSearchBase }}</td></tr>\n            </table>\n          </template>\n        </AuthBanner>\n\n        <hr>\n\n        <AllowedPrincipals\n          :provider=\"NAME\"\n          :auth-config=\"model\"\n          :mode=\"mode\"\n        />\n      </template>\n\n      <template v-else>\n        <Banner\n          v-if=\"!model.enabled\"\n          :label=\"t('authConfig.stateBanner.disabled', tArgs)\"\n          color=\"warning\"\n        />\n\n        <h3>{{ t(`authConfig.saml.${NAME}`) }}</h3>\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.displayNameField\"\n              :label=\"t(`authConfig.saml.displayName`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.userNameField\"\n              :label=\"t(`authConfig.saml.userName`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.uidField\"\n              :label=\"t(`authConfig.saml.UID`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.groupsField\"\n              :label=\"t(`authConfig.saml.groups`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n        <div class=\"row mb-20\">\n          <div\n            v-if=\"NAME === 'keycloak' || NAME === 'ping'\"\n            class=\"col span-6\"\n          >\n            <LabeledInput\n              v-model=\"model.entityID\"\n              :label=\"t(`authConfig.saml.entityID`)\"\n              :mode=\"mode\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.rancherApiHost\"\n              :label=\"t(`authConfig.saml.api`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-20\">\n          <div class=\"col span-4\">\n            <LabeledInput\n              v-model=\"model.spKey\"\n              :label=\"t(`authConfig.saml.key.label`)\"\n              :placeholder=\"t(`authConfig.saml.key.placeholder`)\"\n              :mode=\"mode\"\n              required\n              type=\"multiline\"\n            />\n            <FileSelector\n              class=\"role-tertiary add mt-5\"\n              :label=\"t('generic.readFromFile')\"\n              :mode=\"mode\"\n              @selected=\"$set(model, 'spKey', $event)\"\n            />\n          </div>\n          <div class=\"col span-4\">\n            <LabeledInput\n              v-model=\"model.spCert\"\n              :label=\"t(`authConfig.saml.cert.label`)\"\n              :placeholder=\"t(`authConfig.saml.cert.placeholder`)\"\n              :mode=\"mode\"\n              required\n              type=\"multiline\"\n            />\n            <FileSelector\n              class=\"role-tertiary add mt-5\"\n              :label=\"t('generic.readFromFile')\"\n              :mode=\"mode\"\n              @selected=\"$set(model, 'spCert', $event)\"\n            />\n          </div>\n          <div class=\"col span-4\">\n            <LabeledInput\n              v-model=\"model.idpMetadataContent\"\n              :label=\"t(`authConfig.saml.metadata.label`)\"\n              :placeholder=\"t(`authConfig.saml.metadata.placeholder`)\"\n              :mode=\"mode\"\n              required\n              type=\"multiline\"\n            />\n            <FileSelector\n              class=\"role-tertiary add mt-5\"\n              :label=\"t('generic.readFromFile')\"\n              :mode=\"mode\"\n              @selected=\"$set(model, 'idpMetadataContent', $event)\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"!model.enabled\"\n          class=\"row\"\n        >\n          <div class=\"col span-12\">\n            <Banner color=\"info\">\n              <div v-clean-html=\"t('authConfig.associatedWarning', tArgs, true)\" />\n            </Banner>\n          </div>\n        </div>\n        <div v-if=\"supportsLDAPSearch\">\n          <div class=\"row\">\n            <h2>{{ t('authConfig.saml.search.title') }}</h2>\n          </div>\n          <div class=\"row\">\n            <Banner\n              label-key=\"authConfig.saml.search.message\"\n              color=\"info\"\n            />\n          </div>\n          <div class=\"row\">\n            <Checkbox\n              v-model=\"showLdap\"\n              :mode=\"mode\"\n              :label=\"t('authConfig.saml.showLdap')\"\n            />\n          </div>\n          <div class=\"row mt-20 mb-20\">\n            <config\n              v-if=\"showLdap && model.openLdapConfig\"\n              v-model=\"model.openLdapConfig\"\n              :type=\"NAME\"\n              :mode=\"mode\"\n              :is-create=\"!model.enabled\"\n            />\n          </div>\n        </div>\n      </template>\n    </CruResource>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n  .banner {\n    display: block;\n\n    &::v-deep code {\n      padding: 0 3px;\n      margin: 0 3px;\n    }\n  }\n\n  // Banner shows message and link formatted right aligned\n  .advanced-ldap-banner {\n    display: flex;\n    flex: 1;\n\n    > :first-child {\n      flex: 1;\n    }\n\n    .toggle-btn {\n      cursor: pointer;\n      user-select: none;\n    }\n  }\n</style>\n"]}]}