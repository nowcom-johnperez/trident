{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Footer.vue?vue&type=style&index=0&id=75969353&lang=scss","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/Footer.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/css-loader/dist/cjs.js","mtime":1716430467357},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1716430467929},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/postcss-loader/src/index.js","mtime":1716430467882},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/sass-loader/dist/cjs.js","mtime":1716430453705},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5idXR0b25zIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICAibGVmdCByaWdodCI7CiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAibWluLWNvbnRlbnQgYXV0byI7CgogIC5sZWZ0IHsKICAgIGdyaWQtYXJlYTogbGVmdDsKICAgIHRleHQtYWxpZ246IGxlZnQ7CgogICAgLmJ0biwgYnV0dG9uIHsKICAgICAgbWFyZ2luOiAwICRjb2x1bW4tZ3V0dGVyIDAgMDsKICAgIH0KICB9CgogIC5yaWdodCB7CiAgICBncmlkLWFyZWE6IHJpZ2h0OwogICAgdGV4dC1hbGlnbjogcmlnaHQ7CgogICAgLmJ0biwgYnV0dG9uIHsKICAgICAgbWFyZ2luOiAwIDAgMCAkY29sdW1uLWd1dHRlcjsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Footer.vue"],"names":[],"mappings":";AAmHA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Footer.vue","sourceRoot":"node_modules/@rancher/shell/components/form","sourcesContent":["<script lang=\"ts\">\nimport Vue from 'vue';\nimport { _VIEW } from '@shell/config/query-params';\nimport AsyncButton, { AsyncButtonCallback } from '@shell/components/AsyncButton.vue';\nimport Banner from '@components/Banner/Banner.vue';\n\nexport default Vue.extend({\n  components: { AsyncButton, Banner },\n\n  props: {\n    /**\n     * Current mode of the page\n     * passed to asyncButton to determine lables of the button\n     */\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    errors: {\n      type:    Array,\n      default: null,\n    },\n\n    disableSave: {\n      type:    Boolean,\n      default: false,\n    }\n  },\n\n  computed: {\n    isView(): boolean {\n      return this.mode === _VIEW;\n    },\n  },\n\n  methods: {\n    save(buttonCb: AsyncButtonCallback) {\n      this.$emit('save', buttonCb);\n    },\n\n    done() {\n      this.$emit('done');\n    }\n  }\n});\n</script>\n<template>\n  <div v-if=\"!isView\">\n    <div class=\"spacer-small\" />\n\n    <div\n      v-for=\"(err,idx) in errors\"\n      :key=\"idx\"\n    >\n      <Banner\n        color=\"error\"\n        :label=\"err\"\n      />\n    </div>\n    <div class=\"buttons\">\n      <div class=\"left\">\n        <slot name=\"left\" />\n      </div>\n      <div class=\"right\">\n        <slot name=\"cancel\">\n          <button\n            type=\"button\"\n            class=\"btn role-secondary\"\n            @click=\"done\"\n          >\n            <t k=\"generic.cancel\" />\n          </button>\n        </slot>\n        <slot name=\"middle\" />\n        <slot name=\"save\">\n          <AsyncButton\n            v-if=\"!isView\"\n            :mode=\"mode\"\n            :disabled=\"disableSave\"\n            @click=\"save\"\n          />\n        </slot>\n        <slot name=\"right\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n  .buttons {\n    display: grid;\n    grid-template-areas:  \"left right\";\n    grid-template-columns: \"min-content auto\";\n\n    .left {\n      grid-area: left;\n      text-align: left;\n\n      .btn, button {\n        margin: 0 $column-gutter 0 0;\n      }\n    }\n\n    .right {\n      grid-area: right;\n      text-align: right;\n\n      .btn, button {\n        margin: 0 0 0 $column-gutter;\n      }\n    }\n  }\n</style>\n"]}]}