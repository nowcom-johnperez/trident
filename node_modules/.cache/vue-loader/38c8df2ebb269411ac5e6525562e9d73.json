{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types/opsgenie.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types/opsgenie.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci8qKgogKiBUaGUgUm91dGUgYW5kIFJlY2VpdmVyIHJlc291cmNlcyBhcmUgZGVwcmVjYXRlZC4gR29pbmcgZm9yd2FyZCwKICogcm91dGVzIGFuZCByZWNlaXZlcnMgc2hvdWxkIGJlIGNvbmZpZ3VyZWQgd2l0aGluIEFsZXJ0bWFuYWdlckNvbmZpZ3MuCiAqIEFueSB1cGRhdGVzIHRvIHJlY2VpdmVyIGNvbmZpZ3VyYXRpb24gZm9ybXMsIHN1Y2ggYXMgU2xhY2svZW1haWwvUGFnZXJEdXR5CiAqIGV0Yywgc2hvdWxkIGJlIG1hZGUgdG8gdGhlIHJlY2VpdmVyIGZvcm1zIHRoYXQgYXJlIGJhc2VkIG9uIHRoZQogKiBBbGVydG1hbmFnZXJDb25maWcgcmVzb3VyY2UsIHdoaWNoIGhhcyBhIGRpZmZlcmVudCBBUEkuIFRoZSBuZXcgZm9ybXMgYXJlCiAqIGxvY2F0ZWQgaW4gQHNoZWxsL2VkaXQvbW9uaXRvcmluZy5jb3Jlb3MuY29tLmFsZXJ0bWFuYWdlcmNvbmZpZy90eXBlcy4KICovCmltcG9ydCBBcnJheUxpc3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9BcnJheUxpc3QnOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9TZWxlY3QnOwppbXBvcnQgeyBDaGVja2JveCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vQ2hlY2tib3gnOwppbXBvcnQgSW5wdXRXaXRoU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vSW5wdXRXaXRoU2VsZWN0JzsKaW1wb3J0IHsgX1ZJRVcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CgpleHBvcnQgY29uc3QgVEFSR0VUUyA9IFsKICB7CiAgICBsYWJlbDogJ0lkJywKICAgIHZhbHVlOiAnaWQnCiAgfSwKICB7CiAgICBsYWJlbDogJ05hbWUnLAogICAgdmFsdWU6ICduYW1lJwogIH0sCiAgewogICAgbGFiZWw6ICdVc2VybmFtZScsCiAgICB2YWx1ZTogJ3VzZXJuYW1lJwogIH0KXTsKCmV4cG9ydCBjb25zdCBUWVBFUyA9IFsKICB7CiAgICBsYWJlbDogJ1RlYW0nLAogICAgdmFsdWU6ICd0ZWFtJwogIH0sCiAgewogICAgbGFiZWw6ICdVc2VyJywKICAgIHZhbHVlOiAndXNlcicKICB9LAogIHsKICAgIGxhYmVsOiAnRXNjYWxhdGlvbicsCiAgICB2YWx1ZTogJ2VzY2FsYXRpb24nCiAgfSwKICB7CiAgICBsYWJlbDogJ1NjaGVkdWxlJywKICAgIHZhbHVlOiAnc2NoZWR1bGUnCiAgfQpdOwoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEFycmF5TGlzdCwgQ2hlY2tib3gsIElucHV0V2l0aFNlbGVjdCwgTGFiZWxlZElucHV0LCBTZWxlY3QKICB9LAogIHByb3BzOiB7CiAgICBtb2RlOiB7CiAgICAgIHR5cGU6ICAgICBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6ICAgICBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBkYXRhKCkgewogICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdodHRwX2NvbmZpZycsIHRoaXMudmFsdWUuaHR0cF9jb25maWcgfHwge30pOwogICAgdGhpcy4kc2V0KHRoaXMudmFsdWUsICdzZW5kX3Jlc29sdmVkJywgdHlwZW9mIHRoaXMudmFsdWUuc2VuZF9yZXNvbHZlZCA9PT0gJ2Jvb2xlYW4nID8gdGhpcy52YWx1ZS5zZW5kX3Jlc29sdmVkIDogdHJ1ZSk7CiAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3Jlc3BvbmRlcnMnLCB0aGlzLnZhbHVlLnJlc3BvbmRlcnMgfHwgW10pOwoKICAgIGNvbnN0IHJlc3BvbmRlcnMgPSB0aGlzLnZhbHVlLnJlc3BvbmRlcnMubWFwKChyZXNwb25kZXIpID0+IHsKICAgICAgY29uc3QgdGFyZ2V0ID0gVEFSR0VUUy5maW5kKCh0YXJnZXQpID0+IHJlc3BvbmRlclt0YXJnZXQudmFsdWVdKTsKCiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogICByZXNwb25kZXIudHlwZSwKICAgICAgICB0YXJnZXQ6IHRhcmdldC52YWx1ZSwKICAgICAgICB2YWx1ZTogIHJlc3BvbmRlclt0YXJnZXQudmFsdWVdCiAgICAgIH07CiAgICB9KTsKCiAgICByZXR1cm4gewogICAgICBkZWZhdWx0UmVzcG9uZGVyOiB7CiAgICAgICAgdHlwZTogICBUWVBFU1swXS52YWx1ZSwKICAgICAgICB0YXJnZXQ6IFRBUkdFVFNbMF0udmFsdWUsCiAgICAgICAgdmFsdWU6ICAnJwogICAgICB9LAogICAgICByZXNwb25kZXJzLAogICAgICBUQVJHRVRTLAogICAgICBUWVBFUwogICAgfTsKICB9LAoKICBjb21wdXRlZDogewogICAgaXNWaWV3KCkgewogICAgICByZXR1cm4gdGhpcy5tb2RlID09PSBfVklFVzsKICAgIH0KICB9LAoKICB3YXRjaDogewogICAgcmVzcG9uZGVyczogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyKCkgewogICAgICAgIGNvbnN0IHJlc3BvbmRlcnMgPSB0aGlzLnJlc3BvbmRlcnMubWFwKChyZXNwb25kZXIpID0+IHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHR5cGU6ICAgICAgICAgICAgICAgcmVzcG9uZGVyLnR5cGUsCiAgICAgICAgICAgIFtyZXNwb25kZXIudGFyZ2V0XTogcmVzcG9uZGVyLnZhbHVlCiAgICAgICAgICB9OwogICAgICAgIH0pOwoKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3Jlc3BvbmRlcnMnLCByZXNwb25kZXJzKTsKICAgICAgfQogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVJlc3BvbmRlcih7IHNlbGVjdGVkLCB0ZXh0IH0sIHJvdykgewogICAgICByb3cudGFyZ2V0ID0gc2VsZWN0ZWQ7CiAgICAgIHJvdy52YWx1ZSA9IHRleHQ7CiAgICB9LAogICAgdHlwZUxhYmVsKHR5cGUpIHsKICAgICAgcmV0dXJuIFRZUEVTLmZpbmQoKHQpID0+IHQudmFsdWUgPT09IHR5cGUpLmxhYmVsOwogICAgfSwKICAgIHRhcmdldExhYmVsKHRhcmdldCkgewogICAgICByZXR1cm4gVEFSR0VUUy5maW5kKCh0KSA9PiB0LnZhbHVlID09PSB0YXJnZXQpLmxhYmVsOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["opsgenie.vue"],"names":[],"mappingsfile":"opsgenie.vue","sourceRoot":"node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types","sourcesContent":["<script>\n/**\n * The Route and Receiver resources are deprecated. Going forward,\n * routes and receivers should be configured within AlertmanagerConfigs.\n * Any updates to receiver configuration forms, such as Slack/email/PagerDuty\n * etc, should be made to the receiver forms that are based on the\n * AlertmanagerConfig resource, which has a different API. The new forms are\n * located in @shell/edit/monitoring.coreos.com.alertmanagerconfig/types.\n */\nimport ArrayList from '@shell/components/form/ArrayList';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Select from '@shell/components/form/Select';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport InputWithSelect from '@shell/components/form/InputWithSelect';\nimport { _VIEW } from '@shell/config/query-params';\n\nexport const TARGETS = [\n  {\n    label: 'Id',\n    value: 'id'\n  },\n  {\n    label: 'Name',\n    value: 'name'\n  },\n  {\n    label: 'Username',\n    value: 'username'\n  }\n];\n\nexport const TYPES = [\n  {\n    label: 'Team',\n    value: 'team'\n  },\n  {\n    label: 'User',\n    value: 'user'\n  },\n  {\n    label: 'Escalation',\n    value: 'escalation'\n  },\n  {\n    label: 'Schedule',\n    value: 'schedule'\n  }\n];\n\nexport default {\n  components: {\n    ArrayList, Checkbox, InputWithSelect, LabeledInput, Select\n  },\n  props: {\n    mode: {\n      type:     String,\n      required: true,\n    },\n    value: {\n      type:     Object,\n      required: true\n    }\n  },\n  data() {\n    this.$set(this.value, 'http_config', this.value.http_config || {});\n    this.$set(this.value, 'send_resolved', typeof this.value.send_resolved === 'boolean' ? this.value.send_resolved : true);\n    this.$set(this.value, 'responders', this.value.responders || []);\n\n    const responders = this.value.responders.map((responder) => {\n      const target = TARGETS.find((target) => responder[target.value]);\n\n      return {\n        type:   responder.type,\n        target: target.value,\n        value:  responder[target.value]\n      };\n    });\n\n    return {\n      defaultResponder: {\n        type:   TYPES[0].value,\n        target: TARGETS[0].value,\n        value:  ''\n      },\n      responders,\n      TARGETS,\n      TYPES\n    };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    }\n  },\n\n  watch: {\n    responders: {\n      deep: true,\n      handler() {\n        const responders = this.responders.map((responder) => {\n          return {\n            type:               responder.type,\n            [responder.target]: responder.value\n          };\n        });\n\n        this.$set(this.value, 'responders', responders);\n      }\n    }\n  },\n\n  methods: {\n    updateResponder({ selected, text }, row) {\n      row.target = selected;\n      row.value = text;\n    },\n    typeLabel(type) {\n      return TYPES.find((t) => t.value === type).label;\n    },\n    targetLabel(target) {\n      return TARGETS.find((t) => t.value === target).label;\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <h3>Target</h3>\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          v-model=\"value.api_key\"\n          :mode=\"mode\"\n          label=\"API Key\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-12\">\n        <LabeledInput\n          v-model=\"value.http_config.proxy_url\"\n          :mode=\"mode\"\n          label=\"Proxy URL\"\n          placeholder=\"e.g. http://my-proxy/\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <Checkbox\n        v-model=\"value.send_resolved\"\n        :mode=\"mode\"\n        label=\"Enable send resolved alerts\"\n      />\n    </div>\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <h3>Responders</h3>\n        <ArrayList\n          v-model=\"responders\"\n          :mode=\"mode\"\n          :default-add-value=\"defaultResponder\"\n          :show-header=\"true\"\n        >\n          <template v-slot:column-headers>\n            <div class=\"responders-heading\">\n              <div\n                class=\"row\"\n                :class=\"{'mb-15': isView, 'mb-10': !isView}\"\n              >\n                <div class=\"col span-6\">\n                  <span class=\"text-label\">Type</span>\n                </div>\n                <div class=\"col span-6 send-to\">\n                  <span class=\"text-label\">Send To</span>\n                </div>\n              </div>\n            </div>\n          </template>\n          <template v-slot:columns=\"scope\">\n            <div class=\"row responder\">\n              <div class=\"col span-6\">\n                <span v-if=\"isView\">{{ typeLabel(scope.row.value.type) }}</span>\n                <Select\n                  v-else\n                  v-model=\"scope.row.value.type\"\n                  :mode=\"mode\"\n                  :options=\"TYPES\"\n                />\n              </div>\n              <div class=\"col-span-6 target-container\">\n                <span v-if=\"isView\">{{ targetLabel(scope.row.value.target) }}: {{ scope.row.value.value }}</span>\n                <InputWithSelect\n                  v-else\n                  class=\"target\"\n                  :mode=\"mode\"\n                  :options=\"TARGETS\"\n                  :select-value=\"scope.row.value.target\"\n                  :text-value=\"scope.row.value.value\"\n                  @input=\"updateResponder($event, scope.row.value)\"\n                />\n              </div>\n            </div>\n          </template>\n        </ArrayList>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .responders-heading {\n    display: grid;\n    grid-template-columns: auto $array-list-remove-margin;\n  }\n\n  .responder {\n    &, .target-container {\n      width: 100%;\n    }\n\n    .target-container ::v-deep .unlabeled-select {\n      min-width: 35%;\n      height: 100%;\n    }\n\n    .target {\n      height: 100%;\n    }\n  }\n</style>\n"]}]}