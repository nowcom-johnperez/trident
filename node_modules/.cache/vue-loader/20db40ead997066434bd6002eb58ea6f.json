{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/CruResource.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/CruResource.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CruResource.vue"],"names":[],"mappingsfile":"CruResource.vue","sourceRoot":"node_modules/@rancher/shell/components","sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\nimport { createYamlWithOptions } from '@shell/utils/create-yaml';\nimport { clone, get } from '@shell/utils/object';\nimport { SCHEMA, NAMESPACE } from '@shell/config/types';\nimport ResourceYaml from '@shell/components/ResourceYaml';\nimport { Banner } from '@components/Banner';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { mapGetters } from 'vuex';\nimport { stringify, exceptionToErrorsArray } from '@shell/utils/error';\nimport CruResourceFooter from '@shell/components/CruResourceFooter';\n\nimport {\n  _EDIT, _VIEW, AS, _YAML, _UNFLAG, SUB_TYPE\n} from '@shell/config/query-params';\n\nimport { BEFORE_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport Wizard from '@shell/components/Wizard';\n\nexport const CONTEXT_HOOK_EDIT_YAML = 'show-preview-yaml';\n\nexport default {\n\n  name: 'CruResource',\n\n  components: {\n    AsyncButton,\n    Banner,\n    CruResourceFooter,\n    ResourceYaml,\n    Wizard\n  },\n\n  props: {\n    doneRoute: {\n      type:    [String, Object],\n      default: null\n    },\n\n    cancelEvent: {\n      type:    Boolean,\n      default: false,\n    },\n\n    showCancel: {\n      type:    Boolean,\n      default: true\n    },\n\n    mode: {\n      type:     String,\n      required: true\n    },\n\n    resource: {\n      type:     Object,\n      required: true\n    },\n\n    subtypes: {\n      type:    Array,\n      default: () => []\n    },\n\n    selectedSubtype: {\n      type:    String,\n      default: null\n    },\n\n    validationPassed: {\n      type:    Boolean,\n      default: true\n    },\n\n    errors: {\n      type:    Array,\n      default: () => []\n    },\n\n    /**\n     * Set of maps to convert error messages to something more user friendly and apply icons\n     */\n    errorsMap: {\n      type:    Object,\n      default: null\n    },\n\n    // Is the edit as yaml button allowed\n    canYaml: {\n      type:    Boolean,\n      default: true,\n    },\n\n    // Call this function instead of the normal one to convert the resource into yaml to display\n    generateYaml: {\n      type:    Function,\n      default: null,\n    },\n\n    // Override the set of labels shown on the button from the default save/create.\n    finishButtonMode: {\n      type:    String,\n      default: null,\n    },\n\n    preventEnterSubmit: {\n      type:    Boolean,\n      default: false,\n    },\n\n    applyHooks: {\n      type:    Function,\n      default: null,\n    },\n\n    steps: {\n      type:    Array,\n      default: () => []\n    },\n\n    // The set of labels to display for the finish AsyncButton\n    finishMode: {\n      type:    String,\n      default: 'finish'\n    },\n\n    // Used to prevent cancel and create buttons from moving\n    // as form validation errors appear and disappear.\n    minHeight: {\n      type:    String,\n      default: ''\n    },\n\n    // Location of `namespace` value within the resource. Used when creating the namespace\n    namespaceKey: {\n      type:    String,\n      default: 'metadata.namespace'\n    },\n\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'form'\n    },\n\n    description: {\n      type:    String,\n      default: ''\n    },\n\n    yamlModifiers: {\n      type:    Object,\n      default: undefined\n    }\n  },\n\n  data(props) {\n    const yaml = this.createResourceYaml();\n\n    this.$on('createNamespace', (e) => {\n      // When createNamespace is set to true,\n      // the UI will attempt to create a new namespace\n      // before saving the resource.\n      this.createNamespace = e;\n    });\n\n    return {\n      isCancelModal:   false,\n      createNamespace: false,\n      showAsForm:      this.$route.query[AS] !== _YAML,\n      resourceYaml:    yaml,\n      initialYaml:     yaml,\n      abbrSizes:       {\n        3: '24px',\n        4: '18px',\n        5: '16px',\n        6: '14px'\n      },\n    };\n  },\n\n  computed: {\n    canSave() {\n      const { validationPassed, showAsForm, steps } = this;\n\n      if (showAsForm && steps?.length) {\n        return validationPassed && this.steps.every((step) => step.ready);\n      }\n\n      // Don't apply validation rules if the form is not shown.\n      if (!this.showAsForm) {\n        return true;\n      }\n\n      // Disable the save button if there are form validation\n      // errors while the user is typing.\n      return this.validationPassed;\n    },\n\n    canDiff() {\n      return this.initialYaml !== this.resourceYaml;\n    },\n\n    canEditYaml() {\n      const inStore = this.$store.getters['currentStore'](this.resource);\n      const schema = this.$store.getters[`${ inStore }/schemaFor`](this.resource.type);\n\n      return !(schema?.resourceMethods?.includes('blocked-PUT'));\n    },\n\n    showYaml() {\n      return this.canYaml && (this._selectedSubtype || !this.subtypes.length) && this.canEditYaml && this.mode !== _VIEW;\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    isEdit() {\n      return this.mode === _EDIT;\n    },\n\n    _selectedSubtype() {\n      if ( this.selectedSubtype ) {\n        return this.selectedSubtype;\n      }\n\n      return this.$route.query[SUB_TYPE];\n    },\n\n    showSubtypeSelection() {\n      if (isEmpty(this.subtypes)) {\n        return false;\n      }\n\n      if (!this._selectedSubtype) {\n        return true;\n      }\n\n      return false;\n    },\n\n    ...mapGetters({ t: 'i18n/t' }),\n\n    /**\n     * Prevent issues for malformed types injection\n     */\n    hasErrors() {\n      return this.errors?.length && Array.isArray(this.errors);\n    },\n\n    /**\n     * Replace returned string with new picked value and icon\n     */\n    mappedErrors() {\n      return !this.errors ? {} : this.errorsMap || this.errors.reduce((acc, error) => ({\n        ...acc,\n        [error]: {\n          message: error,\n          icon:    null\n        }\n      }), {});\n    },\n  },\n\n  created() {\n    if ( this._selectedSubtype ) {\n      this.$emit('select-type', this._selectedSubtype);\n    }\n  },\n\n  methods: {\n    stringify,\n\n    confirmCancel(isCancelNotBack = true) {\n      if (isCancelNotBack) {\n        this.emitOrRoute();\n      } else if (!this.showAsForm) {\n        this.resourceYaml = null;\n        this.showAsForm = true;\n        this.$router.applyQuery({ [AS]: _UNFLAG });\n      }\n    },\n\n    /**\n     * Dismiss given error\n     */\n    closeError(index) {\n      const errors = this.errors.filter((_, i) => i !== index);\n\n      this.$emit('error', errors, this.errors[index]);\n    },\n\n    emitOrRoute() {\n      if ( this.cancelEvent ) {\n        this.$emit('cancel');\n      } else {\n        const { resource = this.resource.type } = this.$route.params;\n        const doneOverride = this.resource.doneOverride;\n        const doneDefault = {\n          name:   this.doneRoute,\n          params: { resource }\n        };\n\n        this.$router.replace(doneOverride || doneDefault);\n      }\n    },\n\n    createResourceYaml(modifiers) {\n      const resource = this.resource;\n\n      if ( typeof this.generateYaml === 'function' ) {\n        return this.generateYaml.apply(this, resource);\n      } else {\n        const inStore = this.$store.getters['currentStore'](resource);\n        const schemas = this.$store.getters[`${ inStore }/all`](SCHEMA);\n        const clonedResource = clone(resource);\n\n        const out = createYamlWithOptions(schemas, resource.type, clonedResource, modifiers);\n\n        return out;\n      }\n    },\n\n    async showPreviewYaml() {\n      if ( this.applyHooks ) {\n        try {\n          await this.applyHooks(BEFORE_SAVE_HOOKS, CONTEXT_HOOK_EDIT_YAML);\n        } catch (e) {\n          console.warn('Unable to show yaml: ', e); // eslint-disable-line no-console\n\n          return;\n        }\n      }\n\n      const resourceYaml = this.createResourceYaml(this.yamlModifiers);\n\n      this.resourceYaml = resourceYaml;\n      this.showAsForm = false;\n      this.$router.applyQuery({ [AS]: _YAML });\n    },\n\n    selectType(id, event) {\n      if (event?.srcElement?.tagName === 'A') {\n        return;\n      }\n\n      this.$router.applyQuery({ [SUB_TYPE]: id });\n      this.$emit('select-type', id);\n    },\n\n    async clickSave(buttonDone) {\n      try {\n        await this.createNamespaceIfNeeded();\n\n        // If the attempt to create the new namespace\n        // is successful, save the resource.\n        this.$emit('finish', buttonDone);\n      } catch (err) {\n        // After the attempt to create the namespace,\n        // show any applicable errors if the namespace is\n        // invalid.\n        this.$emit('error', exceptionToErrorsArray(err.message));\n        buttonDone(false);\n      }\n    },\n\n    save() {\n      this.$refs.save.clicked();\n    },\n\n    async createNamespaceIfNeeded() {\n      const inStore = this.$store.getters['currentStore'](this.resource);\n      const newNamespaceName = get(this.resource, this.namespaceKey);\n      let namespaceAlreadyExists = false;\n\n      if (!this.createNamespace) {\n        return;\n      }\n\n      try {\n        // This is in a try-catch block because the call to fetch\n        // a namespace throws an error if the namespace is not found.\n        namespaceAlreadyExists = !!(await this.$store.dispatch(`${ inStore }/find`, { type: NAMESPACE, id: newNamespaceName }));\n      } catch {}\n\n      if (this.createNamespace && !namespaceAlreadyExists) {\n        try {\n          const newNamespace = await this.$store.dispatch(`${ inStore }/createNamespace`, { name: newNamespaceName }, { root: true });\n\n          newNamespace.applyDefaults();\n          await newNamespace.save();\n        } catch (e) {\n          // this.errors = exceptionToErrorsArray(e);\n          this.$emit('error', exceptionToErrorsArray(e));\n          throw new Error(`Could not create the new namespace. ${ e.message }`);\n        }\n      }\n    },\n\n    onPressEnter(event) {\n      if (this.preventEnterSubmit) {\n        event.preventDefault();\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <section class=\"cru\">\n    <slot name=\"noticeBanner\" />\n    <p\n      v-if=\"description\"\n      class=\"description\"\n    >\n      {{ description }}\n    </p>\n    <form\n      :is=\"(isView? 'div' : 'form')\"\n      data-testid=\"cru-form\"\n      class=\"create-resource-container cru__form\"\n      @submit.prevent\n      @keydown.enter=\"onPressEnter($event)\"\n    >\n      <div\n        v-if=\"hasErrors\"\n        id=\"cru-errors\"\n        class=\"cru__errors\"\n      >\n        <Banner\n          v-for=\"(err, i) in errors\"\n          :key=\"i\"\n          color=\"error\"\n          :label=\"stringify(mappedErrors[err].message)\"\n          :icon=\"mappedErrors[err].icon\"\n          :closable=\"true\"\n          @close=\"closeError(i)\"\n        />\n      </div>\n      <div\n        v-if=\"showSubtypeSelection\"\n        class=\"subtypes-container cru__content\"\n      >\n        <slot\n          name=\"subtypes\"\n          :subtypes=\"subtypes\"\n        >\n          <div\n            v-for=\"subtype in subtypes\"\n            :key=\"subtype.id\"\n            class=\"subtype-banner\"\n            :class=\"{ selected: subtype.id === _selectedSubtype }\"\n            @click=\"selectType(subtype.id, $event)\"\n          >\n            <slot name=\"subtype-content\">\n              <div class=\"subtype-container\">\n                <div class=\"subtype-logo\">\n                  <img\n                    v-if=\"subtype.bannerImage\"\n                    :src=\"subtype.bannerImage\"\n                    :alt=\"(resource.type ? resource.type + ': ' : '') + (subtype.label || '')\"\n                  >\n                  <div\n                    v-else\n                    class=\"round-image\"\n                  >\n                    <div\n                      v-if=\"subtype.bannerAbbrv\"\n                      class=\"banner-abbrv\"\n                    >\n                      <span v-if=\"$store.getters['i18n/exists'](subtype.bannerAbbrv)\">{{ t(subtype.bannerAbbrv) }}</span>\n                      <span\n                        v-else\n                        :style=\"{fontSize: abbrSizes[subtype.bannerAbbrv.length]}\"\n                      >{{ subtype.bannerAbbrv }}</span>\n                    </div>\n                    <div v-else>\n                      {{ subtype.id.slice(0, 1).toUpperCase() }}\n                    </div>\n                  </div>\n                </div>\n                <div class=\"subtype-body\">\n                  <div\n                    class=\"title\"\n                    :class=\"{'with-description': !!subtype.description}\"\n                  >\n                    <h5>\n                      <span\n                        v-if=\"$store.getters['i18n/exists'](subtype.label)\"\n                        v-clean-html=\"t(subtype.label)\"\n                      />\n                      <span v-else>{{ subtype.label }}</span>\n                    </h5>\n                    <a\n                      v-if=\"subtype.docLink\"\n                      :href=\"subtype.docLink\"\n                      target=\"_blank\"\n                      rel=\"noopener nofollow\"\n                      class=\"flex-right\"\n                    >{{ t('generic.moreInfo') }} <i class=\"icon icon-external-link\" /></a>\n                  </div>\n                  <hr v-if=\"subtype.description\">\n                  <div\n                    v-if=\"subtype.description\"\n                    class=\"description\"\n                  >\n                    <span\n                      v-if=\"$store.getters['i18n/exists'](subtype.description)\"\n                      v-clean-html=\"t(subtype.description, {}, true)\"\n                    />\n                    <span v-else>{{ subtype.description }}</span>\n                  </div>\n                </div>\n              </div>\n            </slot>\n          </div>\n        </slot>\n      </div>\n      <!------ MULTI STEP PROCESS ------>\n      <template v-if=\"showAsForm && steps.length\">\n        <div\n          v-if=\"_selectedSubtype || !subtypes.length\"\n          class=\"resource-container cru__content cru__content-wizard\"\n        >\n          <Wizard\n            v-if=\"resource\"\n            ref=\"Wizard\"\n            :header-mode=\"mode\"\n            :steps=\"steps\"\n            :errors=\"errors\"\n            :finish-mode=\"finishMode\"\n            class=\"wizard\"\n            @error=\"e=>errors = e\"\n          >\n            <template\n              #stepContainer=\"{activeStep}\"\n              class=\"step-container\"\n            >\n              <template v-for=\"step in steps\">\n                <div\n                  v-if=\"step.name === activeStep.name || step.hidden\"\n                  :key=\"step.name\"\n                  class=\"step-container__step\"\n                  :class=\"{'hide': step.name !== activeStep.name && step.hidden}\"\n                >\n                  <slot\n                    :step=\"step\"\n                    :name=\"step.name\"\n                  />\n                </div>\n              </template>\n            </template>\n            <template #controlsContainer=\"{showPrevious, next, back, activeStep, canNext, activeStepIndex, visibleSteps}\">\n              <template name=\"form-footer\">\n                <CruResourceFooter\n                  class=\"cru__footer\"\n                  :mode=\"mode\"\n                  :is-form=\"showAsForm\"\n                  :show-cancel=\"showCancel\"\n                  @cancel-confirmed=\"confirmCancel\"\n                >\n                  <!-- Pass down templates provided by the caller -->\n                  <template\n                    v-for=\"(_, slot) of $scopedSlots\"\n                    v-slot:[slot]=\"scope\"\n                  >\n                    <slot\n                      :name=\"slot\"\n                      v-bind=\"scope\"\n                    />\n                  </template>\n                  <div class=\"controls-steps\">\n                    <button\n                      v-if=\"showYaml\"\n                      type=\"button\"\n                      class=\"btn role-secondary\"\n                      @click=\"showPreviewYaml\"\n                    >\n                      <t k=\"cruResource.previewYaml\" />\n                    </button>\n                    <template\n                      v-if=\"showPrevious\"\n                      name=\"back\"\n                    >\n                      <button\n                        type=\"button\"\n                        class=\"btn role-secondary\"\n                        @click=\"back()\"\n                      >\n                        <t k=\"wizard.previous\" />\n                      </button>\n                    </template>\n                    <template\n                      v-if=\"activeStepIndex === visibleSteps.length-1\"\n                      name=\"finish\"\n                    >\n                      <AsyncButton\n                        v-if=\"!showSubtypeSelection && !isView\"\n                        ref=\"save\"\n                        :disabled=\"!activeStep.ready\"\n                        :mode=\"finishButtonMode || mode\"\n                        @click=\"$emit('finish', $event)\"\n                      />\n                    </template>\n                    <template\n                      v-else\n                      name=\"next\"\n                    >\n                      <button\n                        :disabled=\"!canNext\"\n                        type=\"button\"\n                        class=\"btn role-primary\"\n                        @click=\"next()\"\n                      >\n                        <t k=\"wizard.next\" />\n                      </button>\n                    </template>\n                  </div>\n                </CruResourceFooter>\n              </template>\n            </template>\n          </Wizard>\n        </div>\n      </template>\n      <!------ SINGLE PROCESS ------>\n      <template v-else-if=\"showAsForm\">\n        <div\n          v-if=\"_selectedSubtype || !subtypes.length\"\n          class=\"resource-container cru__content\"\n          :style=\"[minHeight ? { 'min-height': minHeight } : {}]\"\n        >\n          <slot />\n        </div>\n        <slot name=\"form-footer\">\n          <CruResourceFooter\n            class=\"cru__footer\"\n            :mode=\"mode\"\n            :is-form=\"showAsForm\"\n            :show-cancel=\"showCancel\"\n            :component-testid=\"componentTestid\"\n            @cancel-confirmed=\"confirmCancel\"\n          >\n            <!-- Pass down templates provided by the caller -->\n            <template\n              v-for=\"(_, slot) of $scopedSlots\"\n              v-slot:[slot]=\"scope\"\n            >\n              <slot\n                :name=\"slot\"\n                v-bind=\"scope\"\n              />\n            </template>\n\n            <template #default>\n              <div v-if=\"!isView\">\n                <button\n                  v-if=\"showYaml\"\n                  :data-testid=\"componentTestid + '-yaml'\"\n                  type=\"button\"\n                  class=\"btn role-secondary\"\n                  @click=\"showPreviewYaml\"\n                >\n                  <t k=\"cruResource.previewYaml\" />\n                </button>\n                <AsyncButton\n                  v-if=\"!showSubtypeSelection\"\n                  ref=\"save\"\n                  :disabled=\"!canSave\"\n                  :mode=\"finishButtonMode || mode\"\n                  :data-testid=\"componentTestid + '-save'\"\n                  @click=\"clickSave($event)\"\n                />\n              </div>\n            </template>\n          </CruResourceFooter>\n        </slot>\n      </template>\n      <!------ YAML ------>\n      <section\n        v-else-if=\"showYaml\"\n        class=\"cru-resource-yaml-container resource-container cru__content\"\n      >\n        <ResourceYaml\n          ref=\"resourceyaml\"\n          :value=\"resource\"\n          :mode=\"mode\"\n          :initial-yaml-for-diff=\"initialYaml\"\n          :yaml=\"resourceYaml\"\n          :offer-preview=\"isEdit\"\n          :done-route=\"doneRoute\"\n          :done-override=\"resource.doneOverride\"\n          :errors=\"errors\"\n          :apply-hooks=\"applyHooks\"\n          class=\"resource-container cru__content\"\n          @error=\"e=>$emit('error', e)\"\n        >\n          <template #yamlFooter=\"{yamlSave, showPreview, yamlPreview, yamlUnpreview}\">\n            <slot name=\"cru-yaml-footer\">\n              <CruResourceFooter\n                class=\"cru__footer\"\n                :done-route=\"doneRoute\"\n                :mode=\"mode\"\n                :is-form=\"showAsForm\"\n                @cancel-confirmed=\"confirmCancel\"\n              >\n                <template #default=\"{checkCancel}\">\n                  <div class=\"controls-middle\">\n                    <button\n                      v-if=\"showPreview\"\n                      type=\"button\"\n                      class=\"btn role-secondary\"\n                      :data-testid=\"componentTestid + '-yaml-yaml'\"\n                      @click=\"yamlUnpreview\"\n                    >\n                      <t k=\"resourceYaml.buttons.continue\" />\n                    </button>\n                    <button\n                      v-if=\"!showPreview && isEdit\"\n                      :data-testid=\"componentTestid + '-yaml-yaml-preview'\"\n                      :disabled=\"!canDiff\"\n                      type=\"button\"\n                      class=\"btn role-secondary\"\n                      @click=\"yamlPreview\"\n                    >\n                      <t k=\"resourceYaml.buttons.diff\" />\n                    </button>\n                  </div>\n                  <div\n                    v-if=\"_selectedSubtype || !subtypes.length\"\n                    class=\"controls-right\"\n                  >\n                    <button\n                      :data-testid=\"componentTestid + '-yaml-cancel'\"\n                      type=\"button\"\n                      class=\"btn role-secondary\"\n                      @click=\"checkCancel(false)\"\n                    >\n                      <t k=\"cruResource.backToForm\" />\n                    </button>\n                    <AsyncButton\n                      v-if=\"!showSubtypeSelection\"\n                      :data-testid=\"componentTestid + '-yaml-save'\"\n                      :disabled=\"!canSave\"\n                      :action-label=\"isEdit ? t('generic.save') : t('generic.create')\"\n                      @click=\"cb=>yamlSave(cb)\"\n                    />\n                  </div>\n                </template>\n              </CruResourceFooter>\n            </slot>\n          </template>\n        </ResourceYaml>\n      </section>\n    </form>\n  </section>\n</template>\n\n<style lang='scss' scoped>\n.cru-resource-yaml-container {\n  .resource-yaml {\n    .yaml-editor {\n      min-height: 100px;\n    }\n  }\n}\n.create-resource-container {\n\n  .resource-container {\n    display: flex; // Ensures content grows in child CruResources\n    flex-direction: column;\n  }\n\n  .subtype-banner {\n    .round-image {\n      background-color: var(--primary);\n    }\n  }\n}\n\n$logo: 60px;\n$logo-space: 100px;\n\n.title {\n  margin-top: 20px;\n\n  &.with-description {\n    margin-top: 0;\n  }\n}\n\n.subtype-container {\n  position: relative;\n  display: flex;\n  height: 100%;\n};\n\n.subtype-body {\n  flex: 1;\n  padding: 10px;\n}\n\n.subtype-logo {\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  min-width: $logo-space;\n  min-height: $logo-space;\n  overflow: hidden;\n  background-color: var(--box-bg);\n\n  img {\n    width: $logo - 4px;\n    height: $logo - 4px;\n    object-fit: contain;\n    position: relative;\n    top: 2px;\n  }\n}\n\nform.create-resource-container .cru {\n  &__footer {\n    // Only show border when the mode is not view\n    border-top: var(--header-border-size) solid var(--header-border);\n  }\n}\n.cru {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  &__form {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n  }\n\n  &__content {\n    flex-grow: 1;\n    &-wizard {\n      display: flex;\n    }\n  }\n\n  &__footer {\n    right: 0;\n    position: sticky;\n    bottom: 0;\n    background-color: var(--header-bg);\n\n    // Overrides outlet padding\n    margin-left: -$space-m;\n    margin-right: -$space-m;\n    margin-bottom: -$space-m;\n    padding: $space-s $space-m;\n  }\n\n  &__errors {\n    position: sticky;\n    top: 0;\n    z-index: 1;\n    background-color: var(--header-bg);\n    margin: 10px 0;\n  }\n}\n\n.description {\n  margin-bottom: 15px;\n  margin-top: 5px;\n}\n\n</style>\n"]}]}