{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/DrainOptions.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/DrainOptions.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgRHJhaW5PcHRpb25zIGZyb20gJ0BzaGVsbC9lZGl0L3Byb3Zpc2lvbmluZy5jYXR0bGUuaW8uY2x1c3Rlci9EcmFpbk9wdGlvbnMudnVlJzsKZGVzY3JpYmUoJ2RyYWluIG9wdGlvbnMnLCAoKSA9PiB7CiAgICBpdCgnc2hvdWxkIHVwZGF0ZSBhbiBlbXB0eSB2YWx1ZSB3aXRoIGRlZmF1bHQgZHJhaW4gb3B0aW9ucycsICgpID0+IHsKICAgICAgICB2YXIgX2EsIF9iOwogICAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChEcmFpbk9wdGlvbnMsIHsKICAgICAgICAgICAgcHJvcHNEYXRhOiB7IHZhbHVlOiB7fSwgbW9kZTogJ2NyZWF0ZScgfSwKICAgICAgICAgICAgbW9ja3M6IHsgJHN0b3JlOiB7IGdldHRlcnM6IHsgJ2kxOG4vdCc6IGplc3QuZm4oKSB9IH0gfSwKICAgICAgICB9KTsKICAgICAgICBleHBlY3QoKF9iID0gKF9hID0gd3JhcHBlci5lbWl0dGVkKCdpbnB1dCcpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbMF0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYlswXSkudG9TdHJpY3RFcXVhbCh7CiAgICAgICAgICAgIGRlbGV0ZUVtcHR5RGlyRGF0YTogdHJ1ZSwKICAgICAgICAgICAgZGlzYWJsZUV2aWN0aW9uOiBmYWxzZSwKICAgICAgICAgICAgZW5hYmxlZDogZmFsc2UsCiAgICAgICAgICAgIGZvcmNlOiBmYWxzZSwKICAgICAgICAgICAgZ3JhY2VQZXJpb2Q6IC0xLAogICAgICAgICAgICBpZ25vcmVEYWVtb25TZXRzOiB0cnVlLAogICAgICAgICAgICBza2lwV2FpdEZvckRlbGV0ZVRpbWVvdXRTZWNvbmRzOiAwLAogICAgICAgICAgICB0aW1lb3V0OiAxMjAsCiAgICAgICAgfSk7CiAgICB9KTsKICAgIGl0KCdzaG91bGQgbm90IG92ZXJ3cml0ZSBleGlzdGluZyBkcmFpbiBvcHRpb24gdmFsdWVzJywgKCkgPT4gewogICAgICAgIHZhciBfYSwgX2I7CiAgICAgICAgY29uc3QgdXBncmFkZVN0cmF0ZWd5ID0gewogICAgICAgICAgICBkZWxldGVFbXB0eURpckRhdGE6IGZhbHNlLAogICAgICAgICAgICBkaXNhYmxlRXZpY3Rpb246IGZhbHNlLAogICAgICAgICAgICBlbmFibGVkOiBmYWxzZSwKICAgICAgICAgICAgZm9yY2U6IHRydWUsCiAgICAgICAgICAgIGlnbm9yZURhZW1vblNldHM6IGZhbHNlLAogICAgICAgICAgICB0aW1lb3V0OiA5MCwKICAgICAgICB9OwogICAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChEcmFpbk9wdGlvbnMsIHsKICAgICAgICAgICAgcHJvcHNEYXRhOiB7IHZhbHVlOiB1cGdyYWRlU3RyYXRlZ3ksIG1vZGU6ICdjcmVhdGUnIH0sCiAgICAgICAgICAgIG1vY2tzOiB7ICRzdG9yZTogeyBnZXR0ZXJzOiB7ICdpMThuL3QnOiBqZXN0LmZuKCkgfSB9IH0sCiAgICAgICAgfSk7CiAgICAgICAgZXhwZWN0KChfYiA9IChfYSA9IHdyYXBwZXIuZW1pdHRlZCgnaW5wdXQnKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2JbMF0pLnRvU3RyaWN0RXF1YWwoewogICAgICAgICAgICBkZWxldGVFbXB0eURpckRhdGE6IGZhbHNlLAogICAgICAgICAgICBkaXNhYmxlRXZpY3Rpb246IGZhbHNlLAogICAgICAgICAgICBlbmFibGVkOiBmYWxzZSwKICAgICAgICAgICAgZm9yY2U6IHRydWUsCiAgICAgICAgICAgIGdyYWNlUGVyaW9kOiAtMSwKICAgICAgICAgICAgaWdub3JlRGFlbW9uU2V0czogZmFsc2UsCiAgICAgICAgICAgIHNraXBXYWl0Rm9yRGVsZXRlVGltZW91dFNlY29uZHM6IDAsCiAgICAgICAgICAgIHRpbWVvdXQ6IDkwLAogICAgICAgIH0pOwogICAgfSk7Cn0pOwo="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/DrainOptions.test.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/DrainOptions.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,YAAY,MAAM,6DAA6D,CAAC;AAIvF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;;QACjE,MAAM,OAAO,GAAG,KAAK,CAAC,YAAqE,EAAE;YAC3F,SAAS,EAAE,EAAE,KAAK,EAAE,EAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;YACzC,KAAK,EAAM,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;SAE5D,CAAC,CAAC;QAEH,MAAM,aAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,0CAAG,CAAC,2CAAI,CAAC,EAAE,CAAC,aAAa,CAAC;YACvD,kBAAkB,EAAe,IAAI;YACrC,eAAe,EAAkB,KAAK;YACtC,OAAO,EAA0B,KAAK;YACtC,KAAK,EAA4B,KAAK;YACtC,WAAW,EAAsB,CAAC,CAAC;YACnC,gBAAgB,EAAiB,IAAI;YACrC,+BAA+B,EAAE,CAAC;YAClC,OAAO,EAA0B,GAAG;SACrC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE;;QAC3D,MAAM,eAAe,GAAG;YACtB,kBAAkB,EAAE,KAAK;YACzB,eAAe,EAAK,KAAK;YACzB,OAAO,EAAa,KAAK;YACzB,KAAK,EAAe,IAAI;YACxB,gBAAgB,EAAI,KAAK;YACzB,OAAO,EAAa,EAAE;SACvB,CAAC;QACF,MAAM,OAAO,GAAG,KAAK,CAAC,YAAqE,EAAE;YAC3F,SAAS,EAAE,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,QAAQ,EAAE;YACrD,KAAK,EAAM,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;SAE5D,CAAC,CAAC;QAEH,MAAM,aAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,0CAAG,CAAC,2CAAI,CAAC,EAAE,CAAC,aAAa,CAAC;YACvD,kBAAkB,EAAe,KAAK;YACtC,eAAe,EAAkB,KAAK;YACtC,OAAO,EAA0B,KAAK;YACtC,KAAK,EAA4B,IAAI;YACrC,WAAW,EAAsB,CAAC,CAAC;YACnC,gBAAgB,EAAiB,KAAK;YACtC,+BAA+B,EAAE,CAAC;YAClC,OAAO,EAA0B,EAAE;SACpC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { mount } from '@vue/test-utils';\nimport DrainOptions from '@shell/edit/provisioning.cattle.io.cluster/DrainOptions.vue';\nimport { DefaultProps } from 'vue/types/options';\nimport { ExtendedVue, Vue } from 'vue/types/vue';\n\ndescribe('drain options', () => {\n  it('should update an empty value with default drain options', () => {\n    const wrapper = mount(DrainOptions as unknown as ExtendedVue<Vue, {}, {}, {}, DefaultProps>, {\n      propsData: { value: { }, mode: 'create' },\n      mocks:     { $store: { getters: { 'i18n/t': jest.fn() } } },\n\n    });\n\n    expect(wrapper.emitted('input')?.[0]?.[0]).toStrictEqual({\n      deleteEmptyDirData:              true,\n      disableEviction:                 false,\n      enabled:                         false,\n      force:                           false,\n      gracePeriod:                     -1,\n      ignoreDaemonSets:                true,\n      skipWaitForDeleteTimeoutSeconds: 0,\n      timeout:                         120,\n    });\n  });\n\n  it('should not overwrite existing drain option values', () => {\n    const upgradeStrategy = {\n      deleteEmptyDirData: false,\n      disableEviction:    false,\n      enabled:            false,\n      force:              true,\n      ignoreDaemonSets:   false,\n      timeout:            90,\n    };\n    const wrapper = mount(DrainOptions as unknown as ExtendedVue<Vue, {}, {}, {}, DefaultProps>, {\n      propsData: { value: upgradeStrategy, mode: 'create' },\n      mocks:     { $store: { getters: { 'i18n/t': jest.fn() } } },\n\n    });\n\n    expect(wrapper.emitted('input')?.[0]?.[0]).toStrictEqual({\n      deleteEmptyDirData:              false,\n      disableEviction:                 false,\n      enabled:                         false,\n      force:                           true,\n      gracePeriod:                     -1,\n      ignoreDaemonSets:                false,\n      skipWaitForDeleteTimeoutSeconds: 0,\n      timeout:                         90,\n    });\n  });\n});\n"]}]}