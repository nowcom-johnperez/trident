{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport Router, { RouteConfig } from 'vue-router';\n\ninterface RouteInfo {\n  parent?: string;\n  route: RouteConfig;\n}\n\ninterface RouteInstallInfo {\n  plugin: string;\n  route: RouteConfig;\n}\n\ntype RouteInstallHistory = {\n  [route: string]: RouteInstallInfo[]\n}\n\nexport class PluginRoutes {\n  router: Router;\n  pluginRoutes: RouteConfig[] = [];\n\n  replacedRoutes: RouteInstallHistory = {};\n\n  constructor(router: Router) {\n    this.router = router;\n  }\n\n  public logRoutes(r: any, indent = 0) {\n    const spaces = Array(indent).join(' ');\n\n    r.forEach((s: any) => {\n      console.log(`${ spaces }${ s.name } -> ${ s.path }`); // eslint-disable-line no-console\n      this.logRoutes(s.children || [], indent + 2);\n    });\n  }\n\n  // Ensure we put back any routes that the plugin that is being uninstalled added\n  public uninstall(plugin: any) {\n    // List of routes we need to restore\n    const restore: RouteInfo[] = [];\n\n    Object.keys(this.replacedRoutes).forEach((routeName) => {\n      const info = this.replacedRoutes[routeName];\n\n      for (let index = 0; index < info.length; index++) {\n        const savedRoute = info[index];\n\n        if (savedRoute.plugin === plugin.id) {\n          // The plugin that is being uninstalled replaced an existing route that we will restore\n          if (index === 0) {\n            // Need to restore the previous route, since the plugin owned the active route\n            info.shift();\n\n            restore.push({ route: savedRoute.route });\n\n            break;\n          } else {\n            // Need to update the previous item so that when it is removed, it restores the correct route\n            const previous = info[index - 1];\n\n            previous.route = savedRoute.route;\n            info.splice(index, 1);\n\n            break;\n          }\n        }\n      }\n    });\n\n    // Remove routes from pluginRoutes, update matcher (to avoid dupes when re-adding plugin routes)\n    this.pluginRoutes = this.pluginRoutes.filter((pR) => !plugin.routes.find((r: any) => pR === r.route));\n    this.updateMatcher([], [\n      ...this.pluginRoutes,\n      ...(this.router.options.routes || [])\n    ]);\n\n    // Restore appropriate routes\n    if (restore.length > 0) {\n      this.addRoutes(null, restore);\n    }\n  }\n\n  public addRoutes(plugin: any, routes: RouteInfo[]) {\n    const allRoutes = [\n      ...this.pluginRoutes,\n      ...(this.router.options.routes || [])\n    ];\n\n    // Need to take into account if routes are being replaced\n    // Despite what the docs say, routes are not replaced, so we use a workaround\n    // Remove all routes that are being replaced\n    routes.forEach((r: RouteInfo) => {\n      // Patch colliding legacy routes that start /:product\n      if (r.route.path?.startsWith('/:product')) {\n        // Legacy pattern used by extensions - routes may collide, so modify them not to\n        let productName;\n\n        // If the route has a name (which is always the case for the extensions we have written), use it to get the product name\n        if (r.route.name) {\n          const nameParts = r.route.name.split('-');\n\n          // First part of the route name is the product name\n          productName = nameParts[0];\n        }\n\n        // Use the plugin name as the product, if the route does not have a name\n        productName = productName || plugin.name;\n\n        // Replace the path - removing :product and using the actual product name instead - this avoids route collisions\n        r.route.path = `/${ productName }${ r.route.path.substr(9) }`;\n        r.route.meta = r.route.meta || {};\n\n        r.route.meta.product = r.route.meta.product || productName;\n      }\n\n      // See if the route exists\n      let existing: any;\n\n      if (r.parent) {\n        const pExisting = allRoutes.findIndex((route: any) => route.name === r.parent) as any;\n        const path = `${ pExisting.path }${ r.route.path }`;\n\n        // TODO: Validate\n        existing = allRoutes.findIndex((route: any) => route.path === path);\n      } else {\n        // no parent route\n        existing = allRoutes.findIndex((route: any) => route.name === r.route.name);\n      }\n\n      if (existing >= 0) {\n        const existingRoute = allRoutes[existing];\n\n        // Store the route so we can restore it on uninstall\n        if (plugin && existingRoute?.name) {\n          if (!this.replacedRoutes[existingRoute.name]) {\n            this.replacedRoutes[existingRoute.name] = [];\n          }\n\n          this.replacedRoutes[existingRoute.name].unshift({\n            plugin: plugin.id,\n            route:  existingRoute\n          });\n        }\n\n        allRoutes.splice(existing, 1);\n      }\n    });\n\n    this.updateMatcher(routes, allRoutes);\n  }\n\n  private updateMatcher(newRoutes: RouteInfo[], allRoutes: RouteConfig[]) {\n    // Note - Always use a new router and replace the existing router's matching\n    // Using the existing router and adding routes to it will force nuxt middleware (specifically authenticated on default layout) to\n    // execute many times (nuxt middleware boils down to router.beforeEach). This issue was seen refreshing in a harvester cluster with a\n    // dynamically loaded cluster\n\n    const pluginRoutesWithParents: any[] = [];\n    const orderedPluginRoutes: any[] = [];\n\n    // separate plugin routes that have parent and not\n    newRoutes.forEach((r: any) => {\n      let foundParentRoute;\n\n      if (r.parent) {\n        foundParentRoute = allRoutes.find((route) => route.name === r.parent);\n\n        if (foundParentRoute) {\n          pluginRoutesWithParents.push(r);\n        }\n      }\n\n      if (!foundParentRoute) {\n        orderedPluginRoutes.push(r.route);\n      }\n\n      this.pluginRoutes.push(r.route);\n    });\n\n    const newRouter: Router = new Router({\n      mode:   'history',\n      routes: [...orderedPluginRoutes, ...allRoutes]\n    });\n\n    // handle plugin routes with parent\n    pluginRoutesWithParents.forEach((r: any) => {\n      newRouter.addRoute(r.parent, r.route);\n    });\n\n    // Typing is incorrect\n    (this.router as any).matcher = (newRouter as any).matcher;\n  }\n}\n"]}]}