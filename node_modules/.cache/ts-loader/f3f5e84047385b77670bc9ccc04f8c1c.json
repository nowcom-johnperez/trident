{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgQmFuemFpIGZyb20gJ0BzaGVsbC9lZGl0L2xvZ2dpbmcuYmFuemFpY2xvdWQuaW8ub3V0cHV0L2luZGV4LnZ1ZSc7CmRlc2NyaWJlKCd2aWV3OiBsb2dnaW5nLmJhbnphaWNsb3VkLmlvLm91dHB1dCcsICgpID0+IHsKICAgIGl0LmVhY2goWwogICAgICAgIFsnaHR0cDovL2xvY2FsaG9zdDozMTAwJywgW11dLAogICAgICAgIFsnbm90IGEgcHJvcGVyIFVSTCcsIFsnbG9nZ2luZy5sb2tpLnVybEludmFsaWQnXV0sCiAgICBdKSgnc2hvdWxkIHZhbGlkYXRlIExva2kgVVJMIG9uIHNhdmUnLCAodXJsLCBleHBlY3RhdGlvbikgPT4gewogICAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChCYW56YWksIHsKICAgICAgICAgICAgZGF0YTogKCkgPT4gKHsgc2VsZWN0ZWRQcm92aWRlcjogJ2xva2knIH0pLAogICAgICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiB7CiAgICAgICAgICAgICAgICAgICAgc2F2ZTogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgIHNwZWM6IHsgbG9raTogeyB1cmwgfSB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICAkc3RvcmU6IHsKICAgICAgICAgICAgICAgICAgICBnZXR0ZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRTdG9yZTogKCkgPT4gJ2N1cnJlbnRfc3RvcmUnLAogICAgICAgICAgICAgICAgICAgICAgICAnbWFuYWdlbWVudC9zY2hlbWFGb3InOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdjdXJyZW50X3N0b3JlL2FsbCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2N1cnJlbnRfc3RvcmUvc2NoZW1hRm9yJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnY2x1c3Rlci9hbGwnOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICd0eXBlLW1hcC9pc1Nwb29mZWQnOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICAgICAgICAgICdpMThuL3QnOiBqZXN0LmZuKCkubW9ja0ltcGxlbWVudGF0aW9uKChrZXkpID0+IGtleSksCiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWVzcGFjZXM6ICgpID0+ICh7fSksCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICRyb3V0ZTogewogICAgICAgICAgICAgICAgICAgIG5hbWU6ICd3aGF0ZXZlcicsCiAgICAgICAgICAgICAgICAgICAgcXVlcnk6IHsgQVM6ICcnIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGVyOiB7IHJlcGxhY2U6IGplc3QuZm4oKSB9LAogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgY29uc3QgZmFrZURvbmUgPSBqZXN0LmZuKCk7CiAgICAgICAgd3JhcHBlci52bS5zYXZlU2V0dGluZ3MoZmFrZURvbmUpOwogICAgICAgIGV4cGVjdCh3cmFwcGVyLnZtLmVycm9ycykudG9TdHJpY3RFcXVhbChleHBlY3RhdGlvbik7CiAgICB9KTsKfSk7Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/__tests__/logging.banzaicloud.io.output.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,MAAM,MAAM,qDAAqD,CAAC;AAEzE,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;IACnD,EAAE,CAAC,IAAI,CAAC;QACN,CAAC,uBAAuB,EAAE,EAAE,CAAC;QAC7B,CAAC,kBAAkB,EAAE,CAAC,yBAAyB,CAAC,CAAC;KAClD,CAAC,CAAC,kCAAkC,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE;QAC1D,MAAM,OAAO,GAAG,KAAK,CAAC,MAAM,EAAE;YAC5B,IAAI,EAAO,GAAG,EAAE,CAAC,CAAC,EAAE,gBAAgB,EAAE,MAAM,EAAE,CAAC;YAC/C,SAAS,EAAE;gBACT,KAAK,EAAE;oBACL,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE;oBACf,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE;iBACxB;aACF;YACD,KAAK,EAAE;gBACL,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,YAAY,EAAe,GAAG,EAAE,CAAC,eAAe;wBAChD,sBAAsB,EAAK,IAAI,CAAC,EAAE,EAAE;wBACpC,mBAAmB,EAAQ,IAAI,CAAC,EAAE,EAAE;wBACpC,yBAAyB,EAAE,IAAI,CAAC,EAAE,EAAE;wBACpC,aAAa,EAAc,IAAI,CAAC,EAAE,EAAE;wBACpC,oBAAoB,EAAO,IAAI,CAAC,EAAE,EAAE;wBACpC,QAAQ,EAAmB,IAAI,CAAC,EAAE,EAAE,CAAC,kBAAkB,CAAC,CAAC,GAAW,EAAE,EAAE,CAAC,GAAG,CAAC;wBAC7E,UAAU,EAAiB,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC;qBACtC;iBACF;gBACD,MAAM,EAAE;oBACN,IAAI,EAAG,UAAU;oBACjB,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;iBAClB;gBACD,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE;aAChC;SACF,CAAC,CAAC;QACH,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,EAAE,CAAC;QAE1B,OAAO,CAAC,EAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QAE3C,MAAM,CAAE,OAAO,CAAC,EAAU,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { mount } from '@vue/test-utils';\nimport Banzai from '@shell/edit/logging.banzaicloud.io.output/index.vue';\n\ndescribe('view: logging.banzaicloud.io.output', () => {\n  it.each([\n    ['http://localhost:3100', []],\n    ['not a proper URL', ['logging.loki.urlInvalid']],\n  ])('should validate Loki URL on save', (url, expectation) => {\n    const wrapper = mount(Banzai, {\n      data:      () => ({ selectedProvider: 'loki' }),\n      propsData: {\n        value: {\n          save: jest.fn(),\n          spec: { loki: { url } }\n        }\n      },\n      mocks: {\n        $store: {\n          getters: {\n            currentStore:              () => 'current_store',\n            'management/schemaFor':    jest.fn(),\n            'current_store/all':       jest.fn(),\n            'current_store/schemaFor': jest.fn(),\n            'cluster/all':             jest.fn(),\n            'type-map/isSpoofed':      jest.fn(),\n            'i18n/t':                  jest.fn().mockImplementation((key: string) => key),\n            namespaces:                () => ({}),\n          }\n        },\n        $route: {\n          name:  'whatever',\n          query: { AS: '' }\n        },\n        $router: { replace: jest.fn() },\n      }\n    });\n    const fakeDone = jest.fn();\n\n    (wrapper.vm as any).saveSettings(fakeDone);\n\n    expect((wrapper.vm as any).errors).toStrictEqual(expectation);\n  });\n});\n"]}]}