{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/services/api/vnet.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/services/api/vnet.ts","mtime":1716430386795},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgSU5TVEFOQ0VfVjIgfSBmcm9tICIuLi8uLi9jb25maWcvYXhpb3MiOwpleHBvcnQgY29uc3Qgdk5ldFNlcnZpY2UgPSB7CiAgICBnZXROZXR3b3JrczogYXN5bmMgKCkgPT4gewogICAgICAgIHJldHVybiBhd2FpdCBJTlNUQU5DRV9WMi5nZXQoYC9hcGlzL3BhY2tldGxpZnRlci5kZXYvdjEvdm5ldHNgKTsKICAgIH0sCiAgICBnZXROZXR3b3JrVHJhbnNsYXRpb25zOiBhc3luYyAoKSA9PiB7CiAgICAgICAgcmV0dXJuIGF3YWl0IElOU1RBTkNFX1YyLmdldChgL2FwaXMvcGFja2V0bGlmdGVyLmRldi92MS9hZGRyZXNzdHJhbnNsYXRpb25zYCk7CiAgICB9LAogICAgY3JlYXRlTmV0d29yazogYXN5bmMgKGRhdGEpID0+IHsKICAgICAgICByZXR1cm4gYXdhaXQgSU5TVEFOQ0VfVjIucG9zdChgL2FwaXMvcGFja2V0bGlmdGVyLmRldi92MS9uYW1lc3BhY2VzL2RlZmF1bHQvdm5ldHNgLCBkYXRhKTsKICAgIH0sCiAgICBkZWxldGVOZXR3b3JrOiBhc3luYyAobmV0d29ya05hbWUpID0+IHsKICAgICAgICByZXR1cm4gYXdhaXQgSU5TVEFOQ0VfVjIuZGVsZXRlKGAvYXBpcy9wYWNrZXRsaWZ0ZXIuZGV2L3YxL25hbWVzcGFjZXMvZGVmYXVsdC92bmV0cy8ke25ldHdvcmtOYW1lfWApOwogICAgfSwKICAgIGdldFN1Ym5ldEJ5TmFtZTogYXN5bmMgKG5ldHdvcmtOYW1lKSA9PiB7CiAgICAgICAgcmV0dXJuIGF3YWl0IElOU1RBTkNFX1YyLmdldChgYXBpcy9wYWNrZXRsaWZ0ZXIuZGV2L3YxL25hbWVzcGFjZXMvZGVmYXVsdC92bmV0cy8ke25ldHdvcmtOYW1lfWApOwogICAgfSwKICAgIHBhdGNoU3VibmV0OiBhc3luYyAobmV0d29ya05hbWUsIHZOZXREYXRhKSA9PiB7CiAgICAgICAgcmV0dXJuIGF3YWl0IElOU1RBTkNFX1YyLnBhdGNoKGBhcGlzL3BhY2tldGxpZnRlci5kZXYvdjEvbmFtZXNwYWNlcy9kZWZhdWx0L3ZuZXRzLyR7bmV0d29ya05hbWV9YCwgdk5ldERhdGEsIHsgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL21lcmdlLXBhdGNoK2pzb24nIH0gfSk7CiAgICB9LAp9Owo="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/services/api/vnet.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/services/api/vnet.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAEjD,MAAM,CAAC,MAAM,WAAW,GAAG;IACvB,WAAW,EAAE,KAAK,IAAI,EAAE;QACpB,OAAO,MAAM,WAAW,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAA;IACnE,CAAC;IAED,sBAAsB,EAAE,KAAK,IAAI,EAAE;QAC/B,OAAO,MAAM,WAAW,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAA;IACjF,CAAC;IAED,aAAa,EAAE,KAAK,EAAE,IAAS,EAAE,EAAE;QAC/B,OAAO,MAAM,WAAW,CAAC,IAAI,CAAC,oDAAoD,EAAE,IAAI,CAAC,CAAC;IAC9F,CAAC;IAED,aAAa,EAAE,KAAK,EAAE,WAAmB,EAAE,EAAE;QACzC,OAAO,MAAM,WAAW,CAAC,MAAM,CAAC,sDAAsD,WAAW,EAAE,CAAC,CAAA;IACxG,CAAC;IAED,eAAe,EAAE,KAAK,EAAE,WAAmB,EAAE,EAAE;QAC3C,OAAO,MAAM,WAAW,CAAC,GAAG,CACxB,qDAAqD,WAAW,EAAE,CACrE,CAAA;IACL,CAAC;IAED,WAAW,EAAE,KAAK,EAAE,WAAmB,EAAE,QAAa,EAAE,EAAE;QACtD,OAAO,MAAM,WAAW,CAAC,KAAK,CAC1B,qDAAqD,WAAW,EAAE,EAClE,QAAQ,EACR,EAAE,OAAO,EAAE,EAAE,cAAc,EAAE,8BAA8B,EAAE,EAAE,CAClE,CAAA;IACL,CAAC;CACJ,CAAA","sourcesContent":["import { INSTANCE_V2 } from \"../../config/axios\";\n\nexport const vNetService = {\n    getNetworks: async () => {\n        return await INSTANCE_V2.get(`/apis/packetlifter.dev/v1/vnets`)\n    },\n\n    getNetworkTranslations: async () => {\n        return await INSTANCE_V2.get(`/apis/packetlifter.dev/v1/addresstranslations`)\n    },\n\n    createNetwork: async (data: any) => {\n        return await INSTANCE_V2.post(`/apis/packetlifter.dev/v1/namespaces/default/vnets`, data);\n    },\n\n    deleteNetwork: async (networkName: string) => {\n        return await INSTANCE_V2.delete(`/apis/packetlifter.dev/v1/namespaces/default/vnets/${networkName}`)\n    },\n\n    getSubnetByName: async (networkName: string) => {\n        return await INSTANCE_V2.get(\n            `apis/packetlifter.dev/v1/namespaces/default/vnets/${networkName}`\n        )\n    },\n    \n    patchSubnet: async (networkName: string, vNetData: any) => {\n        return await INSTANCE_V2.patch(\n            `apis/packetlifter.dev/v1/namespaces/default/vnets/${networkName}`,\n            vNetData,\n            { headers: { 'Content-Type': 'application/merge-patch+json' } }\n        )\n    },\n}"]}]}