{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types/__tests__/email.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types/__tests__/email.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgRW1haWwgZnJvbSAnQHNoZWxsL2VkaXQvbW9uaXRvcmluZy5jb3Jlb3MuY29tLnJlY2VpdmVyL3R5cGVzL2VtYWlsLnZ1ZSc7CmRlc2NyaWJlKCdwYWdlOiBSb3V0ZXMgYW5kIFJlY2VpdmVycycsICgpID0+IHsKICAgIGl0KCdzaG91bGQgaGF2ZSBob3N0IGZpZWxkIHdpdGggYSB2YWxpZCBpbnRlZ2VyIHZhbHVlIHVuZGVyIEVtYWlsIGZvcm0nLCAoKSA9PiB7CiAgICAgICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KEVtYWlsLCB7CiAgICAgICAgICAgIHByb3BzRGF0YTogewogICAgICAgICAgICAgICAgbW9kZTogJ2NyZWF0ZScsCiAgICAgICAgICAgICAgICB2YWx1ZToge30KICAgICAgICAgICAgfSwKICAgICAgICAgICAgbW9ja3M6IHsKICAgICAgICAgICAgICAgIHQ6ICh0ZXh0KSA9PiB0ZXh0LAogICAgICAgICAgICAgICAgJHN0b3JlOiB7CiAgICAgICAgICAgICAgICAgICAgZ2V0dGVyczogewogICAgICAgICAgICAgICAgICAgICAgICAnaTE4bi90JzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICAnaTE4bi9leGlzdHMnOiBqZXN0LmZuKCkKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICAgICAgY29uc3QgaG9zdCA9IHdyYXBwZXIuZmluZCgnW2RhdGEtdGVzdGlkPSJpbnB1dC1lbWFpbC1ob3N0Il0nKTsKICAgICAgICBob3N0LnNldFZhbHVlKCcxMC4yLjMwMC4zJyk7CiAgICAgICAgZXhwZWN0KGhvc3QuZXhpc3RzKCkpLnRvQmUodHJ1ZSk7CiAgICAgICAgZXhwZWN0KGhvc3QuZWxlbWVudC52YWx1ZSkudG9TdHJpY3RFcXVhbCgnMTAuMi4zMDAuMycpOwogICAgfSk7CiAgICBpdCgnc2hvdWxkIGhhdmUgcG9ydCBmaWVsZCB3aXRoIGEgdmFsaWQgaW50ZWdlciB2YWx1ZSB1bmRlciBFbWFpbCBmb3JtJywgKCkgPT4gewogICAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChFbWFpbCwgewogICAgICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgICAgICAgIG1vZGU6ICdjcmVhdGUnLAogICAgICAgICAgICAgICAgdmFsdWU6IHt9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICB0OiAodGV4dCkgPT4gdGV4dCwKICAgICAgICAgICAgICAgICRzdG9yZTogewogICAgICAgICAgICAgICAgICAgIGdldHRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vZXhpc3RzJzogamVzdC5mbigpCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgIH0pOwogICAgICAgIGNvbnN0IHBvcnQgPSB3cmFwcGVyLmZpbmQoJ1tkYXRhLXRlc3RpZD0iaW5wdXQtZW1haWwtcG9ydCJdJyk7CiAgICAgICAgcG9ydC5zZXRWYWx1ZSgnODA4MCcpOwogICAgICAgIGV4cGVjdChwb3J0LmV4aXN0cygpKS50b0JlKHRydWUpOwogICAgICAgIGV4cGVjdChwb3J0LmVsZW1lbnQudmFsdWUpLnRvU3RyaWN0RXF1YWwoJzgwODAnKTsKICAgIH0pOwp9KTsK"},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types/__tests__/email.test.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/monitoring.coreos.com.receiver/types/__tests__/email.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,KAAK,MAAM,4DAA4D,CAAC;AAE/E,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;YAC3B,SAAS,EAAE;gBACT,IAAI,EAAG,QAAQ;gBACf,KAAK,EAAE,EAAE;aACV;YACD,KAAK,EAAE;gBACL,CAAC,EAAO,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI;gBAC9B,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,QAAQ,EAAO,IAAI,CAAC,EAAE,EAAE;wBACxB,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE;qBACzB;iBACF;aACF;SACF,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAE9D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAE5B,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC,CAAC,CAAC;IACH,EAAE,CAAC,oEAAoE,EAAE,GAAG,EAAE;QAC5E,MAAM,OAAO,GAAG,KAAK,CAAC,KAAK,EAAE;YAC3B,SAAS,EAAE;gBACT,IAAI,EAAG,QAAQ;gBACf,KAAK,EAAE,EAAE;aACV;YACD,KAAK,EAAE;gBACL,CAAC,EAAO,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI;gBAC9B,MAAM,EAAE;oBACN,OAAO,EAAE;wBACP,QAAQ,EAAO,IAAI,CAAC,EAAE,EAAE;wBACxB,aAAa,EAAE,IAAI,CAAC,EAAE,EAAE;qBACzB;iBACF;aACF;SACF,CAAC,CAAC;QAEH,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;QAE9D,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEtB,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACnD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { mount } from '@vue/test-utils';\nimport Email from '@shell/edit/monitoring.coreos.com.receiver/types/email.vue';\n\ndescribe('page: Routes and Receivers', () => {\n  it('should have host field with a valid integer value under Email form', () => {\n    const wrapper = mount(Email, {\n      propsData: {\n        mode:  'create',\n        value: {}\n      },\n      mocks: {\n        t:      (text: string) => text, // Mock i18n global function used as alternative to the getter\n        $store: {\n          getters: {\n            'i18n/t':      jest.fn(),\n            'i18n/exists': jest.fn()\n          }\n        }\n      },\n    });\n\n    const host = wrapper.find('[data-testid=\"input-email-host\"]');\n\n    host.setValue('10.2.300.3');\n\n    expect(host.exists()).toBe(true);\n    expect(host.element.value).toStrictEqual('10.2.300.3');\n  });\n  it('should have port field with a valid integer value under Email form', () => {\n    const wrapper = mount(Email, {\n      propsData: {\n        mode:  'create',\n        value: {}\n      },\n      mocks: {\n        t:      (text: string) => text, // Mock i18n global function used as alternative to the getter\n        $store: {\n          getters: {\n            'i18n/t':      jest.fn(),\n            'i18n/exists': jest.fn()\n          }\n        }\n      },\n    });\n\n    const port = wrapper.find('[data-testid=\"input-email-port\"]');\n\n    port.setValue('8080');\n\n    expect(port.exists()).toBe(true);\n    expect(port.element.value).toStrictEqual('8080');\n  });\n});\n"]}]}