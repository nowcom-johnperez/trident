{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/Basics.tests.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/Basics.tests.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/Basics.tests.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/Basics.tests.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount } from '@vue/test-utils';\nimport Basics from '@shell/edit/provisioning.cattle.io.cluster/Basics';\n\nconst defaultStubs = {\n  Banner:        true,\n  LabeledSelect: true,\n  YamlEditor:    true,\n  Checkbox:      true\n};\n\nconst defaultComputed = {\n  showk8s21LegacyWarning() {\n    return false;\n  },\n  profileOptions() {\n    return [{ label: 'anything', value: 'anything' }];\n  }\n};\n\nconst mockAgentArgs = { 'cloud-provider-name': { options: [], profile: { options: [{ anything: 'yes' }] } } };\nconst mockServerArgs = { disable: {}, cni: { options: [] } };\n\nconst rke2Versions =\n  [\n    {\n      id: 'v1.25.0+rke2r1', value: 'v1.25.0+rke2r1', serverArgs: mockServerArgs, agentArgs: mockAgentArgs, charts: {}\n    },\n    {\n      id: 'v1.24.0+rke2r1', value: 'v1.24.0+rke2r1', serverArgs: mockServerArgs, agentArgs: mockAgentArgs, charts: {}\n    },\n    {\n      id: 'v1.23.0+rke2r1', value: 'v1.23.0+rke2r1', serverArgs: mockServerArgs, agentArgs: mockAgentArgs, charts: {}\n    }\n  ];\nconst k3sVersions = [\n  {\n    id: 'v1.25.0+k3s1', value: 'v1.25.0+k3s1', serverArgs: mockServerArgs, agentArgs: mockAgentArgs, charts: {}\n  },\n  {\n    id: 'v1.24.0+k3s1', value: 'v1.24.0+k3s1', serverArgs: mockServerArgs, agentArgs: mockAgentArgs, charts: {}\n  },\n  {\n    id: 'v1.23.0+k3s1', value: 'v1.23.0+k3s1', serverArgs: mockServerArgs, agentArgs: mockAgentArgs, charts: {}\n  }\n];\nconst mockVersionOptions = [...rke2Versions, ...k3sVersions];\n\nconst defaultGetters = {\n  currentStore:                     () => 'current_store',\n  'management/schemaFor':           jest.fn(),\n  'current_store/all':              jest.fn(),\n  'i18n/t':                         jest.fn(),\n  'i18n/withFallback':              jest.fn(),\n  'plugins/cloudProviderForDriver': jest.fn()\n};\n\nconst defaultMocks = {\n  $route: {\n    name:  'anything',\n    query: { AS: 'yaml' },\n  },\n};\n\nconst defaultSpec = {\n  rkeConfig:   { etcd: { disableSnapshots: false }, machineGlobalConfig: { cni: 'calico' } },\n  chartValues: {},\n};\n\ndescribe('component: Basics', () => {\n  /**\n   * DISCLAIMER ***************************************************************************************\n   * Logs are prevented to avoid polluting the test output.\n   ****************************************************************************************************\n  */\n  // eslint-disable-next-line jest/no-hooks\n  beforeEach(() => {\n    jest.spyOn(console, 'log').mockImplementation(() => { });\n  });\n\n  it.each(mockVersionOptions)('should display PSA option', (k8s) => {\n    const label = 'whatever';\n    const wrapper = mount(Basics, {\n      propsData: {\n        mode:  'create',\n        value: {\n          spec: {\n            ...defaultSpec,\n            defaultPodSecurityAdmissionConfigurationTemplateName: label,\n            kubernetesVersion:                                    k8s.value\n          },\n          agentConfig: { 'cloud-provider-name': '' },\n        },\n        provider:                    'whatever',\n        userChartValues:             {},\n        cisOverride:                 false,\n        cisPsaChangeBanner:          true,\n        allPsas:                     [],\n        needsPsp:                    false,\n        selectedVersion:             k8s,\n        versionOptions:              mockVersionOptions,\n        isHarvesterDriver:           false,\n        isHarvesterIncompatible:     false,\n        showDeprecatedPatchVersions: false,\n        clusterIsAlreadyCreated:     false,\n        isElementalCluster:          false,\n        hasPsaTemplates:             false,\n        isK3s:                       true,\n        haveArgInfo:                 false,\n        showCni:                     true,\n        showCloudProvider:           true,\n        unsupportedCloudProvider:    false,\n        cloudProviderOptions:        [{ label: 'Default - RKE2 Embedded', value: '' }],\n      },\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    const select = wrapper.find('[data-testid=\"rke2-custom-edit-psa\"]');\n\n    expect((select.vm as unknown as any).options[0].label).toBe(`${ label } (Current)`);\n  });\n\n  it.each([\n    ['v1.25.0+rke2r1', 'none'],\n    ['v1.24.0+rke2r1', 'default'],\n    ['v1.23.0+rke2r1', 'default'],\n    ['v1.25.0+k3s1', 'none'],\n    ['v1.24.0+k3s1', 'default'],\n    ['v1.23.0+k3s1', 'default'],\n  ])('should display for version %p PSA option label %p', (k8s, partialLabel) => {\n    const label = `cluster.rke2.defaultPodSecurityAdmissionConfigurationTemplateName.option.${ partialLabel }`;\n    const wrapper = mount(Basics, {\n      propsData: {\n        mode:  'create',\n        value: {\n          spec: {\n            ...defaultSpec,\n            defaultPodSecurityAdmissionConfigurationTemplateName: label,\n            kubernetesVersion:                                    k8s\n          },\n          agentConfig: { 'cloud-provider-name': '' },\n        },\n        provider:                    'whatever',\n        userChartValues:             {},\n        cisOverride:                 false,\n        cisPsaChangeBanner:          true,\n        allPsas:                     [],\n        needsPsp:                    false,\n        selectedVersion:             mockVersionOptions[0],\n        versionOptions:              mockVersionOptions,\n        isHarvesterDriver:           false,\n        isHarvesterIncompatible:     false,\n        showDeprecatedPatchVersions: false,\n        clusterIsAlreadyCreated:     false,\n        isElementalCluster:          false,\n        hasPsaTemplates:             false,\n        isK3s:                       true,\n        haveArgInfo:                 false,\n        showCni:                     true,\n        showCloudProvider:           true,\n        unsupportedCloudProvider:    false,\n        cloudProviderOptions:        [{ label: 'Default - RKE2 Embedded', value: '' }],\n      },\n      computed: defaultComputed,\n      mocks:    {\n        ...defaultMocks,\n        $store: { getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    const select = wrapper.find('[data-testid=\"rke2-custom-edit-psa\"]');\n\n    expect((select.vm as unknown as any).options[0].label).toStrictEqual(`${ label } (Current)`);\n  });\n\n  it.each([\n    ['anything', false, true],\n    ['', false, false],\n    ['', true, false],\n  ])('given CIS value as %p and its override as %p, it should set PSA dropdown as disabled %p', (cis, override, disabled) => {\n    const label = 'whatever';\n    const k8s = 'v1.25.0+rke2r1';\n    const wrapper = mount(Basics, {\n      propsData: {\n        mode:  'create',\n        value: {\n          agentConfig: { profile: cis, 'cloud-provider-name': '' },\n          spec:        {\n            ...defaultSpec,\n            defaultPodSecurityAdmissionConfigurationTemplateName: label,\n            kubernetesVersion:                                    k8s\n          }\n        },\n        provider:           'custom',\n        userChartValues:    {},\n        cisPsaChangeBanner: true,\n        allPsas:            [],\n        needsPsp:           false,\n        cisOverride:        override,\n        selectedVersion:    mockVersionOptions[0],\n        versionOptions:     [{\n          value:     k8s,\n          agentArgs: { profile: { options: [cis] } },\n          charts:    {},\n          profile:   { options: [cis] }\n        }],\n        isHarvesterDriver:           false,\n        isHarvesterIncompatible:     false,\n        showDeprecatedPatchVersions: false,\n        clusterIsAlreadyCreated:     false,\n        isElementalCluster:          false,\n        hasPsaTemplates:             true,\n        isK3s:                       true,\n        haveArgInfo:                 false,\n        showCni:                     true,\n        showCloudProvider:           true,\n        unsupportedCloudProvider:    false,\n        cloudProviderOptions:        [{ label: 'Default - RKE2 Embedded', value: '' }],\n      },\n      computed: { ...defaultComputed },\n      mocks:    {\n        ...defaultMocks,\n        $store: { getters: defaultGetters },\n      },\n      stubs: defaultStubs\n    });\n\n    const select = wrapper.find('[data-testid=\"rke2-custom-edit-psa\"]');\n\n    expect((select.vm as unknown as any).disabled).toBe(disabled);\n  });\n});\n"]}]}