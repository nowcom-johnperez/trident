{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/uiplugins.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/uiplugins.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlcyAqLwovLyBXZSBhbHJlYWR5IGhhdmUgYSAncGx1Z2lucycgc3RvcmUsIHdoaWNoIGlzIGZvciBjbHVzdGVyIGRyaXZlcnMKLy8gVGhpcyBzdG9yZSBpcyBmb3IgdGhlIGluc3RzYWxsIFVJIHBsdWdpbnMKZXhwb3J0IGNvbnN0IHN0YXRlID0gZnVuY3Rpb24gKCkgewogICAgcmV0dXJuIHsKICAgICAgICBwbHVnaW5zOiBbXSwKICAgICAgICBlcnJvcnM6IHt9LAogICAgfTsKfTsKZXhwb3J0IGNvbnN0IGdldHRlcnMgPSB7CiAgICBwbHVnaW5zOiAoc3RhdGUpID0+IHsKICAgICAgICByZXR1cm4gc3RhdGUucGx1Z2luczsKICAgIH0sCiAgICBlcnJvcnM6IChzdGF0ZSkgPT4gewogICAgICAgIHJldHVybiBzdGF0ZS5lcnJvcnM7CiAgICB9LAp9OwpleHBvcnQgY29uc3QgbXV0YXRpb25zID0gewogICAgc2V0RXJyb3Ioc3RhdGUsIGVycm9yKSB7CiAgICAgICAgc3RhdGUuZXJyb3JzW2Vycm9yLm5hbWVdID0gZXJyb3IuZXJyb3I7CiAgICB9LAogICAgYWRkUGx1Z2luKHN0YXRlLCBwbHVnaW4pIHsKICAgICAgICAvLyBUT0RPOiBEdXBsaWNhdGVzPwogICAgICAgIHN0YXRlLnBsdWdpbnMucHVzaChwbHVnaW4pOwogICAgfSwKICAgIHJlbW92ZVBsdWdpbihzdGF0ZSwgcGx1Z2luTmFtZSkgewogICAgICAgIGNvbnN0IGluZGV4ID0gc3RhdGUucGx1Z2lucy5maW5kSW5kZXgoKHApID0+IHAubmFtZSA9PT0gcGx1Z2luTmFtZSk7CiAgICAgICAgaWYgKGluZGV4ICE9PSAtMSkgewogICAgICAgICAgICBzdGF0ZS5wbHVnaW5zLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgfQogICAgfSwKfTsKZXhwb3J0IGNvbnN0IGFjdGlvbnMgPSB7CiAgICBzZXRFcnJvcih7IGNvbW1pdCB9LCBlcnJvcikgewogICAgICAgIGNvbW1pdCgnc2V0RXJyb3InLCBlcnJvcik7CiAgICB9LAogICAgYWRkUGx1Z2luKHsgY29tbWl0IH0sIHBsdWdpbikgewogICAgICAgIGNvbW1pdCgnYWRkUGx1Z2luJywgcGx1Z2luKTsKICAgIH0sCiAgICByZW1vdmVQbHVnaW4oeyBjb21taXQgfSwgcGx1Z2luTmFtZSkgewogICAgICAgIGNvbW1pdCgncmVtb3ZlUGx1Z2luJywgcGx1Z2luTmFtZSk7CiAgICB9Cn07Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/uiplugins.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/uiplugins.ts"],"names":[],"mappings":"AAAA,sEAAsE;AACtE,kEAAkE;AAClE,4CAA4C;AAgB5C,MAAM,CAAC,MAAM,KAAK,GAAG;IACnB,OAAO;QACL,OAAO,EAAE,EAAE;QACX,MAAM,EAAG,EAAE;KACZ,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,OAAO,EAAE,CAAC,KAAU,EAAE,EAAE;QACtB,OAAO,KAAK,CAAC,OAAO,CAAC;IACvB,CAAC;IAED,MAAM,EAAE,CAAC,KAAU,EAAE,EAAE;QACrB,OAAO,KAAK,CAAC,MAAM,CAAC;IACtB,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG;IACvB,QAAQ,CAAC,KAAoB,EAAE,KAAgB;QAC7C,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,SAAS,CAAC,KAAoB,EAAE,MAAc;QAC5C,oBAAoB;QACpB,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7B,CAAC;IAED,YAAY,CAAC,KAAoB,EAAE,UAAkB;QACnD,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC;QAEpE,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;SAChC;IACH,CAAC;CACF,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG;IACrB,QAAQ,CAAE,EAAE,MAAM,EAAO,EAAE,KAAgB;QACzC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,SAAS,CAAC,EAAE,MAAM,EAAO,EAAE,MAAc;QACvC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAED,YAAY,CAAC,EAAE,MAAM,EAAO,EAAE,UAAkB;QAC9C,MAAM,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC;IACrC,CAAC;CACF,CAAC","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n// We already have a 'plugins' store, which is for cluster drivers\n// This store is for the instsall UI plugins\n\n// import { addObject, removeObject } from '@shell/utils/array';\n\nimport { Plugin } from '@shell/core/plugin';\n\ninterface UIPluginState {\n  plugins: Plugin[],\n  errors: any,\n}\n\ninterface LoadError {\n  name: string,\n  error: boolean,\n}\n\nexport const state = function(): UIPluginState {\n  return {\n    plugins: [],\n    errors:  {},\n  };\n};\n\nexport const getters = {\n  plugins: (state: any) => {\n    return state.plugins;\n  },\n\n  errors: (state: any) => {\n    return state.errors;\n  },\n};\n\nexport const mutations = {\n  setError(state: UIPluginState, error: LoadError) {\n    state.errors[error.name] = error.error;\n  },\n\n  addPlugin(state: UIPluginState, plugin: Plugin) {\n    // TODO: Duplicates?\n    state.plugins.push(plugin);\n  },\n\n  removePlugin(state: UIPluginState, pluginName: string) {\n    const index = state.plugins.findIndex((p) => p.name === pluginName);\n\n    if (index !== -1) {\n      state.plugins.splice(index, 1);\n    }\n  },\n};\n\nexport const actions = {\n  setError( { commit }: any, error: LoadError ) {\n    commit('setError', error);\n  },\n\n  addPlugin({ commit }: any, plugin: Plugin) {\n    commit('addPlugin', plugin);\n  },\n\n  removePlugin({ commit }: any, pluginName: string) {\n    commit('removePlugin', pluginName);\n  }\n};\n"]}]}