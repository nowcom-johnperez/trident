{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts","mtime":1716430386795},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdk5ldFNlcnZpY2UgfSBmcm9tICcuLi9zZXJ2aWNlcy9hcGkvdm5ldCc7CmltcG9ydCB7IHN0cmlwU3RyaW5ncywgZmluZFRyYW5zbGF0ZWRBZGRyZXNzIH0gZnJvbSAnLi4vc2VydmljZXMvaGVscGVycy91dGlscyc7CmltcG9ydCB7IFBST0RVQ1RfTkFNRSB9IGZyb20gJy4uL2NvbmZpZy9jb25zdGFudHMnOwpjb25zdCB2bmV0RXh0ZW5zaW9uRmFjdG9yeSA9ICgpID0+IHsKICAgIHJldHVybiB7CiAgICAgICAgc3RhdGUoKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICBpdGVtczogW10KICAgICAgICAgICAgfTsKICAgICAgICB9LAogICAgICAgIGdldHRlcnM6IHsKICAgICAgICAgICAgaXRlbXM6IChzdGF0ZSkgPT4gc3RhdGUuaXRlbXMsCiAgICAgICAgfSwKICAgICAgICBtdXRhdGlvbnM6IHsKICAgICAgICAgICAgc2V0SXRlbXMoc3RhdGUsIGl0ZW1zKSB7CiAgICAgICAgICAgICAgICBzdGF0ZS5pdGVtcyA9IGl0ZW1zOwogICAgICAgICAgICB9LAogICAgICAgICAgICBhZGRJdGVtKHN0YXRlLCBpdGVtKSB7CiAgICAgICAgICAgICAgICBzdGF0ZS5pdGVtcy5wdXNoKGl0ZW0pOwogICAgICAgICAgICB9LAogICAgICAgICAgICB1cGRhdGVJdGVtKCkgewogICAgICAgICAgICAgICAgLy8gZG8gbm90aGluZwogICAgICAgICAgICB9LAogICAgICAgICAgICByZW1vdmVJdGVtKHN0YXRlLCBpdGVtTmFtZSkgewogICAgICAgICAgICAgICAgc3RhdGUuaXRlbXMgPSBzdGF0ZS5pdGVtcy5maWx0ZXIoaXRlbSA9PiBpdGVtLm5hbWUgIT09IGl0ZW1OYW1lKTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgYWN0aW9uczogewogICAgICAgICAgICBhc3luYyBmaW5kQWxsKHsgY29tbWl0IH0pIHsKICAgICAgICAgICAgICAgIGNvbnN0IFtuZXR3b3JrcywgbmV0d29ya1RyYW5zbGF0aW9uc10gPSBhd2FpdCBQcm9taXNlLmFsbChbCiAgICAgICAgICAgICAgICAgICAgdk5ldFNlcnZpY2UuZ2V0TmV0d29ya3MoKSwKICAgICAgICAgICAgICAgICAgICB2TmV0U2VydmljZS5nZXROZXR3b3JrVHJhbnNsYXRpb25zKCkKICAgICAgICAgICAgICAgIF0pOwogICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkRGF0YSA9IG5ldHdvcmtzLmRhdGEuaXRlbXMubWFwKChpdGVtKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgdmFyIF9hOwogICAgICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zbGF0ZWRBZGRyZXNzRGF0YSA9IG5ldHdvcmtUcmFuc2xhdGlvbnMuZGF0YS5pdGVtczsKICAgICAgICAgICAgICAgICAgICBjb25zdCBtYWluVHJhbnNsYXRlZEFkZHJlc3MgPSBmaW5kVHJhbnNsYXRlZEFkZHJlc3ModHJhbnNsYXRlZEFkZHJlc3NEYXRhLCBpdGVtLnNwZWMubmFtZSk7CiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc3VibmV0cyA9IGl0ZW0uc3BlYy5zdWJuZXRzLm1hcCgoc3VibmV0KSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBfYTsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IHN1Ym5ldC5hZGRyZXNzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0dGVkQWRkcmVzczogYCR7c3VibmV0LmFkZHJlc3N9LyR7c3VibmV0LnByZWZpeExlbmd0aH1gLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogc3RyaXBTdHJpbmdzKHN1Ym5ldC5uYW1lKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvbmdOYW1lOiBzdWJuZXQubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZWZpeF9sZW46IHN1Ym5ldC5wcmVmaXhMZW5ndGgsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2xhdGVkQWRkcmVzczogKF9hID0gc3VibmV0LmFkZHJlc3NUcmFuc2xhdGlvbikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLm91dHNpZGUKICAgICAgICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBpdGVtLnNwZWMubmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgc3VibmV0cywKICAgICAgICAgICAgICAgICAgICAgICAgc3VibmV0TGVuZ3RoOiBzdWJuZXRzLmxlbmd0aCwKICAgICAgICAgICAgICAgICAgICAgICAgY2x1c3RlcjogJ2xvY2FsJywKICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNsYXRlZEFkZHJlc3M6IChfYSA9IG1haW5UcmFuc2xhdGVkQWRkcmVzcyA9PT0gbnVsbCB8fCBtYWluVHJhbnNsYXRlZEFkZHJlc3MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1haW5UcmFuc2xhdGVkQWRkcmVzcy5zcGVjKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eub3V0c2lkZQogICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0SXRlbXMnLCBwYXJzZWREYXRhKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgYXN5bmMgY3JlYXRlKHsgY29tbWl0IH0sIGRhdGEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCB2TmV0U2VydmljZS5jcmVhdGVOZXR3b3JrKGRhdGEpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBhc3luYyBkZWxldGVOZXR3b3JrKHsgY29tbWl0IH0sIGl0ZW1OYW1lKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdk5ldFNlcnZpY2UuZGVsZXRlTmV0d29yayhpdGVtTmFtZSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGFzeW5jIGRlbGV0ZVN1Ym5ldCh7IGNvbW1pdCB9LCBkYXRhKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgdk5ldFNlcnZpY2UucGF0Y2hTdWJuZXQoZGF0YS52bmV0TmFtZSwgZGF0YS52bmV0RGF0YSk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHJlc2V0KHsgY29tbWl0IH0pIHsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0SXRlbXMnLCBbXSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Owp9Owpjb25zdCBjb25maWcgPSB7IG5hbWVzcGFjZTogUFJPRFVDVF9OQU1FLCBpc0NsdXN0ZXJTdG9yZTogdHJ1ZSB9OwpleHBvcnQgZGVmYXVsdCB7CiAgICBzcGVjaWZpY3M6IHZuZXRFeHRlbnNpb25GYWN0b3J5KCksCiAgICBjb25maWcsCn07Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/store/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { CoreStoreConfig, CoreStoreSpecifics } from '@shell/core/types';\nimport { vNetService } from '../services/api/vnet'\nimport { stripStrings, findTranslatedAddress } from '../services/helpers/utils'\nimport { PRODUCT_NAME } from '../config/constants';\ninterface Subnets {\n    address: string;\n    formattedAddress: string;\n    name: string;\n    longName: string;\n    prefix_len: number;\n    translatedAddress: string;\n}\n\ninterface Vnets {\n    name: string;\n    subnets: Subnets[];\n    subnetLength: number;\n    cluster: string;\n    translatedAddress: string;\n}\n\ninterface vnetVariables {\n    items: Vnets[]\n}\n\nconst vnetExtensionFactory = (): CoreStoreSpecifics => {\n    return {\n        state() {\n            return {\n                items: []\n            }\n        },\n        getters: {\n            items: (state: vnetVariables) => state.items,\n        },\n        mutations: {\n            setItems(state: vnetVariables, items: Vnets[]) {\n                state.items = items\n            },\n            addItem(state: vnetVariables, item: Vnets) {\n                state.items.push(item)\n            },\n            updateItem() {\n                // do nothing\n            },\n            removeItem(state: vnetVariables, itemName: string) {\n                state.items = state.items.filter(item => item.name !== itemName)\n            }\n        },\n        actions: {\n            async findAll({ commit }: any) {\n                const [networks, networkTranslations] = await Promise.all([\n                    vNetService.getNetworks(),\n                    vNetService.getNetworkTranslations()\n                ]);\n        \n                const parsedData = networks.data.items.map((item: any) => {\n        \n                  const translatedAddressData = networkTranslations.data.items;\n                  const mainTranslatedAddress = findTranslatedAddress(translatedAddressData, item.spec.name);\n        \n                  const subnets = item.spec.subnets.map((subnet: any) => {\n                    return {\n                      address:    subnet.address,\n                      formattedAddress:    `${subnet.address}/${subnet.prefixLength}`,\n                      name:       stripStrings(subnet.name),\n                      longName:   subnet.name,\n                      prefix_len: subnet.prefixLength,\n                      translatedAddress: subnet.addressTranslation?.outside\n                    }\n                  });\n        \n                  return {\n                    name:    item.spec.name,\n                    subnets,\n                    subnetLength: subnets.length,\n                    cluster: 'local',\n                    translatedAddress: mainTranslatedAddress?.spec?.outside\n                  }\n                });\n        \n                commit('setItems', parsedData)\n            },\n            async create({ commit }: any, data: any) {\n                return await vNetService.createNetwork(data);\n            },\n            async deleteNetwork({ commit}: any, itemName: string) {\n                return await vNetService.deleteNetwork(itemName);\n            },\n            async deleteSubnet({ commit }: any, data: { vnetName: string, vnetData: any}) {\n                return await vNetService.patchSubnet(data.vnetName, data.vnetData);\n            },\n            reset({ commit }: any) {\n                commit('setItems', [])\n            }\n        }\n    }\n}\n\nconst config: CoreStoreConfig = { namespace: PRODUCT_NAME, isClusterStore: true };\n\nexport default {\n    specifics: vnetExtensionFactory(),\n    config,\n};"]}]}