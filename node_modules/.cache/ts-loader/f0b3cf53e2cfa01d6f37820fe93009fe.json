{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/header-warnings.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/header-warnings.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0UGVyZm9ybWFuY2VTZXR0aW5nIH0gZnJvbSAnQHNoZWxsL3V0aWxzL3NldHRpbmdzJzsKLyoqCiAqIENhY2hlIHRoZSBrdWJlIGFwaSB3YXJuaW5nIGhlYWRlciBzZXR0aW5ncyB0aGF0IHdpbGwgZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGdyb3dsZWQgb3Igbm90CiAqLwpsZXQgd2FybmluZ0hlYWRlclNldHRpbmdzOwovKioKICogRXh0cmFjdCBzYW5pdGlzZWQgd2FybmluZ3MgZnJvbSB0aGUgd2FybmluZ3MgaGVhZGVyIHN0cmluZwogKi8KZnVuY3Rpb24ga3ViZUFwaUhlYWRlcldhcm5pbmdzKGFsbFdhcm5pbmdzKSB7CiAgICAvLyBGaW5kIGVhY2ggd2FybmluZy4KICAgIC8vIEVhY2ggd2FybmluZyBpcyBzZXBhcmF0ZWQgYnkgYCxgLi4uIGhvd2V2ZXIuLi4gdGhpcyBjYW4gYXBwZWFyIHdpdGhpbiB0aGUgd2FybmluZyBpdHNlbGYgc28gY2FuJ3QgYHNwbGl0YCBvbiBpdAogICAgLy8gSW5zdGVhZCBwcm92aWRlIGEgY29uZmlndXJhYmxlIHdheSB0byBzcGxpdCAoZGVmYXVsdCAyOTkgLSApCiAgICBjb25zdCB3YXJuaW5ncyA9IGFsbFdhcm5pbmdzLnNwbGl0KHdhcm5pbmdIZWFkZXJTZXR0aW5ncy5zZXBhcmF0b3IpIHx8IFtdOwogICAgLy8gVHJpbSBhbmQgcmVtb3ZlIGVmZmVjdHMgb2Ygc3BsaXQKICAgIHJldHVybiB3YXJuaW5ncy5yZWR1Y2UoKHJlcywgd2FybmluZykgPT4gewogICAgICAgIGNvbnN0IHRyaW1tZWRXYXJuaW5nID0gd2FybmluZy50cmltKCk7CiAgICAgICAgaWYgKCF0cmltbWVkV2FybmluZykgewogICAgICAgICAgICByZXR1cm4gcmVzOwogICAgICAgIH0KICAgICAgICBjb25zdCBmaXhlZFdhcm5pbmcgPSB0cmltbWVkV2FybmluZy5lbmRzV2l0aCgnLCcpID8gdHJpbW1lZFdhcm5pbmcuc2xpY2UoMCwgLTEpIDogdHJpbW1lZFdhcm5pbmc7CiAgICAgICAgLy8gV2h5IGFkZCB0aGUgc2VwYXJhdG9yIGFnYWluPyBJdCdzIGFsbW9zdCBjZXJ0YWlubHkgYDI5OSAtIGAgd2hpY2ggaXMgaW1wb3J0YW50IGluZm8gdG8gaW5jbHVkZQogICAgICAgIHJlcy5wdXNoKHdhcm5pbmdIZWFkZXJTZXR0aW5ncy5zZXBhcmF0b3IgKyBmaXhlZFdhcm5pbmcpOwogICAgICAgIHJldHVybiByZXM7CiAgICB9LCBbXSk7Cn0KLyoqCiAqIFRha2UgYWN0aW9uIGdpdmVuIHRoZSBgd2FybmluZ3NgIGluIHRoZSByZXNwb25zZSBoZWFkZXIgb2YgYSBrdWJlIGFwaSByZXF1ZXN0CiAqLwovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlcwpleHBvcnQgZnVuY3Rpb24gaGFuZGxlS3ViZUFwaUhlYWRlcldhcm5pbmdzKHJlcywgZGlzcGF0Y2gsIHJvb3RHZXR0ZXJzLCBtZXRob2QsIHJlZnJlc2hDYWNoZSA9IGZhbHNlKSB7CiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7CiAgICBjb25zdCBzYWZlTWV0aG9kID0gbWV0aG9kID09PSBudWxsIHx8IG1ldGhvZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWV0aG9kLnRvTG93ZXJDYXNlKCk7IC8vIFNvbWUgcmVxdWVzdHMgaGF2ZSB0aGlzIGFzIHVwcGVyY2FzZQogICAgLy8gRXhpdCBlYXJseSBpZiB0aGVyZSdzIG5vIHdhcm5pbmdzCiAgICBpZiAoKHNhZmVNZXRob2QgIT09ICdwb3N0JyAmJiBzYWZlTWV0aG9kICE9PSAncHV0JykgfHwgISgoX2EgPSByZXMuaGVhZGVycykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLndhcm5pbmcpKSB7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgLy8gR3JhYiB0aGUgcmVxdWlyZWQgc2V0dGluZ3MKICAgIGlmICghd2FybmluZ0hlYWRlclNldHRpbmdzIHx8IHJlZnJlc2hDYWNoZSkgewogICAgICAgIGNvbnN0IHNldHRpbmdzID0gZ2V0UGVyZm9ybWFuY2VTZXR0aW5nKHJvb3RHZXR0ZXJzKTsKICAgICAgICAvLyBDYWNoZSB0aGlzLCB3ZSBkb24ndCBuZWVkIHRvIHJlYWN0IHRvIGNoYW5nZXMgd2l0aGluIHRoZSBzYW1lIHNlc3Npb24KICAgICAgICB3YXJuaW5nSGVhZGVyU2V0dGluZ3MgPSBzZXR0aW5ncyA9PT0gbnVsbCB8fCBzZXR0aW5ncyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2V0dGluZ3Mua3ViZUFQSS53YXJuaW5nSGVhZGVyOwogICAgfQogICAgLy8gRGV0ZXJtaW5lIGVhY2ggd2FybmluZwogICAgY29uc3Qgc2FuaXRpc2VkV2FybmluZ3MgPSBrdWJlQXBpSGVhZGVyV2FybmluZ3MoKF9iID0gcmVzLmhlYWRlcnMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi53YXJuaW5nKTsKICAgIGlmICghc2FuaXRpc2VkV2FybmluZ3MubGVuZ3RoKSB7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgLy8gU2hvd3Mgd2FybmluZ3MgYXMgZ3Jvd2xzCiAgICBjb25zdCBncm93bFdhcm5pbmdzID0gc2FuaXRpc2VkV2FybmluZ3MuZmlsdGVyKCh3KSA9PiAhd2FybmluZ0hlYWRlclNldHRpbmdzLm5vdGlmaWNhdGlvbkJsb2NrTGlzdC5maW5kKChibG9ja2VkKSA9PiB3LnN0YXJ0c1dpdGgoYmxvY2tlZCkpKTsKICAgIGlmIChncm93bFdhcm5pbmdzLmxlbmd0aCkgewogICAgICAgIGNvbnN0IHJlc291cmNlVHlwZSA9ICgoX2MgPSByZXMuZGF0YSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnR5cGUpIHx8ICgoX2QgPSByZXMuZGF0YSkgPT09IG51bGwgfHwgX2QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kLmtpbmQpIHx8IHJvb3RHZXR0ZXJzWydpMThuL3QnXSgnZ2VuZXJpYy5yZXNvdXJjZScsIHsgY291bnQ6IDEgfSk7CiAgICAgICAgZGlzcGF0Y2goJ2dyb3dsL3dhcm5pbmcnLCB7CiAgICAgICAgICAgIHRpdGxlOiBtZXRob2QgPT09ICdwdXQnID8gcm9vdEdldHRlcnNbJ2kxOG4vdCddKCdncm93bC5rdWJlQXBpSGVhZGVyV2FybmluZy50aXRsZVVwZGF0ZScsIHsgcmVzb3VyY2VUeXBlIH0pIDogcm9vdEdldHRlcnNbJ2kxOG4vdCddKCdncm93bC5rdWJlQXBpSGVhZGVyV2FybmluZy50aXRsZUNyZWF0ZScsIHsgcmVzb3VyY2VUeXBlIH0pLAogICAgICAgICAgICBtZXNzYWdlOiBncm93bFdhcm5pbmdzLmpvaW4oJywgJyksCiAgICAgICAgICAgIHRpbWVvdXQ6IDAsCiAgICAgICAgfSwgeyByb290OiB0cnVlIH0pOwogICAgfQogICAgLy8gUHJpbnQgd2FybmluZ3MgdG8gY29uc29sZQogICAgY29uc3QgbWVzc2FnZSA9IGBWYWxpZGF0aW9uIFdhcm5pbmdzIGZvciAke3Jlcy5jb25maWcudXJsfVxuXG4ke3Nhbml0aXNlZFdhcm5pbmdzLmpvaW4oJ1xuJyl9YDsKICAgIGlmIChwcm9jZXNzLmVudi5kZXYpIHsKICAgICAgICBjb25zb2xlLndhcm4oYCR7bWVzc2FnZX1cblxuYCwgcmVzLmRhdGEpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICAgIH0KICAgIGVsc2UgewogICAgICAgIGNvbnNvbGUuZGVidWcobWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgfQp9Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/header-warnings.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/header-warnings.ts"],"names":[],"mappings":"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","sourcesContent":["import { PerfSettingsWarningHeaders } from '@shell/config/settings';\nimport { getPerformanceSetting } from '@shell/utils/settings';\n\ninterface HttpResponse {\n  headers?: { [key: string]: string},\n  data?: any,\n  config: {\n    url: string,\n  }\n}\n\n/**\n * Cache the kube api warning header settings that will determine if they are growled or not\n */\nlet warningHeaderSettings: PerfSettingsWarningHeaders;\n\n/**\n * Extract sanitised warnings from the warnings header string\n */\nfunction kubeApiHeaderWarnings(allWarnings: string): string[] {\n  // Find each warning.\n  // Each warning is separated by `,`... however... this can appear within the warning itself so can't `split` on it\n  // Instead provide a configurable way to split (default 299 - )\n  const warnings = allWarnings.split(warningHeaderSettings.separator) || [];\n\n  // Trim and remove effects of split\n  return warnings.reduce((res, warning) => {\n    const trimmedWarning = warning.trim();\n\n    if (!trimmedWarning) {\n      return res;\n    }\n\n    const fixedWarning = trimmedWarning.endsWith(',') ? trimmedWarning.slice(0, -1) : trimmedWarning;\n\n    // Why add the separator again? It's almost certainly `299 - ` which is important info to include\n    res.push(warningHeaderSettings.separator + fixedWarning);\n\n    return res;\n  }, [] as string[]);\n}\n\n/**\n * Take action given the `warnings` in the response header of a kube api request\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function handleKubeApiHeaderWarnings(res: HttpResponse, dispatch: any, rootGetters: any, method: string, refreshCache = false): void {\n  const safeMethod = method?.toLowerCase(); // Some requests have this as uppercase\n\n  // Exit early if there's no warnings\n  if ((safeMethod !== 'post' && safeMethod !== 'put') || !res.headers?.warning) {\n    return;\n  }\n\n  // Grab the required settings\n  if (!warningHeaderSettings || refreshCache) {\n    const settings = getPerformanceSetting(rootGetters);\n\n    // Cache this, we don't need to react to changes within the same session\n    warningHeaderSettings = settings?.kubeAPI.warningHeader;\n  }\n\n  // Determine each warning\n  const sanitisedWarnings = kubeApiHeaderWarnings(res.headers?.warning);\n\n  if (!sanitisedWarnings.length) {\n    return;\n  }\n\n  // Shows warnings as growls\n  const growlWarnings = sanitisedWarnings.filter((w) => !warningHeaderSettings.notificationBlockList.find((blocked) => w.startsWith(blocked)));\n\n  if (growlWarnings.length) {\n    const resourceType = res.data?.type || res.data?.kind || rootGetters['i18n/t']('generic.resource', { count: 1 });\n\n    dispatch('growl/warning', {\n      title:   method === 'put' ? rootGetters['i18n/t']('growl.kubeApiHeaderWarning.titleUpdate', { resourceType }) : rootGetters['i18n/t']('growl.kubeApiHeaderWarning.titleCreate', { resourceType }),\n      message: growlWarnings.join(', '),\n      timeout: 0,\n    }, { root: true });\n  }\n\n  // Print warnings to console\n  const message = `Validation Warnings for ${ res.config.url }\\n\\n${ sanitisedWarnings.join('\\n') }`;\n\n  if (process.env.dev) {\n    console.warn(`${ message }\\n\\n`, res.data); // eslint-disable-line no-console\n  } else {\n    console.debug(message); // eslint-disable-line no-console\n  }\n}\n"]}]}