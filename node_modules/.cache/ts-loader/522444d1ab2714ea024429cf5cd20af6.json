{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgeyBfVklFVywgX0NSRUFURSB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0LnZ1ZSc7CmltcG9ydCBDaGVja2JveCBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94L0NoZWNrYm94LnZ1ZSc7CmltcG9ydCBMYWJlbGVkSW5wdXQgZnJvbSAnQGNvbXBvbmVudHMvRm9ybS9MYWJlbGVkSW5wdXQvTGFiZWxlZElucHV0LnZ1ZSc7CmltcG9ydCB7IFBTQURlZmF1bHRMZXZlbCwgUFNBRGVmYXVsdFZlcnNpb24sIFBTQURpbWVuc2lvbnMsIFBTQUxldmVscywgUFNBTW9kZXMgfSBmcm9tICdAc2hlbGwvY29uZmlnL3BvZC1zZWN1cml0eS1hZG1pc3Npb24nOwppbXBvcnQgeyBwaWNrQnksIHRvRGljdGlvbmFyeSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwpjb25zdCBnZXRQc2FDb250cm9sID0gKCkgPT4gKHsKICAgIGFjdGl2ZTogZmFsc2UsCiAgICBsZXZlbDogUFNBRGVmYXVsdExldmVsLAogICAgdmVyc2lvbjogJycKfSk7CmNvbnN0IGdldEV4ZW1wdGlvbkNvbnRyb2wgPSAoKSA9PiAoewogICAgYWN0aXZlOiBmYWxzZSwKICAgIHZhbHVlOiAnJwp9KTsKZXhwb3J0IGRlZmF1bHQgVnVlLmV4dGVuZCh7CiAgICBjb21wb25lbnRzOiB7CiAgICAgICAgQ2hlY2tib3gsIExhYmVsZWRTZWxlY3QsIExhYmVsZWRJbnB1dAogICAgfSwKICAgIHByb3BzOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogTGlzdCBvZiBsYWJlbHMgdXNlZCBmb3IgdGhlIHJlc291cmNlCiAgICAgICAgICogTm90ZTogUFNBIGxhYmVscyBhcmUgYWx3YXlzIHBhaXJlZAogICAgICAgICAqLwogICAgICAgIGxhYmVsczogewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIGRlZmF1bHQ6ICgpID0+ICh7fSkKICAgICAgICB9LAogICAgICAgIGxhYmVsc0Fsd2F5c0FjdGl2ZTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogTWFwIGVkaXRpbmcgY2FwYWJpbGl0aWVzIHRvIHRoZSBjb21wb25lbnQKICAgICAgICAgKi8KICAgICAgICBtb2RlOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIExpc3Qgb2YgZXhlbXB0aW9ucyB1c2VkIGZvciB0aGUgcmVzb3VyY2UKICAgICAgICAgKi8KICAgICAgICBleGVtcHRpb25zOiB7CiAgICAgICAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gKHt9KQogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogUHJlZml4IHVzZWQgZm9yIHNldHRpbmcgbGFiZWxzCiAgICAgICAgICovCiAgICAgICAgbGFiZWxzUHJlZml4OiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJycKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEluaGVyaXRlZCBnbG9iYWwgaWRlbnRpZmllciBwcmVmaXggZm9yIHRlc3RzCiAgICAgICAgICogRGVmaW5lIGEgdGVybSBiYXNlZCBvbiB0aGUgcGFyZW50IGNvbXBvbmVudCB0byBhdm9pZCBjb25mbGljdHMgb24gbXVsdGlwbGUgY29tcG9uZW50cwogICAgICAgICAqLwogICAgICAgIGNvbXBvbmVudFRlc3RpZDogewogICAgICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgICAgIGRlZmF1bHQ6ICdwb2Qtc2VjdXJpdHktYWRtaXNzaW9uJwogICAgICAgIH0KICAgIH0sCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIC8vIEdlbmVyYXRlIFBTQSBmb3JtIGNvbnRyb2xzCiAgICAgICAgICAgIHBzYUNvbnRyb2xzOiB0b0RpY3Rpb25hcnkoUFNBTW9kZXMsIGdldFBzYUNvbnRyb2wpLAogICAgICAgICAgICBwc2FFeGVtcHRpb25zQ29udHJvbHM6IHRvRGljdGlvbmFyeShQU0FEaW1lbnNpb25zLCBnZXRFeGVtcHRpb25Db250cm9sKSwKICAgICAgICAgICAgb3B0aW9uczogUFNBTGV2ZWxzLm1hcCgobGV2ZWwpID0+ICh7CiAgICAgICAgICAgICAgICB2YWx1ZTogbGV2ZWwsCiAgICAgICAgICAgICAgICBsYWJlbDogdGhpcy50KGBwb2RTZWN1cml0eUFkbWlzc2lvbi5sYWJlbHMuJHtsZXZlbH1gKQogICAgICAgICAgICB9KSksCiAgICAgICAgfTsKICAgIH0sCiAgICB3YXRjaDoge30sCiAgICBjb21wdXRlZDogewogICAgICAgIGlzVmlldygpIHsKICAgICAgICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gX1ZJRVc7CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBFbmFibGUgZXhlbXB0aW9uIGZvcm0gaWYgYW55CiAgICAgICAgICovCiAgICAgICAgaGFzRXhlbXB0aW9ucygpIHsKICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMuZXhlbXB0aW9ucykubGVuZ3RoID4gMDsKICAgICAgICB9LAogICAgfSwKICAgIGNyZWF0ZWQoKSB7CiAgICAgICAgLy8gQXNzaWduIHZhbHVlcyB0byB0aGUgZm9ybSwgb3ZlcnJpZGluZyBleGlzdGluZyB2YWx1ZXMKICAgICAgICB0aGlzLnBzYUNvbnRyb2xzID0gewogICAgICAgICAgICAuLi50aGlzLnBzYUNvbnRyb2xzLAogICAgICAgICAgICAuLi50aGlzLmdldFBzYUNvbnRyb2xzKCkKICAgICAgICB9OwogICAgICAgIHRoaXMucHNhRXhlbXB0aW9uc0NvbnRyb2xzID0gdGhpcy5nZXRQc2FFeGVtcHRpb25zKCk7CiAgICAgICAgLy8gRW1pdCBpbml0aWFsIHZhbHVlIG9uIGNyZWF0aW9uIGlmIGxhYmVscyBhbHdheXMgYWN0aXZlLCBhcyBkZWZhdWx0IHByZWRlZmluZWQgdmFsdWVzIGFyZSByZXF1aXJlZAogICAgICAgIGlmICh0aGlzLm1vZGUgPT09IF9DUkVBVEUgJiYgdGhpcy5sYWJlbHNBbHdheXNBY3RpdmUpIHsKICAgICAgICAgICAgdGhpcy51cGRhdGVMYWJlbHMoKTsKICAgICAgICAgICAgdGhpcy51cGRhdGVFeGVtcHRpb25zKCk7CiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICAvKioKICAgICAgICAgKiBGaWx0ZXIgb3V0IGV4aXN0aW5nIFBTQSBsYWJlbHMgYW5kIGVtaXQgZXhpc3RpbmcgbGFiZWxzIHdpdGggbmV3IFBTQSBvbmVzCiAgICAgICAgICovCiAgICAgICAgdXBkYXRlTGFiZWxzKCkgewogICAgICAgICAgICBjb25zdCBub25QU0FMYWJlbHMgPSBwaWNrQnkodGhpcy5sYWJlbHMsIChfLCBrZXkpID0+ICFrZXkuaW5jbHVkZXModGhpcy5sYWJlbHNQcmVmaXgpKTsKICAgICAgICAgICAgY29uc3QgbGFiZWxzID0gUFNBTW9kZXMucmVkdWNlKChhY2MsIG1vZGUpID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnBzYUNvbnRyb2xzW21vZGVdLmFjdGl2ZSB8fCB0aGlzLmxhYmVsc0Fsd2F5c0FjdGl2ZSA/IHsKICAgICAgICAgICAgICAgICAgICAuLi5hY2MsCiAgICAgICAgICAgICAgICAgICAgLy8gU2V0IGRlZmF1bHQgbGV2ZWwgaWYgbm9uZQogICAgICAgICAgICAgICAgICAgIFtgJHt0aGlzLmxhYmVsc1ByZWZpeH0ke21vZGV9YF06IHRoaXMucHNhQ29udHJvbHNbbW9kZV0ubGV2ZWwgfHwgUFNBRGVmYXVsdExldmVsLAogICAgICAgICAgICAgICAgICAgIC8vIFNldCBkZWZhdWx0IHZlcnNpb24gaWYgbm9uZQogICAgICAgICAgICAgICAgICAgIFtgJHt0aGlzLmxhYmVsc1ByZWZpeH0ke21vZGV9LXZlcnNpb25gXTogdGhpcy5wc2FDb250cm9sc1ttb2RlXS52ZXJzaW9uIHx8IFBTQURlZmF1bHRWZXJzaW9uCiAgICAgICAgICAgICAgICB9IDogYWNjOwogICAgICAgICAgICB9LCBub25QU0FMYWJlbHMpOwogICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGVMYWJlbHMnLCBsYWJlbHMpOwogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogRW1pdCBhY3RpdmUgZXhlbXB0aW9ucyBpbiByZXF1aXJlZCBmb3JtYXQKICAgICAgICAgKi8KICAgICAgICB1cGRhdGVFeGVtcHRpb25zKCkgewogICAgICAgICAgICBjb25zdCBleGVtcHRpb25zID0gUFNBRGltZW5zaW9ucy5yZWR1Y2UoKGFjYywgZGltZW5zaW9uKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucHNhRXhlbXB0aW9uc0NvbnRyb2xzW2RpbWVuc2lvbl0udmFsdWUuc3BsaXQoJywnKS5tYXAoKHZhbHVlKSA9PiB2YWx1ZS50cmltKCkpOwogICAgICAgICAgICAgICAgY29uc3QgYWN0aXZlID0gdGhpcy5wc2FFeGVtcHRpb25zQ29udHJvbHNbZGltZW5zaW9uXS5hY3RpdmU7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIC4uLmFjYywKICAgICAgICAgICAgICAgICAgICBbZGltZW5zaW9uXTogYWN0aXZlICYmIHZhbHVlID8gdmFsdWUgOiBbXQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfSwge30pOwogICAgICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGVFeGVtcHRpb25zJywgZXhlbXB0aW9ucyk7CiAgICAgICAgfSwKICAgICAgICAvKioKICAgICAgICAgKiBHZW5lcmF0ZSBmb3JtIGNvbnRyb2xzIGJhc2VkIG9uIFBTQSBsYWJlbHMgaW4gdGhlIHByb3ZpZGVkIGRpY3Rpb25hcnkKICAgICAgICAgKi8KICAgICAgICBnZXRQc2FDb250cm9scygpIHsKICAgICAgICAgICAgcmV0dXJuIFBTQU1vZGVzLnJlZHVjZSgoYWNjLCBtb2RlKSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBsZXZlbCA9IHRoaXMubGFiZWxzW2Ake3RoaXMubGFiZWxzUHJlZml4fSR7bW9kZX1gXTsKICAgICAgICAgICAgICAgIC8vIFJldHJpZXZlIHZlcnNpb24sIGhpZGluZyB0aGUgdmFsdWUgJ2xhdGVzdCcgZnJvbSB0aGUgdXNlcgogICAgICAgICAgICAgICAgY29uc3QgdmVyc2lvbiA9ICh0aGlzLmxhYmVsc1tgJHt0aGlzLmxhYmVsc1ByZWZpeH0ke21vZGV9LXZlcnNpb25gXSB8fCAnJykucmVwbGFjZShQU0FEZWZhdWx0VmVyc2lvbiwgJycpOwogICAgICAgICAgICAgICAgcmV0dXJuIGxldmVsID8gewogICAgICAgICAgICAgICAgICAgIC4uLmFjYywKICAgICAgICAgICAgICAgICAgICBbbW9kZV06IHsKICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICBsZXZlbCwKICAgICAgICAgICAgICAgICAgICAgICAgdmVyc2lvbgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gOiBhY2M7CiAgICAgICAgICAgIH0sIHt9KTsKICAgICAgICB9LAogICAgICAgIC8qKgogICAgICAgICAqIEdlbmVyYXRlIGZvcm0gZXhlbXB0aW9ucyBiYXNlZCBvbiBQU0EgZXhlbXB0aW9ucyBwcm92aWRlZCBkaWN0aW9uYXJ5CiAgICAgICAgICovCiAgICAgICAgZ2V0UHNhRXhlbXB0aW9ucygpIHsKICAgICAgICAgICAgcmV0dXJuIFBTQURpbWVuc2lvbnMucmVkdWNlKChhY2MsIGRpbWVuc2lvbikgPT4gewogICAgICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gKHRoaXMuZXhlbXB0aW9uc1tkaW1lbnNpb25dIHx8IFtdKS5tYXAoKHZhbHVlKSA9PiB2YWx1ZS50cmltKCkpLmpvaW4oJywnKTsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgLi4uYWNjLAogICAgICAgICAgICAgICAgICAgIFtkaW1lbnNpb25dOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogISF2YWx1ZXMubGVuZ3RoLAogICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWVzCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgfSwge30pOwogICAgICAgIH0sCiAgICAgICAgLyoqCiAgICAgICAgICogQWRkIGNoZWNrcyBvbiBpbnB1dCBmb3IgUFNBIGNvbnRyb2xzIHRvIGJlIGFjdGl2ZSBvciBub3QsIGFsbG93aW5nIHdoaXRlIGNhc2VzCiAgICAgICAgICovCiAgICAgICAgaXNQc2FDb250cm9sRGlzYWJsZWQoYWN0aXZlKSB7CiAgICAgICAgICAgIHJldHVybiAhdGhpcy5sYWJlbHNBbHdheXNBY3RpdmUgJiYgKCFhY3RpdmUgfHwgdGhpcy5pc1ZpZXcpOwogICAgICAgIH0KICAgIH0KfSk7Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue.tsx","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue?vue&type=script&lang=ts"],"names":[],"mappings":"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","sourcesContent":["\nimport Vue from 'vue';\nimport { _VIEW, _CREATE } from '@shell/config/query-params';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport LabeledInput from '@components/Form/LabeledInput/LabeledInput.vue';\nimport { PSADimension, PSAMode } from '@shell/types/pod-security-admission';\nimport {\n  PSADefaultLevel,\n  PSADefaultVersion, PSADimensions, PSALevels, PSAModes\n} from '@shell/config/pod-security-admission';\nimport { pickBy, toDictionary } from '@shell/utils/object';\n\ninterface PSAControl { active: boolean, level: string, version: string }\nconst getPsaControl = (): PSAControl => ({\n  active:  false,\n  level:   PSADefaultLevel,\n  version: ''\n});\n\n// Type and function for exemptions form builder\ninterface PSAExemptionControl { active: boolean, value: string }\nconst getExemptionControl = (): PSAExemptionControl => ({\n  active: false,\n  value:  ''\n});\n\nexport default Vue.extend({\n  components: {\n    Checkbox, LabeledSelect, LabeledInput\n  },\n  props: {\n    /**\n     * List of labels used for the resource\n     * Note: PSA labels are always paired\n     */\n    labels: {\n      type:    Object as () => Record<string, string>,\n      default: () => ({})\n    },\n\n    labelsAlwaysActive: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * Map editing capabilities to the component\n     */\n    mode: {\n      type:     String,\n      required: true\n    },\n\n    /**\n     * List of exemptions used for the resource\n     */\n    exemptions: {\n      type:    Object as () => Record<PSADimension, string[]>,\n      default: () => ({} as Record<PSADimension, string[]>)\n    },\n\n    /**\n     * Prefix used for setting labels\n     */\n    labelsPrefix: {\n      type:    String,\n      default: ''\n    },\n\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'pod-security-admission'\n    }\n  },\n\n  data() {\n    return {\n      // Generate PSA form controls\n      psaControls:           toDictionary(PSAModes, getPsaControl) as Record<PSAMode, PSAControl>,\n      psaExemptionsControls: toDictionary(PSADimensions, getExemptionControl) as Record<PSADimension, PSAExemptionControl>,\n      options:               PSALevels.map((level) => ({\n        value: level,\n        label: this.t(`podSecurityAdmission.labels.${ level }`)\n      })),\n    };\n  },\n\n  watch: {},\n\n  computed: {\n    isView(): boolean {\n      return this.mode === _VIEW;\n    },\n\n    /**\n     * Enable exemption form if any\n     */\n    hasExemptions(): boolean {\n      return Object.keys(this.exemptions).length > 0;\n    },\n  },\n\n  created() {\n    // Assign values to the form, overriding existing values\n    this.psaControls = {\n      ...this.psaControls,\n      ...this.getPsaControls()\n    };\n\n    this.psaExemptionsControls = this.getPsaExemptions();\n\n    // Emit initial value on creation if labels always active, as default predefined values are required\n    if (this.mode === _CREATE && this.labelsAlwaysActive) {\n      this.updateLabels();\n      this.updateExemptions();\n    }\n  },\n\n  methods: {\n    /**\n     * Filter out existing PSA labels and emit existing labels with new PSA ones\n     */\n    updateLabels(): void {\n      const nonPSALabels = pickBy(this.labels, (_, key) => !key.includes(this.labelsPrefix));\n      const labels = PSAModes.reduce((acc, mode) => {\n        return this.psaControls[mode].active || this.labelsAlwaysActive ? {\n          ...acc,\n          // Set default level if none\n          [`${ this.labelsPrefix }${ mode }`]:         this.psaControls[mode].level || PSADefaultLevel,\n          // Set default version if none\n          [`${ this.labelsPrefix }${ mode }-version`]: this.psaControls[mode].version || PSADefaultVersion\n        } : acc;\n      }, nonPSALabels);\n\n      this.$emit('updateLabels', labels);\n    },\n\n    /**\n     * Emit active exemptions in required format\n     */\n    updateExemptions(): void {\n      const exemptions = PSADimensions.reduce((acc, dimension) => {\n        const value = this.psaExemptionsControls[dimension].value.split(',').map((value) => value.trim());\n        const active = this.psaExemptionsControls[dimension].active;\n\n        return {\n          ...acc,\n          [dimension]: active && value ? value : []\n        };\n      }, {});\n\n      this.$emit('updateExemptions', exemptions);\n    },\n\n    /**\n     * Generate form controls based on PSA labels in the provided dictionary\n     */\n    getPsaControls(): Record<PSAMode, PSAControl> {\n      return PSAModes.reduce((acc, mode) => {\n        const level = this.labels[`${ this.labelsPrefix }${ mode }`];\n        // Retrieve version, hiding the value 'latest' from the user\n        const version = (this.labels[`${ this.labelsPrefix }${ mode }-version`] || '').replace(PSADefaultVersion, '');\n\n        return level ? {\n          ...acc,\n          [mode]: {\n            active: true,\n            level,\n            version\n          }\n        } : acc;\n      }, {} as Record<PSAMode, PSAControl>);\n    },\n\n    /**\n     * Generate form exemptions based on PSA exemptions provided dictionary\n     */\n    getPsaExemptions(): Record<PSADimension, PSAExemptionControl> {\n      return PSADimensions.reduce((acc, dimension) => {\n        const values = (this.exemptions[dimension] || []).map((value) => value.trim()).join(',');\n\n        return {\n          ...acc,\n          [dimension]: {\n            active: !!values.length,\n            value:  values\n          }\n        };\n      }, {}) as Record<PSADimension, PSAExemptionControl>;\n    },\n\n    /**\n     * Add checks on input for PSA controls to be active or not, allowing white cases\n     */\n    isPsaControlDisabled(active: boolean): boolean {\n      return !this.labelsAlwaysActive && (!active || this.isView);\n    }\n  }\n});\n"]}]}