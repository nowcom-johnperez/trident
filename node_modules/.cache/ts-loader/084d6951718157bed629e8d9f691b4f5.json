{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGZ1bmN0aW9uIGFkZFBhcmFtKHVybCwga2V5LCB2YWwpIHsKICAgIGxldCBvdXQgPSB1cmwgKyAodXJsLmluY2x1ZGVzKCc/JykgPyAnJicgOiAnPycpOwogICAgLy8gdmFsIGNhbiBiZSBhIHN0cmluZyBvciBhbiBhcnJheSBvZiBzdHJpbmdzCiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsKSkgewogICAgICAgIHZhbCA9IFt2YWxdOwogICAgfQogICAgb3V0ICs9IHZhbC5tYXAoKHYpID0+IHsKICAgICAgICBpZiAodiA9PT0gbnVsbCkgewogICAgICAgICAgICByZXR1cm4gYCR7ZW5jb2RlVVJJQ29tcG9uZW50KGtleSl9YDsKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHJldHVybiBgJHtlbmNvZGVVUklDb21wb25lbnQoa2V5KX09JHtlbmNvZGVVUklDb21wb25lbnQodil9YDsKICAgICAgICB9CiAgICB9KS5qb2luKCcmJyk7CiAgICByZXR1cm4gb3V0Owp9CmV4cG9ydCBmdW5jdGlvbiBhZGRQYXJhbXModXJsLCBwYXJhbXMpIHsKICAgIGlmIChwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gJ29iamVjdCcpIHsKICAgICAgICBPYmplY3Qua2V5cyhwYXJhbXMpLmZvckVhY2goKGtleSkgPT4gewogICAgICAgICAgICB1cmwgPSBhZGRQYXJhbSh1cmwsIGtleSwgcGFyYW1zW2tleV0pOwogICAgICAgIH0pOwogICAgfQogICAgcmV0dXJuIHVybDsKfQpleHBvcnQgZnVuY3Rpb24gcmVtb3ZlUGFyYW0odXJsLCBrZXkpIHsKICAgIHZhciBfYTsKICAgIGNvbnN0IHBhcnNlZCA9IHBhcnNlKHVybCk7CiAgICBpZiAoKF9hID0gcGFyc2VkLnF1ZXJ5KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Fba2V5XSkgewogICAgICAgIGRlbGV0ZSBwYXJzZWQucXVlcnlba2V5XTsKICAgIH0KICAgIHJldHVybiBzdHJpbmdpZnkocGFyc2VkKTsKfQpleHBvcnQgZnVuY3Rpb24gcGFyc2VMaW5rSGVhZGVyKHN0cikgewogICAgY29uc3Qgb3V0ID0ge307CiAgICBjb25zdCBsaW5lcyA9IChzdHIgfHwgJycpLnNwbGl0KCcsJyk7CiAgICBmb3IgKGNvbnN0IGxpbmUgb2YgbGluZXMpIHsKICAgICAgICBjb25zdCBtYXRjaCA9IGxpbmUubWF0Y2goL15ccyo8KFtePl0rKT5ccyo7XHMqcmVsXHMqPSIoLiopIi8pOwogICAgICAgIGlmIChtYXRjaCkgewogICAgICAgICAgICBvdXRbbWF0Y2hbMl0udG9Mb3dlckNhc2UoKV0gPSBtYXRjaFsxXTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gb3V0Owp9CmV4cG9ydCBmdW5jdGlvbiBpc01heWJlU2VjdXJlKHBvcnQsIHByb3RvKSB7CiAgICBjb25zdCBwcm90b2NvbCA9IHByb3RvLnRvTG93ZXJDYXNlKCk7CiAgICByZXR1cm4gcG9ydE1hdGNoKFtwb3J0XSwgWzQ0MywgODQ0M10sIFsnNDQzJ10pIHx8IHByb3RvY29sID09PSAnaHR0cHMnOwp9CmV4cG9ydCBmdW5jdGlvbiBwb3J0TWF0Y2gocG9ydHMsIGVxdWFscywgZW5kc1dpdGgpIHsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9ydHMubGVuZ3RoOyBpKyspIHsKICAgICAgICBjb25zdCBwb3J0ID0gcG9ydHNbaV07CiAgICAgICAgaWYgKGVxdWFscy5pbmNsdWRlcyhwb3J0KSkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCBlbmRzV2l0aC5sZW5ndGg7IGorKykgewogICAgICAgICAgICBjb25zdCBzdWZmaXggPSBgJHtlbmRzV2l0aFtqXX1gOwogICAgICAgICAgICBjb25zdCBwb3J0U3RyID0gYCR7cG9ydH1gOwogICAgICAgICAgICBpZiAocG9ydFN0ciAhPT0gc3VmZml4ICYmIHBvcnRTdHIuZW5kc1dpdGgoc3VmZml4KSkgewogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gZmFsc2U7Cn0KLy8gcGFyc2VVcmkgMS4yLjIKLy8gKGMpIFN0ZXZlbiBMZXZpdGhhbiA8c3RldmVubGV2aXRoYW4uY29tPgovLyBodHRwczovL2phdmFzY3JpcHRzb3VyY2UuY29tL3BhcnNldXJpLwovLyBNSVQgTGljZW5zZQpleHBvcnQgZnVuY3Rpb24gcGFyc2Uoc3RyKSB7CiAgICBjb25zdCBvID0gcGFyc2Uub3B0aW9uczsKICAgIGNvbnN0IG0gPSBvLnBhcnNlcltvLnN0cmljdE1vZGUgPyAnc3RyaWN0JyA6ICdsb29zZSddLmV4ZWMoc3RyKTsKICAgIGlmICghbSkgewogICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IHBhcnNlIGFzIHVyaTogJHtzdHJ9YCk7CiAgICB9CiAgICBjb25zdCB1cmkgPSB7fTsKICAgIGxldCBpID0gMTQ7CiAgICB3aGlsZSAoaS0tKSB7CiAgICAgICAgdXJpW28ua2V5W2ldXSA9IG1baV0gfHwgJyc7CiAgICB9CiAgICB1cmkucXVlcnkgPSB7fTsKICAgIHVyaS5xdWVyeVN0ci5yZXBsYWNlKG8ucS5wYXJzZXIsIChfLCAkMSwgJDIpID0+IHsKICAgICAgICBpZiAoJDEpIHsKICAgICAgICAgICAgdXJpW28ucS5uYW1lXVskMV0gPSAkMjsKICAgICAgICB9CiAgICAgICAgcmV0dXJuICcnOwogICAgfSk7CiAgICByZXR1cm4gdXJpOwp9CnBhcnNlLm9wdGlvbnMgPSB7CiAgICBzdHJpY3RNb2RlOiBmYWxzZSwKICAgIGtleTogWydzb3VyY2UnLCAncHJvdG9jb2wnLCAnYXV0aG9yaXR5JywgJ3VzZXJJbmZvJywgJ3VzZXInLCAncGFzc3dvcmQnLCAnaG9zdCcsICdwb3J0JywgJ3JlbGF0aXZlJywgJ3BhdGgnLCAnZGlyZWN0b3J5JywgJ2ZpbGUnLCAncXVlcnlTdHInLCAnYW5jaG9yJ10sCiAgICBxOiB7CiAgICAgICAgbmFtZTogJ3F1ZXJ5JywKICAgICAgICBwYXJzZXI6IC8oPzpefCYpKFteJj1dKik9PyhbXiZdKikvZwogICAgfSwKICAgIHBhcnNlcjogewogICAgICAgIHN0cmljdDogL14oPzooW146XC8/I10rKTopPyg/OlwvXC8oKD86KChbXjpAXSopKD86OihbXjpAXSopKT8pP0ApPyhbXjpcLz8jXSopKD86OihcZCopKT8pKT8oKCgoPzpbXj8jXC9dKlwvKSopKFtePyNdKikpKD86XD8oW14jXSopKT8oPzojKC4qKSk/KS8sCiAgICAgICAgbG9vc2U6IC9eKD86KD8hW146QF0rOlteOkBcL10qQCkoW146XC8/Iy5dKyk6KT8oPzpcL1wvKT8oKD86KChbXjpAXSopKD86OihbXjpAXSopKT8pP0ApPyhbXjpcLz8jXSopKD86OihcZCopKT8pKCgoXC8oPzpbXj8jXSg/IVtePyNcL10qXC5bXj8jXC8uXSsoPzpbPyNdfCQpKSkqXC8/KT8oW14/I1wvXSopKSg/Olw/KFteI10qKSk/KD86IyguKikpPykvCiAgICB9Cn07CmV4cG9ydCBmdW5jdGlvbiBzdHJpbmdpZnkodXJpKSB7CiAgICBsZXQgb3V0ID0gYCR7dXJpLnByb3RvY29sfTovL2A7CiAgICBpZiAodXJpLnVzZXIgJiYgdXJpLnBhc3N3b3JkKSB7CiAgICAgICAgb3V0ICs9IGAke3VyaS51c2VyfToke3VyaS5wYXNzd29yZH1AYDsKICAgIH0KICAgIGVsc2UgaWYgKHVyaS51c2VyKSB7CiAgICAgICAgb3V0ICs9IGAke3VyaS51c2VyfUBgOwogICAgfQogICAgb3V0ICs9IHVyaS5ob3N0OwogICAgaWYgKHVyaS5wb3J0KSB7CiAgICAgICAgb3V0ICs9IGA6JHt1cmkucG9ydH1gOwogICAgfQogICAgb3V0ICs9IHVyaS5wYXRoIHx8ICcvJzsKICAgIG91dCA9IGFkZFBhcmFtcyhvdXQsIHVyaS5xdWVyeSB8fCB7fSk7CiAgICBpZiAodXJpLmFuY2hvcikgewogICAgICAgIG91dCArPSBgIyR7dXJpLmFuY2hvcn1gOwogICAgfQogICAgcmV0dXJuIG91dDsKfQo="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts"],"names":[],"mappings":"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","sourcesContent":["type UriField = 'source' | 'protocol' | 'authority' | 'userInfo' | 'user' | 'password' | 'host' | 'port' | 'relative' | 'path' | 'directory' | 'file' | 'queryStr' | 'anchor'\ntype UriFields = {\n  [key in UriField]: string; // eslint-disable-line no-unused-vars\n}\ntype QueryParams = {\n  [key: string]: string\n}\n\ninterface ParsedUri extends UriFields {\n  query: QueryParams;\n}\n\nexport function addParam(url: string, key: string, val: string | string[]): string {\n  let out = url + (url.includes('?') ? '&' : '?');\n\n  // val can be a string or an array of strings\n  if ( !Array.isArray(val) ) {\n    val = [val];\n  }\n  out += val.map((v) => {\n    if ( v === null ) {\n      return `${ encodeURIComponent(key) }`;\n    } else {\n      return `${ encodeURIComponent(key) }=${ encodeURIComponent(v) }`;\n    }\n  }).join('&');\n\n  return out;\n}\n\nexport function addParams(url: string, params: QueryParams): string {\n  if ( params && typeof params === 'object' ) {\n    Object.keys(params).forEach((key) => {\n      url = addParam(url, key, params[key]);\n    });\n  }\n\n  return url;\n}\n\nexport function removeParam(url: string, key: string): string {\n  const parsed = parse(url);\n\n  if ( parsed.query?.[key] ) {\n    delete parsed.query[key];\n  }\n\n  return stringify(parsed);\n}\n\nexport function parseLinkHeader(str: string): Record<string, string> {\n  const out: { [key: string]: string} = { };\n  const lines = (str || '').split(',');\n\n  for ( const line of lines ) {\n    const match = line.match(/^\\s*<([^>]+)>\\s*;\\s*rel\\s*=\"(.*)\"/);\n\n    if ( match ) {\n      out[match[2].toLowerCase()] = match[1];\n    }\n  }\n\n  return out;\n}\n\nexport function isMaybeSecure(port: number, proto: string): boolean {\n  const protocol = proto.toLowerCase();\n\n  return portMatch([port], [443, 8443], ['443']) || protocol === 'https';\n}\n\nexport function portMatch(ports: number[], equals: number[], endsWith: string[]): boolean {\n  for (let i = 0; i < ports.length; i++) {\n    const port = ports[i];\n\n    if (equals.includes(port)) {\n      return true;\n    }\n\n    for (let j = 0; j < endsWith.length; j++) {\n      const suffix = `${ endsWith[j] }`;\n      const portStr = `${ port }`;\n\n      if (portStr !== suffix && portStr.endsWith(suffix)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// https://javascriptsource.com/parseuri/\n// MIT License\nexport function parse(str: string): ParsedUri {\n  const o = parse.options;\n  const m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\n  if (!m) {\n    throw new Error(`Cannot parse as uri: ${ str }`);\n  }\n  const uri = {} as ParsedUri;\n  let i = 14;\n\n  while (i--) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri.query = {};\n  uri.queryStr.replace(o.q.parser, (_, $1: string, $2: string): string => {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n\n    return '';\n  });\n\n  return uri;\n}\n\nparse.options = {\n  strictMode: false,\n  key:        ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'queryStr', 'anchor'],\n  q:          {\n    name:   'query',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n} as {\n  strictMode: boolean,\n  key: UriField[],\n  q: {\n    name: 'query',\n    parser: RegExp\n  },\n  parser: {\n    strict: RegExp,\n    loose: RegExp\n  }\n};\n\nexport function stringify(uri: ParsedUri): string {\n  let out = `${ uri.protocol }://`;\n\n  if ( uri.user && uri.password ) {\n    out += `${ uri.user }:${ uri.password }@`;\n  } else if ( uri.user ) {\n    out += `${ uri.user }@`;\n  }\n\n  out += uri.host;\n\n  if ( uri.port ) {\n    out += `:${ uri.port }`;\n  }\n\n  out += uri.path || '/';\n\n  out = addParams(out, uri.query || {});\n\n  if ( uri.anchor ) {\n    out += `#${ uri.anchor }`;\n  }\n\n  return out;\n}\n"]}]}