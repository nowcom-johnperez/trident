{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/__tests__/azure.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/__tests__/azure.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgQXp1cmVDbG91ZENyZWRzIGZyb20gJ0BzaGVsbC9jbG91ZC1jcmVkZW50aWFsL2F6dXJlLnZ1ZSc7CmNvbnN0IG1vY2tTdG9yZSA9IHsKICAgIGdldHRlcnM6IHsgJ2kxOG4vdCc6IGplc3QuZm4oKSB9LAogICAgZGlzcGF0Y2g6ICgpID0+IGplc3QuZm4oKQp9OwpkZXNjcmliZSgnY2xvdWQgY3JlZGVudGlhbHM6IEF6dXJlJywgKCkgPT4gewogICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KEF6dXJlQ2xvdWRDcmVkcywgewogICAgICAgIHByb3BzRGF0YTogewogICAgICAgICAgICB2YWx1ZTogewogICAgICAgICAgICAgICAgZGVjb2RlZERhdGE6IHsKICAgICAgICAgICAgICAgICAgICBlbnZpcm9ubWVudDogJycsCiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uSWQ6ICcnLAogICAgICAgICAgICAgICAgICAgIGNsaWVudElkOiAnJywKICAgICAgICAgICAgICAgICAgICBjbGllbnRTZWNyZXQ6ICcnLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHNldERhdGE6IGplc3QuZm4oKQogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBtb2NrczogeyAkc3RvcmU6IG1vY2tTdG9yZSB9CiAgICB9KTsKICAgIGl0KCdzaG91bGQgcGFzcyBhbGwgdGhlIGNvcnJlY3QgZmllbGRzIHdoZW4gY2hlY2tpbmcgaWYgY3JlZGVudGlhbHMgYXJlIHZhbGlkJywgYXN5bmMgKCkgPT4gewogICAgICAgIGNvbnN0IHNweURpc3BhdGNoID0gamVzdC5zcHlPbihtb2NrU3RvcmUsICdkaXNwYXRjaCcpOwogICAgICAgIHdyYXBwZXIuc2V0RGF0YSh7CiAgICAgICAgICAgIHZhbHVlOiB7CiAgICAgICAgICAgICAgICBkZWNvZGVkRGF0YTogewogICAgICAgICAgICAgICAgICAgIGVudmlyb25tZW50OiAnbXktZW52JywKICAgICAgICAgICAgICAgICAgICBzdWJzY3JpcHRpb25JZDogJ215LXN1Yi1pZCcsCiAgICAgICAgICAgICAgICAgICAgY2xpZW50SWQ6ICdteS1jLWlkJywKICAgICAgICAgICAgICAgICAgICBjbGllbnRTZWNyZXQ6ICdteS1jLXNlY3JldCcsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBhd2FpdCB3cmFwcGVyLnZtLnRlc3QoKTsKICAgICAgICBleHBlY3Qoc3B5RGlzcGF0Y2gpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCdtYW5hZ2VtZW50L3JlcXVlc3QnLCB7CiAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGVudmlyb25tZW50OiAnbXktZW52JywKICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbklkOiAnbXktc3ViLWlkJywKICAgICAgICAgICAgICAgIGNsaWVudElkOiAnbXktYy1pZCcsCiAgICAgICAgICAgICAgICBjbGllbnRTZWNyZXQ6ICdteS1jLXNlY3JldCcsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgICByZWRpcmVjdFVuYXV0aG9yaXplZDogZmFsc2UsCiAgICAgICAgICAgIHVybDogJy9tZXRhL2Frc0NoZWNrQ3JlZGVudGlhbHMnCiAgICAgICAgfSk7CiAgICB9KTsKfSk7Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/__tests__/azure.test.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/cloud-credential/__tests__/azure.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,iBAAiB,CAAC;AACxC,OAAO,eAAe,MAAM,mCAAmC,CAAC;AAEhE,MAAM,SAAS,GAAG;IAChB,OAAO,EAAG,EAAE,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE;IACjC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE;CAC1B,CAAC;AAEF,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;IACxC,MAAM,OAAO,GAAG,KAAK,CAAC,eAAe,EAAE;QACrC,SAAS,EAAE;YACT,KAAK,EAAE;gBACL,WAAW,EAAE;oBACX,WAAW,EAAK,EAAE;oBAClB,cAAc,EAAE,EAAE;oBAClB,QAAQ,EAAQ,EAAE;oBAClB,YAAY,EAAI,EAAE;iBACnB;gBACD,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;aACnB;SACF;QACD,KAAK,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE;KAC7B,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE,KAAK,IAAG,EAAE;QACxF,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAEtD,OAAO,CAAC,OAAO,CAAC;YACd,KAAK,EAAE;gBACL,WAAW,EAAE;oBACX,WAAW,EAAK,QAAQ;oBACxB,cAAc,EAAE,WAAW;oBAC3B,QAAQ,EAAQ,SAAS;oBACzB,YAAY,EAAI,aAAa;iBAC9B;aACF;SACF,CAAC,CAAC;QAEH,MAAM,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;QAExB,MAAM,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,oBAAoB,EAAE;YAC7D,IAAI,EAAE;gBACJ,WAAW,EAAK,QAAQ;gBACxB,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAQ,SAAS;gBACzB,YAAY,EAAI,aAAa;aAC9B;YACD,MAAM,EAAgB,MAAM;YAC5B,oBAAoB,EAAE,KAAK;YAC3B,GAAG,EAAmB,2BAA2B;SAClD,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { mount } from '@vue/test-utils';\nimport AzureCloudCreds from '@shell/cloud-credential/azure.vue';\n\nconst mockStore = {\n  getters:  { 'i18n/t': jest.fn() },\n  dispatch: () => jest.fn()\n};\n\ndescribe('cloud credentials: Azure', () => {\n  const wrapper = mount(AzureCloudCreds, {\n    propsData: {\n      value: {\n        decodedData: {\n          environment:    '',\n          subscriptionId: '',\n          clientId:       '',\n          clientSecret:   '',\n        },\n        setData: jest.fn()\n      }\n    },\n    mocks: { $store: mockStore }\n  });\n\n  it('should pass all the correct fields when checking if credentials are valid', async() => {\n    const spyDispatch = jest.spyOn(mockStore, 'dispatch');\n\n    wrapper.setData({\n      value: {\n        decodedData: {\n          environment:    'my-env',\n          subscriptionId: 'my-sub-id',\n          clientId:       'my-c-id',\n          clientSecret:   'my-c-secret',\n        }\n      }\n    });\n\n    await wrapper.vm.test();\n\n    expect(spyDispatch).toHaveBeenCalledWith('management/request', {\n      data: {\n        environment:    'my-env',\n        subscriptionId: 'my-sub-id',\n        clientId:       'my-c-id',\n        clientSecret:   'my-c-secret',\n      },\n      method:               'POST',\n      redirectUnauthorized: false,\n      url:                  '/meta/aksCheckCredentials'\n    });\n  });\n});\n"]}]}