{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/__tests__/S3.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/__tests__/S3.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:LyogZXNsaW50LWRpc2FibGUgamVzdC9uby1ob29rcyAqLwppbXBvcnQgeyBtb3VudCwgY3JlYXRlTG9jYWxWdWUgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgUzMgZnJvbSAnQHNoZWxsL2NoYXJ0L3JhbmNoZXItYmFja3VwL1MzJzsKaW1wb3J0IFZ1ZXggZnJvbSAndnVleCc7CmNvbnN0IGxvY2FsVnVlID0gY3JlYXRlTG9jYWxWdWUoKTsKbG9jYWxWdWUudXNlKFZ1ZXgpOwpkZXNjcmliZSgncmFuY2hlci1iYWNrdXA6IFMzJywgKCkgPT4gewogICAgY29uc3QgbW9ja1N0b3JlID0geyBnZXR0ZXJzOiB7ICdpMThuL3QnOiAodGV4dCkgPT4gdGV4dCwgdDogKHRleHQpID0+IHRleHQgfSB9OwogICAgY29uc3Qgd3JhcHBlciA9IG1vdW50KFMzLCB7IG1vY2tzOiB7ICRzdG9yZTogbW9ja1N0b3JlIH0gfSk7CiAgICBpdCgnc2hvdWxkIGVtaXQgaW52YWxpZCB3aGVuIGZvcm0gaXMgbm90IGZpbGxlZCcsICgpID0+IHsKICAgICAgICBleHBlY3Qod3JhcHBlci5lbWl0dGVkKCd2YWxpZCcpKS50b0hhdmVMZW5ndGgoMSk7CiAgICAgICAgZXhwZWN0KHdyYXBwZXIuZW1pdHRlZCgndmFsaWQnKVswXVswXSkudG9CZUZhbHN5KCk7CiAgICB9KTsKICAgIGl0KCdzaG91bGQgZW1pdCB2YWxpZCB3aGVuIHJlcXVpcmVkIGZpZWxkcyBhcmUgZmlsbGVkJywgYXN5bmMgKCkgPT4gewogICAgICAgIGNvbnN0IGJ1Y2tldE5hbWUgPSB3cmFwcGVyLmZpbmQoJ1tkYXRhLXRlc3RpZD0iUzMtYnVja2V0TmFtZSJdJykuZmluZCgnaW5wdXQnKTsKICAgICAgICBjb25zdCBlbmRwb2ludCA9IHdyYXBwZXIuZmluZCgnW2RhdGEtdGVzdGlkPSJTMy1lbmRwb2ludCJdJykuZmluZCgnaW5wdXQnKTsKICAgICAgICBjb25zdCB0ZXN0Q2FzZXMgPSBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGJ1Y2tldE5hbWVJbnB1dDogJ3ZhbCcsCiAgICAgICAgICAgICAgICBlbmRwb2ludElucHV0OiAnJywKICAgICAgICAgICAgICAgIHJlc3VsdDogZmFsc2UKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgYnVja2V0TmFtZUlucHV0OiAnJywKICAgICAgICAgICAgICAgIGVuZHBvaW50SW5wdXQ6ICd2YWwnLAogICAgICAgICAgICAgICAgcmVzdWx0OiBmYWxzZQogICAgICAgICAgICB9CiAgICAgICAgXTsKICAgICAgICBmb3IgKGNvbnN0IHRlc3RDYXNlIG9mIHRlc3RDYXNlcykgewogICAgICAgICAgICBidWNrZXROYW1lLnNldFZhbHVlKHRlc3RDYXNlLmJ1Y2tldE5hbWVJbnB1dCk7CiAgICAgICAgICAgIGVuZHBvaW50LnNldFZhbHVlKHRlc3RDYXNlLmVuZHBvaW50SW5wdXQpOwogICAgICAgICAgICBhd2FpdCB3cmFwcGVyLnZtLiRuZXh0VGljaygpOwogICAgICAgICAgICBleHBlY3Qod3JhcHBlci5lbWl0dGVkKCd2YWxpZCcpKS50b0hhdmVMZW5ndGgoMSk7CiAgICAgICAgICAgIGV4cGVjdCh3cmFwcGVyLmVtaXR0ZWQoJ3ZhbGlkJylbMF1bMF0pLnRvQmUoZmFsc2UpOwogICAgICAgIH0KICAgICAgICBidWNrZXROYW1lLnNldFZhbHVlKCd2YWwxJyk7CiAgICAgICAgZW5kcG9pbnQuc2V0VmFsdWUoJ3ZhbDInKTsKICAgICAgICBhd2FpdCB3cmFwcGVyLnZtLiRuZXh0VGljaygpOwogICAgICAgIGV4cGVjdCh3cmFwcGVyLmVtaXR0ZWQoJ3ZhbGlkJykpLnRvSGF2ZUxlbmd0aCgyKTsKICAgICAgICBleHBlY3Qod3JhcHBlci5lbWl0dGVkKCd2YWxpZCcpWzFdWzBdKS50b0JlKHRydWUpOwogICAgfSk7Cn0pOwo="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/__tests__/S3.test.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/__tests__/S3.test.ts"],"names":[],"mappings":"AAAA,kCAAkC;AAClC,OAAO,EAAE,KAAK,EAAE,cAAc,EAAE,MAAM,iBAAiB,CAAC;AAExD,OAAO,EAAE,MAAM,gCAAgC,CAAC;AAChD,OAAO,IAAI,MAAM,MAAM,CAAC;AAExB,MAAM,QAAQ,GAAG,cAAc,EAAE,CAAC;AAElC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAEnB,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,MAAM,SAAS,GAAG,EAAE,OAAO,EAAE,EAAE,QAAQ,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC;IAC/F,MAAM,OAAO,GAAG,KAAK,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,MAAM,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC;IAE5D,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAG,EAAE;QAChE,MAAM,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,+BAA+B,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/E,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3E,MAAM,SAAS,GAAG;YAChB;gBACE,eAAe,EAAE,KAAK;gBACtB,aAAa,EAAI,EAAE;gBACnB,MAAM,EAAW,KAAK;aACvB;YACD;gBACE,eAAe,EAAE,EAAE;gBACnB,aAAa,EAAI,KAAK;gBACtB,MAAM,EAAW,KAAK;aACvB;SACF,CAAC;QAEF,KAAK,MAAM,QAAQ,IAAI,SAAS,EAAE;YAChC,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAC9C,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC1C,MAAM,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YACjD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrD;QAED,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC5B,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC1B,MAAM,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7B,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["/* eslint-disable jest/no-hooks */\nimport { mount, createLocalVue } from '@vue/test-utils';\n\nimport S3 from '@shell/chart/rancher-backup/S3';\nimport Vuex from 'vuex';\n\nconst localVue = createLocalVue();\n\nlocalVue.use(Vuex);\n\ndescribe('rancher-backup: S3', () => {\n  const mockStore = { getters: { 'i18n/t': (text: string) => text, t: (text: string) => text } };\n  const wrapper = mount(S3, { mocks: { $store: mockStore } });\n\n  it('should emit invalid when form is not filled', () => {\n    expect(wrapper.emitted('valid')).toHaveLength(1);\n    expect(wrapper.emitted('valid')![0][0]).toBeFalsy();\n  });\n\n  it('should emit valid when required fields are filled', async() => {\n    const bucketName = wrapper.find('[data-testid=\"S3-bucketName\"]').find('input');\n    const endpoint = wrapper.find('[data-testid=\"S3-endpoint\"]').find('input');\n    const testCases = [\n      {\n        bucketNameInput: 'val',\n        endpointInput:   '',\n        result:          false\n      },\n      {\n        bucketNameInput: '',\n        endpointInput:   'val',\n        result:          false\n      }\n    ];\n\n    for (const testCase of testCases) {\n      bucketName.setValue(testCase.bucketNameInput);\n      endpoint.setValue(testCase.endpointInput);\n      await wrapper.vm.$nextTick();\n      expect(wrapper.emitted('valid')).toHaveLength(1);\n      expect(wrapper.emitted('valid')![0][0]).toBe(false);\n    }\n\n    bucketName.setValue('val1');\n    endpoint.setValue('val2');\n    await wrapper.vm.$nextTick();\n    expect(wrapper.emitted('valid')).toHaveLength(2);\n    expect(wrapper.emitted('valid')![1][0]).toBe(true);\n  });\n});\n"]}]}