{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/gc/gc-route-changed.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/gc/gc-route-changed.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGdjIGZyb20gJy4vZ2MnOwpmdW5jdGlvbiBnZXRSZXNvdXJjZUZyb21Sb3V0ZSh0bykgewogICAgdmFyIF9hLCBfYjsKICAgIGxldCByZXNvdXJjZSA9IChfYSA9IHRvLnBhcmFtcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnJlc291cmNlOwogICAgaWYgKCFyZXNvdXJjZSkgewogICAgICAgIGNvbnN0IG1hdGNoID0gKF9iID0gdG8ubmFtZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLm1hdGNoKC9eYy1jbHVzdGVyLShbXi1dKykvKTsKICAgICAgICBpZiAobWF0Y2gpIHsKICAgICAgICAgICAgcmVzb3VyY2UgPSBtYXRjaFsyXTsKICAgICAgICB9CiAgICB9CiAgICByZXR1cm4gcmVzb3VyY2U7Cn0KLyoqCiAqIEhhbmRsZSBHQyBvbiByb3V0ZSBjaGFuZ2UgKGdpdmVuIHNldHRpbmdzIHRoaXMgbWlnaHQgYmUgYSBuby1vcCkKICovCmNsYXNzIEdhcmJhZ2VDb2xsZWN0Um91dGVDaGFuZ2VkIHsKICAgIC8qKgogICAgICogQSBsb2dnZWQgaW4gcm91dGUgaGFzIGNoYW5nZWQKICAgICAqIDEpIFRyYWNrIHRoZSB0aW1lIHRoaXMgb2NjdXJyZWQgdG8gZW5zdXJlIGFueSByZXNvdXJjZXMgZmV0Y2hlZCBhZnRlcndhcmRzIGFyZSBub3QgR0NkCiAgICAgKiAyKSBLaWNrIG9mZiBhIEdDCiAgICAgKi8KICAgIGdjUm91dGVDaGFuZ2VkKGN0eCwgdG8pIHsKICAgICAgICBnYy5nY1VwZGF0ZVJvdXRlQ2hhbmdlZCgpOwogICAgICAgIC8vIGNvbW1pdChgZ2NSb3V0ZUNoYW5nZWRgKTsKICAgICAgICBpZiAoIWdjLmdjRW5hYmxlZFNldHRpbmcoY3R4KSB8fCAhZ2MuZ2NFbmFibGVkUm91dGUoY3R4KSB8fCB0by5uYW1lID09PSAnYXV0aC1sb2dvdXQnKSB7CiAgICAgICAgICAgIC8vIChhdXRoLWxvZ291dCBjb252ZW5pZW5jZSwgbm8gcG9pbnQgR0MnaW5nIGlmIHdlJ3ZlIGp1c3QgbG9zdCBhbGwgdHlwZXMpCiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICAgICAgY29uc3QgcmVzb3VyY2UgPSBnZXRSZXNvdXJjZUZyb21Sb3V0ZSh0byk7CiAgICAgICAgY29uc3QgaWdub3JlVFlwZXMgPSAhIXJlc291cmNlID8geyBbcmVzb3VyY2VdOiB0cnVlIH0gOiB7fTsKICAgICAgICBjdHguZGlzcGF0Y2goJ2dhcmJhZ2VDb2xsZWN0JywgaWdub3JlVFlwZXMpOyAvLyBnYy5nYXJiYWdlQ29sbGVjdCBpcyBwZXIgc3RvcmUsIHNvIGRpc3BhdGNoIHZpYSBjZW50cmFsIHBvaW50CiAgICB9Cn0KY29uc3QgZ2NyYyA9IG5ldyBHYXJiYWdlQ29sbGVjdFJvdXRlQ2hhbmdlZCgpOwpleHBvcnQgZGVmYXVsdCBnY3JjOwo="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/gc/gc-route-changed.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/gc/gc-route-changed.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,MAAM,CAAC;AAEtB,SAAS,oBAAoB,CAAC,EAAO;;IACnC,IAAI,QAAQ,SAAG,EAAE,CAAC,MAAM,0CAAE,QAAQ,CAAC;IAEnC,IAAK,CAAC,QAAQ,EAAG;QACf,MAAM,KAAK,SAAG,EAAE,CAAC,IAAI,0CAAE,KAAK,CAAC,oBAAoB,CAAC,CAAC;QAEnD,IAAK,KAAK,EAAG;YACX,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;SACrB;KACF;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED;;GAEG;AACH,MAAM,0BAA0B;IAC9B;;;;OAIG;IACH,cAAc,CAAC,GAAQ,EAAE,EAAO;QAC9B,EAAE,CAAC,oBAAoB,EAAE,CAAC;QAC1B,4BAA4B;QAE5B,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,IAAI,KAAK,aAAa,EAAE;YACrF,0EAA0E;YAC1E,OAAO;SACR;QAED,MAAM,QAAQ,GAAG,oBAAoB,CAAC,EAAE,CAAC,CAAC;QAC1C,MAAM,WAAW,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAE3D,GAAG,CAAC,QAAQ,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAC,CAAC,gEAAgE;IAC/G,CAAC;CACF;AAED,MAAM,IAAI,GAAG,IAAI,0BAA0B,EAAE,CAAC;AAE9C,eAAe,IAAI,CAAC","sourcesContent":["import gc from './gc';\n\nfunction getResourceFromRoute(to: any) {\n  let resource = to.params?.resource;\n\n  if ( !resource ) {\n    const match = to.name?.match(/^c-cluster-([^-]+)/);\n\n    if ( match ) {\n      resource = match[2];\n    }\n  }\n\n  return resource;\n}\n\n/**\n * Handle GC on route change (given settings this might be a no-op)\n */\nclass GarbageCollectRouteChanged {\n  /**\n   * A logged in route has changed\n   * 1) Track the time this occurred to ensure any resources fetched afterwards are not GCd\n   * 2) Kick off a GC\n   */\n  gcRouteChanged(ctx: any, to: any) {\n    gc.gcUpdateRouteChanged();\n    // commit(`gcRouteChanged`);\n\n    if (!gc.gcEnabledSetting(ctx) || !gc.gcEnabledRoute(ctx) || to.name === 'auth-logout') {\n      // (auth-logout convenience, no point GC'ing if we've just lost all types)\n      return;\n    }\n\n    const resource = getResourceFromRoute(to);\n    const ignoreTYpes = !!resource ? { [resource]: true } : {};\n\n    ctx.dispatch('garbageCollect', ignoreTYpes); // gc.garbageCollect is per store, so dispatch via central point\n  }\n}\n\nconst gcrc = new GarbageCollectRouteChanged();\n\nexport default gcrc;\n"]}]}