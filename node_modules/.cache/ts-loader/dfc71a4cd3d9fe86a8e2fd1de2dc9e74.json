{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/async.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/async.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGNvbnN0IHdhaXRGb3IgPSAodGVzdEZuLCBtc2cgPSAnJywgdGltZW91dE1zID0gMzAwMDAwMCwgaW50ZXJ2YWxNcyA9IDUwMCwgbG9nID0gZmFsc2UpID0+IHsKICAgIGdhdGVkTG9nKCdTdGFydGluZyB3YWl0IGZvcicsIG1zZyk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogICAgICAgIGlmICh0ZXN0Rm4oKSkgewogICAgICAgICAgICBnYXRlZExvZygnV2FpdCBmb3InLCBtc2cgfHwgJ3Vua25vd24nLCAnZG9uZSBpbW1lZGlhdGVseScpOwogICAgICAgICAgICByZXNvbHZlKHRoaXMpOwogICAgICAgIH0KICAgICAgICBjb25zdCB0aW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgIGdhdGVkTG9nKCdXYWl0IGZvcicsIG1zZywgJ3RpbWVkIG91dCcpOwogICAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsKTsKICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpOwogICAgICAgICAgICBpZiAobXNnKSB7CiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGBGYWlsZWQgd2FpdGluZyBmb3I6ICR7bXNnfWApKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgd2FpdEZvciB0aW1lZCBvdXQgYWZ0ZXIgJHt0aW1lb3V0TXMgLyAxMDAwfSBzZWNvbmRzYCk7CiAgICAgICAgICAgIH0KICAgICAgICB9LCB0aW1lb3V0TXMpOwogICAgICAgIGNvbnN0IGludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4gewogICAgICAgICAgICBpZiAodGVzdEZuKCkpIHsKICAgICAgICAgICAgICAgIGdhdGVkTG9nKCdXYWl0IGZvcicsIG1zZywgJ2RvbmUnKTsKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpOwogICAgICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXQpOwogICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChtc2cpIHsKICAgICAgICAgICAgICAgIGdhdGVkTG9nKCdXYWl0IGZvcicsIG1zZywgJ25vdCBkb25lIHlldCcpOwogICAgICAgICAgICB9CiAgICAgICAgfSwgaW50ZXJ2YWxNcyk7CiAgICB9KTsKICAgIGZ1bmN0aW9uIGdhdGVkTG9nKC4uLmFyZ3MpIHsKICAgICAgICBpZiAobG9nKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKC4uLmFyZ3MpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGUKICAgICAgICB9CiAgICB9Cn07Cg=="},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/async.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/async.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,OAAO,GAAG,CAAC,MAAgB,EAAE,GAAG,GAAG,EAAE,EAAE,SAAS,GAAG,OAAO,EAAE,UAAU,GAAG,GAAG,EAAE,GAAG,GAAG,KAAK,EAAoB,EAAE;IAC1H,QAAQ,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;IAEnC,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,IAAI,MAAM,EAAE,EAAE;YACZ,QAAQ,CAAC,UAAU,EAAE,GAAG,IAAI,SAAS,EAAE,kBAAkB,CAAC,CAAC;YAC3D,OAAO,CAAC,IAAI,CAAC,CAAC;SACf;QACD,MAAM,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;YAC9B,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;YACvC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACxB,YAAY,CAAC,OAAO,CAAC,CAAC;YACtB,IAAI,GAAG,EAAE;gBACP,MAAM,CAAC,IAAI,KAAK,CAAC,uBAAwB,GAAI,EAAE,CAAC,CAAC,CAAC;aACnD;iBAAM;gBACL,MAAM,IAAI,KAAK,CAAC,2BAA4B,SAAS,GAAG,IAAK,UAAU,CAAC,CAAC;aAC1E;QACH,CAAC,EAAE,SAAS,CAAC,CAAC;QACd,MAAM,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE;YAChC,IAAK,MAAM,EAAE,EAAG;gBACd,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;gBAClC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACxB,YAAY,CAAC,OAAO,CAAC,CAAC;gBACtB,OAAO,CAAC,IAAI,CAAC,CAAC;aACf;iBAAM,IAAI,GAAG,EAAE;gBACd,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE,cAAc,CAAC,CAAC;aAC3C;QACH,CAAC,EAAE,UAAU,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,SAAS,QAAQ,CAAC,GAAG,IAAW;QAC9B,IAAI,GAAG,EAAE;YACP,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,iCAAiC;SACxD;IACH,CAAC;AACH,CAAC,CAAC","sourcesContent":["export const waitFor = (testFn: Function, msg = '', timeoutMs = 3000000, intervalMs = 500, log = false): Promise<unknown> => {\n  gatedLog('Starting wait for', msg);\n\n  return new Promise((resolve, reject) => {\n    if (testFn()) {\n      gatedLog('Wait for', msg || 'unknown', 'done immediately');\n      resolve(this);\n    }\n    const timeout = setTimeout(() => {\n      gatedLog('Wait for', msg, 'timed out');\n      clearInterval(interval);\n      clearTimeout(timeout);\n      if (msg) {\n        reject(new Error(`Failed waiting for: ${ msg }`));\n      } else {\n        throw new Error(`waitFor timed out after ${ timeoutMs / 1000 } seconds`);\n      }\n    }, timeoutMs);\n    const interval = setInterval(() => {\n      if ( testFn() ) {\n        gatedLog('Wait for', msg, 'done');\n        clearInterval(interval);\n        clearTimeout(timeout);\n        resolve(this);\n      } else if (msg) {\n        gatedLog('Wait for', msg, 'not done yet');\n      }\n    }, intervalMs);\n  });\n\n  function gatedLog(...args: any[]) {\n    if (log) {\n      console.log(...args); // eslint-disable-line no-console\n    }\n  }\n};\n"]}]}