{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/persistentvolume/__tests__/persistentvolume.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/persistentvolume/__tests__/persistentvolume.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgUGVyc2lzdGVudFZvbHVtZSBmcm9tICdAc2hlbGwvZWRpdC9wZXJzaXN0ZW50dm9sdW1lL2luZGV4JzsKZGVzY3JpYmUoJ3ZpZXc6IFBlcnNpc3RlbnRWb2x1bWUnLCAoKSA9PiB7CiAgICBpdCgnc2hvdWxkIGxpc3QgZW5hYmxlZCBQViBzdG9yYWdlIG9wdGlvbiBpZiBzdXBwb3J0ZWQnLCAoKSA9PiB7CiAgICAgICAgY29uc3QgcGx1Z2luID0gewogICAgICAgICAgICBsYWJlbEtleTogJ3BlcnNpc3RlbnRWb2x1bWUuY3NpLmxhYmVsJywgc3VwcG9ydGVkOiB0cnVlLCB2YWx1ZTogJ2NzaScKICAgICAgICB9OwogICAgICAgIGNvbnN0IHJlc291cmNlID0gJ1BlcnNpc3RlbnRWb2x1bWUnOwogICAgICAgIGNvbnN0IHdyYXBwZXIgPSBtb3VudChQZXJzaXN0ZW50Vm9sdW1lLCB7CiAgICAgICAgICAgIHByb3BzRGF0YTogeyB2YWx1ZTogeyBzcGVjOiB7fSB9IH0sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICAkc3RvcmU6IHsKICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaDogKCkgPT4gamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgIGdldHRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vZXhpc3RzJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RvcmU6ICgpID0+ICdjbHVzdGVyJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ZlYXR1cmVzL2dldCc6ICgpID0+IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3ByZWZzL2dldCc6ICgpID0+IHJlc291cmNlLAogICAgICAgICAgICAgICAgICAgICAgICAnY2x1c3Rlci9zY2hlbWFGb3InOiAoKSA9PiB7IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICdjbHVzdGVyL2FsbCc6ICgpID0+IFt7fV0sCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICRmZXRjaFN0YXRlOiB7CiAgICAgICAgICAgICAgICAgICAgcGVuZGluZzogZmFsc2UsIGVycm9yOiB0cnVlLCB0aW1lc3RhbXA6IERhdGUubm93KCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGU6IHsKICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsgcmVzb3VyY2UgfSwKICAgICAgICAgICAgICAgICAgICBxdWVyeTogeyBBUzogJycgfSwKICAgICAgICAgICAgICAgICAgICBoYXNoOiAnJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGVyOiB7CiAgICAgICAgICAgICAgICAgICAgY3VycmVudFJvdXRlOiB7fSwKICAgICAgICAgICAgICAgICAgICByZXBsYWNlOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN0dWJzOiB7IExhYmVsZWRTZWxlY3Q6IHRydWUgfQogICAgICAgIH0pOwogICAgICAgIGNvbnN0IHNlbGVjdCA9IHdyYXBwZXIuZmluZCgnW2RhdGEtdGVzdGlkPSJwZXJzaXN0ZW50LXZvbHVtZS1wbHVnaW4tc2VsZWN0Il0nKTsKICAgICAgICBleHBlY3Qoc2VsZWN0LnZtLm9wdGlvbnMpLnRvU3RyaWN0RXF1YWwoZXhwZWN0LmFycmF5Q29udGFpbmluZyhbcGx1Z2luXSkpOwogICAgfSk7CiAgICBpdCgnc2hvdWxkIHNlbGVjdCBjdXJyZW50IHBsdWdpbicsICgpID0+IHsKICAgICAgICBjb25zdCBwbHVnaW4gPSAnY3NpJzsKICAgICAgICBjb25zdCByZXNvdXJjZSA9ICdQZXJzaXN0ZW50Vm9sdW1lJzsKICAgICAgICBjb25zdCB3cmFwcGVyID0gbW91bnQoUGVyc2lzdGVudFZvbHVtZSwgewogICAgICAgICAgICBwcm9wc0RhdGE6IHsgdmFsdWU6IHsgc3BlYzogeyBbcGx1Z2luXTogeyB2YWx1ZTogcGx1Z2luIH0gfSB9IH0sCiAgICAgICAgICAgIG1vY2tzOiB7CiAgICAgICAgICAgICAgICAkc3RvcmU6IHsKICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaDogKCkgPT4gamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgIGdldHRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ2kxOG4vZXhpc3RzJzogamVzdC5mbigpLAogICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50U3RvcmU6ICgpID0+ICdjbHVzdGVyJywKICAgICAgICAgICAgICAgICAgICAgICAgJ2ZlYXR1cmVzL2dldCc6ICgpID0+IGplc3QuZm4oKSwKICAgICAgICAgICAgICAgICAgICAgICAgJ3ByZWZzL2dldCc6ICgpID0+IHJlc291cmNlLAogICAgICAgICAgICAgICAgICAgICAgICAnY2x1c3Rlci9zY2hlbWFGb3InOiAoKSA9PiB7IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICdjbHVzdGVyL2FsbCc6ICgpID0+IFt7fV0sCiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICRmZXRjaFN0YXRlOiB7CiAgICAgICAgICAgICAgICAgICAgcGVuZGluZzogZmFsc2UsIGVycm9yOiB0cnVlLCB0aW1lc3RhbXA6IERhdGUubm93KCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGU6IHsKICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHsgcmVzb3VyY2UgfSwKICAgICAgICAgICAgICAgICAgICBxdWVyeTogeyBBUzogJycgfSwKICAgICAgICAgICAgICAgICAgICBoYXNoOiAnJywKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAkcm91dGVyOiB7CiAgICAgICAgICAgICAgICAgICAgY3VycmVudFJvdXRlOiB7fSwKICAgICAgICAgICAgICAgICAgICByZXBsYWNlOiBqZXN0LmZuKCksCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgICBleHBlY3Qod3JhcHBlci52bS5wbHVnaW4pLnRvQmUocGx1Z2luKTsKICAgIH0pOwp9KTsK"},{"version":3,"file":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/persistentvolume/__tests__/persistentvolume.test.ts","sourceRoot":"","sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/persistentvolume/__tests__/persistentvolume.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { mount } from '@vue/test-utils';\nimport PersistentVolume from '@shell/edit/persistentvolume/index';\nimport { ExtendedVue, Vue } from 'vue/types/vue';\n\ndescribe('view: PersistentVolume', () => {\n  it('should list enabled PV storage option if supported', () => {\n    const plugin = {\n      labelKey: 'persistentVolume.csi.label', supported: true, value: 'csi'\n    };\n    const resource = 'PersistentVolume';\n    const wrapper = mount(PersistentVolume as ExtendedVue<Vue, {}, {}, {}, PersistentVolume>, {\n      propsData: { value: { spec: { } } },\n      mocks:     {\n        $store: {\n          dispatch: () => jest.fn(),\n          getters:  {\n            'i18n/t':            jest.fn(),\n            'i18n/exists':       jest.fn(),\n            currentStore:        () => 'cluster',\n            'features/get':      () => jest.fn(),\n            'prefs/get':         () => resource,\n            'cluster/schemaFor': () => {},\n            'cluster/all':       () => [{}],\n          }\n        },\n        $fetchState: {\n          pending: false, error: true, timestamp: Date.now()\n        },\n        $route: {\n          params: { resource },\n          query:  { AS: '' },\n          hash:   '',\n        },\n        $router: {\n          currentRoute: {},\n          replace:      jest.fn(),\n        }\n      },\n      stubs: { LabeledSelect: true }\n    });\n\n    const select = wrapper.find('[data-testid=\"persistent-volume-plugin-select\"]');\n\n    expect((select.vm as unknown as any).options).toStrictEqual(expect.arrayContaining([plugin]));\n  });\n\n  it('should select current plugin', () => {\n    const plugin = 'csi';\n    const resource = 'PersistentVolume';\n    const wrapper = mount(PersistentVolume as ExtendedVue<Vue, {}, {}, {}, PersistentVolume>, {\n      propsData: { value: { spec: { [plugin]: { value: plugin } } } },\n      mocks:     {\n        $store: {\n          dispatch: () => jest.fn(),\n          getters:  {\n            'i18n/t':            jest.fn(),\n            'i18n/exists':       jest.fn(),\n            currentStore:        () => 'cluster',\n            'features/get':      () => jest.fn(),\n            'prefs/get':         () => resource,\n            'cluster/schemaFor': () => {},\n            'cluster/all':       () => [{}],\n          }\n        },\n        $fetchState: {\n          pending: false, error: true, timestamp: Date.now()\n        },\n        $route: {\n          params: { resource },\n          query:  { AS: '' },\n          hash:   '',\n        },\n        $router: {\n          currentRoute: {},\n          replace:      jest.fn(),\n        }\n      }\n    });\n\n    expect(wrapper.vm.plugin).toBe(plugin);\n  });\n});\n"]}]}