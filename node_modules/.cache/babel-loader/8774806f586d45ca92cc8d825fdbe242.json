{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PercentageBar.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PercentageBar.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29ydC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0IEJhciBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9ncmFwaC9CYXInOwppbXBvcnQgeyBmb3JtYXRQZXJjZW50IH0gZnJvbSAnQHNoZWxsL3V0aWxzL3N0cmluZyc7CmV4cG9ydCB2YXIgUHJlZmVycmVkRGlyZWN0aW9uID0gewogIExFU1M6ICdMRVNTJywKICBNT1JFOiAnTU9SRScKfTsKCi8qKgogKiBBIHBlcmNlbnRhZ2UgYmFyIHdoaWNoIGNhbiBiZSB1c2VkIHRvIGRpc3BsYXkgaG93IG11Y2ggYSByZXNvdXJjZSBpcyBiZWluZyBjb25zdW1lZC4KICovCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBCYXI6IEJhcgogIH0sCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogQSB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIHBlcmNlbnRhZ2UgdG8gYmUgZGlzcGxheWVkLiAqTXVzdCBiZSBhIHZhbHVlIGJldHdlZW4gMCBhbmQgMTAwKi4KICAgICAqLwogICAgdmFsdWU6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgdmFsaWRhdG9yOiBmdW5jdGlvbiB2YWxpZGF0b3IodmFsdWUpIHsKICAgICAgICByZXR1cm4gdmFsdWUgPj0gMDsKICAgICAgfQogICAgfSwKICAgIC8qKgogICAgICogQSB2YWx1ZSB3aGljaCBpbmRpY2F0ZXMgd2hpY2ggZGlyZWN0aW9uIGlzIGJldHRlciBzbyB3ZSBjYW4gY2hhbmdlIHRoZSBjb2xvciBhcHByb3ByaWF0ZWx5IChWYWxpZCB2YWx1ZXM6ICdMRVNTJyBvciAnTU9SRScpCiAgICAgKi8KICAgIHByZWZlcnJlZERpcmVjdGlvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IFByZWZlcnJlZERpcmVjdGlvbi5MRVNTCiAgICB9LAogICAgLyoqCiAgICAgKiBEZXRlcm1pbmVzIHdoZXRoZXIgd2UgZGlzcGxheSB0aGUgbnVtZXJpY2FsIHBlcmNlbnRhZ2UgdmFsdWUgdG8gdGhlIHJpZ2h0IG9mIHRoZSBiYXIuCiAgICAgKi8KICAgIHNob3dQZXJjZW50YWdlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgLyoqCiAgICAgKiBPcHRpb25hbCBtYXAgb2YgcGVyY2VudGFnZTpjb2xvciBjbGFzcyBzdG9wcyB0byBhcHBseSB0byBiYXIKICAgICAqLwoKICAgIGNvbG9yU3RvcHM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0OiBudWxsCiAgICB9LAogICAgLyoqCiAgICAgKiBTaG93IHZlcnRpY2FsIGxpbmVzIHRvIGRlbm90ZSB3aGVyZSBtdWx0aXBsZSBzb3VyY2VzIHRoYXQgYXJlIGNvbnRyaWJ1dGluZyB0byB0aGlzIHBlcmNlbnRhZ2UgZW5kCiAgICAgKi8KICAgIHNsaWNlczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9CiAgfSwKICBjb21wdXRlZDogewogICAgcHJpbWFyeUNvbG9yOiBmdW5jdGlvbiBwcmltYXJ5Q29sb3IoKSB7CiAgICAgIHZhciBpc0xlc3MgPSB0aGlzLnByZWZlcnJlZERpcmVjdGlvbiA9PT0gUHJlZmVycmVkRGlyZWN0aW9uLkxFU1M7CiAgICAgIGlmICh0aGlzLmNvbG9yU3RvcHMpIHsKICAgICAgICB2YXIgdGhyZXNob2xkcyA9IE9iamVjdC5rZXlzKHRoaXMuY29sb3JTdG9wcykuc29ydCgpOwogICAgICAgIGlmIChpc0xlc3MpIHsKICAgICAgICAgIHZhciBpID0gdGhyZXNob2xkcy5sZW5ndGggLSAxOwogICAgICAgICAgd2hpbGUgKHRoaXMudmFsdWUgPCB0aHJlc2hvbGRzW2ldKSB7CiAgICAgICAgICAgIGktLTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiB0aGlzLmNvbG9yU3RvcHNbdGhyZXNob2xkc1tpXV07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZhciBfaSA9IDA7CiAgICAgICAgICB3aGlsZSAodGhpcy52YWx1ZSA+IHRocmVzaG9sZHNbX2ldKSB7CiAgICAgICAgICAgIF9pKys7CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gdGhpcy5jb2xvclN0b3BzW3RocmVzaG9sZHNbX2ldXTsKICAgICAgICB9CiAgICAgIH0KICAgICAgdmFyIHRocmVzaG9sZCA9IGlzTGVzcyA/IDgwIDogMjA7CiAgICAgIHZhciBsZWZ0ID0gaXNMZXNzID8gdGhpcy52YWx1ZSA6IHRocmVzaG9sZDsKICAgICAgdmFyIHJpZ2h0ID0gaXNMZXNzID8gdGhyZXNob2xkIDogdGhpcy52YWx1ZTsKICAgICAgaWYgKGxlZnQgPD0gcmlnaHQpIHsKICAgICAgICByZXR1cm4gJy0tcHJpbWFyeSc7CiAgICAgIH0KICAgICAgcmV0dXJuICctLWVycm9yJzsKICAgIH0sCiAgICBmb3JtYXR0ZWRQZXJjZW50YWdlOiBmdW5jdGlvbiBmb3JtYXR0ZWRQZXJjZW50YWdlKCkgewogICAgICByZXR1cm4gZm9ybWF0UGVyY2VudCh0aGlzLnZhbHVlKTsKICAgIH0KICB9Cn07"},{"version":3,"names":["Bar","formatPercent","PreferredDirection","LESS","MORE","components","props","value","type","Number","required","validator","preferredDirection","String","default","showPercentage","Boolean","colorStops","Object","slices","Array","_default","computed","primaryColor","isLess","thresholds","keys","sort","i","length","threshold","left","right","formattedPercentage"],"sources":["node_modules/@rancher/shell/components/PercentageBar.vue"],"sourcesContent":["<script>\nimport Bar from '@shell/components/graph/Bar';\nimport { formatPercent } from '@shell/utils/string';\n\nexport const PreferredDirection = {\n  LESS: 'LESS',\n  MORE: 'MORE'\n};\n\n/**\n * A percentage bar which can be used to display how much a resource is being consumed.\n */\nexport default {\n  components: { Bar },\n  props:      {\n    /**\n     * A value representing the percentage to be displayed. *Must be a value between 0 and 100*.\n     */\n    value: {\n      type:     Number,\n      required: true,\n      validator(value) {\n        return value >= 0;\n      }\n    },\n\n    /**\n     * A value which indicates which direction is better so we can change the color appropriately (Valid values: 'LESS' or 'MORE')\n     */\n    preferredDirection: {\n      type:    String,\n      default: PreferredDirection.LESS\n    },\n\n    /**\n     * Determines whether we display the numerical percentage value to the right of the bar.\n     */\n    showPercentage: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * Optional map of percentage:color class stops to apply to bar\n     */\n\n    colorStops: {\n      type:    Object,\n      default: null\n    },\n\n    /**\n     * Show vertical lines to denote where multiple sources that are contributing to this percentage end\n     */\n    slices: {\n      type:    Array,\n      default: () => []\n    }\n  },\n\n  computed: {\n    primaryColor() {\n      const isLess = this.preferredDirection === PreferredDirection.LESS;\n\n      if (this.colorStops) {\n        const thresholds = Object.keys(this.colorStops).sort();\n\n        if (isLess) {\n          let i = thresholds.length - 1;\n\n          while (this.value < thresholds[i]) {\n            i--;\n          }\n\n          return this.colorStops[thresholds[i]];\n        } else {\n          let i = 0;\n\n          while (this.value > thresholds[i]) {\n            i++;\n          }\n\n          return this.colorStops[thresholds[i]];\n        }\n      }\n      const threshold = isLess ? 80 : 20;\n\n      const left = isLess ? this.value : threshold;\n      const right = isLess ? threshold : this.value;\n\n      if (left <= right) {\n        return '--primary';\n      }\n\n      return '--error';\n    },\n    formattedPercentage() {\n      return formatPercent(this.value);\n    }\n  },\n};\n</script>\n\n<template>\n  <span class=\"percentage-bar\">\n    <Bar\n      :percentage=\"value\"\n      :primary-color=\"primaryColor\"\n      :slices=\"slices\"\n    />\n    <span\n      v-if=\"showPercentage\"\n      class=\"ml-5 percentage-value\"\n    >{{ formattedPercentage }}</span>\n  </span>\n</template>\n\n<style lang=\"scss\" scoped>\n.percentage-bar {\n  display: flex;\n  flex-direction: row;\n\n  .percentage-value {\n    word-break: keep-all;\n  }\n}\n</style>\n"],"mappings":";;;AACA,OAAAA,GAAA;AACA,SAAAC,aAAA;AAEA,WAAAC,kBAAA;EACAC,IAAA;EACAC,IAAA;AACA;;AAEA;AACA;AACA;AACA;EACAC,UAAA;IAAAL,GAAA,EAAAA;EAAA;EACAM,KAAA;IACA;AACA;AACA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;MACAC,SAAA,WAAAA,UAAAJ,KAAA;QACA,OAAAA,KAAA;MACA;IACA;IAEA;AACA;AACA;IACAK,kBAAA;MACAJ,IAAA,EAAAK,MAAA;MACAC,OAAA,EAAAZ,kBAAA,CAAAC;IACA;IAEA;AACA;AACA;IACAY,cAAA;MACAP,IAAA,EAAAQ,OAAA;MACAF,OAAA;IACA;IAEA;AACA;AACA;;IAEAG,UAAA;MACAT,IAAA,EAAAU,MAAA;MACAJ,OAAA;IACA;IAEA;AACA;AACA;IACAK,MAAA;MACAX,IAAA,EAAAY,KAAA;MACAN,OAAA,WAAAO,SAAA;QAAA;MAAA;IACA;EACA;EAEAC,QAAA;IACAC,YAAA,WAAAA,aAAA;MACA,IAAAC,MAAA,QAAAZ,kBAAA,KAAAV,kBAAA,CAAAC,IAAA;MAEA,SAAAc,UAAA;QACA,IAAAQ,UAAA,GAAAP,MAAA,CAAAQ,IAAA,MAAAT,UAAA,EAAAU,IAAA;QAEA,IAAAH,MAAA;UACA,IAAAI,CAAA,GAAAH,UAAA,CAAAI,MAAA;UAEA,YAAAtB,KAAA,GAAAkB,UAAA,CAAAG,CAAA;YACAA,CAAA;UACA;UAEA,YAAAX,UAAA,CAAAQ,UAAA,CAAAG,CAAA;QACA;UACA,IAAAA,EAAA;UAEA,YAAArB,KAAA,GAAAkB,UAAA,CAAAG,EAAA;YACAA,EAAA;UACA;UAEA,YAAAX,UAAA,CAAAQ,UAAA,CAAAG,EAAA;QACA;MACA;MACA,IAAAE,SAAA,GAAAN,MAAA;MAEA,IAAAO,IAAA,GAAAP,MAAA,QAAAjB,KAAA,GAAAuB,SAAA;MACA,IAAAE,KAAA,GAAAR,MAAA,GAAAM,SAAA,QAAAvB,KAAA;MAEA,IAAAwB,IAAA,IAAAC,KAAA;QACA;MACA;MAEA;IACA;IACAC,mBAAA,WAAAA,oBAAA;MACA,OAAAhC,aAAA,MAAAM,KAAA;IACA;EACA;AACA"}]}