{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cluster.x-k8s.io.machinedeployment.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cluster.x-k8s.io.machinedeployment.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CAPI","escapeHtml","sortBy","SteveModel","exceptionToErrorsArray","handleConflict","MACHINE_ROLES","notOnlyOfRole","KIND","CapiMachineDeployment","_SteveModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","spec","clusterName","clusterId","concat","metadata","namespace","cluster","$rootGetters","RANCHER_CLUSTER","_this$cluster","name","nameDisplay","_this$spec","template","infrastructureRef","kind","toLowerCase","ref","id","templateType","_this$template","_this$template2","provider","_this$template3","providerLocation","t","_this$template4","providerSize","_this$spec2","replicas","_this$status","Math","max","desired","status","_this$status2","_this$status3","updatedReplicas","_this$status4","_this$status5","unavailableReplicas","_this$status6","_this$spec3","labels","CONTROL_PLANE","_this$spec4","ETCD","_this$template5","machineConfigName","annotations","machinePools","rkeConfig","find","pool","machineConfigRef","value","scalePool","delta","_this","save","length","undefined","depth","inClusterSpec","initialValue","toJSON","quantity","liveModel","scaleTimer","clearTimeout","setTimeout","catch","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","err","errors","conflicts","wrap","_callee$","_context","prev","next","dispatch","$dispatch","sent","abrupt","title","root","stop","_x","canScaleDownPool","_this$inClusterSpec","canUpdate","infrastructureRefKind","MACHINE_INV_SELECTOR_TEMPLATES","isEtcd","isControlPlane","machines","canScaleUpPool","out","label","color","textColor","pending","sort","outdated","unavailable","ready","filter","x","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cluster.x-k8s.io.machinedeployment.js"],"sourcesContent":["import { CAPI } from '@shell/config/types';\nimport { escapeHtml } from '@shell/utils/string';\nimport { sortBy } from '@shell/utils/sort';\nimport SteveModel from '@shell/plugins/steve/steve-class';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { handleConflict } from '@shell/plugins/dashboard-store/normalize';\nimport { MACHINE_ROLES } from '@shell/config/labels-annotations';\nimport { notOnlyOfRole } from '@shell/models/cluster.x-k8s.io.machine';\nimport { KIND } from '../config/elemental-types';\n\nexport default class CapiMachineDeployment extends SteveModel {\n  get cluster() {\n    if ( !this.spec.clusterName ) {\n      return null;\n    }\n\n    const clusterId = `${ this.metadata.namespace }/${ this.spec.clusterName }`;\n\n    const cluster = this.$rootGetters['management/byId'](CAPI.RANCHER_CLUSTER, clusterId);\n\n    return cluster;\n  }\n\n  get groupByLabel() {\n    const name = this.cluster?.nameDisplay || this.spec.clusterName;\n\n    return this.$rootGetters['i18n/t']('resourceTable.groupLabel.cluster', { name: escapeHtml(name) });\n  }\n\n  get groupByPoolLabel() {\n    return `${ this.$rootGetters['i18n/t']('resourceTable.groupLabel.machinePool', { name: escapeHtml(this.nameDisplay) }) }`;\n  }\n\n  get groupByPoolShortLabel() {\n    return `${ this.$rootGetters['i18n/t']('resourceTable.groupLabel.machinePool', { name: escapeHtml(this.nameDisplay) }) }`;\n  }\n\n  get infrastructureRefKind() {\n    return this.spec?.template?.spec?.infrastructureRef?.kind;\n  }\n\n  get templateType() {\n    return this.spec.template.spec.infrastructureRef.kind ? `rke-machine.cattle.io.${ this.spec.template.spec.infrastructureRef.kind.toLowerCase() }` : null;\n  }\n\n  get template() {\n    const ref = this.spec.template.spec.infrastructureRef;\n    const id = `${ ref.namespace }/${ ref.name }`;\n    const template = this.$rootGetters['management/byId'](this.templateType, id);\n\n    return template;\n  }\n\n  get providerName() {\n    return this.template?.nameDisplay;\n  }\n\n  get providerDisplay() {\n    const provider = (this.template?.provider || '').toLowerCase();\n\n    return this.$rootGetters['i18n/withFallback'](`cluster.provider.\"${ provider }\"`, null, 'generic.unknown', true);\n  }\n\n  get providerLocation() {\n    return this.template?.providerLocation || this.t('node.list.poolDescription.noLocation');\n  }\n\n  get providerSize() {\n    return this.template?.providerSize || this.t('node.list.poolDescription.noSize');\n  }\n\n  get desired() {\n    return this.spec?.replicas || 0;\n  }\n\n  get pending() {\n    return Math.max(0, this.desired - (this.status?.replicas || 0));\n  }\n\n  get outdated() {\n    return Math.max(0, (this.status?.replicas || 0) - (this.status?.updatedReplicas || 0));\n  }\n\n  get ready() {\n    return Math.max(0, (this.status?.replicas || 0) - (this.status?.unavailableReplicas || 0));\n  }\n\n  get unavailable() {\n    return this.status?.unavailableReplicas || 0;\n  }\n\n  get isControlPlane() {\n    return `${ this.spec?.template?.metadata?.labels?.[MACHINE_ROLES.CONTROL_PLANE] }` === 'true';\n  }\n\n  get isEtcd() {\n    return `${ this.spec?.template?.metadata?.labels?.[MACHINE_ROLES.ETCD] }` === 'true';\n  }\n\n  // use this pool's definition in the cluster's rkeConfig to scale, not this.spec.replicas\n  get inClusterSpec() {\n    const machineConfigName = this.template?.metadata?.annotations['rke.cattle.io/cloned-from-name'];\n    const machinePools = this.cluster.spec.rkeConfig.machinePools;\n\n    return machinePools.find((pool) => pool.machineConfigRef.name === machineConfigName);\n  }\n\n  scalePool(delta, save = true, depth = 0) {\n    // This is used in different places with different scaling rules, so don't check if we can/cannot scale\n    if (!this.inClusterSpec) {\n      return;\n    }\n\n    const initialValue = this.cluster.toJSON();\n\n    this.inClusterSpec.quantity += delta;\n\n    if ( !save ) {\n      return;\n    }\n\n    const value = this.cluster;\n    const liveModel = this.$rootGetters['management/byId'](CAPI.RANCHER_CLUSTER, this.cluster.id);\n\n    if ( this.scaleTimer ) {\n      clearTimeout(this.scaleTimer);\n    }\n\n    this.scaleTimer = setTimeout(() => {\n      this.cluster.save().catch(async(err) => {\n        let errors = exceptionToErrorsArray(err);\n\n        if ( err.status === 409 && depth < 2 ) {\n          const conflicts = await handleConflict(initialValue, value, liveModel, this.$rootGetters, { dispatch: this.$dispatch }, 'management');\n\n          if ( conflicts === false ) {\n            // It was automatically figured out, save again\n            // (pass in the delta again as `this.inClusterSpec.quantity` would have reset from the re-fetch done in `save`)\n            return this.scalePool(delta, true, depth + 1);\n          } else {\n            errors = conflicts;\n          }\n        }\n\n        this.$dispatch('growl/fromError', {\n          title: 'Error scaling pool',\n          err:   errors\n        }, { root: true });\n      });\n    }, 1000);\n  }\n\n  // prevent scaling pool to 0 if it would scale down the only etcd or control plane node\n  canScaleDownPool() {\n    if (!this.canUpdate || this.inClusterSpec?.quantity === 0 || this.infrastructureRefKind === KIND.MACHINE_INV_SELECTOR_TEMPLATES) {\n      return false;\n    }\n\n    // scaling workers is always ok\n    if (!this.isEtcd && !this.isControlPlane) {\n      return true;\n    }\n\n    return notOnlyOfRole(this, this.cluster.machines);\n  }\n\n  // prevent scaling up pool for Elemental machines\n  canScaleUpPool() {\n    if (this.infrastructureRefKind === KIND.MACHINE_INV_SELECTOR_TEMPLATES) {\n      return false;\n    }\n\n    return true;\n  }\n\n  get showScalePool() {\n    return this.canScaleDownPool() || this.canScaleUpPool();\n  }\n\n  get stateParts() {\n    const out = [\n      {\n        label:     'Pending',\n        color:     'bg-info',\n        textColor: 'text-info',\n        value:     this.pending,\n        sort:      1,\n      },\n      {\n        label:     'Outdated',\n        color:     'bg-warning',\n        textColor: 'text-warning',\n        value:     this.outdated,\n        sort:      2,\n      },\n      {\n        label:     'Unavailable',\n        color:     'bg-error',\n        textColor: 'text-error',\n        value:     this.unavailable,\n        sort:      3,\n      },\n      {\n        label:     'Ready',\n        color:     'bg-success',\n        textColor: 'text-success',\n        value:     this.ready,\n        sort:      4,\n      },\n    ].filter((x) => x.value > 0);\n\n    return sortBy(out, 'sort:desc');\n  }\n}\n"],"mappings":"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"}]}