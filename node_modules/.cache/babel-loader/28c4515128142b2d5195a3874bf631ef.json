{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/ContainerMountPaths.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/ContainerMountPaths.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["clone","_VIEW","randomStr","Mount","ButtonDropdown","ArrayListGrouped","name","components","props","mode","type","String","default","value","Object","_default","container","data","initializeStorage","containerVolumes","storageVolumes","getStorageVolumes","selectedContainerVolumes","getSelectedContainerVolumes","computed","isView","availableVolumeOptions","_this","volumeMounts","map","item","volumes","filter","vol","includes","label","concat","headerFor","action","selectVolume","watch","neu","old","selectedVolumes","names","reduce","all","each","push","mount","methods","$set","_this$container$volum","_ref","volume","_this$container$volum2","_ref2","removeVolume","removeName","row","_ref3","event","selectedVolume","find","addVolume","toLowerCase","_type","persistentVolumeClaim","csi","volumeAttributes","_defineProperty","keys","key","_typeof","$store","getters","t","openPopover","button","$refs","buttonDropdown","togglePopover","e"],"sources":["node_modules/@rancher/shell/edit/workload/storage/ContainerMountPaths.vue"],"sourcesContent":["<script>\nimport { clone } from '@shell/utils/object';\nimport { _VIEW } from '@shell/config/query-params';\nimport { randomStr } from '@shell/utils/string';\n\nimport Mount from '@shell/edit/workload/storage/Mount';\nimport ButtonDropdown from '@shell/components/ButtonDropdown';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\n\nexport default {\n  name:       'ContainerMountPaths',\n  components: {\n    ArrayListGrouped, ButtonDropdown, Mount\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n\n    // pod spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n\n    container: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  data() {\n    this.initializeStorage();\n\n    return {\n      containerVolumes:         [],\n      storageVolumes:           this.getStorageVolumes(),\n      selectedContainerVolumes: this.getSelectedContainerVolumes()\n    };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    availableVolumeOptions() {\n      const containerVolumes = this.container.volumeMounts.map((item) => item.name);\n\n      return this.value.volumes.filter((vol) => !containerVolumes.includes(vol.name)).map((item) => {\n        return {\n          label:  `${ item.name } (${ this.headerFor(item) })`,\n          action: this.selectVolume,\n          value:  item.name\n        };\n      });\n    },\n  },\n\n  watch: {\n    value(neu, old) {\n      this.selectedVolumes = this.getSelectedContainerVolumes();\n    },\n    storageVolumes(neu, old) {\n      // removeObjects(this.value.volumes, old);\n      // addObjects(this.value.volumes, neu);\n      const names = neu.reduce((all, each) => {\n        all.push(each.name);\n\n        return all;\n      }, []);\n\n      this.container.volumeMounts = this.container.volumeMounts.filter((mount) => names.includes(mount.name));\n    },\n\n    selectedContainerVolumes(neu, old) {\n      // removeObjects(this.value.volumes, old);\n      // addObjects(this.value.volumes, neu);\n      const names = neu.map((item) => item.name);\n\n      this.container.volumeMounts = this.container.volumeMounts.filter((mount) => names.includes(mount.name));\n    }\n\n  },\n\n  methods: {\n    /**\n     * Initialize missing values for the container\n     */\n    initializeStorage() {\n      if (!this.container.volumeMounts) {\n        this.$set(this.container, 'volumeMounts', []);\n      }\n      if (!this.value.volumes) {\n        this.$set(this.value, 'volumes', []);\n      }\n    },\n\n    /**\n     * Get existing paired storage volumes\n     */\n    getStorageVolumes() {\n      // Extract volume mounts to map storage volumes\n      const { volumeMounts = [] } = this.container;\n      const names = volumeMounts.map(({ name }) => name);\n\n      // Extract storage volumes to allow mutation, if matches mount map\n      return clone(this.value.volumes.filter((volume) => names.includes(volume.name)));\n    },\n\n    getSelectedContainerVolumes() {\n      // Extract volume mounts to map storage volumes\n      const { volumeMounts = [] } = this.container;\n      const names = volumeMounts.map(({ name }) => name);\n\n      // Extract storage volumes to allow mutation, if matches mount map\n      return clone(this.value.volumes.filter((volume) => names.includes(volume.name)));\n    },\n\n    /**\n     * Remove all mounts for given storage volume\n     */\n    removeVolume(volume) {\n      const removeName = volume.row.value.name;\n\n      this.selectedContainerVolumes = this.selectedContainerVolumes.filter(({ name }) => name !== removeName);\n    },\n\n    selectVolume(event) {\n      const selectedVolume = this.value.volumes.find((vol) => vol.name === event.value);\n\n      this.selectedContainerVolumes.push(selectedVolume);\n\n      const { name } = selectedVolume;\n\n      this.container.volumeMounts.push(name);\n    },\n\n    addVolume(type) {\n      const name = `vol-${ randomStr(5).toLowerCase() }`;\n\n      if (type === 'createPVC') {\n        this.storageVolumes.push({\n          _type:                 'createPVC',\n          persistentVolumeClaim: {},\n          name,\n        });\n      } else if (type === 'csi') {\n        this.storageVolumes.push({\n          _type: type,\n          csi:   { volumeAttributes: {} },\n          name,\n        });\n      } else {\n        this.storageVolumes.push({\n          _type:  type,\n          [type]: {},\n          name,\n        });\n      }\n\n      this.container.volumeMounts.push({ name });\n    },\n\n    headerFor(value) {\n      const type = Object.keys(value).filter(\n        (key) => typeof value[key] === 'object'\n      )[0];\n\n      if (\n        this.$store.getters['i18n/exists'](`workload.storage.subtypes.${ type }`)\n      ) {\n        return this.t(`workload.storage.subtypes.${ type }`);\n      } else {\n        return type;\n      }\n    },\n\n    openPopover() {\n      const button = this.$refs.buttonDropdown;\n\n      try {\n        button.togglePopover();\n      } catch (e) {}\n    },\n  },\n};\n</script>\n\n<template>\n  <div>\n    <!-- Storage Volumes -->\n    <ArrayListGrouped\n      :key=\"selectedContainerVolumes.length\"\n      v-model=\"selectedContainerVolumes\"\n      :mode=\"mode\"\n      @remove=\"removeVolume\"\n    >\n      <!-- Custom/default storage volume form -->\n      <template #default=\"props\">\n        <h3>{{ props.row.value.name }} ({{ headerFor(props.row.value) }})</h3>\n        <Mount\n          :container=\"container\"\n          :name=\"props.row.value.name\"\n          :mode=\"mode\"\n        />\n      </template>\n\n      <!-- Add Storage Volume -->\n      <template #add>\n        <ButtonDropdown\n          v-if=\"!isView\"\n          id=\"add-volume\"\n          :button-label=\"t('workload.storage.selectVolume')\"\n          :dropdown-options=\"availableVolumeOptions\"\n          size=\"sm\"\n          @click-action=\"e=>selectVolume(e)\"\n        >\n          <template #no-options>\n            {{ t('workload.storage.noVolumes') }}\n          </template>\n        </ButtonDropdown>\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n"],"mappings":"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"}]}