{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/dashboard-store/index.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/dashboard-store/index.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","isArray","classify","actions","getters","mutations","coreStoreModule","strict","namespaced","state","_objectSpread","coreStoreState","namespace","baseUrl","isClusterStore","config","types","vuexModule","init","store","_fromServer$state","registerModule","commit","concat","process","client","module","_modules","root","_children","fromServer","window","__NUXT__","ctx","Proxy","context","get","obj","key","Object","keys","forEach","type","keyField","cache","map","Map","i","list","length","proxy","set","data","recurse","fetch","parent","rehydrateKey","_parent$rehydrateKey$","split","_parent$rehydrateKey$2","_slicedToArray","ns","x","_typeof","__rehydrate","__clone","entry","_i","_Object$keys","k","startsWith"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/dashboard-store/index.js"],"sourcesContent":["import Vue from 'vue';\n\nimport { isArray } from '@shell/utils/array';\nimport { classify } from '@shell/plugins/dashboard-store/classify';\nimport actions from './actions';\nimport getters from './getters';\nimport mutations from './mutations';\n\nexport const coreStoreModule = {\n  strict:     false,\n  namespaced: true,\n\n  state() {\n    return { ...coreStoreState() };\n  },\n\n  getters: { ...getters },\n\n  mutations: { ...mutations },\n  actions:   { ...actions },\n};\n\nexport const coreStoreState = (namespace, baseUrl, isClusterStore) => ({\n  config: {\n    baseUrl,\n    namespace,\n    isClusterStore\n  },\n  types: {},\n});\n\nexport default (vuexModule, config, init) => {\n  const namespace = config.namespace || '';\n\n  return function(store) {\n    // const inst = SteveFactory(namespace, config.baseUrl);\n\n    store.registerModule(namespace, vuexModule);\n    store.commit(`${ namespace }/applyConfig`, config);\n\n    if ( !process.client ) {\n      return;\n    }\n\n    // store.subscribe(({ type }, state) => {\n    //   if ( type === 'auth/loggedOut' ) {\n    //     store.dispatch(`${ namespace }/unsubscribe`);\n    //   }\n    // });\n\n    const module = store._modules.root._children[namespace];\n    const fromServer = window.__NUXT__;\n\n    const ctx = new Proxy(module.context, {\n      get(obj, key) {\n        if ( key === 'rootGetters' ) {\n          return store.getters;\n        }\n\n        return obj[key];\n      }\n    });\n\n    if (init) {\n      init(store, ctx);\n    }\n\n    // Turn all the objects in the store from the server into proxies\n    const state = fromServer?.state?.[namespace];\n\n    if ( state ) {\n      Object.keys(state.types).forEach((type) => {\n        const keyField = store.getters[`${ namespace }/keyFieldForType`](type);\n        const cache = state.types[type];\n        const map = new Map();\n\n        for ( let i = 0 ; i < cache.list.length ; i++ ) {\n          const proxy = classify(ctx, cache.list[i]);\n\n          cache.list[i] = proxy;\n          map.set(proxy[keyField], proxy);\n        }\n\n        Vue.set(cache, 'map', map);\n        Vue.set(state.types, type, state.types[type]);\n      });\n    }\n\n    // Turn all the objects in data from the server into the object from the store;\n    if ( state && fromServer?.data ) {\n      fromServer.data = recurse(fromServer.data);\n    }\n\n    if ( state && fromServer?.fetch ) {\n      fromServer.fetch = recurse(fromServer.fetch);\n    }\n\n    function recurse(obj, parent, key) {\n      if ( isArray(obj) ) {\n        const rehydrateKey = `__rehydrateAll__${ key }`;\n\n        if ( parent && key && parent[rehydrateKey] ) {\n          const [ns, type] = parent[rehydrateKey].split('/', 2);\n\n          if ( ns === namespace ) {\n            // Don't delete the key, so that all the stores go through this path,\n            // and then do nothing if they are not for this namespace,\n            // instead of doing the else obj.map()\n            // and breaking the \"live\" reference to the cache.list array\n            // delete parent[rehydrateKey];\n\n            const cache = state.types[type];\n\n            if ( cache ) {\n              return cache.list;\n            }\n          }\n        } else {\n          return obj.map((x) => recurse(x));\n        }\n      } else if ( obj && typeof obj === 'object' ) {\n        if ( obj.__rehydrate ) {\n          if ( obj.__rehydrate !== namespace ) {\n            // Ignore types that are for another vuex namespace\n            return obj;\n          }\n\n          const type = obj.type;\n          const cache = state.types[type];\n\n          if ( cache && !obj.__clone ) {\n            const map = cache.map;\n            const keyField = store.getters[`${ namespace }/keyFieldForType`](type);\n            const entry = map.get(obj[keyField]);\n\n            // Map the object to the same instance in the store if possible\n            if ( entry ) {\n              return entry;\n            }\n          }\n\n          // Or just return a proxied object\n          delete obj.__rehydrate;\n\n          return classify(ctx, obj);\n        } else {\n          for ( const k of Object.keys(obj) ) {\n            if ( k.startsWith('__rehydrateAll__') ) {\n              continue;\n            }\n\n            if ( isArray(obj[k]) || typeof obj[k] === 'object' ) {\n              obj[k] = recurse(obj[k], obj, k);\n            }\n          }\n        }\n      }\n\n      return obj;\n    }\n  };\n};\n"],"mappings":"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"}]}