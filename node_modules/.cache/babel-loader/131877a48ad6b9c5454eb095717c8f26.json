{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","CLUSTER_BADGE","AsyncButton","Card","Banner","ClusterBadge","ClusterProviderIcon","exceptionToErrorsArray","Checkbox","LabeledInput","ColorInput","parseColor","textColor","NORMAN","name","components","data","useCustomBadge","errors","badgeBgColor","badgeDescription","badgeAsIcon","letter","fetch","_this$currentCluster$","currentCluster","metadata","annotations","_this$currentCluster$2","_this$badgeDescriptio","_this$currentCluster$3","_this$currentCluster$4","_this$currentCluster$5","TEXT","length","COLOR","ICON_TEXT","substring","computed","_objectSpread","previewColor","canSubmit","previewCluster","isLocal","providerNavLogo","badge","text","color","iconText","toUpperCase","mode","methods","close","$emit","apply","buttonDone","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","norman","wrap","_callee$","_context","prev","next","$store","dispatch","type","CLUSTER","id","sent","$set","save","t0","stop"],"sources":["node_modules/@rancher/shell/dialog/AddCustomBadgeDialog.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { CLUSTER_BADGE } from '@shell/config/labels-annotations';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport { Banner } from '@components/Banner';\nimport ClusterBadge from '@shell/components/ClusterBadge';\nimport ClusterProviderIcon from '@shell/components/ClusterProviderIcon';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport ColorInput from '@shell/components/form/ColorInput';\nimport { parseColor, textColor } from '@shell/utils/color';\nimport { NORMAN } from '@shell/config/types';\n\nexport default {\n  name:       'AddCustomBadgeDialog',\n  components: {\n    Card,\n    AsyncButton,\n    Banner,\n    Checkbox,\n    LabeledInput,\n    ColorInput,\n    ClusterBadge,\n    ClusterProviderIcon,\n  },\n\n  data() {\n    return {\n      useCustomBadge:   null,\n      errors:           [],\n      badgeBgColor:     '',\n      badgeDescription: '',\n      badgeAsIcon:      null,\n      letter:           '',\n    };\n  },\n\n  fetch() {\n    if (this.currentCluster.metadata?.annotations) {\n      this.badgeDescription = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.TEXT];\n      this.useCustomBadge = this.badgeDescription?.length > 0;\n      this.badgeDescription = this.badgeDescription || 'Example Text';\n      this.badgeBgColor = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.COLOR] || '#ff0000';\n\n      this.badgeAsIcon = !!this.currentCluster.metadata?.annotations[CLUSTER_BADGE.ICON_TEXT] || false;\n\n      this.letter = this.currentCluster.metadata?.annotations[CLUSTER_BADGE.ICON_TEXT] || this.badgeDescription.substring(0, 2);\n    }\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n\n    previewColor() {\n      return textColor(parseColor(this.badgeBgColor)) || '#ffffff';\n    },\n    canSubmit() {\n      return this.badgeDescription.length >= 1;\n    },\n    // Fake cluster object for use with badge component\n    previewCluster() {\n      // Make cluster object that is enough for the badge component to work\n      return {\n        isLocal:         this.currentCluster.isLocal,\n        providerNavLogo: this.currentCluster.providerNavLogo,\n        badge:           {\n          text:      this.badgeDescription,\n          color:     this.badgeBgColor,\n          textColor: textColor(parseColor(this.badgeBgColor)),\n          iconText:  this.badgeAsIcon ? this.letter.toUpperCase() : '',\n        }\n      };\n    },\n\n    mode() {\n      return !!this.useCustomBadge ? 'edit' : 'view';\n    },\n  },\n\n  methods: {\n    close() {\n      this.$emit('close');\n    },\n\n    async apply(buttonDone) {\n      try {\n        // Fetch the Norman cluster object\n        const norman = await this.$store.dispatch('rancher/find', { type: NORMAN.CLUSTER, id: this.currentCluster.id });\n\n        delete norman.annotations[CLUSTER_BADGE.TEXT];\n        delete norman.annotations[CLUSTER_BADGE.COLOR];\n        delete norman.annotations[CLUSTER_BADGE.ICON_TEXT];\n\n        if (this.useCustomBadge) {\n          this.$set(norman.annotations, CLUSTER_BADGE.TEXT, this.badgeDescription);\n          this.$set(norman.annotations, CLUSTER_BADGE.COLOR, this.badgeBgColor);\n          if (this.badgeAsIcon) {\n            this.$set(norman.annotations, CLUSTER_BADGE.ICON_TEXT, this.letter.toUpperCase());\n          }\n        }\n\n        await norman.save();\n\n        buttonDone(true);\n        this.close();\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        buttonDone(false);\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Card\n    class=\"prompt-badge\"\n    :show-highlight-border=\"false\"\n  >\n    <h4\n      slot=\"title\"\n      class=\"text-default-text\"\n    >\n      {{ t('clusterBadge.modal.title') }}\n    </h4>\n\n    <div\n      slot=\"body\"\n      class=\"pl-10 pr-10 cluster-badge-body\"\n    >\n      <div>{{ t('clusterBadge.modal.previewTitle') }}</div>\n\n      <div class=\"mt-10 pl-20 row preview-row\">\n        <div class=\"badge-preview col span-12\">\n          <ClusterProviderIcon\n            v-if=\"useCustomBadge\"\n            :cluster=\"previewCluster\"\n          />\n          <ClusterProviderIcon\n            v-else\n            :cluster=\"currentCluster\"\n          />\n          <div class=\"cluster-name\">\n            {{ currentCluster.nameDisplay }}\n          </div>\n          <ClusterBadge\n            v-if=\"useCustomBadge\"\n            :cluster=\"previewCluster\"\n          />\n        </div>\n      </div>\n\n      <div class=\"row mt-10\">\n        <div class=\"col\">\n          <Checkbox\n            v-model=\"useCustomBadge\"\n            :label=\"t('clusterBadge.modal.checkbox')\"\n            class=\"mt-10\"\n          />\n        </div>\n      </div>\n\n      <div class=\"options\">\n        <div class=\"row mt-10\">\n          <div class=\"col span-12\">\n            <LabeledInput\n              v-model.trim=\"badgeDescription\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.description')\"\n              :maxlength=\"32\"\n              :required=\"true\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mt-10\">\n          <div class=\"col span-12\">\n            <ColorInput\n              v-model=\"badgeBgColor\"\n              :mode=\"mode\"\n              :default-value=\"badgeBgColor\"\n              :label=\"t('clusterBadge.modal.badgeBgColor')\"\n            />\n          </div>\n        </div>\n\n        <div class=\"row mt-10\">\n          <div class=\"col\">\n            <Checkbox\n              v-model=\"badgeAsIcon\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.badgeAsIcon')\"\n              class=\"mt-10\"\n              :tooltip=\"t('clusterBadge.modal.maxCharsTooltip')\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-10\">\n          <div class=\"col\">\n            <LabeledInput\n              v-model.trim=\"letter\"\n              :disabled=\"!badgeAsIcon\"\n              class=\"badge-icon-text\"\n              :mode=\"mode\"\n              :label=\"t('clusterBadge.modal.iconText')\"\n              :maxlength=\"2\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div\n      slot=\"actions\"\n      class=\"bottom\"\n    >\n      <Banner\n        v-for=\"(err, i) in errors\"\n        :key=\"i\"\n        color=\"error\"\n        :label=\"err\"\n      />\n      <div class=\"buttons\">\n        <button\n          class=\"btn role-secondary mr-10\"\n          @click=\"close\"\n        >\n          {{ t('generic.cancel') }}\n        </button>\n        <AsyncButton\n          :action-label=\"t('clusterBadge.modal.buttonAction')\"\n          :disabled=\"!canSubmit\"\n          @click=\"apply\"\n        />\n      </div>\n    </div>\n  </Card>\n</template>\n<style lang='scss' scoped>\n  .prompt-badge {\n    margin: 0;\n\n    .cluster-badge-body {\n      min-height: 50px;\n      display: flex;\n      flex-direction: column;\n\n      .preview-row {\n        height: 32px;\n\n        .badge-preview {\n          align-items: center;\n          display: flex;\n          height: 32px;\n          white-space: nowrap;\n\n          .cluster-name {\n            margin: 0 10px;\n            font-size: 16px;\n          }\n\n          .cluster-badge-icon-preview {\n            width: 32px;\n            height: 32px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 5px;\n            font-weight: bold;\n          }\n\n          .cluster-badge-preview {\n            cursor: default;\n            border-radius: 10px;\n            font-size: 12px;\n            padding: 2px 10px;\n          }\n        }\n      }\n\n      ::v-deep .badge-icon-text input {\n        text-transform: uppercase;\n      }\n    }\n  }\n\n  .bottom {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n\n    .banner {\n      margin-top: 0;\n    }\n\n    .buttons {\n      display: flex;\n      justify-content: flex-end;\n      width: 100%;\n    }\n  }\n\n</style>\n"],"mappings":"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"}]}