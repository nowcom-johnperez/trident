{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/ReceiverIcons.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/formatter/ReceiverIcons.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgeyBSRUNFSVZFUlNfVFlQRVMgfSBmcm9tICdAc2hlbGwvZWRpdC9tb25pdG9yaW5nLmNvcmVvcy5jb20uYWxlcnRtYW5hZ2VyY29uZmlnL3JlY2VpdmVyQ29uZmlnLnZ1ZSc7CmltcG9ydCB7IE1PTklUT1JJTkcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgcm93OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICB0eXBlczogZnVuY3Rpb24gdHlwZXMoKSB7CiAgICAgIHZhciBfdGhpcyRyb3csCiAgICAgICAgX3RoaXMgPSB0aGlzOwogICAgICAvLyBnZXQgY291bnQgYW5kIGxvZ28gZm9yIGFsbCBjb25maWd1cmVkIHR5cGVzIGluIGV2ZXJ5IHJlY2VpdmVyIGluIHRoZSBhbGVydG1hbmFnZXJjb25maWcKICAgICAgaWYgKCgoX3RoaXMkcm93ID0gdGhpcy5yb3cpID09PSBudWxsIHx8IF90aGlzJHJvdyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkcm93LnR5cGUpID09PSBNT05JVE9SSU5HLkFMRVJUTUFOQUdFUkNPTkZJRykgewogICAgICAgIHZhciBfdGhpcyRyb3cyOwogICAgICAgIHZhciByZWNlaXZlcnMgPSAoX3RoaXMkcm93MiA9IHRoaXMucm93KSA9PT0gbnVsbCB8fCBfdGhpcyRyb3cyID09PSB2b2lkIDAgfHwgKF90aGlzJHJvdzIgPSBfdGhpcyRyb3cyLnNwZWMpID09PSBudWxsIHx8IF90aGlzJHJvdzIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHJvdzIucmVjZWl2ZXJzOwogICAgICAgIGlmIChyZWNlaXZlcnMgJiYgcmVjZWl2ZXJzLmxlbmd0aCA+IDApIHsKICAgICAgICAgIHJldHVybiByZWNlaXZlcnMucmVkdWNlKGZ1bmN0aW9uICh0b3RhbHMsIHJlY2VpdmVyKSB7CiAgICAgICAgICAgIHZhciBjb3VudHMgPSBfdGhpcy5nZXRSZWNlaXZlclR5cGVzKHJlY2VpdmVyKTsKICAgICAgICAgICAgT2JqZWN0LmtleXMoY291bnRzKS5mb3JFYWNoKGZ1bmN0aW9uICh0eXBlKSB7CiAgICAgICAgICAgICAgaWYgKCF0b3RhbHNbdHlwZV0pIHsKICAgICAgICAgICAgICAgIHRvdGFsc1t0eXBlXSA9IHsKICAgICAgICAgICAgICAgICAgY291bnQ6IGNvdW50c1t0eXBlXS5jb3VudCwKICAgICAgICAgICAgICAgICAgbG9nbzogY291bnRzW3R5cGVdLmxvZ28KICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRvdGFsc1t0eXBlXS5jb3VudCArPSBjb3VudHNbdHlwZV0uY291bnQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcmV0dXJuIHRvdGFsczsKICAgICAgICAgIH0sIHt9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gaWYgbm90IGFsZXJ0bWFuYWdlcmNvbmZpZywgdGhpcyBpcyBhbiBpbmRpdmlkdWFsIHJlY2VpdmVyCiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0UmVjZWl2ZXJUeXBlcyh0aGlzLnJvdyk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIGdldCBjb3VudCBhbmQgbG9nbyBmb3IgZWFjaCB0eXBlIGNvbmZpZ3VyZWQgaW4gYSBnaXZlbiByZWNlaXZlcgogICAgZ2V0UmVjZWl2ZXJUeXBlczogZnVuY3Rpb24gZ2V0UmVjZWl2ZXJUeXBlcyhyZWNlaXZlcikgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgLy8gaXRlcmF0ZSB0aHJvdWdoIHByZWRlZmluZWQgdHlwZXMgYW5kIHN1bSB0aGUgbnVtYmVyIGNvbmZpZ3VyZWQgaW4gdGhpcyByZWNlaXZlcgogICAgICB2YXIgdHlwZXMgPSBSRUNFSVZFUlNfVFlQRVMucmVkdWNlKGZ1bmN0aW9uICh0eXBlcywgdHlwZSkgewogICAgICAgIHZhciBfcmVjZWl2ZXIkdHlwZSRrZXk7CiAgICAgICAgaWYgKHR5cGUubmFtZSAhPT0gJ2N1c3RvbScgJiYgKHJlY2VpdmVyID09PSBudWxsIHx8IHJlY2VpdmVyID09PSB2b2lkIDAgfHwgKF9yZWNlaXZlciR0eXBlJGtleSA9IHJlY2VpdmVyW3R5cGUua2V5XSkgPT09IG51bGwgfHwgX3JlY2VpdmVyJHR5cGUka2V5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVjZWl2ZXIkdHlwZSRrZXkubGVuZ3RoKSA+IDApIHsKICAgICAgICAgIHZhciBfcmVjZWl2ZXIkdHlwZSRrZXkyOwogICAgICAgICAgdHlwZXNbX3RoaXMyLnQodHlwZS5sYWJlbCldID0gewogICAgICAgICAgICBjb3VudDogcmVjZWl2ZXIgPT09IG51bGwgfHwgcmVjZWl2ZXIgPT09IHZvaWQgMCB8fCAoX3JlY2VpdmVyJHR5cGUka2V5MiA9IHJlY2VpdmVyW3R5cGUua2V5XSkgPT09IG51bGwgfHwgX3JlY2VpdmVyJHR5cGUka2V5MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3JlY2VpdmVyJHR5cGUka2V5Mi5sZW5ndGgsCiAgICAgICAgICAgIGxvZ286IHR5cGUubG9nbwogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHR5cGVzOwogICAgICB9LCB7fSk7CgogICAgICAvLyBpZiB0aGVyZSBhcmUga2V5cyBvdGhlciB0aGFuIHRob3NlIGRlZmluZWQgaW4gUkVDRUlWRVJTX1RZUEVTIGFuZCAnbmFtZScsIGFzc3VtZSB0aGV5J3JlIGN1c3RvbSB0eXBlcyBhbmQgc3VtIHRoZW0gdW5kZXIgImN1c3RvbSIKICAgICAgdmFyIGV4cGVjdGVkS2V5cyA9IFJFQ0VJVkVSU19UWVBFUy5tYXAoZnVuY3Rpb24gKHR5cGUpIHsKICAgICAgICByZXR1cm4gdHlwZS5rZXk7CiAgICAgIH0pLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgcmV0dXJuIGtleSAhPT0gJ2N1c3RvbSc7CiAgICAgIH0pOwogICAgICBleHBlY3RlZEtleXMucHVzaCgnbmFtZScpOwogICAgICB2YXIgY3VzdG9tS2V5cyA9IE9iamVjdC5rZXlzKHJlY2VpdmVyKS5maWx0ZXIoZnVuY3Rpb24gKGtleSkgewogICAgICAgIHJldHVybiAhZXhwZWN0ZWRLZXlzLmluY2x1ZGVzKGtleSk7CiAgICAgIH0pOwogICAgICBpZiAoY3VzdG9tS2V5cy5sZW5ndGggPiAwKSB7CiAgICAgICAgdmFyIGN1c3RvbVR5cGUgPSBSRUNFSVZFUlNfVFlQRVMuZmluZChmdW5jdGlvbiAodHlwZSkgewogICAgICAgICAgcmV0dXJuIHR5cGUubmFtZSA9PT0gJ2N1c3RvbSc7CiAgICAgICAgfSk7CiAgICAgICAgdmFyIGN1c3RvbUxhYmVsID0gdGhpcy50KGN1c3RvbVR5cGUubGFiZWwpOwogICAgICAgIHR5cGVzW2N1c3RvbUxhYmVsXSA9IHsKICAgICAgICAgIGNvdW50OiBjdXN0b21LZXlzLmxlbmd0aCwKICAgICAgICAgIGxvZ286IGN1c3RvbVR5cGUubG9nbwogICAgICAgIH07CiAgICAgIH0KICAgICAgcmV0dXJuIHR5cGVzOwogICAgfSwKICAgIGNvdW50RGlzcGxheTogZnVuY3Rpb24gY291bnREaXNwbGF5KHR5cGUsIGNvdW50KSB7CiAgICAgIGlmIChjb3VudCA+IDEpIHsKICAgICAgICByZXR1cm4gIiIuY29uY2F0KHR5cGUsICIoeCIpLmNvbmNhdChjb3VudCwgIikiKTsKICAgICAgfQogICAgICByZXR1cm4gdHlwZTsKICAgIH0KICB9Cn07"},{"version":3,"names":["RECEIVERS_TYPES","MONITORING","props","value","type","String","default","row","Object","required","computed","types","_this$row","_this","ALERTMANAGERCONFIG","_this$row2","receivers","spec","length","reduce","totals","receiver","counts","getReceiverTypes","keys","forEach","count","logo","methods","_this2","_receiver$type$key","name","key","_receiver$type$key2","t","label","expectedKeys","map","filter","push","customKeys","includes","customType","find","customLabel","countDisplay","concat"],"sources":["node_modules/@rancher/shell/components/formatter/ReceiverIcons.vue"],"sourcesContent":["<script>\nimport { RECEIVERS_TYPES } from '@shell/edit/monitoring.coreos.com.alertmanagerconfig/receiverConfig.vue';\nimport { MONITORING } from '@shell/config/types';\nexport default {\n  props: {\n    value: {\n      type:    String,\n      default: ''\n    },\n    row: {\n      type:     Object,\n      required: true\n    }\n  },\n  computed: {\n\n    types() {\n    // get count and logo for all configured types in every receiver in the alertmanagerconfig\n      if (this.row?.type === MONITORING.ALERTMANAGERCONFIG) {\n        const receivers = this.row?.spec?.receivers;\n\n        if (receivers && receivers.length > 0) {\n          return receivers.reduce((totals, receiver) => {\n            const counts = this.getReceiverTypes(receiver);\n\n            Object.keys(counts).forEach((type) => {\n              if (!totals[type]) {\n                totals[type] = {\n                  count: counts[type].count,\n                  logo:  counts[type].logo\n                };\n              } else {\n                totals[type].count += counts[type].count;\n              }\n            });\n\n            return totals;\n          }, {});\n        }\n\n        return null;\n      } else {\n        // if not alertmanagerconfig, this is an individual receiver\n        return this.getReceiverTypes(this.row);\n      }\n    }\n  },\n  methods: {\n    // get count and logo for each type configured in a given receiver\n    getReceiverTypes(receiver) {\n      // iterate through predefined types and sum the number configured in this receiver\n      const types = RECEIVERS_TYPES\n        .reduce((types, type) => {\n          if (type.name !== 'custom' && receiver?.[type.key]?.length > 0) {\n            types[this.t(type.label)] = { count: receiver?.[type.key]?.length, logo: type.logo };\n          }\n\n          return types;\n        }, {});\n\n      // if there are keys other than those defined in RECEIVERS_TYPES and 'name', assume they're custom types and sum them under \"custom\"\n      const expectedKeys = RECEIVERS_TYPES.map((type) => type.key).filter((key) => key !== 'custom');\n\n      expectedKeys.push('name');\n      const customKeys = Object.keys(receiver)\n        .filter((key) => !expectedKeys.includes(key));\n\n      if (customKeys.length > 0) {\n        const customType = RECEIVERS_TYPES.find((type) => type.name === 'custom');\n        const customLabel = this.t(customType.label);\n\n        types[customLabel] = { count: customKeys.length, logo: customType.logo };\n      }\n\n      return types;\n    },\n\n    countDisplay(type, count) {\n      if (count > 1) {\n        return `${ type }(x${ count })`;\n      }\n\n      return type;\n    }\n  }\n};\n</script>\n\n<template>\n  <span class=\"name-container\">\n    <template v-for=\"(type, key, i) in types\">\n      <div\n        :key=\"key\"\n        class=\"logo\"\n      >\n        <img :src=\"type.logo\">\n      </div>\n      <span :key=\"key+i\">\n        <span\n          v-if=\"i<Object.keys(types).length-1\"\n          class=\"comma\"\n        >\n          {{ `${countDisplay(key, type.count)}, ` }}\n        </span>\n        <span v-else>\n          {{ countDisplay(key, type.count) }}\n        </span>\n      </span>\n\n    </template>\n  </span>\n</template>\n\n<style scoped lang='scss'>\n  .logo{\n    display: inline;\n    height: 1.3em;\n\n    img{\n      height: 1.3em;\n    }\n  }\n  .name-container{\n    display: flex;\n    align-items: center;\n  }\n  .comma{\n    margin-right: 2px;\n  }\n</style>\n"],"mappings":"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"}]}