{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/ClusterSelector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/ClusterSelector.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isEmpty","LabeledSelect","mapGetters","findBy","sortBy","MANAGED_CONFIG_KEYS","OTHER_CONFIG_KEYS","CLUSTER_TYPES","group","id","label","configKeys","components","props","value","type","Object","default","_default","data","clusterType","clusterTypes","computed","_objectSpread","provider","currentCluster","status","toLowerCase","watch","oldClusterType","_findBy","oldConfigKeys","$set","coreDns","kubeDns","setClusterTypeEnabledValues","prometheus","prometheusSpec","resources","limits","requests","_findBy2","global","cattle","windows","enabled","$emit","created","matchedProvider","methods","_ref","_this","_ref2","_slicedToArray","_ref2$","keyNames","_ref2$2","valueToSet","forEach","kn"],"sources":["node_modules/@rancher/shell/chart/monitoring/ClusterSelector.vue"],"sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { mapGetters } from 'vuex';\nimport { findBy } from '@shell/utils/array';\nimport sortBy from 'lodash/sortBy';\n\nconst MANAGED_CONFIG_KEYS = [\n  'kubeControllerManager',\n  'kubeScheduler',\n  'kubeEtcd',\n  'kubeProxy',\n];\n\nconst OTHER_CONFIG_KEYS = [\n  'kubeControllerManager',\n  'kubeScheduler',\n  'kubeEtcd',\n  'kubeProxy',\n];\n\nconst CLUSTER_TYPES = [\n  {\n    group:      'managed',\n    id:         'aks',\n    label:      'cluster.provider.azureaks',\n    configKeys: MANAGED_CONFIG_KEYS,\n  },\n  {\n    group:      'managed',\n    id:         'eks',\n    label:      'cluster.provider.amazoneks',\n    configKeys: MANAGED_CONFIG_KEYS,\n  },\n  {\n    group:      'managed',\n    id:         'gke',\n    label:      'cluster.provider.googlegke',\n    configKeys: MANAGED_CONFIG_KEYS,\n  },\n  {\n    group:      'k3s',\n    id:         'k3s',\n    label:      'cluster.provider.k3s',\n    configKeys: ['k3sControllerManager', 'k3sScheduler', 'k3sProxy', 'k3sServer'],\n  },\n  {\n    group:      'kubeadm',\n    id:         'kubeadm',\n    label:      'cluster.provider.kubeAdmin',\n    configKeys: [\n      'kubeAdmControllerManager',\n      'kubeAdmScheduler',\n      'kubeAdmProxy',\n      'kubeAdmEtcd',\n    ],\n  },\n  {\n    group:      'other',\n    id:         'other',\n    label:      'cluster.provider.other',\n    configKeys: OTHER_CONFIG_KEYS,\n  },\n  {\n    group:      'rke',\n    id:         'rke',\n    label:      'cluster.provider.rke',\n    configKeys: ['rkeControllerManager', 'rkeScheduler', 'rkeProxy', 'rkeEtcd'],\n  },\n  {\n    group:      'rke',\n    id:         'rke2', // rke federal\n    label:      'cluster.provider.rke2',\n    configKeys: [\n      'rke2ControllerManager',\n      'rke2Scheduler',\n      'rke2Proxy',\n      'rke2Etcd',\n    ],\n  },\n  {\n    group:      'rke',\n    id:         'rke.windows',\n    label:      'cluster.provider.rkeWindows',\n    configKeys: ['rkeControllerManager', 'rkeScheduler', 'rkeProxy', 'rkeEtcd'],\n  },\n];\n\nexport default {\n  components: { LabeledSelect },\n  props:      {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  data() {\n    return {\n      clusterType:  null,\n      clusterTypes: sortBy(CLUSTER_TYPES, 'id'),\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    provider() {\n      return this.currentCluster.status.provider.toLowerCase();\n    },\n  },\n\n  watch: {\n    // This method is not that dissimilar to persistentStorageType in Grafana config\n    // The reason for the divergence is that Grafana has a subkey on the chart\n    // where these keys are at the root of the chart. Vue complains about calling\n    // this.$set(this, 'value', obj) as we need to do here to reset the values in bulk.\n    // So rather than call each set on each line individually I give you this.\n    clusterType(clusterType, oldClusterType) {\n      if (isEmpty(clusterType)) {\n        return;\n      }\n\n      if (!isEmpty(oldClusterType)) {\n        const { configKeys: oldConfigKeys } = findBy(\n          this.clusterTypes,\n          'id',\n          oldClusterType.id\n        );\n\n        if (oldClusterType.group === 'managed') {\n          if (oldClusterType.id === 'gke') {\n            this.$set(this.value.coreDns, 'enabled', true);\n            this.$set(this.value.kubeDns, 'enabled', false);\n          }\n        } else if (oldClusterType.group !== 'other') { // old cluster type only sets some values to false, if they need to be reset true it will happen below\n          this.setClusterTypeEnabledValues([oldConfigKeys, false]);\n        }\n\n        if (oldClusterType.group === 'k3s') {\n          this.$set(this.value.prometheus.prometheusSpec.resources.limits, 'memory', '1500Mi');\n          this.$set(this.value.prometheus.prometheusSpec.resources.requests, 'memory', '750Mi');\n        }\n      }\n      const { configKeys } = findBy(this.clusterTypes, 'id', clusterType.id);\n\n      if (clusterType.group === 'other') {\n        this.setClusterTypeEnabledValues([configKeys, false]);\n      } else if (clusterType.group === 'managed') {\n        this.setClusterTypeEnabledValues([configKeys, false]);\n\n        if (clusterType.id === 'gke') {\n          this.$set(this.value.coreDns, 'enabled', false);\n          this.$set(this.value.kubeDns, 'enabled', true);\n        }\n      } else {\n        this.setClusterTypeEnabledValues([configKeys, true]);\n      }\n\n      if (clusterType.group === 'k3s') {\n        this.$set(this.value.prometheus.prometheusSpec.resources.limits, 'memory', '3000Mi');\n        this.$set(this.value.prometheus.prometheusSpec.resources.requests, 'memory', '1750Mi');\n      }\n\n      if (clusterType.id === 'rke.windows') {\n        if (!this.value.global.cattle.windows) {\n          this.$set(this.value.global.cattle, 'windows', { enabled: true });\n        } else {\n          this.value.global.cattle.windows.enabled = true;\n        }\n      } else if (oldClusterType && oldClusterType.id === 'rke.windows') {\n        delete this.value.global.cattle.windows;\n      }\n      this.$emit('onClusterTypeChanged', clusterType);\n    },\n  },\n\n  created() {\n    const { provider, clusterTypes } = this;\n    const matchedProvider = findBy(clusterTypes, 'id', provider);\n\n    if (isEmpty(matchedProvider)) {\n      this.clusterType = findBy(this.clusterTypes, 'id', 'other');\n    } else {\n      this.clusterType = matchedProvider;\n    }\n  },\n\n  methods: {\n    setClusterTypeEnabledValues([keyNames = [], valueToSet = false]) {\n      const { value } = this;\n\n      keyNames.forEach((kn) => {\n        if (!value[kn]) {\n          this.$set(value, kn, {});\n        }\n        this.$set(value[kn], 'enabled', valueToSet);\n      });\n    },\n  },\n};\n</script>\n\n<template>\n  <LabeledSelect\n    v-model=\"clusterType\"\n    :label=\"t('monitoring.clusterType.label')\"\n    :placeholder=\"t('monitoring.clusterType.placeholder')\"\n    :localized-label=\"true\"\n    :options=\"clusterTypes\"\n  />\n</template>\n"],"mappings":"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"}]}