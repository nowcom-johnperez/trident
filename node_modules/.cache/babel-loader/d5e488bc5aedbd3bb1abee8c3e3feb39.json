{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cloudcredential.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cloudcredential.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["SECRET_TYPES","TYPES","MANAGEMENT","NORMAN","SCHEMA","DEFAULT_WORKSPACE","CreateEditView","NameNsDescription","CruResource","_CREATE","Loading","Labels","HIDE_SENSITIVE","CAPI","clear","uniq","SelectIconGrid","sortBy","ucFirst","set","mapFeature","RKE2","RKE2_FEATURE","rke1Supports","name","components","mixins","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","schema","k","id","wrap","_callee$","_context","prev","next","$store","dispatch","type","NODE_DRIVER","nodeDrivers","sent","KONTAINER_DRIVER","kontainerDrivers","CLOUD_CREDENTIAL","opt","force","url","concat","t0","keys","resourceFields","t1","done","value","endsWith","abrupt","getters","t2","_name","provider","selectType","stop","data","computed","rke2Enabled","storeOverride","driverName","_this$value","cloudComponent","secretSubTypes","_this2","out","drivers","_toConsumableArray","filter","x","spec","active","map","displayName","types","includes","_schema$resourceField","key","subSchemaName","subSchema","fields","Object","length","push","_iterator","_createForOfIteratorHelper","_step","s","n","bannerImage","bannerAbbrv","require","e","initialDisplayFor","label","typeDisplay","CREDENTIAL_DRIVER","err","f","hideSensitiveData","doneRoute","methods","saveCredential","btnCb","_this3","_callee2","_this3$$refs$cloudCom","res","_callee2$","_context2","errors","$refs","test","save","driver","mode","setAnnotation","metadata","generateName","namespace","field","$set","$emit","fallback","replace","substr"],"sources":["node_modules/@rancher/shell/edit/cloudcredential.vue"],"sourcesContent":["<script>\nimport { SECRET_TYPES as TYPES } from '@shell/config/secret';\nimport { MANAGEMENT, NORMAN, SCHEMA, DEFAULT_WORKSPACE } from '@shell/config/types';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport CruResource from '@shell/components/CruResource';\nimport { _CREATE } from '@shell/config/query-params';\nimport Loading from '@shell/components/Loading';\nimport Labels from '@shell/components/form/Labels';\nimport { HIDE_SENSITIVE } from '@shell/store/prefs';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { clear, uniq } from '@shell/utils/array';\nimport SelectIconGrid from '@shell/components/SelectIconGrid';\nimport { sortBy } from '@shell/utils/sort';\nimport { ucFirst } from '@shell/utils/string';\nimport { set } from '@shell/utils/object';\nimport { mapFeature, RKE2 as RKE2_FEATURE } from '@shell/store/features';\nimport { rke1Supports } from '@shell/store/plugins';\n\nexport default {\n  name: 'CruCloudCredential',\n\n  components: {\n    Loading,\n    NameNsDescription,\n    CruResource,\n    Labels,\n    SelectIconGrid\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.nodeDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE_DRIVER });\n    this.kontainerDrivers = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.KONTAINER_DRIVER });\n\n    // Force reload the cloud cred schema and any missing subtypes because there aren't change events sent when drivers come/go\n    try {\n      const schema = await this.$store.dispatch('rancher/find', {\n        type: SCHEMA,\n        id:   NORMAN.CLOUD_CREDENTIAL,\n        opt:  {\n          force: true,\n          url:   `schemas/${ NORMAN.CLOUD_CREDENTIAL }`,\n        },\n      });\n\n      for ( const k in schema.resourceFields ) {\n        if ( !k.endsWith('Config') ) {\n          continue;\n        }\n\n        const id = schema.resourceFields[k].type;\n\n        if ( !this.$store.getters['rancher/schemaFor'](id) ) {\n          await this.$store.dispatch('rancher/find', {\n            type: SCHEMA,\n            id,\n            opt:  {\n              force: true,\n              url:   `schemas/${ id }`,\n            },\n          });\n        }\n      }\n    } catch (e) {\n    }\n\n    if ( !this.value._name ) {\n      set(this.value, '_name', '');\n    }\n\n    if ( this.value.provider ) {\n      this.selectType(this.value.provider);\n    }\n  },\n\n  data() {\n    return {\n      nodeDrivers:      null,\n      kontainerDrivers: null\n    };\n  },\n\n  computed: {\n    rke2Enabled: mapFeature(RKE2_FEATURE),\n\n    storeOverride() {\n      return 'rancher';\n    },\n\n    driverName() {\n      return this.value?.provider;\n    },\n\n    cloudComponent() {\n      if (this.$store.getters['type-map/hasCustomCloudCredentialComponent'](this.driverName)) {\n        return this.$store.getters['type-map/importCloudCredential'](this.driverName);\n      }\n\n      return this.$store.getters['type-map/importCloudCredential']('generic');\n    },\n\n    // array of id, label, description, initials for type selection step\n    secretSubTypes() {\n      const out = [];\n\n      const drivers = [...this.nodeDrivers, ...this.kontainerDrivers]\n        .filter((x) => x.spec.active && x.id !== 'rancherkubernetesengine')\n        .map((x) => x.spec.displayName || x.id);\n\n      let types = uniq(drivers.map((x) => this.$store.getters['plugins/credentialDriverFor'](x)));\n\n      if ( !this.rke2Enabled ) {\n        types = types.filter((x) => rke1Supports.includes(x));\n      }\n\n      const schema = this.$store.getters['rancher/schemaFor'](NORMAN.CLOUD_CREDENTIAL);\n\n      types = types.filter((name) => {\n        const key = this.$store.getters['plugins/credentialFieldForDriver'](name);\n        const subSchemaName = schema.resourceFields[`${ key }credentialConfig`]?.type;\n\n        if ( !subSchemaName ) {\n          return;\n        }\n\n        const subSchema = this.$store.getters['rancher/schemaFor'](subSchemaName);\n\n        if ( !subSchema ) {\n          return false;\n        }\n\n        const fields = subSchema.resourceFields;\n\n        return fields && Object.keys(fields).length > 0;\n      });\n\n      if ( schema.resourceFields['s3credentialConfig'] ) {\n        types.push('s3');\n      }\n\n      for ( const id of types ) {\n        let bannerImage, bannerAbbrv;\n\n        try {\n          bannerImage = require(`~shell/assets/images/providers/${ id }.svg`);\n        } catch (e) {\n          bannerImage = null;\n          bannerAbbrv = this.initialDisplayFor(id);\n        }\n\n        out.push({\n          id,\n          label: this.typeDisplay(CAPI.CREDENTIAL_DRIVER, id),\n          bannerImage,\n          bannerAbbrv\n        });\n      }\n\n      return sortBy(out, 'label');\n    },\n\n    hideSensitiveData() {\n      return this.$store.getters['prefs/get'](HIDE_SENSITIVE);\n    },\n\n    doneRoute() {\n      return 'c-cluster-manager-cloudCredential';\n    },\n  },\n\n  methods: {\n    async saveCredential(btnCb) {\n      if ( this.errors ) {\n        clear(this.errors);\n      }\n\n      if ( typeof this.$refs.cloudComponent?.test === 'function' ) {\n        try {\n          const res = await this.$refs.cloudComponent.test();\n\n          if ( !res || res?.errors) {\n            if (res?.errors) {\n              this.errors = res.errors;\n            } else {\n              this.errors = ['Authentication test failed, please check your credentials'];\n            }\n            btnCb(false);\n\n            return;\n          }\n        } catch (e) {\n          this.errors = [e];\n          btnCb(false);\n\n          return;\n        }\n      }\n\n      return this.save(btnCb);\n    },\n\n    selectType(type) {\n      let driver;\n\n      if ( type === TYPES.CLOUD_CREDENTIAL ) {\n        // Clone goes through here\n        driver = this.driverName;\n      } else {\n        driver = type;\n        type = TYPES.CLOUD_CREDENTIAL;\n      }\n\n      if ( this.mode === _CREATE ) {\n        this.value.setAnnotation(CAPI.CREDENTIAL_DRIVER, driver);\n        this.value.metadata.generateName = 'cc-';\n        this.value.metadata.namespace = DEFAULT_WORKSPACE;\n\n        const field = this.$store.getters['plugins/credentialFieldForDriver'](driver);\n\n        set(this.value, `${ field }credentialConfig`, {});\n      }\n\n      this.$set(this.value, '_type', type);\n      this.$emit('set-subtype', this.typeDisplay(type, driver));\n    },\n\n    typeDisplay(type, driver) {\n      return this.$store.getters['i18n/withFallback'](`cluster.provider.\"${ driver }\"`, null, driver);\n    },\n\n    initialDisplayFor(type) {\n      const fallback = (ucFirst(this.typeDisplay(type) || '').replace(/[^A-Z]/g, '') || type).substr(0, 3);\n\n      return this.$store.getters['i18n/withFallback'](`secret.initials.\"${ type }\"`, null, fallback);\n    },\n  },\n};\n</script>\n\n<template>\n  <form class=\"filled-height\">\n    <Loading v-if=\"$fetchState.pending\" />\n    <CruResource\n      v-else\n      :mode=\"mode\"\n      :validation-passed=\"true\"\n      :selected-subtype=\"value._type\"\n      :resource=\"value\"\n      :errors=\"errors\"\n      :done-route=\"doneRoute\"\n      :subtypes=\"secretSubTypes\"\n      :can-yaml=\"false\"\n      @finish=\"saveCredential\"\n      @select-type=\"selectType\"\n      @error=\"e=>errors = e\"\n    >\n      <NameNsDescription\n        v-model=\"value\"\n        name-key=\"_name\"\n        description-key=\"description\"\n        :mode=\"mode\"\n        :namespaced=\"false\"\n      />\n      <keep-alive>\n        <component\n          :is=\"cloudComponent\"\n          ref=\"cloudComponent\"\n          :driver-name=\"driverName\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :hide-sensitive-data=\"hideSensitiveData\"\n        />\n      </keep-alive>\n    </CruResource>\n  </form>\n</template>\n\n<style lang='scss'>\n</style>\n"],"mappings":"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"}]}