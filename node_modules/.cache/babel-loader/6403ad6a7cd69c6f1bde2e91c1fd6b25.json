{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/config/home-links.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/config/home-links.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DOCS_BASE","MANAGEMENT","SETTING","allHash","DEFAULT_LINKS","key","value","enabled","SUPPORT_LINK","readonly","CN_FORUMS_LINK","CUSTOM_LINKS_VERSION","fetchLinks","_x","_x2","_x3","_x4","_fetchLinks","apply","arguments","_asyncToGenerator","regeneratorRuntime","mark","_callee","store","hasSupport","isSupportPage","t","_uiLinks","uiLinks","uiLinksSetting","defaults","links","_yield$allHash","uiIssuesSetting","uiCommunitySetting","_links$defaults2","issueLink","wrap","_callee$","_context","prev","next","dispatch","type","id","UI_CUSTOM_LINKS","sent","JSON","parse","t0","console","warn","version","concat","forEach","link","find","linkName","abrupt","ensureSupportLink","custom","ISSUES","COMMUNITY_LINKS","push","label","readOnly","t1","stop","_links$defaults","supportLink","selectedLocaleLabel","getters","map","_objectSpread","customNamesMap","reduce","linkMap"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/config/home-links.js"],"sourcesContent":["import { DOCS_BASE } from '@shell/config/private-label';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport { allHash } from '@shell/utils/promise';\n\nconst DEFAULT_LINKS = [\n  {\n    key:     'docs',\n    value:   DOCS_BASE,\n    enabled: true,\n  },\n  {\n    key:     'forums',\n    value:   'https://forums.rancher.com/',\n    enabled: true,\n  },\n  {\n    key:     'slack',\n    value:   'https://slack.rancher.io/',\n    enabled: true,\n  },\n  {\n    key:     'issues',\n    value:   'https://github.com/rancher/dashboard/issues/new/choose',\n    enabled: true,\n  },\n  {\n    key:     'getStarted',\n    value:   'https://ranchermanager.docs.rancher.com/getting-started/overview',\n    enabled: true,\n  },\n];\n\nconst SUPPORT_LINK = {\n  key:      'commercialSupport',\n  value:    '/support',\n  enabled:  true,\n  readonly: true\n};\n\nconst CN_FORUMS_LINK = {\n  key:     'cnforums',\n  value:   'https://forums.rancher.cn/',\n  enabled: true,\n};\n\n// We add a version attribute to the setting so we know what has been migrated and which version of the setting we have\nexport const CUSTOM_LINKS_VERSION = 'v1';\n\n// Fetch the settings required for the links, taking into account legacy settings if we have not migrated\nexport async function fetchLinks(store, hasSupport, isSupportPage, t) {\n  let uiLinks = {};\n\n  try {\n    const uiLinksSetting = await store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.UI_CUSTOM_LINKS });\n\n    // Don't try and parse empty string\n    if (uiLinksSetting.value) {\n      uiLinks = JSON.parse(uiLinksSetting.value);\n    }\n  } catch (e) {\n    console.warn('Could not parse custom link settings', e); // eslint-disable-line no-console\n  }\n\n  // If uiLinks is set and has the correct version, then we are okay, otherwise we need to migrate from the old settings\n  if (uiLinks?.version === CUSTOM_LINKS_VERSION) {\n    // Map out the default settings, as we only store keys of the ones to show\n    if (uiLinks.defaults) {\n      const defaults = [...DEFAULT_LINKS];\n\n      // Map the link name stored to the default link, if it exists\n      defaults.forEach((link) => {\n        const enabled = uiLinks.defaults.find((linkName) => linkName === link.key);\n\n        link.enabled = !!enabled;\n      });\n\n      uiLinks.defaults = defaults;\n    }\n\n    return ensureSupportLink(uiLinks, hasSupport, isSupportPage, t, store);\n  }\n\n  // No new setting, so return the required structure\n  // We don't migrate here, as we may not have permissions to create the setting\n  const links = {\n    version:  CUSTOM_LINKS_VERSION,\n    defaults: [...DEFAULT_LINKS],\n    custom:   []\n  };\n\n  // There are two legacy settings:\n  // SETTING.ISSUES - can specify a custom link to use for 'File an issue'\n  // SETTING.COMMUNITY_LINKS - can specify whether to hide all of the default links (other than 'File an issue')\n  try {\n    const { uiIssuesSetting, uiCommunitySetting } = await allHash({\n      uiIssuesSetting:    store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.ISSUES }),\n      uiCommunitySetting: store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.COMMUNITY_LINKS })\n    });\n\n    // Should we show the default set of links?\n    if (uiCommunitySetting?.value === 'false') {\n      // Hide all of the default links\n      links.defaults.forEach((link) => (link.enabled = false));\n    }\n\n    // Do we have a custom 'File an issue' link ?\n    if (uiIssuesSetting?.value) {\n      links.custom.push({\n        label: t ? t('customLinks.defaults.issues') : 'Issues',\n        value: uiIssuesSetting.value\n      });\n\n      // Hide the default 'File an issue' link\n      const issueLink = links.defaults?.find((link) => link.key === 'issues');\n\n      if (issueLink) {\n        issueLink.enabled = false;\n        issueLink.readOnly = true;\n      }\n    }\n  } catch (e) {\n    console.warn('Could not parse legacy link settings', e); // eslint-disable-line no-console\n  }\n\n  return ensureSupportLink(links, hasSupport, isSupportPage, t, store);\n}\n\n// Ensure the support link is added if needed\nexport function ensureSupportLink(links, hasSupport, isSupportPage, t, store) {\n  if (!hasSupport && !isSupportPage) {\n    const supportLink = links.defaults?.find((link) => link.key === 'commercialSupport');\n\n    if (!supportLink) {\n      links.defaults.push(SUPPORT_LINK);\n    }\n  }\n\n  const selectedLocaleLabel = store.getters['i18n/selectedLocaleLabel'];\n\n  if (selectedLocaleLabel === t('locale.zh-hans')) {\n    links.defaults.push(CN_FORUMS_LINK);\n  }\n\n  // Localise the default links\n  links.defaults = links.defaults.map((link) => {\n    return {\n      ...link,\n      label: t(`'customLinks.defaults.${ link.key }`)\n    };\n  });\n\n  // Ensure that if any custom links have the same name as a default link, we use the custom link\n  const customNamesMap = links.custom.reduce((linkMap, link) => {\n    linkMap[link.label] = link;\n\n    return linkMap;\n  }, {});\n\n  // If any custom links have the same name as a default link, then hide and mark readonly the default link\n  // Main use case if the 'File an Issue' link when migrating the old settings\n  links.defaults.forEach((link) => {\n    if (customNamesMap[link.label]) {\n      link.enabled = false;\n      link.readonly = true;\n    }\n  });\n\n  return links;\n}\n"],"mappings":"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"}]}