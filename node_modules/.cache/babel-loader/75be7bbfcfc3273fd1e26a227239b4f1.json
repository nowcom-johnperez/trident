{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DashboardMetrics","mapGetters","CAPI","ENDPOINTS","EVENT","NAMESPACE","INGRESS","MANAGEMENT","METRIC","NODE","SERVICE","PV","WORKLOAD_TYPES","COUNT","CATALOG","PSP","setPromiseResult","AlertTable","Banner","parseSi","createMemoryValues","NAME","ROLES","STATE","mapPref","PSP_DEPRECATION_BANNER","haveV1Monitoring","monitoringStatus","Tabbed","Tab","allDashboardsExist","EtcdInfoBanner","metricPoller","EmberPage","ResourceSummary","resourceCounts","HardwareResourceGauge","isEmpty","ConfigBadge","EventsTable","fetchClusterResources","SimpleBox","ExtensionPoint","CardLocation","getApplicableExtensionEnhancements","RESOURCES","DEPLOYMENT","STATEFUL_SET","JOB","DAEMON_SET","CLUSTER_METRICS_DETAIL_URL","CLUSTER_METRICS_SUMMARY_URL","K8S_METRICS_DETAIL_URL","K8S_METRICS_SUMMARY_URL","ETCD_METRICS_DETAIL_URL","ETCD_METRICS_SUMMARY_URL","COMPONENT_STATUS","name","components","mixins","fetch","$store","currentCluster","id","isLocal","getters","dispatch","type","data","clusterCounts","nodeHeaders","constraints","events","nodeMetrics","showClusterMetrics","showK8sMetrics","showEtcdMetrics","selectedTab","extensionCards","CARD","CLUSTER_DASHBOARD_CARD","$route","beforeDestroy","computed","_objectSpread","displayPspDeprecationBanner","_cluster$status","_cluster$status2","_cluster$status3","_cluster$status4","cluster","major","status","version","parseInt","minor","_this$$store$getters","_clusterCounts$PSP","counts","summary","count","nodes","mgmtNodes","CLUSTER","hidePspDeprecationBanner","hasV1Monitoring","v1MonitoringURL","concat","displayProvider","_this$currentCluster","other","provider","t","isHarvesterCluster","_this$currentCluster2","isHarvester","isRKE","includes","toLowerCase","accessibleResources","_this$clusterCounts","_this","defaultAllowedResources","Object","keys","filter","typeId","allowedResources","_toConsumableArray","Set","resource","componentServices","_this2","forEach","cs","push","healthy","isComponentStatusHealthy","labelKey","totalCountGaugeInput","_this3","totalInput","total","useful","warningCount","errorCount","entries","entry","hasStats","_this$currentCluster3","_this$currentCluster4","allocatable","requested","cpuReserved","_this$currentCluster5","_this$currentCluster6","cpu","units","podsUsed","_this$currentCluster7","_this$currentCluster8","pods","ramReserved","_this$currentCluster9","_this$currentCluster10","memory","metricAggregations","_this4","checkNodes","nodeNames","reduce","acc","n","_n$metadata","nodeName","metadata","labels","someNonWorkerRoles","some","node","hasARole","isWorker","metrics","find","nd","initialAggregation","agg","metric","usage","cpuUsed","_this$currentCluster11","_this$metricAggregati","capacity","ramUsed","_this$currentCluster12","_this$metricAggregati2","hasMonitoring","_this$clusterCounts2","APP","namespaces","canAccessNodes","_this$clusterCounts3","canAccessDeployments","_this$clusterCounts4","hasMetricsTabs","hasBadge","_this$currentCluster13","badge","hasDescription","_this$currentCluster14","spec","description","allEventsLink","params","product","methods","field","_this$currentCluster15","matching","componentStatuses","s","startsWith","length","conditions","c","showActions","commit","resources","elem","$refs","loadMetrics","_this5","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","force","sent","stop","tabChange","neu","selectedName","goToHarvesterCluster","_this6","_callee2","provClusters","provCluster","_callee2$","_context2","RANCHER_CLUSTER","p","mgmt","t0"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/explorer/index.vue"],"sourcesContent":["<script>\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport {\n  CAPI,\n  ENDPOINTS,\n  EVENT,\n  NAMESPACE,\n  INGRESS,\n  MANAGEMENT,\n  METRIC,\n  NODE,\n  SERVICE,\n  PV,\n  WORKLOAD_TYPES,\n  COUNT,\n  CATALOG,\n  PSP,\n} from '@shell/config/types';\nimport { setPromiseResult } from '@shell/utils/promise';\nimport AlertTable from '@shell/components/AlertTable';\nimport { Banner } from '@components/Banner';\nimport { parseSi, createMemoryValues } from '@shell/utils/units';\nimport {\n  NAME,\n  ROLES,\n  STATE,\n} from '@shell/config/table-headers';\n\nimport { mapPref, PSP_DEPRECATION_BANNER } from '@shell/store/prefs';\nimport { haveV1Monitoring, monitoringStatus } from '@shell/utils/monitoring';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport EtcdInfoBanner from '@shell/components/EtcdInfoBanner';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport EmberPage from '@shell/components/EmberPage';\nimport ResourceSummary, { resourceCounts } from '@shell/components/ResourceSummary';\nimport HardwareResourceGauge from '@shell/components/HardwareResourceGauge';\nimport { isEmpty } from '@shell/utils/object';\nimport ConfigBadge from './ConfigBadge';\nimport EventsTable from './EventsTable';\nimport { fetchClusterResources } from './explorer-utils';\nimport SimpleBox from '@shell/components/SimpleBox';\nimport { ExtensionPoint, CardLocation } from '@shell/core/types';\nimport { getApplicableExtensionEnhancements } from '@shell/core/plugin-helpers';\n\nexport const RESOURCES = [NAMESPACE, INGRESS, PV, WORKLOAD_TYPES.DEPLOYMENT, WORKLOAD_TYPES.STATEFUL_SET, WORKLOAD_TYPES.JOB, WORKLOAD_TYPES.DAEMON_SET, SERVICE];\n\nconst CLUSTER_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-nodes-1/rancher-cluster-nodes?orgId=1';\nconst CLUSTER_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-cluster-1/rancher-cluster?orgId=1';\nconst K8S_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-nodes-1/rancher-kubernetes-components-nodes?orgId=1';\nconst K8S_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-k8s-components-1/rancher-kubernetes-components?orgId=1';\nconst ETCD_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-nodes-1/rancher-etcd-nodes?orgId=1';\nconst ETCD_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-etcd-1/rancher-etcd?orgId=1';\n\nconst COMPONENT_STATUS = [\n  'etcd',\n  'scheduler',\n  'controller-manager',\n];\n\nexport default {\n  name: 'ClusterExplorerIndexPage',\n\n  components: {\n    EtcdInfoBanner,\n    DashboardMetrics,\n    HardwareResourceGauge,\n    ResourceSummary,\n    Tab,\n    Tabbed,\n    AlertTable,\n    Banner,\n    EmberPage,\n    ConfigBadge,\n    EventsTable,\n    SimpleBox,\n  },\n\n  mixins: [metricPoller],\n\n  fetch() {\n    fetchClusterResources(this.$store, NODE);\n\n    if (this.currentCluster) {\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [CLUSTER_METRICS_DETAIL_URL, CLUSTER_METRICS_SUMMARY_URL]),\n        this,\n        'showClusterMetrics',\n        `Determine cluster metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [K8S_METRICS_DETAIL_URL, K8S_METRICS_SUMMARY_URL]),\n        this,\n        'showK8sMetrics',\n        `Determine k8s metrics`\n      );\n      setPromiseResult(\n        allDashboardsExist(this.$store, this.currentCluster.id, [ETCD_METRICS_DETAIL_URL, ETCD_METRICS_SUMMARY_URL]),\n        this,\n        'showEtcdMetrics',\n        `Determine etcd metrics`\n      );\n\n      if (this.currentCluster.isLocal && this.$store.getters['management/schemaFor'](MANAGEMENT.NODE)) {\n        this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE });\n      }\n    }\n  },\n\n  data() {\n    const clusterCounts = this.$store.getters[`cluster/all`](COUNT);\n    const nodeHeaders = [\n      STATE,\n      NAME,\n      ROLES,\n    ];\n\n    return {\n      nodeHeaders,\n      constraints:        [],\n      events:             [],\n      nodeMetrics:        [],\n      showClusterMetrics: false,\n      showK8sMetrics:     false,\n      showEtcdMetrics:    false,\n      CLUSTER_METRICS_DETAIL_URL,\n      CLUSTER_METRICS_SUMMARY_URL,\n      K8S_METRICS_DETAIL_URL,\n      K8S_METRICS_SUMMARY_URL,\n      ETCD_METRICS_DETAIL_URL,\n      ETCD_METRICS_SUMMARY_URL,\n      clusterCounts,\n      selectedTab:        'cluster-events',\n      extensionCards:     getApplicableExtensionEnhancements(this, ExtensionPoint.CARD, CardLocation.CLUSTER_DASHBOARD_CARD, this.$route),\n    };\n  },\n\n  beforeDestroy() {\n    // Remove the data and stop watching resources that were fetched in this page\n    // Events in particular can lead to change messages having to be processed when we are no longer interested in events\n    this.$store.dispatch('cluster/forgetType', EVENT);\n    this.$store.dispatch('cluster/forgetType', NODE);\n    this.$store.dispatch('cluster/forgetType', ENDPOINTS); // Used by AlertTable to get alerts when v2 monitoring is installed\n    this.$store.dispatch('cluster/forgetType', METRIC.NODE);\n    this.$store.dispatch('cluster/forgetType', MANAGEMENT.NODE);\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    ...monitoringStatus(),\n\n    displayPspDeprecationBanner() {\n      const cluster = this.currentCluster;\n      const major = cluster.status?.version?.major ? parseInt(cluster.status?.version?.major) : 0;\n      const minor = cluster.status?.version?.minor ? parseInt(cluster.status?.version?.minor) : 0;\n\n      if (major === 1 && minor >= 21 && minor < 25) {\n        const clusterCounts = this.$store.getters[`cluster/all`](COUNT)?.[0]?.counts;\n\n        return !!clusterCounts?.[PSP]?.summary?.count;\n      }\n\n      return false;\n    },\n\n    nodes() {\n      return this.$store.getters['cluster/all'](NODE);\n    },\n\n    mgmtNodes() {\n      return this.$store.getters['management/all'](MANAGEMENT.CLUSTER);\n    },\n\n    hidePspDeprecationBanner: mapPref(PSP_DEPRECATION_BANNER),\n\n    hasV1Monitoring() {\n      return haveV1Monitoring(this.$store.getters);\n    },\n\n    v1MonitoringURL() {\n      return `/k/${ this.currentCluster.id }/monitoring`;\n    },\n\n    displayProvider() {\n      const other = 'other';\n\n      let provider = this.currentCluster?.status?.provider || other;\n\n      if (provider === 'rke.windows') {\n        provider = 'rkeWindows';\n      }\n\n      if (!this.$store.getters['i18n/exists'](`cluster.provider.${ provider }`)) {\n        provider = 'other';\n      }\n\n      return this.t(`cluster.provider.${ provider }`);\n    },\n\n    isHarvesterCluster() {\n      return this.currentCluster?.isHarvester;\n    },\n\n    isRKE() {\n      return ['rke', 'rke.windows', 'rke2', 'rke2.windows'].includes((this.currentCluster.status.provider || '').toLowerCase());\n    },\n\n    accessibleResources() {\n      // This is a list of IDs for allowed resources counts.\n      const defaultAllowedResources = Object.keys(this.clusterCounts?.[0]?.counts || {}).filter((typeId) => {\n        return this.$store.getters['type-map/isIgnored']({ id: typeId });\n      });\n\n      // Merge with RESOURCES list\n      const allowedResources = [...new Set([...defaultAllowedResources, ...RESOURCES])];\n\n      return allowedResources.filter((resource) => this.$store.getters['cluster/schemaFor'](resource));\n    },\n\n    componentServices() {\n      const status = [];\n\n      COMPONENT_STATUS.forEach((cs) => {\n        status.push({\n          name:     cs,\n          healthy:  this.isComponentStatusHealthy(cs),\n          labelKey: `clusterIndexPage.sections.componentStatus.${ cs }`,\n        });\n      });\n\n      return status;\n    },\n\n    totalCountGaugeInput() {\n      const totalInput = {\n        name:         this.t('clusterIndexPage.resourceGauge.totalResources'),\n        total:        0,\n        useful:       0,\n        warningCount: 0,\n        errorCount:   0\n      };\n\n      this.accessibleResources.forEach((resource) => {\n        const counts = resourceCounts(this.$store, resource);\n\n        Object.entries(counts).forEach((entry) => {\n          totalInput[entry[0]] += entry[1];\n        });\n      });\n\n      return totalInput;\n    },\n\n    hasStats() {\n      return this.currentCluster?.status?.allocatable && this.currentCluster?.status?.requested;\n    },\n\n    cpuReserved() {\n      const total = parseSi(this.currentCluster?.status?.allocatable?.cpu);\n\n      return {\n        total,\n        useful: parseSi(this.currentCluster?.status?.requested?.cpu),\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    podsUsed() {\n      return {\n        total:  parseSi(this.currentCluster?.status?.allocatable?.pods || '0'),\n        useful: parseSi(this.currentCluster?.status?.requested?.pods || '0'),\n      };\n    },\n\n    ramReserved() {\n      return createMemoryValues(this.currentCluster?.status?.allocatable?.memory, this.currentCluster?.status?.requested?.memory);\n    },\n\n    metricAggregations() {\n      let checkNodes = this.nodes;\n\n      // Special case local cluster\n      if (this.currentCluster.isLocal) {\n        const nodeNames = this.nodes.reduce((acc, n) => {\n          acc[n.id] = n;\n\n          return acc;\n        }, {});\n\n        checkNodes = this.mgmtNodes.filter((n) => {\n          const nodeName = n.metadata?.labels?.['management.cattle.io/nodename'] || n.id;\n\n          return !!nodeNames[nodeName];\n        });\n      }\n\n      const someNonWorkerRoles = checkNodes.some((node) => node.hasARole && !node.isWorker);\n      const metrics = this.nodeMetrics.filter((nodeMetrics) => {\n        const node = this.nodes.find((nd) => nd.id === nodeMetrics.id);\n\n        return node && (!someNonWorkerRoles || node.isWorker);\n      });\n      const initialAggregation = {\n        cpu:    0,\n        memory: 0\n      };\n\n      if (isEmpty(metrics)) {\n        return null;\n      }\n\n      return metrics.reduce((agg, metric) => {\n        agg.cpu += parseSi(metric.usage.cpu);\n        agg.memory += parseSi(metric.usage.memory);\n\n        return agg;\n      }, initialAggregation);\n    },\n\n    cpuUsed() {\n      const total = parseSi(this.currentCluster?.status?.capacity?.cpu);\n\n      return {\n        total,\n        useful: this.metricAggregations?.cpu,\n        units:  this.t('clusterIndexPage.hardwareResourceGauge.units.cores', { count: total })\n      };\n    },\n\n    ramUsed() {\n      return createMemoryValues(this.currentCluster?.status?.capacity?.memory, this.metricAggregations?.memory);\n    },\n\n    hasMonitoring() {\n      return !!this.clusterCounts?.[0]?.counts?.[CATALOG.APP]?.namespaces?.['cattle-monitoring-system'];\n    },\n\n    canAccessNodes() {\n      return !!this.clusterCounts?.[0]?.counts?.[NODE];\n    },\n\n    canAccessDeployments() {\n      return !!this.clusterCounts?.[0]?.counts?.[WORKLOAD_TYPES.DEPLOYMENT];\n    },\n\n    hasMetricsTabs() {\n      return this.showClusterMetrics || this.showK8sMetrics || this.showEtcdMetrics;\n    },\n\n    hasBadge() {\n      return !!this.currentCluster?.badge;\n    },\n\n    hasDescription() {\n      return !!this.currentCluster?.spec?.description;\n    },\n\n    allEventsLink() {\n      return {\n        name:   'c-cluster-product-resource',\n        params: {\n          product:  'explorer',\n          resource: 'event',\n        }\n      };\n    }\n  },\n\n  methods: {\n    // Ported from Ember\n    isComponentStatusHealthy(field) {\n      const matching = (this.currentCluster?.status?.componentStatuses || []).filter((s) => s.name.startsWith(field));\n\n      // If there's no matching component status, it's \"healthy\"\n      if ( !matching.length ) {\n        return true;\n      }\n\n      const count = matching.reduce((acc, status) => {\n        const conditions = status.conditions.find((c) => c.status !== 'True');\n\n        return !conditions ? acc : acc + 1;\n      }, 0);\n\n      return count === 0;\n    },\n\n    showActions() {\n      this.$store.commit('action-menu/show', {\n        resources: this.currentCluster,\n        elem:      this.$refs['cluster-actions'],\n      });\n    },\n\n    // Used by metric-poller mixin\n    async loadMetrics() {\n      this.nodeMetrics = await fetchClusterResources(this.$store, METRIC.NODE, { force: true } );\n    },\n\n    // Events/Alerts tab changed\n    tabChange(neu) {\n      this.selectedTab = neu?.selectedName;\n    },\n\n    async goToHarvesterCluster() {\n      try {\n        const provClusters = await this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n        const provCluster = provClusters.find((p) => p.mgmt.id === this.currentCluster.id);\n\n        await provCluster.goToHarvesterCluster();\n      } catch {\n      }\n    }\n  },\n};\n</script>\n\n<template>\n  <section class=\"dashboard\">\n    <header>\n      <div class=\"title\">\n        <h1>\n          <t k=\"clusterIndexPage.header\" />\n        </h1>\n        <div>\n          <span v-if=\"hasDescription\">{{ currentCluster.spec.description }}</span>\n        </div>\n      </div>\n    </header>\n    <Banner\n      v-if=\"displayPspDeprecationBanner && !hidePspDeprecationBanner\"\n      :closable=\"true\"\n      color=\"warning\"\n      @close=\"hidePspDeprecationBanner = true\"\n    >\n      <t\n        k=\"landing.deprecatedPsp\"\n        :raw=\"true\"\n      />\n    </Banner>\n    <div\n      class=\"cluster-dashboard-glance\"\n    >\n      <div>\n        <label>{{ t('glance.provider') }}: </label>\n        <span v-if=\"isHarvesterCluster\">\n          <a\n            role=\"button\"\n            @click=\"goToHarvesterCluster\"\n          >\n            {{ displayProvider }}\n          </a>\n        </span>\n        <span v-else>\n          {{ displayProvider }}\n        </span>\n      </div>\n      <div>\n        <label>{{ t('glance.version') }}: </label>\n        <span>{{ currentCluster.kubernetesVersionBase }}</span>\n        <span\n          v-if=\"currentCluster.kubernetesVersionExtension\"\n          style=\"font-size: 0.75em\"\n        >{{ currentCluster.kubernetesVersionExtension }}</span>\n      </div>\n      <div>\n        <label>{{ t('glance.created') }}: </label>\n        <span><LiveDate\n          :value=\"currentCluster.metadata.creationTimestamp\"\n          :add-suffix=\"true\"\n          :show-tooltip=\"true\"\n        /></span>\n      </div>\n      <p\n        v-if=\"displayPspDeprecationBanner && hidePspDeprecationBanner\"\n        v-clean-tooltip=\"t('landing.deprecatedPsp')\"\n        class=\"alt-psp-deprecation-info\"\n      >\n        <span>{{ t('landing.psps') }}</span>\n        <i class=\"icon icon-warning\" />\n      </p>\n      <div :style=\"{'flex':1}\" />\n      <div v-if=\"!monitoringStatus.v2 && !monitoringStatus.v1\">\n        <n-link\n          :to=\"{name: 'c-cluster-explorer-tools'}\"\n          class=\"monitoring-install\"\n        >\n          <i class=\"icon icon-gear\" />\n          <span>{{ t('glance.installMonitoring') }}</span>\n        </n-link>\n      </div>\n      <div v-if=\"monitoringStatus.v1\">\n        <span>{{ t('glance.v1MonitoringInstalled') }}</span>\n      </div>\n      <ConfigBadge\n        v-if=\"currentCluster.canUpdate\"\n        :cluster=\"currentCluster\"\n      />\n    </div>\n\n    <div class=\"resource-gauges\">\n      <ResourceSummary :spoofed-counts=\"totalCountGaugeInput\" />\n      <ResourceSummary\n        v-if=\"canAccessNodes\"\n        resource=\"node\"\n      />\n      <ResourceSummary\n        v-if=\"canAccessDeployments\"\n        resource=\"apps.deployment\"\n      />\n    </div>\n\n    <!-- extension cards -->\n    <div\n      v-if=\"extensionCards.length\"\n      class=\"extension-card-container mt-20\"\n    >\n      <SimpleBox\n        v-for=\"item, i in extensionCards\"\n        :key=\"`extensionCards${i}`\"\n        class=\"extension-card\"\n        :style=\"item.style\"\n      >\n        <h3>\n          {{ item.label }}\n        </h3>\n        <component\n          :is=\"item.component\"\n          :resource=\"currentCluster\"\n        />\n      </SimpleBox>\n    </div>\n\n    <h3\n      v-if=\"!hasV1Monitoring && hasStats\"\n      class=\"mt-40\"\n    >\n      {{ t('clusterIndexPage.sections.capacity.label') }}\n    </h3>\n    <div\n      v-if=\"!hasV1Monitoring && hasStats\"\n      class=\"hardware-resource-gauges\"\n    >\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.pods')\"\n        :used=\"podsUsed\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.cores')\"\n        :reserved=\"cpuReserved\"\n        :used=\"cpuUsed\"\n        :units=\"cpuReserved.units\"\n      />\n      <HardwareResourceGauge\n        :name=\"t('clusterIndexPage.hardwareResourceGauge.ram')\"\n        :reserved=\"ramReserved\"\n        :used=\"ramUsed\"\n        :units=\"ramReserved.units\"\n      />\n    </div>\n\n    <div v-if=\"!hasV1Monitoring && componentServices\">\n      <div\n        v-for=\"status in componentServices\"\n        :key=\"status.name\"\n        class=\"k8s-component-status\"\n        :class=\"{'k8s-component-status-healthy': status.healthy, 'k8s-component-status-unhealthy': !status.healthy}\"\n      >\n        <i\n          v-if=\"status.healthy\"\n          class=\"icon icon-checkmark\"\n        />\n        <i\n          v-else\n          class=\"icon icon-warning\"\n        />\n        <div>{{ t(status.labelKey) }}</div>\n      </div>\n    </div>\n\n    <div\n      v-if=\"hasV1Monitoring\"\n      id=\"ember-anchor\"\n      class=\"mt-20\"\n    >\n      <EmberPage\n        inline=\"ember-anchor\"\n        :src=\"v1MonitoringURL\"\n      />\n    </div>\n\n    <div class=\"mt-30\">\n      <Tabbed @changed=\"tabChange\">\n        <Tab\n          name=\"cluster-events\"\n          :label=\"t('clusterIndexPage.sections.events.label')\"\n          :weight=\"2\"\n        >\n          <span class=\"events-table-link\">\n            <n-link :to=\"allEventsLink\">\n              <span>{{ t('glance.eventsTable') }}</span>\n            </n-link>\n          </span>\n          <EventsTable />\n        </Tab>\n        <Tab\n          v-if=\"hasMonitoring\"\n          name=\"cluster-alerts\"\n          :label=\"t('clusterIndexPage.sections.alerts.label')\"\n          :weight=\"1\"\n        >\n          <AlertTable v-if=\"selectedTab === 'cluster-alerts'\" />\n        </Tab>\n      </Tabbed>\n    </div>\n    <Tabbed\n      v-if=\"hasMetricsTabs\"\n      default-tab=\"cluster-metrics\"\n      :use-hash=\"false\"\n      class=\"mt-30\"\n    >\n      <Tab\n        v-if=\"showClusterMetrics\"\n        name=\"cluster-metrics\"\n        :label=\"t('clusterIndexPage.sections.clusterMetrics.label')\"\n        :weight=\"2\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"CLUSTER_METRICS_DETAIL_URL\"\n            :summary-url=\"CLUSTER_METRICS_SUMMARY_URL\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showK8sMetrics\"\n        name=\"k8s-metrics\"\n        :label=\"t('clusterIndexPage.sections.k8sMetrics.label')\"\n        :weight=\"1\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"K8S_METRICS_DETAIL_URL\"\n            :summary-url=\"K8S_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        v-if=\"showEtcdMetrics\"\n        name=\"etcd-metrics\"\n        :label=\"t('clusterIndexPage.sections.etcdMetrics.label')\"\n        :weight=\"0\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            class=\"etcd-metrics\"\n            :detail-url=\"ETCD_METRICS_DETAIL_URL\"\n            :summary-url=\"ETCD_METRICS_SUMMARY_URL\"\n            graph-height=\"550px\"\n          >\n            <EtcdInfoBanner />\n          </DashboardMetrics>\n        </template>\n      </Tab>\n    </Tabbed>\n  </section>\n</template>\n\n<style lang=\"scss\" scoped>\n.extension-card-container {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(calc((100%/3) - 40px), 1fr));\n  grid-column-gap: 15px;\n  grid-row-gap: 20px;\n}\n\n@media only screen and (max-width: map-get($breakpoints, \"--viewport-9\")) {\n  .extension-card-container {\n    grid-template-columns: 1fr !important;\n  }\n}\n\n.cluster-dashboard-glance {\n  border-top: 1px solid var(--border);\n  border-bottom: 1px solid var(--border);\n  padding: 20px 0px;\n  display: flex;\n\n  &>*:not(:nth-last-child(-n+2)) {\n    margin-right: 40px;\n\n    & SPAN {\n       font-weight: bold\n    }\n  }\n}\n\n.title h1 {\n  margin: 0;\n}\n\n.actions-span {\n  align-self: center;\n}\n\n.events {\n  margin-top: 30px;\n}\n\n.graph-options {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.etcd-metrics ::v-deep .external-link {\n  top: -107px;\n}\n\n.cluster-tools-tip {\n  margin-top: 0;\n}\n\n.alt-psp-deprecation-info {\n  display: flex;\n  align-items: center;\n  color: var(--warning);\n\n  span {\n    margin-right: 4px;\n  }\n}\n\n.monitoring-install {\n  display: flex;\n  margin-left: 10px;\n\n  > I {\n    line-height: inherit;\n    margin-right: 4px;\n  }\n\n  &:focus {\n    outline: 0;\n  }\n}\n\n.events-table-link {\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 20px;\n}\n\n.k8s-component-status {\n  align-items: center;\n  display: inline-flex;\n  border: 1px solid;\n  margin-top: 20px;\n\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  > div {\n    padding: 5px 20px;\n  }\n\n  > I {\n    text-align: center;\n    padding: 5px 10px;\n    border-right: 1px solid var(--border);\n  }\n\n  &.k8s-component-status-unhealthy {\n    border-color: var(--error-border);\n\n    > I {\n      color: var(--error)\n    }\n  }\n\n  &.k8s-component-status-healthy {\n    border-color: var(--border);\n\n    > I {\n      color: var(--success)\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}