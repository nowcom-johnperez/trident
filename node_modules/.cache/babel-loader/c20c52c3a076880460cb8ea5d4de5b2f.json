{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/MoveModal.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/MoveModal.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5wcm9taXNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgQ2FyZCB9IGZyb20gJ0Bjb21wb25lbnRzL0NhcmQnOwppbXBvcnQgQXN5bmNCdXR0b24gZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQXN5bmNCdXR0b24nOwppbXBvcnQgTGFiZWxlZFNlbGVjdCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVsZWRTZWxlY3QnOwppbXBvcnQgeyBNQU5BR0VNRU5UIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgeyBQUk9KRUNUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9sYWJlbHMtYW5ub3RhdGlvbnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXN5bmNCdXR0b246IEFzeW5jQnV0dG9uLAogICAgQ2FyZDogQ2FyZCwKICAgIExhYmVsZWRTZWxlY3Q6IExhYmVsZWRTZWxlY3QsCiAgICBMb2FkaW5nOiBMb2FkaW5nCiAgfSwKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsKICAgICAgICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULlBST0pFQ1QKICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIF90aGlzLnByb2plY3RzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1vZGFsTmFtZTogJ21vdmUtbW9kYWwnLAogICAgICBwcm9qZWN0czogW10sCiAgICAgIHRhcmdldFByb2plY3Q6IG51bGwKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKCdhY3Rpb24tbWVudScsIFsnc2hvd1Byb21wdE1vdmUnLCAndG9Nb3ZlJ10pKSwgbWFwR2V0dGVycyhbJ2N1cnJlbnRDbHVzdGVyJ10pKSwge30sIHsKICAgIGV4Y2x1ZGVkUHJvamVjdHM6IGZ1bmN0aW9uIGV4Y2x1ZGVkUHJvamVjdHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnRvTW92ZS5maWx0ZXIoZnVuY3Rpb24gKG5hbWVzcGFjZSkgewogICAgICAgIHJldHVybiAhIW5hbWVzcGFjZS5wcm9qZWN0OwogICAgICB9KS5tYXAoZnVuY3Rpb24gKG5hbWVzcGFjZSkgewogICAgICAgIHJldHVybiBuYW1lc3BhY2UucHJvamVjdC5zaG9ydElkOwogICAgICB9KTsKICAgIH0sCiAgICBwcm9qZWN0T3B0aW9uczogZnVuY3Rpb24gcHJvamVjdE9wdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICByZXR1cm4gdGhpcy5wcm9qZWN0cy5yZWR1Y2UoZnVuY3Rpb24gKGluQ2x1c3RlciwgcHJvamVjdCkgewogICAgICAgIHZhciBfcHJvamVjdCRzcGVjOwogICAgICAgIGlmICghX3RoaXMyLmV4Y2x1ZGVkUHJvamVjdHMuaW5jbHVkZXMocHJvamVjdC5zaG9ydElkKSAmJiAoKF9wcm9qZWN0JHNwZWMgPSBwcm9qZWN0LnNwZWMpID09PSBudWxsIHx8IF9wcm9qZWN0JHNwZWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm9qZWN0JHNwZWMuY2x1c3Rlck5hbWUpID09PSBfdGhpczIuY3VycmVudENsdXN0ZXIuaWQpIHsKICAgICAgICAgIGluQ2x1c3Rlci5wdXNoKHsKICAgICAgICAgICAgdmFsdWU6IHByb2plY3Quc2hvcnRJZCwKICAgICAgICAgICAgbGFiZWw6IHByb2plY3QubmFtZURpc3BsYXkKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICByZXR1cm4gaW5DbHVzdGVyOwogICAgICB9LCBbXSk7CiAgICB9CiAgfSksCiAgd2F0Y2g6IHsKICAgIHNob3dQcm9tcHRNb3ZlOiBmdW5jdGlvbiBzaG93UHJvbXB0TW92ZShzaG93KSB7CiAgICAgIGlmIChzaG93KSB7CiAgICAgICAgdGhpcy4kbW9kYWwuc2hvdyh0aGlzLm1vZGFsTmFtZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kbW9kYWwuaGlkZSh0aGlzLm1vZGFsTmFtZSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlOiBmdW5jdGlvbiBjbG9zZSgpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhY3Rpb24tbWVudS90b2dnbGVQcm9tcHRNb3ZlJyk7CiAgICB9LAogICAgbW92ZTogZnVuY3Rpb24gbW92ZShmaW5pc2gpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciBjbHVzdGVyLCBjbHVzdGVyV2l0aFByb2plY3RJZCwgcHJvbWlzZXM7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNsdXN0ZXIgPSBfdGhpczMuJHN0b3JlLmdldHRlcnNbJ2N1cnJlbnRDbHVzdGVyJ107CiAgICAgICAgICAgICAgY2x1c3RlcldpdGhQcm9qZWN0SWQgPSAiIi5jb25jYXQoY2x1c3Rlci5pZCwgIjoiKS5jb25jYXQoX3RoaXMzLnRhcmdldFByb2plY3QpOwogICAgICAgICAgICAgIHByb21pc2VzID0gX3RoaXMzLnRvTW92ZS5tYXAoZnVuY3Rpb24gKG5hbWVzcGFjZSkgewogICAgICAgICAgICAgICAgbmFtZXNwYWNlLnNldExhYmVsKFBST0pFQ1QsIF90aGlzMy50YXJnZXRQcm9qZWN0KTsKICAgICAgICAgICAgICAgIG5hbWVzcGFjZS5zZXRBbm5vdGF0aW9uKFBST0pFQ1QsIGNsdXN0ZXJXaXRoUHJvamVjdElkKTsKICAgICAgICAgICAgICAgIHJldHVybiBuYW1lc3BhY2Uuc2F2ZSgpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMzsKICAgICAgICAgICAgICBfdGhpczMuJGVtaXQoJ21vdmluZycpOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocHJvbWlzZXMpOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgZmluaXNoKHRydWUpOwogICAgICAgICAgICAgIF90aGlzMy50YXJnZXRQcm9qZWN0ID0gbnVsbDsKICAgICAgICAgICAgICBfdGhpczMuY2xvc2UoKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE1OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTI7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDMpOwogICAgICAgICAgICAgIGZpbmlzaChmYWxzZSk7CiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMywgMTJdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"names":["mapState","mapGetters","Card","AsyncButton","LabeledSelect","MANAGEMENT","Loading","PROJECT","components","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","type","projects","sent","stop","data","modalName","targetProject","computed","_objectSpread","excludedProjects","toMove","filter","namespace","project","map","shortId","projectOptions","_this2","reduce","inCluster","_project$spec","includes","spec","clusterName","currentCluster","id","push","value","label","nameDisplay","watch","showPromptMove","show","$modal","hide","methods","close","commit","move","finish","_this3","_callee2","cluster","clusterWithProjectId","promises","_callee2$","_context2","getters","concat","setLabel","setAnnotation","save","$emit","Promise","all","t0"],"sources":["node_modules/@rancher/shell/components/MoveModal.vue"],"sourcesContent":["<script>\r\nimport { mapState, mapGetters } from 'vuex';\r\nimport { Card } from '@components/Card';\r\nimport AsyncButton from '@shell/components/AsyncButton';\r\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\r\nimport { MANAGEMENT } from '@shell/config/types';\r\nimport Loading from '@shell/components/Loading';\r\nimport { PROJECT } from '@shell/config/labels-annotations';\r\n\r\nexport default {\r\n  components: {\r\n    AsyncButton, Card, LabeledSelect, Loading\r\n  },\r\n\r\n  async fetch() {\r\n    this.projects = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT });\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      modalName: 'move-modal', projects: [], targetProject: null\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState('action-menu', ['showPromptMove', 'toMove']),\r\n    ...mapGetters(['currentCluster']),\r\n\r\n    excludedProjects() {\r\n      return this.toMove.filter((namespace) => !!namespace.project).map((namespace) => namespace.project.shortId);\r\n    },\r\n\r\n    projectOptions() {\r\n      return this.projects.reduce((inCluster, project) => {\r\n        if (!this.excludedProjects.includes(project.shortId) && project.spec?.clusterName === this.currentCluster.id) {\r\n          inCluster.push({\r\n            value: project.shortId,\r\n            label: project.nameDisplay\r\n          });\r\n        }\r\n\r\n        return inCluster;\r\n      }, []);\r\n    }\r\n  },\r\n\r\n  watch: {\r\n    showPromptMove(show) {\r\n      if (show) {\r\n        this.$modal.show(this.modalName);\r\n      } else {\r\n        this.$modal.hide(this.modalName);\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    close() {\r\n      this.$store.commit('action-menu/togglePromptMove');\r\n    },\r\n\r\n    async move(finish) {\r\n      const cluster = this.$store.getters['currentCluster'];\r\n      const clusterWithProjectId = `${ cluster.id }:${ this.targetProject }`;\r\n\r\n      const promises = this.toMove.map((namespace) => {\r\n        namespace.setLabel(PROJECT, this.targetProject);\r\n        namespace.setAnnotation(PROJECT, clusterWithProjectId);\r\n\r\n        return namespace.save();\r\n      });\r\n\r\n      try {\r\n        this.$emit('moving');\r\n        await Promise.all(promises);\r\n        finish(true);\r\n        this.targetProject = null;\r\n        this.close();\r\n      } catch (ex) {\r\n        finish(false);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<template>\r\n  <modal\n    class=\"move-modal\"\n    :name=\"modalName\"\n    :width=\"440\"\n    height=\"auto\"\n    @closed=\"close\"\n  >\r\n    <Loading v-if=\"$fetchState.pending\" />\r\n    <Card\n      v-else\n      class=\"move-modal-card\"\n      :show-highlight-border=\"false\"\n    >\r\n      <h4\n        slot=\"title\"\n        class=\"text-default-text\"\n      >\r\n        {{ t('moveModal.title') }}\r\n      </h4>\r\n      <div slot=\"body\">\r\n        <div>\r\n          {{ t('moveModal.description') }}\r\n          <ul class=\"namespaces\">\r\n            <li\n              v-for=\"namespace in toMove\"\n              :key=\"namespace.id\"\n            >\r\n              {{ namespace.nameDisplay }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <LabeledSelect\n          v-model=\"targetProject\"\n          :options=\"projectOptions\"\n          :label=\"t('moveModal.targetProject')\"\n        />\r\n      </div>\r\n      <template #actions>\r\n        <button\n          class=\"btn role-secondary\"\n          @click=\"close\"\n        >\r\n          {{ t('generic.cancel') }}\r\n        </button>\r\n        <AsyncButton\n          :action-label=\"t('moveModal.moveButtonLabel')\"\n          class=\"btn bg-primary ml-10\"\n          :disabled=\"!targetProject\"\n          @click=\"move\"\n        />\r\n      </template>\r\n    </Card>\r\n  </modal>\r\n</template>\r\n\r\n<style lang='scss'>\r\n  .move-modal {\r\n    .namespaces {\r\n      max-height: 200px;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .move-modal-card {\r\n        box-shadow: none;\r\n\r\n        border-radius: var(--border-radius);\r\n    }\r\n\r\n    .actions {\r\n      text-align: right;\r\n    }\r\n    .card-actions {\r\n      display: flex;\r\n      justify-content: center;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":"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"}]}