{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.fleetworkspace.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/management.cattle.io.fleetworkspace.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CreateEditView","CruResource","Labels","Loading","NameNsDescription","FLEET","MANAGEMENT","SCHEMA","Tabbed","Tab","SCOPE_NAMESPACE","SCOPE_CLUSTER","NAME","FLEET_NAME","mapState","LAST_NAMESPACE","WORKSPACE","exceptionToErrorsArray","Banner","ArrayList","name","components","mixins","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","restrictions","workSpaceRestriction","wrap","_callee$","_context","prev","next","$store","dispatch","type","CLUSTER","rancherClusters","sent","getters","fleetClusters","hasRepoRestrictionSchema","GIT_REPO_RESTRICTION","find","item","metadata","namespace","value","startsWith","concat","restrictionsOptions","restrictionsSchema","stop","data","$set","spec","targetNamespaces","methods","saveAll","buttonCb","_this2","_callee2","model","_callee2$","_context2","save","length","id","force","allowedTargetNamespaces","Date","now","waitForWorkspaceSchema","schema","_schema$collectionMet","collectionMethods","includes","commit","key","done","t0","console","error","errors","computed","_objectSpread","get","_this$workSpaceRestri","set"],"sources":["node_modules/@rancher/shell/edit/management.cattle.io.fleetworkspace.vue"],"sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport Labels from '@shell/components/form/Labels';\nimport Loading from '@shell/components/Loading';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { FLEET, MANAGEMENT, SCHEMA } from '@shell/config/types';\n// import RoleBindings from '@shell/components/RoleBindings';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport { SCOPE_NAMESPACE, SCOPE_CLUSTER } from '@shell/components/RoleBindings.vue';\nimport { NAME as FLEET_NAME } from '@shell/config/product/fleet';\n// import KeyValue from '@shell/components/form/KeyValue.vue';\nimport { mapState } from 'vuex';\nimport { LAST_NAMESPACE, WORKSPACE } from '@shell/store/prefs';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport Banner from '@components/Banner/Banner.vue';\nimport ArrayList from '@shell/components/form/ArrayList.vue';\n\nexport default {\n  name: 'FleetCruWorkspace',\n\n  components: {\n    CruResource,\n    Labels,\n    Loading,\n    NameNsDescription,\n    Tabbed,\n    Tab,\n    Banner,\n    ArrayList\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    this.rancherClusters = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.CLUSTER });\n\n    if (this.$store.getters['management/schemaFor']( FLEET.CLUSTER )) {\n      this.fleetClusters = await this.$store.dispatch('management/findAll', { type: FLEET.CLUSTER });\n    }\n\n    if (this.hasRepoRestrictionSchema) {\n      const restrictions = await this.$store.dispatch('management/findAll', { type: FLEET.GIT_REPO_RESTRICTION });\n\n      const workSpaceRestriction = restrictions.find((item) => {\n        return item.metadata.namespace === this.value.metadata.name && item.metadata.name.startsWith(`restriction-${ this.value.metadata.name }`);\n      });\n\n      if (workSpaceRestriction) {\n        this.workSpaceRestriction = workSpaceRestriction;\n      }\n    }\n\n    this.restrictionsOptions = await this.$store.getters[`type-map/optionsFor`](FLEET.GIT_REPO_RESTRICTION);\n    this.restrictionsSchema = await this.$store.getters[`management/schemaFor`](FLEET.GIT_REPO_RESTRICTION);\n  },\n\n  data() {\n    this.$set(this.value, 'spec', this.value.spec || {});\n\n    return {\n      fleetClusters:            null,\n      rancherClusters:          null,\n      workSpaceRestriction:     null,\n      restrictions:             [],\n      targetNamespaces:         [],\n      restrictionsSchema:       { spec: {} },\n      namespace:                this.$store.getters['prefs/get'](LAST_NAMESPACE),\n      hasRepoRestrictionSchema: !!this.$store.getters['management/schemaFor']( FLEET.GIT_REPO_RESTRICTION )\n    };\n  },\n\n  methods: {\n    async saveAll(buttonCb) {\n      // Anyone who can edit workspace\n\n      try {\n        await this.value.save();\n\n        // IF there is a restriction update it\n        if (this.workSpaceRestriction) {\n          await this.workSpaceRestriction.save();\n        }\n\n        // If there is no restriction and targetnamespace is set then create it.\n        if (!this.workSpaceRestriction && this.targetNamespaces.length) {\n          // For users with more limited permissions the gitreporestriction schema may not be visible until they create a workspace\n          if (!this.hasRepoRestrictionSchema) {\n            await this.$store.dispatch('management/find', { type: SCHEMA, id: FLEET.GIT_REPO_RESTRICTION }, { force: true });\n          }\n          const model = await this.$store.dispatch(`management/create`, {\n            type:                    FLEET.GIT_REPO_RESTRICTION,\n            allowedTargetNamespaces: this.targetNamespaces,\n            metadata:                {\n              // restriction- prefix is added to the workspace name\n              // to identify automatically created GitRepoRestrictions\n              // when adding targetNamespaces at the point of workspace creation\n              name:      `restriction-${ this.value.metadata.name }-${ Date.now() }`,\n              namespace: this.value.metadata.name // what the user types\n            }\n          });\n\n          await model.save();\n        }\n\n        await this.value.waitForWorkspaceSchema(20000, (schema) => {\n          // For standard user if there are no workspaces, user can't list workspaces\n          // Therefore wait for it.\n          return schema.collectionMethods?.includes('GET');\n        });\n\n        await this.$store.dispatch( 'management/findAll', { type: FLEET.WORKSPACE });\n\n        this.$store.commit('updateWorkspace', { value: this.value.metadata.name, getters: this.$store.getters } );\n        this.$store.dispatch('prefs/set', { key: WORKSPACE, value: this.value.metadata.name });\n\n        buttonCb(true);\n        this.done();\n      } catch (err) {\n        console.error(err) ; // eslint-disable-line no-console\n        buttonCb(false);\n        this.errors = exceptionToErrorsArray(err);\n      }\n    },\n  },\n\n  computed: {\n    ...mapState(['allWorkspaces', 'workspace']),\n\n    allowedTargetNamespaces: {\n      get() {\n        return this.workSpaceRestriction?.allowedTargetNamespaces || [];\n      },\n\n      set(value) {\n        if (this.workSpaceRestriction) {\n          this.workSpaceRestriction.allowedTargetNamespaces = value;\n        }\n\n        this.targetNamespaces = value;\n      }\n    },\n\n    SCOPE_NAMESPACE() {\n      return SCOPE_NAMESPACE;\n    },\n\n    SCOPE_CLUSTER() {\n      return SCOPE_CLUSTER;\n    },\n\n    FLEET_NAME() {\n      return FLEET_NAME;\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"saveAll\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-model=\"value\"\n      :mode=\"mode\"\n      :namespaced=\"false\"\n    />\n\n    <Tabbed\n      :side-tabs=\"true\"\n      default-tab=\"members\"\n    >\n      <!-- <Tab name=\"members\" label-key=\"generic.members\" :weight=\"2\">\n        <RoleBindings\n          ref=\"rb\"\n          :register-after-hook=\"registerAfterHook\"\n          :role-scope=\"SCOPE_CLUSTER\"\n          :binding-scope=\"SCOPE_NAMESPACE\"\n          :filter-role-value=\"FLEET_NAME\"\n          :namespace=\"value.name\"\n          :mode=\"mode\"\n          in-store=\"management\"\n        />\n      </Tab> -->\n\n      <Tab\n        name=\"labels\"\n        label-key=\"generic.labelsAndAnnotations\"\n      >\n        <Labels\n          v-model=\"value\"\n          :mode=\"mode\"\n        />\n      </Tab>\n      <Tab\n        name=\"allowedtargetnamespaces\"\n        label-key=\"fleet.workspaces.tabs.restrictions\"\n      >\n        <Banner\n          color=\"info\"\n        >\n          <div>\n            <t\n              k=\"fleet.restrictions.banner\"\n              :count=\"allowedTargetNamespaces.length\"\n              :raw=\"true\"\n            />\n            <a\n              v-if=\"!!allowedTargetNamespaces.length\"\n              @click=\"workSpaceRestriction.goToDetail()\"\n            >\n              {{ t('generic.here') }}\n            </a>\n          </div>\n        </Banner>\n\n        <ArrayList\n          key=\"labels\"\n          v-model=\"allowedTargetNamespaces\"\n          :add-label=\"t('fleet.restrictions.addLabel')\"\n          :mode=\"mode\"\n          :title=\"t('fleet.restrictions.addTitle')\"\n          :read-allowed=\"false\"\n          :value-can-be-empty=\"true\"\n        />\n      </Tab>\n    </Tabbed>\n  </CruResource>\n</template>\n"],"mappings":"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"}]}