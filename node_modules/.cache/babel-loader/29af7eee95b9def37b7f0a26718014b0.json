{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/providers/gelf.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/providers/gelf.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLnBhcnNlLWludC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyI7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIENoZWNrYm94OiBDaGVja2JveCwKICAgIExhYmVsZWRJbnB1dDogTGFiZWxlZElucHV0LAogICAgTGFiZWxlZFNlbGVjdDogTGFiZWxlZFNlbGVjdAogIH0sCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9CiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBtb2RlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBuYW1lc3BhY2U6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBwcm90b2NvbE9wdGlvbnMgPSBbJ3RjcCcsICd1ZHAnXTsKICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAndGxzX29wdGlvbnMnLCB0aGlzLnZhbHVlLnRsc19vcHRpb25zIHx8IHt9KTsKICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLCAncHJvdG9jb2wnLCB0aGlzLnZhbHVlLnByb3RvY29sIHx8IHByb3RvY29sT3B0aW9uc1swXSk7CiAgICByZXR1cm4gewogICAgICBwcm90b2NvbE9wdGlvbnM6IHByb3RvY29sT3B0aW9ucwogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBwb3J0OiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLnZhbHVlLnBvcnQ7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KHBvcnQpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZSwgJ3BvcnQnLCBOdW1iZXIucGFyc2VJbnQocG9ydCkpOwogICAgICB9CiAgICB9LAogICAgbm9fdmVyaWZ5OiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLnZhbHVlLnRsc19vcHRpb25zLm5vX3ZlcmlmeSA9PT0gJ3RydWUnOwogICAgICB9LAogICAgICBzZXQ6IGZ1bmN0aW9uIHNldChub1ZlcmlmeSkgewogICAgICAgIHRoaXMuJHNldCh0aGlzLnZhbHVlLnRsc19vcHRpb25zLCAnbm9fdmVyaWZ5Jywgbm9WZXJpZnkgPyAndHJ1ZScgOiBudWxsKTsKICAgICAgfQogICAgfSwKICAgIGFsbF9jaXBoZXJzOiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHJldHVybiB0aGlzLnZhbHVlLnRsc19vcHRpb25zLmFsbF9jaXBoZXJzID09PSAndHJ1ZSc7CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGFsbENpcGhlcnMpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS50bHNfb3B0aW9ucywgJ2FsbF9jaXBoZXJzJywgYWxsQ2lwaGVycyA/ICd0cnVlJyA6IG51bGwpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["LabeledInput","LabeledSelect","Checkbox","components","props","value","type","Object","default","_default","disabled","Boolean","mode","String","required","namespace","data","protocolOptions","$set","tls_options","protocol","computed","port","get","set","Number","parseInt","no_verify","noVerify","all_ciphers","allCiphers"],"sources":["node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/providers/gelf.vue"],"sourcesContent":["<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Checkbox } from '@components/Form/Checkbox';\n\nexport default {\n  components: {\n    Checkbox, LabeledInput, LabeledSelect\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    disabled: {\n      type:    Boolean,\n      default: false\n    },\n    mode: {\n      type:     String,\n      required: true,\n    },\n    namespace: {\n      type:     String,\n      required: true\n    }\n  },\n  data() {\n    const protocolOptions = ['tcp', 'udp'];\n\n    this.$set(this.value, 'tls_options', this.value.tls_options || {});\n    this.$set(this.value, 'protocol', this.value.protocol || protocolOptions[0]);\n\n    return { protocolOptions };\n  },\n  computed: {\n    port: {\n      get() {\n        return this.value.port;\n      },\n      set(port) {\n        this.$set(this.value, 'port', Number.parseInt(port));\n      }\n    },\n    no_verify: {\n      get() {\n        return this.value.tls_options.no_verify === 'true';\n      },\n      set(noVerify) {\n        this.$set(this.value.tls_options, 'no_verify', noVerify ? 'true' : null);\n      }\n    },\n    all_ciphers: {\n      get() {\n        return this.value.tls_options.all_ciphers === 'true';\n      },\n      set(allCiphers) {\n        this.$set(this.value.tls_options, 'all_ciphers', allCiphers ? 'true' : null);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"gelf\">\n    <div class=\"row\">\n      <div class=\"col span-6\">\n        <h3>{{ t('logging.output.sections.target') }}</h3>\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.host\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          class=\"host\"\n          :label=\"t('logging.gelf.host')\"\n        />\n      </div>\n      <div class=\"col span-3\">\n        <LabeledInput\n          v-model=\"port\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          class=\"port\"\n          type=\"number\"\n          :label=\"t('logging.gelf.port')\"\n        />\n      </div>\n      <div class=\"col span-3\">\n        <LabeledSelect\n          v-model=\"value.protocol\"\n          :options=\"protocolOptions\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.protocol')\"\n        />\n      </div>\n    </div>\n    <div class=\"spacer\" />\n    <div class=\"row\">\n      <div class=\"col span-6\">\n        <h3>{{ t('logging.output.sections.certificate') }}</h3>\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <Checkbox\n          v-model=\"value.tls\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.tls')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <Checkbox\n          v-model=\"no_verify\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.tlsOptions.noVerify')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.tls_options.cert\"\n          type=\"multiline\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.tlsOptions.clientCert')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.tls_options.key\"\n          type=\"multiline\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.tlsOptions.clientKey')\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.tls_options.tls_version\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.tlsOptions.tlsVersion')\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <Checkbox\n          v-model=\"all_ciphers\"\n          :mode=\"mode\"\n          :disabled=\"disabled\"\n          :label=\"t('logging.gelf.tlsOptions.allCiphers')\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"],"mappings":";;AACA,SAAAA,YAAA;AACA,OAAAC,aAAA;AACA,SAAAC,QAAA;AAEA;EACAC,UAAA;IACAD,QAAA,EAAAA,QAAA;IAAAF,YAAA,EAAAA,YAAA;IAAAC,aAAA,EAAAA;EACA;EACAG,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA,WAAAC,SAAA;QACA;MACA;IACA;IACAC,QAAA;MACAJ,IAAA,EAAAK,OAAA;MACAH,OAAA;IACA;IACAI,IAAA;MACAN,IAAA,EAAAO,MAAA;MACAC,QAAA;IACA;IACAC,SAAA;MACAT,IAAA,EAAAO,MAAA;MACAC,QAAA;IACA;EACA;EACAE,IAAA,WAAAA,KAAA;IACA,IAAAC,eAAA;IAEA,KAAAC,IAAA,MAAAb,KAAA,sBAAAA,KAAA,CAAAc,WAAA;IACA,KAAAD,IAAA,MAAAb,KAAA,mBAAAA,KAAA,CAAAe,QAAA,IAAAH,eAAA;IAEA;MAAAA,eAAA,EAAAA;IAAA;EACA;EACAI,QAAA;IACAC,IAAA;MACAC,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAiB,IAAA;MACA;MACAE,GAAA,WAAAA,IAAAF,IAAA;QACA,KAAAJ,IAAA,MAAAb,KAAA,UAAAoB,MAAA,CAAAC,QAAA,CAAAJ,IAAA;MACA;IACA;IACAK,SAAA;MACAJ,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAc,WAAA,CAAAQ,SAAA;MACA;MACAH,GAAA,WAAAA,IAAAI,QAAA;QACA,KAAAV,IAAA,MAAAb,KAAA,CAAAc,WAAA,eAAAS,QAAA;MACA;IACA;IACAC,WAAA;MACAN,GAAA,WAAAA,IAAA;QACA,YAAAlB,KAAA,CAAAc,WAAA,CAAAU,WAAA;MACA;MACAL,GAAA,WAAAA,IAAAM,UAAA;QACA,KAAAZ,IAAA,MAAAb,KAAA,CAAAc,WAAA,iBAAAW,UAAA;MACA;IACA;EACA;AACA"}]}