{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/apps.statefulset.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/apps.statefulset.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5jb25zdHJ1Y3QuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9nZXRQcm90b3R5cGVPZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH0KZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSAidW5kZWZpbmVkIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gImZ1bmN0aW9uIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH0KaW1wb3J0IFdvcmtsb2FkIGZyb20gJy4vd29ya2xvYWQnOwppbXBvcnQgeyBXT1JLTE9BRF9UWVBFUywgUE9EIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IFdPUktMT0FEX1RZUEVfVE9fS0lORF9NQVBQSU5HIH0gZnJvbSAnQHNoZWxsL2RldGFpbC93b3JrbG9hZC9pbmRleCc7CnZhciBTdGF0ZWZ1bFNldCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1dvcmtsb2FkKSB7CiAgX2luaGVyaXRzKFN0YXRlZnVsU2V0LCBfV29ya2xvYWQpOwogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoU3RhdGVmdWxTZXQpOwogIGZ1bmN0aW9uIFN0YXRlZnVsU2V0KCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN0YXRlZnVsU2V0KTsKICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9CiAgX2NyZWF0ZUNsYXNzKFN0YXRlZnVsU2V0LCBbewogICAga2V5OiAicm9sbEJhY2siLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9yb2xsQmFjayA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShjbHVzdGVyLCBzdGF0ZWZ1bFNldCwgcmV2aXNpb24pIHsKICAgICAgICB2YXIgYm9keTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBib2R5ID0gW3sKICAgICAgICAgICAgICAgIG9wOiAncmVwbGFjZScsCiAgICAgICAgICAgICAgICBwYXRoOiAnL3NwZWMvdGVtcGxhdGUnLAogICAgICAgICAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgICAgICAgbWV0YWRhdGE6IHJldmlzaW9uLmRhdGEuc3BlYy50ZW1wbGF0ZS5tZXRhZGF0YSwKICAgICAgICAgICAgICAgICAgc3BlYzogcmV2aXNpb24uZGF0YS5zcGVjLnRlbXBsYXRlLnNwZWMKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBvcDogJ3JlcGxhY2UnLAogICAgICAgICAgICAgICAgcGF0aDogJy9tZXRhZGF0YS9nZW5lcmF0aW9uJywKICAgICAgICAgICAgICAgIHZhbHVlOiByZXZpc2lvbi5yZXZpc2lvbgogICAgICAgICAgICAgIH1dOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiB0aGlzLnJvbGxCYWNrV29ya2xvYWQoY2x1c3Rlciwgc3RhdGVmdWxTZXQsICdzdGF0ZWZ1bHNldHMnLCBib2R5KTsKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7CiAgICAgIH0pKTsKICAgICAgZnVuY3Rpb24gcm9sbEJhY2soX3gsIF94MiwgX3gzKSB7CiAgICAgICAgcmV0dXJuIF9yb2xsQmFjay5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CiAgICAgIHJldHVybiByb2xsQmFjazsKICAgIH0oKSAvLyB3ZSBuZWVkIHRvIHByb3ZpZGUgYSBuZXcgcG9kcyBnZXR0ZXIgZm9yIHN0YXRlZnVsc2V0cyBiZWNhdXNlIHRoZSByZWxhdGlvbnNoaXAKICAgIC8vIGRvbmUgb24gdGhlIHBhcmVudCBtb2RlbCAid29ya2xvYWQiIGlzIG5vdCBjb3JyZWN0CiAgfSwgewogICAga2V5OiAicG9kcyIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdmFyIF90aGlzJG1ldGFkYXRhLAogICAgICAgIF90aGlzID0gdGhpczsKICAgICAgdmFyIHJlbGF0aW9uc2hpcHMgPSAoKF90aGlzJG1ldGFkYXRhID0gdGhpcy5tZXRhZGF0YSkgPT09IG51bGwgfHwgX3RoaXMkbWV0YWRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1ldGFkYXRhLnJlbGF0aW9uc2hpcHMpIHx8IFtdOwogICAgICB2YXIgcG9kUmVsYXRpb25zaGlwID0gcmVsYXRpb25zaGlwcy5maWx0ZXIoZnVuY3Rpb24gKHJlbGF0aW9uc2hpcCkgewogICAgICAgIHJldHVybiByZWxhdGlvbnNoaXAudG9UeXBlID09PSBQT0Q7CiAgICAgIH0pWzBdOwogICAgICBpZiAocG9kUmVsYXRpb25zaGlwKSB7CiAgICAgICAgdmFyIHBvZHMgPSB0aGlzLiRnZXR0ZXJzWydwb2RzQnlOYW1lc3BhY2UnXSh0aGlzLm1ldGFkYXRhLm5hbWVzcGFjZSk7CiAgICAgICAgcmV0dXJuIHBvZHMuZmlsdGVyKGZ1bmN0aW9uIChwb2QpIHsKICAgICAgICAgIHZhciBfcG9kJG1ldGFkYXRhOwogICAgICAgICAgLy8gYSBiaXQgb2YgYSBkdXBsaWNhdGlvbiBvZiBwb2RSZWxhdGlvbnNoaXAsIGJ1dCBhbHdheXMgc2FmZSB0byBjaGVjay4uLgogICAgICAgICAgaWYgKChfcG9kJG1ldGFkYXRhID0gcG9kLm1ldGFkYXRhKSAhPT0gbnVsbCAmJiBfcG9kJG1ldGFkYXRhICE9PSB2b2lkIDAgJiYgKF9wb2QkbWV0YWRhdGEgPSBfcG9kJG1ldGFkYXRhLm93bmVyUmVmZXJlbmNlcykgIT09IG51bGwgJiYgX3BvZCRtZXRhZGF0YSAhPT0gdm9pZCAwICYmIF9wb2QkbWV0YWRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgIHZhciBfcG9kJG1ldGFkYXRhMjsKICAgICAgICAgICAgdmFyIG93bmVyUmVmZXJlbmNlc1N0YXRlZnVsU2V0ID0gKF9wb2QkbWV0YWRhdGEyID0gcG9kLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfcG9kJG1ldGFkYXRhMiA9PT0gdm9pZCAwIHx8IChfcG9kJG1ldGFkYXRhMiA9IF9wb2QkbWV0YWRhdGEyLm93bmVyUmVmZXJlbmNlcykgPT09IG51bGwgfHwgX3BvZCRtZXRhZGF0YTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wb2QkbWV0YWRhdGEyLmZpbmQoZnVuY3Rpb24gKG93bikgewogICAgICAgICAgICAgIHJldHVybiBvd24ua2luZCA9PT0gV09SS0xPQURfVFlQRV9UT19LSU5EX01BUFBJTkdbV09SS0xPQURfVFlQRVMuU1RBVEVGVUxfU0VUXTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGlmIChvd25lclJlZmVyZW5jZXNTdGF0ZWZ1bFNldCkgewogICAgICAgICAgICAgIHJldHVybiAiIi5jb25jYXQocG9kLm1ldGFkYXRhLm5hbWVzcGFjZSwgIi8iKS5jb25jYXQob3duZXJSZWZlcmVuY2VzU3RhdGVmdWxTZXQubmFtZSkgPT09IF90aGlzLmlkOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfSk7CiAgICAgIH0KICAgICAgcmV0dXJuIFtdOwogICAgfQogIH1dKTsKICByZXR1cm4gU3RhdGVmdWxTZXQ7Cn0oV29ya2xvYWQpOwpleHBvcnQgeyBTdGF0ZWZ1bFNldCBhcyBkZWZhdWx0IH07"},{"version":3,"names":["Workload","WORKLOAD_TYPES","POD","WORKLOAD_TYPE_TO_KIND_MAPPING","StatefulSet","_Workload","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_rollBack","_asyncToGenerator","regeneratorRuntime","mark","_callee","cluster","statefulSet","revision","body","wrap","_callee$","_context","prev","next","op","path","metadata","data","spec","template","rollBackWorkload","stop","rollBack","_x","_x2","_x3","get","_this$metadata","_this","relationships","podRelationship","filter","relationship","toType","pods","$getters","namespace","pod","_pod$metadata","ownerReferences","length","_pod$metadata2","ownerReferencesStatefulSet","find","own","kind","STATEFUL_SET","concat","name","id","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/apps.statefulset.js"],"sourcesContent":["import Workload from './workload';\nimport { WORKLOAD_TYPES, POD } from '@shell/config/types';\nimport { WORKLOAD_TYPE_TO_KIND_MAPPING } from '@shell/detail/workload/index';\n\nexport default class StatefulSet extends Workload {\n  async rollBack(cluster, statefulSet, revision) {\n    const body = [\n      {\n        op:    'replace',\n        path:  '/spec/template',\n        value: {\n          metadata: revision.data.spec.template.metadata,\n          spec:     revision.data.spec.template.spec\n        }\n      }, {\n        op:    'replace',\n        path:  '/metadata/generation',\n        value: revision.revision,\n      }\n    ];\n\n    await this.rollBackWorkload(cluster, statefulSet, 'statefulsets', body);\n  }\n\n  // we need to provide a new pods getter for statefulsets because the relationship\n  // done on the parent model \"workload\" is not correct\n  get pods() {\n    const relationships = this.metadata?.relationships || [];\n    const podRelationship = relationships.filter((relationship) => relationship.toType === POD)[0];\n\n    if (podRelationship) {\n      const pods = this.$getters['podsByNamespace'](this.metadata.namespace);\n\n      return pods.filter((pod) => {\n        // a bit of a duplication of podRelationship, but always safe to check...\n        if (pod.metadata?.ownerReferences?.length) {\n          const ownerReferencesStatefulSet = pod.metadata?.ownerReferences?.find((own) => own.kind === WORKLOAD_TYPE_TO_KIND_MAPPING[WORKLOAD_TYPES.STATEFUL_SET]);\n\n          if (ownerReferencesStatefulSet) {\n            return `${ pod.metadata.namespace }/${ ownerReferencesStatefulSet.name }` === this.id;\n          }\n        }\n\n        return false;\n      });\n    }\n\n    return [];\n  }\n}\n"],"mappings":"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"}]}