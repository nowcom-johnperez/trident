{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_EDIT","LabeledInput","LabeledSelect","AUTH_TYPE","NORMAN","SECRET","SECRET_TYPES","base64Encode","addObjects","insertAt","sortBy","name","components","props","mode","type","String","default","preSelect","Object","value","inStore","labelKey","namespace","required","limitToNamespace","Boolean","generateName","allowNone","allowSsh","allowBasic","allowS3","allowRke","registerBeforeHook","Function","hookName","appendUniqueIdToHook","hookPriority","Number","vertical","delegateCreateToParent","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","_this$preSelect","selected","_this$preSelect2","_this$preSelect3","wrap","_callee$","_context","prev","next","$store","getters","concat","allSecrets","dispatch","sent","CLOUD_CREDENTIAL","allCloudCreds","_NONE","publicKey","privateKey","_typeof","includes","update","stop","data","uniqueId","Date","getTime","computed","_SSH","_BASIC","_S3","options","_this2","types","keys","push","SSH","BASIC","RKE_AUTH_CONFIG","out","filter","x","metadata","length","_type","dataKeys","every","key","map","dataPreview","subTypeDisplay","id","label","group","more","provider","nameDisplay","providerDisplay","lastGroup","i","kind","t","disabled","unshift","firstCol","moreCols","watch","ns","startsWith","created","doCreate","Error","methods","updateKeyVal","$emit","split","_this3","_callee2","secret","publicField","privateField","_callee2$","_context2","abrupt","s3credentialConfig","accessKey","secretKey","t0","_defineProperty","save","$nextTick"],"sources":["node_modules/@rancher/shell/components/form/SelectOrCreateAuthSecret.vue"],"sourcesContent":["<script>\nimport { _EDIT } from '@shell/config/query-params';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { AUTH_TYPE, NORMAN, SECRET } from '@shell/config/types';\nimport { SECRET_TYPES } from '@shell/config/secret';\nimport { base64Encode } from '@shell/utils/crypto';\nimport { addObjects, insertAt } from '@shell/utils/array';\nimport { sortBy } from '@shell/utils/sort';\n\nexport default {\n  name: 'SelectOrCreateAuthSecret',\n\n  components: {\n    LabeledInput,\n    LabeledSelect,\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    preSelect: {\n      type:    Object,\n      default: null,\n    },\n\n    value: {\n      type:    [String, Object],\n      default: null,\n    },\n\n    inStore: {\n      type:    String,\n      default: 'cluster',\n    },\n\n    labelKey: {\n      type:    String,\n      default: 'selectOrCreateAuthSecret.label',\n    },\n\n    namespace: {\n      type:     String,\n      required: true,\n    },\n\n    limitToNamespace: {\n      type:    Boolean,\n      default: true,\n    },\n\n    generateName: {\n      type:    String,\n      default: 'auth-',\n    },\n\n    allowNone: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowSsh: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowBasic: {\n      type:    Boolean,\n      default: true,\n    },\n\n    allowS3: {\n      type:    Boolean,\n      default: false,\n    },\n\n    allowRke: {\n      type:    Boolean,\n      default: false,\n    },\n\n    registerBeforeHook: {\n      type:     Function,\n      required: true,\n    },\n\n    hookName: {\n      type:    String,\n      default: 'registerAuthSecret'\n    },\n\n    appendUniqueIdToHook: {\n      type:    Boolean,\n      default: false\n    },\n\n    hookPriority: {\n      type:    Number,\n      default: 99,\n    },\n\n    vertical: {\n      type:    Boolean,\n      default: false,\n    },\n\n    /**\n     * This component is used in MultiStep Priocess\n     * So when user click through to final step and submit the form\n     * This component get recreated therefore register `doCreate` as a hook each time\n     * Also, the parent step component is not aware that credential is created\n     *\n     * This property is implement to prevent this issue and delegate it to parent component.\n     */\n    delegateCreateToParent: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    if ( (this.allowSsh || this.allowBasic || this.allowRke) && this.$store.getters[`${ this.inStore }/schemaFor`](SECRET) ) {\n      // Avoid an async call and loading screen if already loaded by someone else\n      if ( this.$store.getters[`${ this.inStore }/haveAll`](SECRET) ) {\n        this.allSecrets = this.$store.getters[`${ this.inStore }/all`](SECRET);\n      } else {\n        this.allSecrets = await this.$store.dispatch(`${ this.inStore }/findAll`, { type: SECRET });\n      }\n    }\n\n    if ( this.allowS3 && this.$store.getters['rancher/canList'](NORMAN.CLOUD_CREDENTIAL) ) {\n      // Avoid an async call and loading screen if already loaded by someone else\n      if ( this.$store.getters['rancher/haveAll'](NORMAN.CLOUD_CREDENTIAL) ) {\n        this.allCloudCreds = this.$store.getters['rancher/all'](NORMAN.CLOUD_CREDENTIAL);\n      } else {\n        this.allCloudCreds = await this.$store.dispatch('rancher/findAll', { type: NORMAN.CLOUD_CREDENTIAL });\n      }\n    } else {\n      this.allCloudCreds = [];\n    }\n\n    let selected = this.preSelect?.selected || AUTH_TYPE._NONE;\n\n    if ( !this.value ) {\n      this.publicKey = this.preSelect?.publicKey || '';\n      this.privateKey = this.preSelect?.privateKey || '';\n    }\n\n    if ( this.value ) {\n      if ( typeof this.value === 'object' ) {\n        selected = `${ this.value.namespace }/${ this.value.name }`;\n      } else if ( this.value.includes('/') || this.value.includes(':') ) {\n        selected = this.value;\n      } else if ( this.namespace ) {\n        selected = `${ this.namespace }/${ this.value }`;\n      } else {\n        selected = this.value;\n      }\n    }\n\n    this.selected = selected;\n\n    this.update();\n  },\n\n  data(props) {\n    return {\n      allCloudCreds: [],\n      allSecrets:    [],\n      selected:      null,\n\n      publicKey:  '',\n      privateKey: '',\n      uniqueId:   new Date().getTime() // Allows form state to be individually tracked if the form is in a list\n    };\n  },\n\n  computed: {\n    _SSH() {\n      return AUTH_TYPE._SSH;\n    },\n\n    _BASIC() {\n      return AUTH_TYPE._BASIC;\n    },\n\n    _S3() {\n      return AUTH_TYPE._S3;\n    },\n\n    options() {\n      const types = [];\n      const keys = [];\n\n      if ( this.allowSsh ) {\n        types.push(SECRET_TYPES.SSH);\n      }\n\n      if ( this.allowBasic ) {\n        types.push(SECRET_TYPES.BASIC);\n      }\n\n      if ( this.allowRke ) {\n        types.push(SECRET_TYPES.RKE_AUTH_CONFIG);\n      }\n\n      const out = this.allSecrets\n        .filter((x) => this.namespace && this.limitToNamespace ? x.metadata.namespace === this.namespace : true)\n        .filter((x) => {\n          // Must match one of the types if given\n          if ( types.length && !types.includes(x._type) ) {\n            return false;\n          }\n\n          // Must match ALL of the keys if given\n          if ( keys.length ) {\n            const dataKeys = Object.keys(x.data || {});\n\n            if ( !keys.every((key) => dataKeys.includes(key)) ) {\n              return false;\n            }\n          }\n\n          return true;\n        }).map((x) => {\n          const {\n            dataPreview, subTypeDisplay, metadata, id\n          } = x;\n\n          const label = subTypeDisplay && dataPreview ? `${ metadata.name } (${ subTypeDisplay }: ${ dataPreview })` : `${ metadata.name } (${ subTypeDisplay })`;\n\n          return {\n            label,\n            group: metadata.namespace,\n            value: id,\n          };\n        });\n\n      if ( this.allowS3 ) {\n        const more = this.allCloudCreds\n          .filter((x) => ['aws', 's3'].includes(x.provider) )\n          .map((x) => {\n            return {\n              label: `${ x.nameDisplay } (${ x.providerDisplay })`,\n              group: 'Cloud Credentials',\n              value: x.id,\n            };\n          });\n\n        addObjects(out, more);\n      }\n\n      if ( !this.limitToNamespace ) {\n        sortBy(out, 'group');\n        if ( out.length ) {\n          let lastGroup = '';\n\n          for ( let i = 0 ; i < out.length ; i++ ) {\n            if ( out[i].group !== lastGroup ) {\n              lastGroup = out[i].group;\n\n              insertAt(out, i, {\n                kind:     'title',\n                label:    this.t('selectOrCreateAuthSecret.namespaceGroup', { name: lastGroup }),\n                disabled: true,\n              });\n\n              i++;\n            }\n          }\n        }\n      }\n\n      if ( out.length ) {\n        out.unshift({\n          kind:     'title',\n          label:    this.t('selectOrCreateAuthSecret.chooseExisting'),\n          disabled: true\n        });\n      }\n      if ( this.allowNone ) {\n        out.unshift({\n          label: this.t('generic.none'),\n          value: AUTH_TYPE._NONE,\n        });\n      }\n\n      if (this.allowSsh || this.allowS3 || this.allowBasic) {\n        out.unshift({\n          label:    'divider',\n          disabled: true,\n          kind:     'divider'\n        });\n      }\n\n      if ( this.allowSsh ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createSsh'),\n          value: AUTH_TYPE._SSH,\n          kind:  'highlighted'\n        });\n      }\n\n      if ( this.allowS3 ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createS3'),\n          value: AUTH_TYPE._S3,\n          kind:  'highlighted'\n        });\n      }\n\n      if ( this.allowBasic ) {\n        out.unshift({\n          label: this.t('selectOrCreateAuthSecret.createBasic'),\n          value: AUTH_TYPE._BASIC,\n          kind:  'highlighted'\n        });\n      }\n\n      return out;\n    },\n\n    firstCol() {\n      if ( this.vertical ) {\n        return '';\n      }\n\n      if ( this.selected === AUTH_TYPE._SSH || this.selected === AUTH_TYPE._BASIC || this.selected === AUTH_TYPE._S3 ) {\n        return 'col span-4';\n      }\n\n      return 'col span-6';\n    },\n\n    moreCols() {\n      if ( this.vertical ) {\n        return 'mt-20';\n      }\n\n      return 'col span-4';\n    }\n  },\n\n  watch: {\n    selected:   'update',\n    publicKey:  'updateKeyVal',\n    privateKey: 'updateKeyVal',\n\n    namespace(ns) {\n      if ( ns && !this.selected.startsWith(`${ ns }/`) ) {\n        this.selected = AUTH_TYPE._NONE;\n      }\n    }\n  },\n\n  created() {\n    if (this.registerBeforeHook) {\n      const hookName = this.appendUniqueIdToHook ? this.hookName + this.uniqueId : this.hookName;\n\n      if (!this.delegateCreateToParent) {\n        this.registerBeforeHook(this.doCreate, hookName, this.hookPriority);\n      }\n    } else {\n      throw new Error('Before Hook is missing');\n    }\n  },\n\n  methods: {\n    updateKeyVal() {\n      if ( ![AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3].includes(this.selected)) {\n        this.privateKey = '';\n        this.publicKey = '';\n      }\n\n      this.$emit('inputauthval', {\n        selected:   this.selected,\n        privateKey: this.privateKey,\n        publicKey:  this.publicKey\n      });\n    },\n\n    update() {\n      if ( (!this.selected || [AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3, AUTH_TYPE._NONE].includes(this.selected))) {\n        this.$emit('input', null);\n      } else if ( this.selected.includes(':') ) {\n        // Cloud creds\n        this.$emit('input', this.selected);\n      } else {\n        const split = this.selected.split('/');\n\n        if ( this.limitToNamespace ) {\n          this.$emit('input', split[1]);\n        } else {\n          const out = {\n            namespace: split[0],\n            name:      split[1]\n          };\n\n          this.$emit('input', out);\n        }\n      }\n\n      this.updateKeyVal();\n    },\n\n    async doCreate() {\n      if ( ![AUTH_TYPE._SSH, AUTH_TYPE._BASIC, AUTH_TYPE._S3].includes(this.selected) || this.delegateCreateToParent ) {\n        return;\n      }\n\n      let secret;\n\n      if ( this.selected === AUTH_TYPE._S3 ) {\n        secret = await this.$store.dispatch(`rancher/create`, {\n          type:               NORMAN.CLOUD_CREDENTIAL,\n          s3credentialConfig: {\n            accessKey: this.publicKey,\n            secretKey: this.privateKey,\n          },\n        });\n      } else {\n        secret = await this.$store.dispatch(`${ this.inStore }/create`, {\n          type:     SECRET,\n          metadata: {\n            namespace:    this.namespace,\n            generateName: this.generateName\n          },\n        });\n\n        let type, publicField, privateField;\n\n        switch ( this.selected ) {\n        case AUTH_TYPE._SSH:\n          type = SECRET_TYPES.SSH;\n          publicField = 'ssh-publickey';\n          privateField = 'ssh-privatekey';\n          break;\n        case AUTH_TYPE._BASIC:\n          type = SECRET_TYPES.BASIC;\n          publicField = 'username';\n          privateField = 'password';\n          break;\n        default:\n          throw new Error('Unknown type');\n        }\n\n        secret._type = type;\n        secret.data = {\n          [publicField]:  base64Encode(this.publicKey),\n          [privateField]: base64Encode(this.privateKey),\n        };\n      }\n\n      await secret.save();\n\n      await this.$nextTick(() => {\n        this.selected = secret.id;\n      });\n\n      return secret;\n    },\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"select-or-create-auth-secret\"\n  >\n    <div\n      class=\"mt-20\"\n      :class=\"{'row': !vertical}\"\n    >\n      <div :class=\"firstCol\">\n        <LabeledSelect\n          v-model=\"selected\"\n          data-testid=\"auth-secret-select\"\n          :mode=\"mode\"\n          :label-key=\"labelKey\"\n          :loading=\"$fetchState.pending\"\n          :options=\"options\"\n          :selectable=\"option => !option.disabled\"\n        />\n      </div>\n      <template v-if=\"selected === _SSH\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-ssh-public-key\"\n            :mode=\"mode\"\n            type=\"multiline\"\n            label-key=\"selectOrCreateAuthSecret.ssh.publicKey\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-ssh-private-key\"\n            :mode=\"mode\"\n            type=\"multiline\"\n            label-key=\"selectOrCreateAuthSecret.ssh.privateKey\"\n          />\n        </div>\n      </template>\n      <template v-else-if=\"selected === _BASIC\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-basic-public-key\"\n            :mode=\"mode\"\n            label-key=\"selectOrCreateAuthSecret.basic.username\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-basic-private-key\"\n            :mode=\"mode\"\n            type=\"password\"\n            label-key=\"selectOrCreateAuthSecret.basic.password\"\n          />\n        </div>\n      </template>\n      <template v-else-if=\"selected === _S3\">\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"publicKey\"\n            data-testid=\"auth-secret-s3-public-key\"\n            :mode=\"mode\"\n            label-key=\"selectOrCreateAuthSecret.s3.accessKey\"\n          />\n        </div>\n        <div :class=\"moreCols\">\n          <LabeledInput\n            v-model=\"privateKey\"\n            data-testid=\"auth-secret-s3-private-key\"\n            :mode=\"mode\"\n            type=\"password\"\n            label-key=\"selectOrCreateAuthSecret.s3.secretKey\"\n          />\n        </div>\n      </template>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\">\n.select-or-create-auth-secret div.labeled-select {\n  min-height: $input-height;\n}\n</style>\n"],"mappings":"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"}]}