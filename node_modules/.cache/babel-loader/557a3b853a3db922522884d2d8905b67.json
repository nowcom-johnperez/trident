{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/secret.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/secret.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["r","CERTMANAGER","KUBERNETES","base64Decode","base64Encode","removeObjects","SERVICE_ACCOUNT","set","NAME","MANAGER","SteveModel","TYPES","OPAQUE","SERVICE_ACCT","DOCKER","DOCKER_JSON","BASIC","SSH","TLS","BOOTSTRAP","ISTIO_TLS","HELM_RELEASE","FLEET_CLUSTER","CLOUD_CREDENTIAL","RKE_AUTH_CONFIG","Secret","_SteveModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","_type","metadata","namespace","generateName","_this$metadata$annota","annotations","ISSUER","isCertificate","_this$certInfo","certInfo","issuer","_this$certInfo2","notAfter","_this$certInfo3","cn","unrepeatedSans","length","eightDays","timeTilExpiration","out","label","t","content","typeDisplay","_this$metadata","name","SERVICE_ACCOUNT_NAME","push","formatter","formatterOpts","value","type","plusMoreNames","concat","n","class","dateClass","hasLink","$rootGetters","isEditable","keys","_toConsumableArray","Object","data","binaryData","join","encodedJSON","decodedJSON","auths","JSON","parse","domain","e","keysDisplay","username","sshUser","_this$metadata2","pub","startsWith","match","parts","replace","split","fallback","pem","sans","x","END_MARKER","certs","first","X509","readCertPEM","issuerString","getIssuerString","slice","indexOf","zulutodate","getNotAfter","cnString","getSubjectString","_unused","getExtSubjectAltName","_this$certInfo4","_this$certInfo7","filter","_this$certInfo5","_this$certInfo6","commonBases","map","substr","displaySans","expiration","timeThen","valueOf","timeNow","Date","now","k","_this","isMap","_typeof","neu","_defineProperty","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/secret.js"],"sourcesContent":["import r from 'jsrsasign';\nimport { CERTMANAGER, KUBERNETES } from '@shell/config/labels-annotations';\nimport { base64Decode, base64Encode } from '@shell/utils/crypto';\nimport { removeObjects } from '@shell/utils/array';\nimport { SERVICE_ACCOUNT } from '@shell/config/types';\nimport { set } from '@shell/utils/object';\nimport { NAME as MANAGER } from '@shell/config/product/manager';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport const TYPES = {\n  OPAQUE:           'Opaque',\n  SERVICE_ACCT:     'kubernetes.io/service-account-token',\n  DOCKER:           'kubernetes.io/dockercfg',\n  DOCKER_JSON:      'kubernetes.io/dockerconfigjson',\n  BASIC:            'kubernetes.io/basic-auth',\n  SSH:              'kubernetes.io/ssh-auth',\n  TLS:              'kubernetes.io/tls',\n  BOOTSTRAP:        'bootstrap.kubernetes.io/token',\n  ISTIO_TLS:        'istio.io/key-and-cert',\n  HELM_RELEASE:     'helm.sh/release.v1',\n  FLEET_CLUSTER:    'fleet.cattle.io/cluster-registration-values',\n  CLOUD_CREDENTIAL: 'provisioning.cattle.io/cloud-credential',\n  RKE_AUTH_CONFIG:  'rke.cattle.io/auth-config'\n};\n\nexport default class Secret extends SteveModel {\n  get hasSensitiveData() {\n    return true;\n  }\n\n  get isCertificate() {\n    return this._type === TYPES.TLS;\n  }\n\n  get isRegistry() {\n    return this._type === TYPES.DOCKER_JSON;\n  }\n\n  get isCloudCredential() {\n    return this._type === TYPES.CLOUD_CREDENTIAL || (this.metadata.namespace === 'cattle-global-data' && this.metadata.generateName === 'cc-');\n  }\n\n  get issuer() {\n    const { metadata:{ annotations = {} } } = this;\n\n    if (annotations[CERTMANAGER.ISSUER]) {\n      return annotations[CERTMANAGER.ISSUER];\n    } else if (this.isCertificate) {\n      return this.certInfo?.issuer;\n    } else {\n      return null;\n    }\n  }\n\n  get notAfter() {\n    if (this.isCertificate) {\n      return this.certInfo?.notAfter;\n    } else {\n      return null;\n    }\n  }\n\n  get cn() {\n    if (this.isCertificate) {\n      return this.certInfo?.cn;\n    }\n\n    return null;\n  }\n\n  // show plus n more for cert names\n  get plusMoreNames() {\n    if (this.isCertificate) {\n      return this.unrepeatedSans.length;\n    }\n\n    return null;\n  }\n\n  // use text-warning' or 'text-error' if cert is expiring within 8 days or is expired\n  get dateClass() {\n    if (this.isCertificate) {\n      const eightDays = 691200000;\n\n      if (this.timeTilExpiration > eightDays ) {\n        return '';\n      } else if (this.timeTilExpiration > 0) {\n        return 'text-warning';\n      } else {\n        return 'text-error';\n      }\n    }\n\n    return null;\n  }\n\n  get details() {\n    const out = [\n      {\n        label:   this.t('secret.type'),\n        content: this.typeDisplay\n      }\n    ];\n\n    if ( this._type === TYPES.SERVICE_ACCT ) {\n      const name = this.metadata?.annotations?.[KUBERNETES.SERVICE_ACCOUNT_NAME];\n\n      if ( name ) {\n        out.push({\n          label:         'Service Account',\n          formatter:     'LinkName',\n          formatterOpts: {\n            value:     name,\n            type:      SERVICE_ACCOUNT,\n            namespace: this.namespace,\n          },\n          content: name,\n        });\n      }\n    }\n\n    if (this.cn) {\n      out.push({\n        label:   this.t('secret.certificate.cn'),\n        content: this.plusMoreNames ? `${ this.cn } ${ this.t('secret.certificate.plusMore', { n: this.plusMoreNames }) }` : this.cn\n      });\n    }\n\n    if (this.issuer) {\n      out.push({\n        label:   this.t('secret.certificate.issuer'),\n        content: this.issuer\n      });\n    }\n\n    if (this.notAfter) {\n      out.push({\n        label:         'Expires',\n        formatter:     'Date',\n        formatterOpts: { class: this.dateClass },\n        content:       this.notAfter\n      });\n    }\n\n    return out;\n  }\n\n  get canUpdate() {\n    if ( !this.hasLink('update') ) {\n      return false;\n    }\n\n    if ( this._type === TYPES.SERVICE_ACCT ) {\n      return false;\n    }\n\n    return this.$rootGetters['type-map/optionsFor'](this.type).isEditable;\n  }\n\n  get keysDisplay() {\n    const keys = [\n      ...Object.keys(this.data || []),\n      ...Object.keys(this.binaryData || [])\n    ];\n\n    if ( !keys.length ) {\n      return '(none)';\n    }\n\n    // if ( keys.length >= 4 ) {\n    //   return `${keys[0]}, ${keys[1]}, ${keys[2]} and ${keys.length - 3} more`;\n    // }\n\n    return keys.join(', ');\n  }\n\n  // decode some secret data to show in list view\n  get dataPreview() {\n    if (this._type === TYPES.DOCKER_JSON) {\n      const encodedJSON = this.data['.dockerconfigjson'];\n\n      if (encodedJSON) {\n        const decodedJSON = base64Decode(encodedJSON);\n\n        try {\n          const auths = JSON.parse(decodedJSON).auths;\n          const out = [];\n\n          for (const domain in auths) {\n            out.push(domain);\n          }\n\n          return out.join(', ');\n        } catch (e) {\n          return decodedJSON;\n        }\n      }\n    } else if (this._type === TYPES.TLS) {\n      return this.certInfo || this.keysDisplay;\n    } else if ( this._type === TYPES.BASIC ) {\n      return base64Decode(this.data.username);\n    } else if ( this._type === TYPES.SSH ) {\n      return this.sshUser;\n    } else if ( this._type === TYPES.SERVICE_ACCT ) {\n      return this.metadata?.annotations?.['kubernetes.io/service-account.name'];\n    }\n\n    return this.keysDisplay;\n  }\n\n  get sshUser() {\n    if ( this._type !== TYPES.SSH ) {\n      return null;\n    }\n\n    const pub = base64Decode(this.data['ssh-publickey']);\n\n    if ( !pub ) {\n      return null;\n    }\n\n    if ( pub.startsWith('----') ) {\n      // PEM format\n      const match = pub.match(/from OpenSSH by ([^\"]+)\"/);\n\n      if ( match ) {\n        return match[1];\n      }\n    } else if ( pub.startsWith('ssh-') ) {\n      // OpenSSH format\n      const parts = pub.replace(/\\n/g, '').split(/\\s+/);\n\n      if ( parts && parts.length === 3 ) {\n        return parts[2];\n      }\n    }\n\n    return null;\n  }\n\n  get subTypeDisplay() {\n    const type = this._type || '';\n    const fallback = type.replace(/^kubernetes.io\\//, '');\n\n    return this.$rootGetters['i18n/withFallback'](`secret.types.\"${ type }\"`, null, fallback);\n  }\n\n  // parse TLS certs and return issuer, notAfter, cn, sans\n  get certInfo() {\n    const pem = base64Decode(this.data['tls.crt']);\n    let issuer, notAfter, cn, sans, x;\n    const END_MARKER = '-----END CERTIFICATE-----';\n\n    if (pem) {\n      const certs = pem.split(END_MARKER);\n      let first = pem;\n\n      if (certs.length > 1) {\n        first = `${ certs[0] }${ END_MARKER }`;\n      }\n\n      try {\n        x = new r.X509();\n\n        x.readCertPEM(first);\n        const issuerString = x.getIssuerString();\n\n        issuer = issuerString.slice(issuerString.indexOf('CN=') + 3);\n        notAfter = r.zulutodate(x.getNotAfter());\n\n        const cnString = x.getSubjectString();\n\n        cn = cnString.slice(cnString.indexOf('CN=') + 3);\n      } catch {\n        return null;\n      }\n\n      try {\n        sans = x.getExtSubjectAltName();\n      } catch (e) {\n        sans = [];\n      }\n\n      return {\n        issuer, notAfter, cn, sans\n      };\n    }\n\n    return null;\n  }\n\n  // use for + n more name display\n  get unrepeatedSans() {\n    if (this._type === TYPES.TLS ) {\n      if (this.certInfo?.sans?.filter) {\n        const commonBases = this.certInfo?.sans.filter((name) => name.indexOf('*.') === 0 || name.indexOf('www.') === 0).map((name) => name.substr(name.indexOf('.')));\n        const displaySans = removeObjects(this.certInfo?.sans, commonBases);\n\n        return displaySans;\n      }\n\n      return this.certInfo?.sans || [];\n    }\n\n    return null;\n  }\n\n  get timeTilExpiration() {\n    if (this._type === TYPES.TLS) {\n      const expiration = this.certInfo.notAfter;\n      const timeThen = expiration.valueOf();\n      const timeNow = Date.now();\n\n      return timeThen - timeNow;\n    }\n\n    return null;\n  }\n\n  get decodedData() {\n    const out = {};\n\n    for ( const k in this.data || {} ) {\n      out[k] = base64Decode(this.data[k]);\n    }\n\n    return out;\n  }\n\n  get setData() {\n    return (key, value) => { // or (mapOfNewData)\n      const isMap = key && typeof key === 'object';\n\n      if ( !this.data || isMap ) {\n        set(this, 'data', {});\n      }\n\n      let neu;\n\n      if ( isMap ) {\n        neu = key;\n      } else {\n        neu = { [key]: value };\n      }\n\n      for ( const k in neu ) {\n        // The key is quoted so that keys like '.dockerconfigjson' that contain dot don't get parsed into an object path\n        set(this.data, `\"${ k }\"`, base64Encode(neu[k]));\n      }\n    };\n  }\n\n  get doneRoute() {\n    if ( this.$rootGetters['currentProduct'].name === MANAGER ) {\n      return 'c-cluster-manager-secret';\n    } else {\n      return 'c-cluster-product-resource';\n    }\n  }\n}\n"],"mappings":"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"}]}