{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/chart/monitoring/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isEmpty","merge","mapGetters","Alerting","Checkbox","ClusterSelector","Grafana","LabeledInput","Loading","Prometheus","Tab","ChartPsp","allHash","STORAGE_CLASS","PVC","SECRET","WORKLOAD_TYPES","components","hasTabs","props","chart","type","Object","default","_default","mode","String","value","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","$store","hash","wrap","_callee$","_context","prev","next","namespaces","getters","pvcs","dispatch","secrets","storageClasses","sent","Promise","all","values","map","targetNamespace","stop","data","accessModes","id","label","clusterType","disableAggregateRoles","prometheusResources","computed","_objectSpread","provider","currentCluster","status","toLowerCase","workloads","_this2","flatMap","watch","valueGlobalRbacUserRolesCreate","createUserRoles","global","rbac","userRoles","aggregateToDefaultRoles","created","_this$value","_this$value2","_this$value3","_this$value4","_this$value5","_this$value6","_this$value7","extendedDefaults","create","mergeValue","prometheus","prometheusSpec","scrapeInterval","evaluationInterval","retention","retentionSize","enableAdminAPI","startsWith","$set","rke2IngressNginx","rke2Etcd","rkeEtcd","ingressNginx","$emit","willSave","methods","_prometheusSpec$stora","selector","storageSpec","volumeClaimTemplate","spec","matchExpressions","matchLabels","defaultValue","undefined","length"],"sources":["node_modules/@rancher/shell/chart/monitoring/index.vue"],"sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\nimport merge from 'lodash/merge';\n\nimport { mapGetters } from 'vuex';\n\nimport Alerting from '@shell/chart/monitoring/alerting';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport ClusterSelector from '@shell/chart/monitoring/ClusterSelector';\nimport Grafana from '@shell/chart/monitoring/grafana';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Loading from '@shell/components/Loading';\nimport Prometheus from '@shell/chart/monitoring/prometheus';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport ChartPsp from '@shell/components/ChartPsp';\n\nimport { allHash } from '@shell/utils/promise';\nimport { STORAGE_CLASS, PVC, SECRET, WORKLOAD_TYPES } from '@shell/config/types';\n\nexport default {\n  components: {\n    Alerting,\n    Checkbox,\n    ClusterSelector,\n    Grafana,\n    LabeledInput,\n    Loading,\n    Prometheus,\n    Tab,\n    ChartPsp\n  },\n\n  hasTabs: true,\n\n  props: {\n    chart: {\n      type:    Object,\n      default: () => ({}),\n    },\n\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n  },\n\n  async fetch() {\n    const { $store } = this;\n\n    const hash = await allHash({\n      namespaces:     $store.getters['namespaces'](),\n      pvcs:           $store.dispatch('cluster/findAll', { type: PVC }),\n      secrets:        $store.dispatch('cluster/findAll', { type: SECRET }),\n      storageClasses: $store.dispatch('cluster/findAll', { type: STORAGE_CLASS }),\n    });\n\n    await Promise.all(\n      Object.values(WORKLOAD_TYPES).map((type) => this.$store.dispatch('cluster/findAll', { type })\n      )\n    );\n\n    this.targetNamespace = hash.namespaces[this.chart.targetNamespace] || false;\n\n    if (!isEmpty(hash.storageClasses)) {\n      this.storageClasses = hash.storageClasses;\n    }\n\n    if (!isEmpty(hash.pvcs)) {\n      this.pvcs = hash.pvcs;\n    }\n\n    if (!isEmpty(hash.secrets)) {\n      this.secrets = hash.secrets;\n    }\n  },\n\n  data() {\n    return {\n      accessModes: [\n        {\n          id:    'ReadWriteOnce',\n          label: 'monitoring.accessModes.once',\n        },\n        {\n          id:    'ReadOnlyMany',\n          label: 'monitoring.accessModes.readOnlyMany',\n        },\n        {\n          id:    'ReadWriteMany',\n          label: 'monitoring.accessModes.many',\n        },\n      ],\n      clusterType:           {},\n      disableAggregateRoles: false,\n      prometheusResources:   [],\n      pvcs:                  [],\n      secrets:               [],\n      storageClasses:        [],\n      targetNamespace:       null,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    provider() {\n      return this.currentCluster.status.provider.toLowerCase();\n    },\n    workloads() {\n      return Object.values(WORKLOAD_TYPES).flatMap((type) => this.$store.getters['cluster/all'](type)\n      );\n    },\n  },\n\n  watch: {\n    'value.global.rbac.userRoles.create'(createUserRoles) {\n      if (createUserRoles) {\n        this.disableAggregateRoles = false;\n      } else {\n        this.value.global.rbac.userRoles.aggregateToDefaultRoles = false;\n        this.disableAggregateRoles = true;\n      }\n    },\n  },\n\n  created() {\n    if (this.mode === 'create') {\n      // merge here doesn't work (existing values are lost when going from form to yaml and back again) so instead supply some better default values\n      // any changes here need to respect the order of properties (reflected in the yaml diff)\n      const extendedDefaults = {\n        global: {\n          rbac: {\n            userRoles: {\n              create:                  this.mergeValue(this.value?.global?.rbac?.userRoles?.create, true),\n              aggregateToDefaultRoles: this.mergeValue(this.value?.global?.rbac?.userRoles?.aggregateToDefaultRoles, true),\n            },\n          },\n        },\n        prometheus: {\n          prometheusSpec: {\n            scrapeInterval:     this.mergeValue(this.value?.prometheus?.prometheusSpec?.scrapeInterval, '1m'),\n            evaluationInterval: this.mergeValue(this.value?.prometheus?.prometheusSpec?.evaluationInterval, '1m'),\n            retention:          this.mergeValue(this.value?.prometheus?.prometheusSpec?.retention, '10d'),\n            retentionSize:      this.mergeValue(this.value?.prometheus?.prometheusSpec?.retentionSize, '50GiB'),\n            enableAdminAPI:     this.mergeValue(this.value?.prometheus?.prometheusSpec?.enableAdminAPI, false),\n          },\n        },\n      };\n\n      merge(this.value, extendedDefaults);\n\n      if (this.provider.startsWith('rke2')) {\n        this.$set(this.value.rke2IngressNginx, 'enabled', true);\n        this.$set(this.value.rke2Etcd, 'enabled', true);\n        this.$set(this.value.rkeEtcd, 'enabled', false);\n      } else if (this.provider.startsWith('rke')) {\n        this.$set(this.value, 'ingressNginx', this.value.ingressNginx || {});\n        this.$set(this.value.ingressNginx, 'enabled', true);\n      } else {\n        this.$set(this.value.rkeEtcd, 'enabled', false);\n      }\n    }\n\n    this.$emit('register-before-hook', this.willSave, 'willSave');\n  },\n\n  methods: {\n    willSave() {\n      const { prometheusSpec } = this.value.prometheus;\n      const selector =\n        prometheusSpec?.storageSpec?.volumeClaimTemplate?.spec?.selector;\n\n      // This works for UI editor installation\n      // However, it doesn't work for yaml editor installation\n      // Global values later merged again in charts/install.vue addGlobalValuesTo()\n      // We still need to remove the global values from charts/install.vue addGlobalValuesTo()\n      if (\n        selector &&\n        isEmpty(selector.matchExpressions) &&\n        isEmpty(selector.matchLabels)\n      ) {\n        delete this.value.prometheus.prometheusSpec.storageSpec\n          .volumeClaimTemplate.spec.selector;\n      }\n    },\n\n    mergeValue(value, defaultValue) {\n      return value === undefined || (typeof value === 'string' && !value.length) ? defaultValue : value;\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading\n    v-if=\"$fetchState.pending\"\n    mode=\"relative\"\n  />\n  <div\n    v-else\n    class=\"config-monitoring-container\"\n  >\n    <Tab\n      name=\"general\"\n      :label=\"t('monitoring.tabs.general')\"\n      :weight=\"99\"\n    >\n      <div>\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <ClusterSelector\n              :value=\"value\"\n              :mode=\"mode\"\n              @onClusterTypeChanged=\"clusterType = $event\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"clusterType.group === 'managed'\"\n          class=\"row mb-20\"\n        >\n          <Checkbox\n            v-model=\"value.prometheusOperator.hostNetwork\"\n            label-key=\"monitoring.hostNetwork.label\"\n            :tooltip=\"t('monitoring.hostNetwork.tip', {}, true)\"\n          />\n        </div>\n        <div class=\"row\">\n          <div class=\"col span-6\">\n            <Checkbox\n              v-model=\"value.global.rbac.userRoles.create\"\n              label-key=\"monitoring.createDefaultRoles.label\"\n              :tooltip=\"t('monitoring.createDefaultRoles.tip', {}, true)\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <Checkbox\n              v-model=\"value.global.rbac.userRoles.aggregateToDefaultRoles\"\n              label-key=\"monitoring.aggregateDefaultRoles.label\"\n              :tooltip=\"{\n                content: t('monitoring.aggregateDefaultRoles.tip', {}, true),\n                autoHide: false,\n              }\"\n              :disabled=\"disableAggregateRoles\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"provider === 'rke' && value.rkeEtcd\"\n          class=\"row mt-20\"\n        >\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"value.rkeEtcd.clients.https.certDir\"\n              :label=\"t('monitoring.etcdNodeDirectory.label')\"\n              :tooltip=\"t('monitoring.etcdNodeDirectory.tooltip', {}, true)\"\n              :hover-tooltip=\"true\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n\n        <!-- Conditionally display PSP checkbox -->\n        <ChartPsp\n          :value=\"value\"\n          :cluster=\"currentCluster\"\n        />\n      </div>\n    </Tab>\n    <Tab\n      name=\"prometheus\"\n      :label=\"t('monitoring.tabs.prometheus')\"\n      :weight=\"98\"\n    >\n      <div>\n        <Prometheus\n          v-model=\"value\"\n          v-bind=\"$attrs\"\n          :access-modes=\"accessModes\"\n          :mode=\"mode\"\n          :storage-classes=\"storageClasses\"\n          :prometheus-pods=\"prometheusResources\"\n          :workloads=\"workloads\"\n        />\n      </div>\n    </Tab>\n    <Tab\n      name=\"alerting\"\n      :label=\"t('monitoring.tabs.alerting')\"\n      :weight=\"97\"\n    >\n      <div>\n        <Alerting\n          v-model=\"value\"\n          :mode=\"mode\"\n          :secrets=\"secrets\"\n        />\n      </div>\n    </Tab>\n    <Tab\n      name=\"grafana\"\n      :label=\"t('monitoring.tabs.grafana')\"\n      :weight=\"96\"\n    >\n      <div>\n        <Grafana\n          v-model=\"value\"\n          :access-modes=\"accessModes\"\n          :mode=\"mode\"\n          :pvcs=\"pvcs\"\n          :storage-classes=\"storageClasses\"\n        />\n      </div>\n    </Tab>\n  </div>\n</template>\n"],"mappings":"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"}]}