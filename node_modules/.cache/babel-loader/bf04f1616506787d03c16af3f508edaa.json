{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/plugins.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/plugins.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["removeObjects","simplify","key","toLowerCase","replace","credentialOptions","aws","publicKey","publicMode","keys","digitalocean","azure","linode","rke1Supports","driverMap","aks","amazonec2","amazoneks","amazonelasticcontainerservice","azurekubernetesservice","google","googlekubernetesengine","huaweicontainercloudengine","linodekubernetesengine","oci","opentelekomcloudcontainerengine","oraclecontainerengine","driverToFieldMap","gcp","oracle","likelyFields","map","x","iffyFields","fullFields","prefixFields","suffixFields","driverToCloudProviderMap","harvester","vmwarevsphere","custom","undefined","configureCredential","name","opt","mapDriver","to","state","getters","credentialDriverFor","credentialFieldForDriver","clusterDrivers","schemaForDriver","rootState","rootGetters","id","concat","schema","fieldNamesForDriver","console","error","out","Object","resourceFields","fieldsForDriver","names","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","err","e","f","cloudProviderForDriver"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/plugins.js"],"sourcesContent":["import { removeObjects } from '@shell/utils/array';\n\nexport function simplify(key) {\n  return key.toLowerCase().replace(/[^a-z0-9]/ig, '');\n}\n\nconst credentialOptions = {\n  aws: {\n    publicKey:  'accessKey',\n    publicMode: 'full',\n    keys:       ['region', 'accessKey', 'secretKey']\n  },\n  digitalocean: {\n    publicKey:  'accessToken',\n    publicMode: 'prefix',\n    keys:       'accessToken'\n  },\n  azure: {\n    publicKey:  'clientId',\n    publicMode: 'full',\n    keys:       ['subscriptionId', 'tenantId', 'clientId', 'clientSecret']\n  },\n  linode: {\n    publicKey:  'token',\n    publicMode: 'prefix',\n    keys:       'token'\n  }\n};\n\n// Credential drivers that rke1 supports\nexport const rke1Supports = [\n  'aws',\n  'azure',\n  'digitalocean',\n  'gcp',\n  'harvester',\n  'linode',\n  'oracle',\n  'pnap',\n  'vmwarevsphere'\n];\n\n// Map a credential driver name to a component name\n// e.g. ec2 and eks both use the 'aws' driver to share the same pool of creds.\nconst driverMap = {\n  aks:                             'azure',\n  amazonec2:                       'aws',\n  amazoneks:                       'aws',\n  amazonelasticcontainerservice:   'aws',\n  azurekubernetesservice:          'azure',\n  google:                          'gcp',\n  googlekubernetesengine:          'gcp',\n  huaweicontainercloudengine:      'huawei',\n  linodekubernetesengine:          'linode',\n  oci:                             'oracle',\n  opentelekomcloudcontainerengine: 'otc',\n  oraclecontainerengine:           'oracle',\n};\n\n// Map a driver component back to the cloud credential field name their data has to be stored in\nconst driverToFieldMap = {\n  aws:    'amazonec2',\n  gcp:    'google',\n  oracle: 'oci',\n};\n\n// Machine driver fields that are probably a credential field\nexport const likelyFields = [\n  'username', 'password',\n  'accesskey', 'secretkey',\n  'accesskeyid', 'secretkeyid', 'accesskeysecret',\n  'token', 'apikey',\n  'secret',\n  'clientid', 'clientsecret', 'subscriptionid', 'tenantid',\n].map((x) => simplify(x));\n\n// Machine driver fields that are maaaaybe a credential field\nexport const iffyFields = [\n  'location', 'region',\n].map((x) => simplify(x));\n\n// Machine driver fields that are safe to display the whole value\nexport const fullFields = [\n  'username',\n  'accesskey',\n  'accesskeyid',\n  'clientid'\n].map((x) => simplify(x));\n\n// Machine driver fields that are safe to display the beginning of\nexport const prefixFields = [\n  'token',\n  'apikey',\n  'secret',\n].map((x) => simplify(x));\n\n// Machine driver fields that are safe to display the end of\nexport const suffixFields = [\n].map((x) => simplify(x));\n\n// Machine driver to cloud provider mapping\nconst driverToCloudProviderMap = {\n  amazonec2:     'aws',\n  azure:         'azure',\n  digitalocean:  '', // Show restricted options\n  harvester:     'harvester',\n  linode:        '', // Show restricted options\n  vmwarevsphere: 'rancher-vsphere',\n\n  custom: undefined // Show all options\n};\n\n// Dynamically loaded drivers can call this eventually to register their options\nexport function configureCredential(name, opt) {\n  credentialOptions[name] = opt;\n}\n\n// Map a driver to a different credential name, e.g. amazonec2 and amazoneks both use the 'aws' credential type.\nexport function mapDriver(name, to) {\n  driverMap[name] = to;\n}\n\nexport const state = function() {\n  return {};\n};\n\nexport const getters = {\n  credentialOptions() {\n    return (name) => {\n      name = (name || '').toLowerCase();\n\n      return credentialOptions[name] || {};\n    };\n  },\n\n  credentialDriverFor() {\n    return (name) => {\n      name = (name || '').toLowerCase();\n\n      return driverMap[name] || name;\n    };\n  },\n\n  credentialFieldForDriver() {\n    return (name) => {\n      name = (name || '').toLowerCase();\n\n      return driverToFieldMap[name] || name;\n    };\n  },\n\n  clusterDrivers() {\n    // The subset of drivers supported by Vue components\n    return [];\n  },\n\n  schemaForDriver(state, getters, rootState, rootGetters) {\n    return (name) => {\n      const id = `rke-machine-config.cattle.io.${ name }config`;\n      const schema = rootGetters['management/schemaFor'](id);\n\n      return schema;\n    };\n  },\n\n  fieldNamesForDriver(state, getters) {\n    return (name) => {\n      const schema = getters.schemaForDriver(name);\n\n      if ( !schema ) {\n        // eslint-disable-next-line no-console\n        console.error(`Machine Driver Config schema not found for ${ name }`);\n\n        return [];\n      }\n\n      const out = Object.keys(schema?.resourceFields || {});\n\n      removeObjects(out, ['apiVersion', 'dockerPort', 'kind', 'metadata']);\n\n      return out;\n    };\n  },\n\n  fieldsForDriver(state, getters) {\n    return (name) => {\n      const schema = getters.schemaForDriver(name);\n      const names = getters.fieldNamesForDriver(name);\n\n      const out = {};\n\n      for ( const n of names ) {\n        out[n] = schema.resourceFields[n];\n      }\n\n      return out;\n    };\n  },\n\n  cloudProviderForDriver() {\n    return (name) => {\n      return driverToCloudProviderMap[name];\n    };\n  },\n};\n"],"mappings":"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"}]}