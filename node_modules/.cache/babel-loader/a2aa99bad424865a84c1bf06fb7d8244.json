{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCBUYWJiZWQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkJzsKaW1wb3J0IGNyZWF0ZUVkaXRWaWV3IGZyb20gJ0BzaGVsbC9taXhpbnMvY3JlYXRlLWVkaXQtdmlldyc7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCBRdWVzdGlvbnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUXVlc3Rpb25zJzsKaW1wb3J0IHsgQ09ORklHX01BUCwgTkFNRVNQQUNFIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBMYWJlbGVkU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTGFiZWxlZFNlbGVjdCc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBqc3lhbWwgZnJvbSAnanMteWFtbCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBDcnVSZXNvdXJjZTogQ3J1UmVzb3VyY2UsCiAgICBMYWJlbGVkU2VsZWN0OiBMYWJlbGVkU2VsZWN0LAogICAgTGFiZWxlZElucHV0OiBMYWJlbGVkSW5wdXQsCiAgICBUYWJiZWQ6IFRhYmJlZCwKICAgIFF1ZXN0aW9uczogUXVlc3Rpb25zLAogICAgTG9hZGluZzogTG9hZGluZwogIH0sCiAgbWl4aW5zOiBbY3JlYXRlRWRpdFZpZXddLAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIF9mZWRlcmF0b3JTeXN0ZW1OYW1lczsKICAgICAgdmFyIGluU3RvcmUsIGZlZGVyYXRvclN5c3RlbU5hbWVzcGFjZXNDb25maWdNYXA7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdjYXRhbG9nL2xvYWQnKTsKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgaW5TdG9yZSA9IF90aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50U3RvcmUnXShOQU1FU1BBQ0UpOyAvLyB0aGlzIHNlZW1zIGV4Y2Vzc2l2ZSBidXQgaWYgd2UncmUgZ29ubmEgcHVsbCB1cCBzcGVjaWZpYyBjb25maWdNYXBzIHdlIG5lZWQgdGhlbiB3ZSBuZWVkIHRoZSBjb25maWdtYXBzIHRvIGJlIGluIHRoZSBzdG9yZS4KICAgICAgICAgICAgLy8gVG9EbzogdHJ5IHRvIGZpbmQgYSBiZXR0ZXIgd2F5IG9mIGxvYWRpbmcgdGhlc2Ugb3IganVzdCBsb2FkIHRoZSBvbmVzIHdlIG5lZWQKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goIiIuY29uY2F0KGluU3RvcmUsICIvZmluZEFsbCIpLCB7CiAgICAgICAgICAgICAgdHlwZTogQ09ORklHX01BUAogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDc7CiAgICAgICAgICAgIHJldHVybiBfdGhpcy5nZXRDb25maWdNYXAoJ2NhdHRsZS1tb25pdG9yaW5nLXN5c3RlbS9wcm9tZXRoZXVzLWZlZGVyYXRvci1zeXN0ZW0tbmFtZXNwYWNlcycpOwogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBmZWRlcmF0b3JTeXN0ZW1OYW1lc3BhY2VzQ29uZmlnTWFwID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX3RoaXMuc3lzdGVtTmFtZXNwYWNlcyA9IEpTT04ucGFyc2UoZmVkZXJhdG9yU3lzdGVtTmFtZXNwYWNlc0NvbmZpZ01hcCA9PT0gbnVsbCB8fCBmZWRlcmF0b3JTeXN0ZW1OYW1lc3BhY2VzQ29uZmlnTWFwID09PSB2b2lkIDAgfHwgKF9mZWRlcmF0b3JTeXN0ZW1OYW1lcyA9IGZlZGVyYXRvclN5c3RlbU5hbWVzcGFjZXNDb25maWdNYXAuZGF0YSkgPT09IG51bGwgfHwgX2ZlZGVyYXRvclN5c3RlbU5hbWVzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZmVkZXJhdG9yU3lzdGVtTmFtZXNbJ3N5c3RlbS1uYW1lc3BhY2VzLmpzb24nXSk7CiAgICAgICAgICAgIF90aGlzLm5hbWVzcGFjZXMgPSBfdGhpcy4kc3RvcmUuZ2V0dGVyc1siIi5jb25jYXQoaW5TdG9yZSwgIi9hbGwiKV0oTkFNRVNQQUNFKS5maWx0ZXIoX3RoaXMubmFtZXNwYWNlRmlsdGVyKS5tYXAoX3RoaXMubmFtZXNwYWNlTWFwcGVyKTsKICAgICAgICAgICAgX3RoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIGlmICghdGhpcy52YWx1ZS5zcGVjLnZhbHVlcykgewogICAgICB0aGlzLiRzZXQodGhpcy52YWx1ZS5zcGVjLCAndmFsdWVzJywge30pOwogICAgfQogICAgcmV0dXJuIHsKICAgICAgc3lzdGVtTmFtZXNwYWNlczogbnVsbCwKICAgICAgbmFtZXNwYWNlczogW10sCiAgICAgIGxvYWRpbmc6IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgc2VsZWN0ZWROYW1lc3BhY2VRdWVzdGlvbnM6IGZ1bmN0aW9uIHNlbGVjdGVkTmFtZXNwYWNlUXVlc3Rpb25zKCkgewogICAgICB2YXIgX3RoaXMkY3VycmVudE5hbWVzcGFjLCBfdGhpcyQkc3RvcmUkZ2V0dGVycywgX2pzeWFtbCRsb2FkOwogICAgICB2YXIgaW5TdG9yZSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2N1cnJlbnRTdG9yZSddKCk7CiAgICAgIHZhciBjb25maWdNYXBSZWxhdGlvbnNoaXAgPSAoX3RoaXMkY3VycmVudE5hbWVzcGFjID0gdGhpcy5jdXJyZW50TmFtZXNwYWNlKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TmFtZXNwYWMgPT09IHZvaWQgMCB8fCAoX3RoaXMkY3VycmVudE5hbWVzcGFjID0gX3RoaXMkY3VycmVudE5hbWVzcGFjLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TmFtZXNwYWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGN1cnJlbnROYW1lc3BhYy5yZWxhdGlvbnNoaXBzLmZpbmQoZnVuY3Rpb24gKHJlbGF0aW9uc2hpcCkgewogICAgICAgIHJldHVybiAocmVsYXRpb25zaGlwID09PSBudWxsIHx8IHJlbGF0aW9uc2hpcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVsYXRpb25zaGlwLnRvVHlwZSkgPT09ICdjb25maWdtYXAnOwogICAgICB9KTsKICAgICAgdmFyIHF1ZXN0aW9uc1lhbWwgPSAoX3RoaXMkJHN0b3JlJGdldHRlcnMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWyIiLmNvbmNhdChpblN0b3JlLCAiL2J5SWQiKV0oY29uZmlnTWFwUmVsYXRpb25zaGlwID09PSBudWxsIHx8IGNvbmZpZ01hcFJlbGF0aW9uc2hpcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnTWFwUmVsYXRpb25zaGlwLnRvVHlwZSwgY29uZmlnTWFwUmVsYXRpb25zaGlwID09PSBudWxsIHx8IGNvbmZpZ01hcFJlbGF0aW9uc2hpcCA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnTWFwUmVsYXRpb25zaGlwLnRvSWQpKSA9PT0gbnVsbCB8fCBfdGhpcyQkc3RvcmUkZ2V0dGVycyA9PT0gdm9pZCAwIHx8IChfdGhpcyQkc3RvcmUkZ2V0dGVycyA9IF90aGlzJCRzdG9yZSRnZXR0ZXJzLmRhdGEpID09PSBudWxsIHx8IF90aGlzJCRzdG9yZSRnZXR0ZXJzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyQkc3RvcmUkZ2V0dGVyc1sncXVlc3Rpb25zLnlhbWwnXTsKICAgICAgcmV0dXJuIChfanN5YW1sJGxvYWQgPSBqc3lhbWwubG9hZChxdWVzdGlvbnNZYW1sKSkgPT09IG51bGwgfHwgX2pzeWFtbCRsb2FkID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfanN5YW1sJGxvYWQucXVlc3Rpb25zOwogICAgfSwKICAgIGN1cnJlbnROYW1lc3BhY2U6IGZ1bmN0aW9uIGN1cnJlbnROYW1lc3BhY2UoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwogICAgICByZXR1cm4gdGhpcy5uYW1lc3BhY2VzLmZpbmQoZnVuY3Rpb24gKG5hbWVzcGFjZSkgewogICAgICAgIHZhciBfdGhpczIkdmFsdWU7CiAgICAgICAgcmV0dXJuIG5hbWVzcGFjZS5pZCA9PT0gKChfdGhpczIkdmFsdWUgPSBfdGhpczIudmFsdWUpID09PSBudWxsIHx8IF90aGlzMiR2YWx1ZSA9PT0gdm9pZCAwIHx8IChfdGhpczIkdmFsdWUgPSBfdGhpczIkdmFsdWUubWV0YWRhdGEpID09PSBudWxsIHx8IF90aGlzMiR2YWx1ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMyJHZhbHVlLm5hbWVzcGFjZSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0TmFtZXNwYWNlQ29uZmlnTWFwSWQ6IGZ1bmN0aW9uIGdldE5hbWVzcGFjZUNvbmZpZ01hcElkKG5hbWVzcGFjZSkgewogICAgICB2YXIgX3RoaXMkY3VycmVudE5hbWVzcGFjMjsKICAgICAgcmV0dXJuIChfdGhpcyRjdXJyZW50TmFtZXNwYWMyID0gdGhpcy5jdXJyZW50TmFtZXNwYWNlKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TmFtZXNwYWMyID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnROYW1lc3BhYzIgPSBfdGhpcyRjdXJyZW50TmFtZXNwYWMyLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TmFtZXNwYWMyID09PSB2b2lkIDAgfHwgKF90aGlzJGN1cnJlbnROYW1lc3BhYzIgPSBfdGhpcyRjdXJyZW50TmFtZXNwYWMyLnJlbGF0aW9uc2hpcHMuZmluZChmdW5jdGlvbiAocmVsYXRpb25zaGlwKSB7CiAgICAgICAgcmV0dXJuIChyZWxhdGlvbnNoaXAgPT09IG51bGwgfHwgcmVsYXRpb25zaGlwID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWxhdGlvbnNoaXAudG9UeXBlKSA9PT0gJ2NvbmZpZ21hcCc7CiAgICAgIH0pKSA9PT0gbnVsbCB8fCBfdGhpcyRjdXJyZW50TmFtZXNwYWMyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjdXJyZW50TmFtZXNwYWMyLnRvSWQ7CiAgICB9LAogICAgZ2V0Q29uZmlnTWFwOiBmdW5jdGlvbiBnZXRDb25maWdNYXAoaWQpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZCcsIHsKICAgICAgICAgICAgICAgIHR5cGU6IENPTkZJR19NQVAsCiAgICAgICAgICAgICAgICBpZDogaWQKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCBfY29udGV4dDIuc2VudCk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIG5hbWVzcGFjZUZpbHRlcjogZnVuY3Rpb24gbmFtZXNwYWNlRmlsdGVyKG5hbWVzcGFjZSkgewogICAgICB2YXIgX3RoaXMkc3lzdGVtTmFtZXNwYWNlLCBfdGhpcyRzeXN0ZW1OYW1lc3BhY2UyLCBfbmFtZXNwYWNlJG1ldGFkYXRhOwogICAgICB2YXIgZXhjbHVkZVByb2plY3RzID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheSgoKF90aGlzJHN5c3RlbU5hbWVzcGFjZSA9IHRoaXMuc3lzdGVtTmFtZXNwYWNlcykgPT09IG51bGwgfHwgX3RoaXMkc3lzdGVtTmFtZXNwYWNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRzeXN0ZW1OYW1lc3BhY2Uuc3lzdGVtUHJvamVjdExhYmVsVmFsdWVzKSB8fCBbXSksIFsoX3RoaXMkc3lzdGVtTmFtZXNwYWNlMiA9IHRoaXMuc3lzdGVtTmFtZXNwYWNlcykgPT09IG51bGwgfHwgX3RoaXMkc3lzdGVtTmFtZXNwYWNlMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkc3lzdGVtTmFtZXNwYWNlMi5wcm9qZWN0UmVsZWFzZUxhYmVsVmFsdWVdKTsKICAgICAgcmV0dXJuIChuYW1lc3BhY2UgPT09IG51bGwgfHwgbmFtZXNwYWNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBuYW1lc3BhY2UucHJvamVjdCkgJiYgKG5hbWVzcGFjZSA9PT0gbnVsbCB8fCBuYW1lc3BhY2UgPT09IHZvaWQgMCB8fCAoX25hbWVzcGFjZSRtZXRhZGF0YSA9IG5hbWVzcGFjZS5tZXRhZGF0YSkgPT09IG51bGwgfHwgX25hbWVzcGFjZSRtZXRhZGF0YSA9PT0gdm9pZCAwIHx8IChfbmFtZXNwYWNlJG1ldGFkYXRhID0gX25hbWVzcGFjZSRtZXRhZGF0YS5sYWJlbHMpID09PSBudWxsIHx8IF9uYW1lc3BhY2UkbWV0YWRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9uYW1lc3BhY2UkbWV0YWRhdGFbJ2hlbG0uY2F0dGxlLmlvL2hlbG0tcHJvamVjdC1vcGVyYXRlZCddKSAmJiAhZXhjbHVkZVByb2plY3RzLmluY2x1ZGVzKG5hbWVzcGFjZS5wcm9qZWN0SWQpOwogICAgfSwKICAgIG5hbWVzcGFjZU1hcHBlcjogZnVuY3Rpb24gbmFtZXNwYWNlTWFwcGVyKG5hbWVzcGFjZSkgewogICAgICB2YXIgX25hbWVzcGFjZSRwcm9qZWN0OwogICAgICByZXR1cm4gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBuYW1lc3BhY2UpLCB7fSwgewogICAgICAgIGNvbmZpZ01hcElkOiB0aGlzLmdldE5hbWVzcGFjZUNvbmZpZ01hcElkKG5hbWVzcGFjZSksCiAgICAgICAgbGFiZWw6IG5hbWVzcGFjZSA9PT0gbnVsbCB8fCBuYW1lc3BhY2UgPT09IHZvaWQgMCB8fCAoX25hbWVzcGFjZSRwcm9qZWN0ID0gbmFtZXNwYWNlLnByb2plY3QpID09PSBudWxsIHx8IF9uYW1lc3BhY2UkcHJvamVjdCA9PT0gdm9pZCAwIHx8IChfbmFtZXNwYWNlJHByb2plY3QgPSBfbmFtZXNwYWNlJHByb2plY3Quc3BlYykgPT09IG51bGwgfHwgX25hbWVzcGFjZSRwcm9qZWN0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbmFtZXNwYWNlJHByb2plY3QuZGlzcGxheU5hbWUsCiAgICAgICAgdmFsdWU6IG5hbWVzcGFjZSA9PT0gbnVsbCB8fCBuYW1lc3BhY2UgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5hbWVzcGFjZS5pZAogICAgICB9KTsKICAgIH0KICB9Cn07"},{"version":3,"names":["Tabbed","createEditView","CruResource","Questions","CONFIG_MAP","NAMESPACE","LabeledSelect","LabeledInput","Loading","jsyaml","components","mixins","props","value","type","Object","required","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","_federatorSystemNames","inStore","federatorSystemNamespacesConfigMap","wrap","_callee$","_context","prev","next","$store","dispatch","getters","concat","getConfigMap","sent","systemNamespaces","JSON","parse","data","namespaces","filter","namespaceFilter","map","namespaceMapper","loading","stop","spec","values","$set","computed","selectedNamespaceQuestions","_this$currentNamespac","_this$$store$getters","_jsyaml$load","configMapRelationship","currentNamespace","metadata","relationships","find","relationship","toType","questionsYaml","toId","load","questions","_this2","namespace","_this2$value","id","methods","getNamespaceConfigMapId","_this$currentNamespac2","_this3","_callee2","_callee2$","_context2","abrupt","_this$systemNamespace","_this$systemNamespace2","_namespace$metadata","excludeProjects","_toConsumableArray","systemProjectLabelValues","projectReleaseLabelValue","project","labels","includes","projectId","_namespace$project","_objectSpread","configMapId","label","displayName"],"sources":["node_modules/@rancher/shell/edit/helm.cattle.io.projecthelmchart.vue"],"sourcesContent":["<script>\nimport Tabbed from '@shell/components/Tabbed';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport CruResource from '@shell/components/CruResource';\nimport Questions from '@shell/components/Questions';\nimport { CONFIG_MAP, NAMESPACE } from '@shell/config/types';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Loading from '@shell/components/Loading';\nimport jsyaml from 'js-yaml';\n\nexport default {\n  components: {\n    CruResource,\n    LabeledSelect,\n    LabeledInput,\n    Tabbed,\n    Questions,\n    Loading\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    await this.$store.dispatch('catalog/load');\n    const inStore = this.$store.getters['currentStore'](NAMESPACE);\n\n    // this seems excessive but if we're gonna pull up specific configMaps we need then we need the configmaps to be in the store.\n    // ToDo: try to find a better way of loading these or just load the ones we need\n    await this.$store.dispatch(`${ inStore }/findAll`, { type: CONFIG_MAP });\n\n    const federatorSystemNamespacesConfigMap = await this.getConfigMap('cattle-monitoring-system/prometheus-federator-system-namespaces');\n\n    this.systemNamespaces = JSON.parse(federatorSystemNamespacesConfigMap?.data?.['system-namespaces.json']);\n\n    this.namespaces = this.$store.getters[`${ inStore }/all`](NAMESPACE)\n      .filter(this.namespaceFilter)\n      .map(this.namespaceMapper);\n\n    this.loading = false;\n  },\n\n  data() {\n    if (!this.value.spec.values) {\n      this.$set(this.value.spec, 'values', {});\n    }\n\n    return {\n      systemNamespaces: null,\n      namespaces:       [],\n      loading:          true\n    };\n  },\n\n  computed: {\n    selectedNamespaceQuestions() {\n      const inStore = this.$store.getters['currentStore']();\n\n      const configMapRelationship = this.currentNamespace?.metadata?.relationships.find((relationship) => relationship?.toType === 'configmap');\n\n      const questionsYaml = this.$store.getters[`${ inStore }/byId`](configMapRelationship?.toType, configMapRelationship?.toId)?.data?.['questions.yaml'];\n\n      return jsyaml.load(questionsYaml)?.questions;\n    },\n    currentNamespace() {\n      return this.namespaces.find((namespace) => namespace.id === this.value?.metadata?.namespace);\n    }\n  },\n\n  methods: {\n    getNamespaceConfigMapId(namespace) {\n      return this.currentNamespace?.metadata?.relationships.find((relationship) => relationship?.toType === 'configmap')?.toId;\n    },\n    async getConfigMap(id) {\n      return await this.$store.dispatch('cluster/find', { type: CONFIG_MAP, id });\n    },\n    namespaceFilter(namespace) {\n      const excludeProjects = [...this.systemNamespaces?.systemProjectLabelValues || [], this.systemNamespaces?.projectReleaseLabelValue];\n\n      return namespace?.project && namespace?.metadata?.labels?.['helm.cattle.io/helm-project-operated'] && !excludeProjects.includes(namespace.projectId);\n    },\n    namespaceMapper(namespace) {\n      return {\n        ...namespace,\n        configMapId: this.getNamespaceConfigMapId(namespace),\n        label:       namespace?.project?.spec?.displayName,\n        value:       namespace?.id,\n      };\n    }\n  }\n};\n</script>\n\n<template>\n  <CruResource\n    v-if=\"!loading\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :mode=\"mode\"\n    :errors=\"errors\"\n    :apply-hooks=\"applyHooks\"\n    @finish=\"save\"\n  >\n    <div class=\"row\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"value.metadata.namespace\"\n          :label=\"t('namespace.project.label')\"\n          :options=\"namespaces\"\n          required\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.metadata.description\"\n          :label=\"t('nameNsDescription.description.label')\"\n        />\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col span-12\">\n        <Tabbed\n          v-if=\"!!currentNamespace && selectedNamespaceQuestions\"\n          ref=\"tabs\"\n          :side-tabs=\"true\"\n        >\n          <Questions\n            v-model=\"value.spec.values\"\n            tabbed=\"multiple\"\n            :target-namespace=\"value.metadata.namespace\"\n            :source=\"selectedNamespaceQuestions\"\n          />\n        </Tabbed>\n      </div>\n    </div>\n  </CruResource>\n  <Loading v-else />\n</template>\n\n<style lang=\"scss\" scoped>\n.row {\n  margin-bottom: 20px;\n}\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AACA,OAAAA,MAAA;AACA,OAAAC,cAAA;AACA,OAAAC,WAAA;AACA,OAAAC,SAAA;AACA,SAAAC,UAAA,EAAAC,SAAA;AACA,OAAAC,aAAA;AACA,SAAAC,YAAA;AACA,OAAAC,OAAA;AACA,OAAAC,MAAA;AAEA;EACAC,UAAA;IACAR,WAAA,EAAAA,WAAA;IACAI,aAAA,EAAAA,aAAA;IACAC,YAAA,EAAAA,YAAA;IACAP,MAAA,EAAAA,MAAA;IACAG,SAAA,EAAAA,SAAA;IACAK,OAAA,EAAAA;EACA;EAEAG,MAAA,GAAAV,cAAA;EAEAW,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;EACA;EAEAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,qBAAA;MAAA,IAAAC,OAAA,EAAAC,kCAAA;MAAA,OAAAL,kBAAA,CAAAM,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAZ,KAAA,CAAAa,MAAA,CAAAC,QAAA;UAAA;YACAR,OAAA,GAAAN,KAAA,CAAAa,MAAA,CAAAE,OAAA,iBAAA5B,SAAA,GAEA;YACA;YAAAuB,QAAA,CAAAE,IAAA;YAAA,OACAZ,KAAA,CAAAa,MAAA,CAAAC,QAAA,IAAAE,MAAA,CAAAV,OAAA;cAAAV,IAAA,EAAAV;YAAA;UAAA;YAAAwB,QAAA,CAAAE,IAAA;YAAA,OAEAZ,KAAA,CAAAiB,YAAA;UAAA;YAAAV,kCAAA,GAAAG,QAAA,CAAAQ,IAAA;YAEAlB,KAAA,CAAAmB,gBAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAd,kCAAA,aAAAA,kCAAA,gBAAAF,qBAAA,GAAAE,kCAAA,CAAAe,IAAA,cAAAjB,qBAAA,uBAAAA,qBAAA;YAEAL,KAAA,CAAAuB,UAAA,GAAAvB,KAAA,CAAAa,MAAA,CAAAE,OAAA,IAAAC,MAAA,CAAAV,OAAA,WAAAnB,SAAA,EACAqC,MAAA,CAAAxB,KAAA,CAAAyB,eAAA,EACAC,GAAA,CAAA1B,KAAA,CAAA2B,eAAA;YAEA3B,KAAA,CAAA4B,OAAA;UAAA;UAAA;YAAA,OAAAlB,QAAA,CAAAmB,IAAA;QAAA;MAAA,GAAAzB,OAAA;IAAA;EACA;EAEAkB,IAAA,WAAAA,KAAA;IACA,UAAA3B,KAAA,CAAAmC,IAAA,CAAAC,MAAA;MACA,KAAAC,IAAA,MAAArC,KAAA,CAAAmC,IAAA;IACA;IAEA;MACAX,gBAAA;MACAI,UAAA;MACAK,OAAA;IACA;EACA;EAEAK,QAAA;IACAC,0BAAA,WAAAA,2BAAA;MAAA,IAAAC,qBAAA,EAAAC,oBAAA,EAAAC,YAAA;MACA,IAAA/B,OAAA,QAAAO,MAAA,CAAAE,OAAA;MAEA,IAAAuB,qBAAA,IAAAH,qBAAA,QAAAI,gBAAA,cAAAJ,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAK,QAAA,cAAAL,qBAAA,uBAAAA,qBAAA,CAAAM,aAAA,CAAAC,IAAA,WAAAC,YAAA;QAAA,QAAAA,YAAA,aAAAA,YAAA,uBAAAA,YAAA,CAAAC,MAAA;MAAA;MAEA,IAAAC,aAAA,IAAAT,oBAAA,QAAAvB,MAAA,CAAAE,OAAA,IAAAC,MAAA,CAAAV,OAAA,YAAAgC,qBAAA,aAAAA,qBAAA,uBAAAA,qBAAA,CAAAM,MAAA,EAAAN,qBAAA,aAAAA,qBAAA,uBAAAA,qBAAA,CAAAQ,IAAA,eAAAV,oBAAA,gBAAAA,oBAAA,GAAAA,oBAAA,CAAAd,IAAA,cAAAc,oBAAA,uBAAAA,oBAAA;MAEA,QAAAC,YAAA,GAAA9C,MAAA,CAAAwD,IAAA,CAAAF,aAAA,eAAAR,YAAA,uBAAAA,YAAA,CAAAW,SAAA;IACA;IACAT,gBAAA,WAAAA,iBAAA;MAAA,IAAAU,MAAA;MACA,YAAA1B,UAAA,CAAAmB,IAAA,WAAAQ,SAAA;QAAA,IAAAC,YAAA;QAAA,OAAAD,SAAA,CAAAE,EAAA,OAAAD,YAAA,GAAAF,MAAA,CAAAtD,KAAA,cAAAwD,YAAA,gBAAAA,YAAA,GAAAA,YAAA,CAAAX,QAAA,cAAAW,YAAA,uBAAAA,YAAA,CAAAD,SAAA;MAAA;IACA;EACA;EAEAG,OAAA;IACAC,uBAAA,WAAAA,wBAAAJ,SAAA;MAAA,IAAAK,sBAAA;MACA,QAAAA,sBAAA,QAAAhB,gBAAA,cAAAgB,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAf,QAAA,cAAAe,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAd,aAAA,CAAAC,IAAA,WAAAC,YAAA;QAAA,QAAAA,YAAA,aAAAA,YAAA,uBAAAA,YAAA,CAAAC,MAAA;MAAA,gBAAAW,sBAAA,uBAAAA,sBAAA,CAAAT,IAAA;IACA;IACA7B,YAAA,WAAAA,aAAAmC,EAAA;MAAA,IAAAI,MAAA;MAAA,OAAAvD,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAsD,SAAA;QAAA,OAAAvD,kBAAA,CAAAM,IAAA,UAAAkD,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhD,IAAA,GAAAgD,SAAA,CAAA/C,IAAA;YAAA;cAAA+C,SAAA,CAAA/C,IAAA;cAAA,OACA4C,MAAA,CAAA3C,MAAA,CAAAC,QAAA;gBAAAlB,IAAA,EAAAV,UAAA;gBAAAkE,EAAA,EAAAA;cAAA;YAAA;cAAA,OAAAO,SAAA,CAAAC,MAAA,WAAAD,SAAA,CAAAzC,IAAA;YAAA;YAAA;cAAA,OAAAyC,SAAA,CAAA9B,IAAA;UAAA;QAAA,GAAA4B,QAAA;MAAA;IACA;IACAhC,eAAA,WAAAA,gBAAAyB,SAAA;MAAA,IAAAW,qBAAA,EAAAC,sBAAA,EAAAC,mBAAA;MACA,IAAAC,eAAA,MAAAhD,MAAA,CAAAiD,kBAAA,GAAAJ,qBAAA,QAAA1C,gBAAA,cAAA0C,qBAAA,uBAAAA,qBAAA,CAAAK,wBAAA,YAAAJ,sBAAA,QAAA3C,gBAAA,cAAA2C,sBAAA,uBAAAA,sBAAA,CAAAK,wBAAA;MAEA,QAAAjB,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAAkB,OAAA,MAAAlB,SAAA,aAAAA,SAAA,gBAAAa,mBAAA,GAAAb,SAAA,CAAAV,QAAA,cAAAuB,mBAAA,gBAAAA,mBAAA,GAAAA,mBAAA,CAAAM,MAAA,cAAAN,mBAAA,uBAAAA,mBAAA,8CAAAC,eAAA,CAAAM,QAAA,CAAApB,SAAA,CAAAqB,SAAA;IACA;IACA5C,eAAA,WAAAA,gBAAAuB,SAAA;MAAA,IAAAsB,kBAAA;MACA,OAAAC,aAAA,CAAAA,aAAA,KACAvB,SAAA;QACAwB,WAAA,OAAApB,uBAAA,CAAAJ,SAAA;QACAyB,KAAA,EAAAzB,SAAA,aAAAA,SAAA,gBAAAsB,kBAAA,GAAAtB,SAAA,CAAAkB,OAAA,cAAAI,kBAAA,gBAAAA,kBAAA,GAAAA,kBAAA,CAAA1C,IAAA,cAAA0C,kBAAA,uBAAAA,kBAAA,CAAAI,WAAA;QACAjF,KAAA,EAAAuD,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAAE;MAAA;IAEA;EACA;AACA"}]}