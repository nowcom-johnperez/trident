{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/String.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/String.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMuanMiOwppbXBvcnQgeyBMYWJlbGVkSW5wdXQgfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0xhYmVsZWRJbnB1dCc7CmltcG9ydCBRdWVzdGlvbiBmcm9tICcuL1F1ZXN0aW9uJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExhYmVsZWRJbnB1dDogTGFiZWxlZElucHV0CiAgfSwKICBtaXhpbnM6IFtRdWVzdGlvbl0sCiAgY29tcHV0ZWQ6IHsKICAgIGlucHV0VHlwZTogZnVuY3Rpb24gaW5wdXRUeXBlKCkgewogICAgICBpZiAoWyd0ZXh0JywgJ3Bhc3N3b3JkJywgJ211bHRpbGluZSddLmluY2x1ZGVzKHRoaXMucXVlc3Rpb24udHlwZSkpIHsKICAgICAgICByZXR1cm4gdGhpcy5xdWVzdGlvbi50eXBlOwogICAgICB9CiAgICAgIHJldHVybiAndGV4dCc7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["LabeledInput","Question","components","mixins","computed","inputType","includes","question","type"],"sources":["node_modules/@rancher/shell/components/Questions/String.vue"],"sourcesContent":["<script>\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport Question from './Question';\n\nexport default {\n  components: { LabeledInput },\n  mixins:     [Question],\n\n  computed: {\n    inputType() {\n      if ( ['text', 'password', 'multiline'].includes(this.question.type) ) {\n        return this.question.type;\n      }\n\n      return 'text';\n    }\n  }\n};\n</script>\n\n<template>\n  <div\n    :data-testid=\"`string-row-${question.variable}`\"\n    class=\"row\"\n  >\n    <div class=\"col span-6\">\n      <LabeledInput\n        :mode=\"mode\"\n        :type=\"inputType\"\n        :label=\"displayLabel\"\n        :placeholder=\"question.default\"\n        :required=\"question.required\"\n        :value=\"value\"\n        :disabled=\"disabled\"\n        :tooltip=\"displayTooltip\"\n        :rules=\"rules\"\n        :data-testid=\"`string-input-${question.variable}`\"\n        @input=\"$emit('input', $event)\"\n      />\n    </div>\n    <div\n      v-if=\"showDescription\"\n      :data-testid=\"`string-description-${question.variable}`\"\n      class=\"col span-6 mt-10\"\n    >\n      {{ displayDescription }}\n    </div>\n  </div>\n</template>\n"],"mappings":";AACA,SAAAA,YAAA;AACA,OAAAC,QAAA;AAEA;EACAC,UAAA;IAAAF,YAAA,EAAAA;EAAA;EACAG,MAAA,GAAAF,QAAA;EAEAG,QAAA;IACAC,SAAA,WAAAA,UAAA;MACA,sCAAAC,QAAA,MAAAC,QAAA,CAAAC,IAAA;QACA,YAAAD,QAAA,CAAAC,IAAA;MACA;MAEA;IACA;EACA;AACA"}]}