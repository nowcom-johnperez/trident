{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Date","SortableTable","Banner","LabeledSelect","Loading","day","DATE_FORMAT","TIME_FORMAT","escapeHtml","randomStr","CIS","STATE","get","components","props","value","type","Object","default","_default","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","getReports","clusterReports","sent","stop","data","clusterReport","computed","parsedReport","_this$clusterReport","canBeScheduled","reportNodes","_this$clusterReport2","nodes","results","_this2","aggregatedTests","map","check","testStateSort","state","testIdSort","node_type","nodeRows","reduce","forEach","name","push","id","nodeState","details","_this3","out","label","t","status","lastRunScanProfileName","to","params","_objectSpread","$route","resource","CLUSTER_SCAN_PROFILE","total","pass","warn","skip","fail","notApplicable","lastRunTimestamp","component","filter","each","reportCheckHeaders","formatterOpts","arbitrary","sort","width","nodeTableHeaders","watch","neu","_this4","then","reports","_unused","methods","reportLabel","report","arguments","length","undefined","creationTimestamp","metadata","dateFormat","$store","getters","timeFormat","replace","concat","format","node","includes","SORT_ORDER","other","mixed","test","_test$id","split","n","join","remediationDisplay","row","remediation"],"sources":["node_modules/@rancher/shell/detail/cis.cattle.io.clusterscan.vue"],"sourcesContent":["<script>\nimport Date from '@shell/components/formatter/Date';\nimport SortableTable from '@shell/components/SortableTable';\nimport { Banner } from '@components/Banner';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport Loading from '@shell/components/Loading';\nimport day from 'dayjs';\nimport { DATE_FORMAT, TIME_FORMAT } from '@shell/store/prefs';\nimport { escapeHtml, randomStr } from '@shell/utils/string';\nimport { CIS } from '@shell/config/types';\nimport { STATE } from '@shell/config/table-headers';\nimport { get } from '@shell/utils/object';\n\nexport default {\n  components: {\n    Date,\n    SortableTable,\n    Banner,\n    LabeledSelect,\n    Loading,\n  },\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    }\n  },\n\n  async fetch() {\n    this.clusterReports = await this.value.getReports();\n  },\n\n  data() {\n    return { clusterReports: [], clusterReport: null };\n  },\n\n  computed: {\n    parsedReport() {\n      return this.clusterReport?.parsedReport || null;\n    },\n\n    canBeScheduled() {\n      return this.value.canBeScheduled();\n    },\n\n    reportNodes() {\n      return this.clusterReport?.nodes || null;\n    },\n\n    results() {\n      if (!this.clusterReport || !this.clusterReport.aggregatedTests) {\n        return [];\n      }\n\n      return this.clusterReport.aggregatedTests.map((check) => {\n        check.testStateSort = this.testStateSort(check.state);\n        check.testIdSort = this.testIdSort(check);\n        if (!!check.node_type) {\n          const nodeRows = check.node_type.reduce((nodes, type) => {\n            if (this.reportNodes[type]) {\n              this.reportNodes[type].forEach((name) => nodes.push({\n                type, name, id: randomStr(4), state: this.nodeState(check, name, check.nodes), testStateSort: this.testStateSort(this.nodeState(check, name, check.nodes))\n              })\n              );\n            }\n\n            return nodes;\n          }, []);\n\n          check.nodeRows = nodeRows;\n        }\n\n        return check;\n      });\n    },\n\n    details() {\n      if (!this.parsedReport) {\n        return [];\n      }\n\n      const out = [\n        {\n          label: this.t('cis.profile'),\n          value: this.value.status.lastRunScanProfileName,\n          to:    {\n            name:   'c-cluster-product-resource-id',\n            params: {\n              ...this.$route.params,\n              resource: CIS.CLUSTER_SCAN_PROFILE,\n              id:       this.value.status.lastRunScanProfileName\n            }\n          }\n        },\n        {\n          label: this.t('cis.scan.total'),\n          value: this.parsedReport.total\n        },\n        {\n          label: this.t('cis.scan.pass'),\n          value: this.parsedReport.pass\n        },\n        {\n          label: this.t('cis.scan.warn'),\n          value: this.parsedReport.warn\n        },\n        {\n          label: this.t('cis.scan.skip'),\n          value: this.parsedReport.skip\n        },\n        {\n          label: this.t('cis.scan.fail'),\n          value: this.parsedReport.fail\n        },\n        {\n          label: this.t('cis.scan.notApplicable'),\n          value: this.parsedReport.notApplicable\n        },\n        {\n          label:     this.canBeScheduled ? this.t('cis.scan.lastScanTime') : this.t('cis.scan.scanDate'),\n          value:     this.value.status.lastRunTimestamp,\n          component: 'Date'\n        },\n      ];\n\n      if (!this.canBeScheduled) {\n        return out.filter((each) => each.label !== this.t('cis.scan.warn'));\n      }\n\n      return out;\n    },\n\n    reportCheckHeaders() {\n      return [\n        {\n          ...STATE,\n          value:         'state',\n          formatterOpts: { arbitrary: true },\n          sort:          ['testStateSort', 'testIdSort']\n        },\n        {\n          name:  'number',\n          label: this.t('cis.scan.number'),\n          value: 'id',\n          sort:  'testIdSort',\n          width: 100\n        },\n        {\n          name:  'description',\n          label: this.t('cis.scan.description'),\n          value: 'description',\n        }\n      ];\n    },\n\n    nodeTableHeaders() {\n      return [\n        {\n          ...STATE,\n          value:         'state',\n          formatterOpts: { arbitrary: true },\n          sort:          'testStateSort'\n        },\n        {\n          name:  'node',\n          label: this.t('tableHeaders.name'),\n          value: 'name',\n        },\n        {\n          name:  'type',\n          label: this.t('tableHeaders.type'),\n          value: 'type',\n        },\n      ];\n    },\n  },\n\n  watch: {\n    value(neu) {\n      try {\n        neu.getReports().then((reports) => {\n          this.clusterReports = reports;\n        });\n      } catch {}\n    },\n\n    clusterReports(neu) {\n      if (!this.clusterReport) {\n        this.clusterReport = neu[0];\n      }\n    }\n  },\n\n  methods: {\n    reportLabel(report = {}) {\n      const { creationTimestamp } = report.metadata;\n      const dateFormat = escapeHtml( this.$store.getters['prefs/get'](DATE_FORMAT));\n      const timeFormat = escapeHtml( this.$store.getters['prefs/get'](TIME_FORMAT));\n\n      const name = report.id.replace(/^scan-report-/, '');\n\n      return `${ name } ${ day(creationTimestamp).format(`${ dateFormat } ${ timeFormat }`) }`;\n    },\n\n    nodeState(check, node, nodes = []) {\n      if (check.state === 'mixed') {\n        return nodes.includes(node) ? 'fail' : 'pass';\n      }\n\n      return check.state;\n    },\n\n    testStateSort(state) {\n      const SORT_ORDER = {\n        other:         7,\n        notApplicable: 6,\n        skip:          5,\n        pass:          4,\n        warn:          3,\n        mixed:         2,\n        fail:          1,\n      };\n\n      return `${ SORT_ORDER[state] || SORT_ORDER['other'] } ${ state }`;\n    },\n\n    testIdSort(test) {\n      const { id = '' } = test;\n\n      return id.split('.').map((n) => +n + 1000).join('.');\n    },\n\n    remediationDisplay(row) {\n      const { remediation } = row;\n\n      if (!remediation) {\n\n      } else {\n        return `${ this.t('cis.scan.remediation') }: ${ remediation }`;\n      }\n    },\n    get\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <div class=\"detail mb-20\">\n      <div\n        v-for=\"item in details\"\n        :key=\"item.label\"\n      >\n        <span class=\"text-label\">{{ item.label }}</span>:\n        <component\n          :is=\"item.component\"\n          v-if=\"item.component\"\n          :value=\"item.value\"\n        />\n        <nuxt-link\n          v-else-if=\"item.to\"\n          :to=\"item.to\"\n        >\n          {{ item.value }}\n        </nuxt-link>\n        <span v-else>{{ item.value }}</span>\n      </div>\n    </div>\n    <div\n      v-if=\"clusterReports.length > 1\"\n      class=\"table-header row mb-20\"\n    >\n      <div class=\"col span-8\">\n        <h3>\n          {{ t('cis.scan.scanReport') }}\n        </h3>\n      </div>\n      <div class=\"col span-4\">\n        <LabeledSelect\n          v-model=\"clusterReport\"\n          :label=\"t('cis.reports')\"\n          :options=\"clusterReports\"\n          :get-option-label=\"reportLabel\"\n          :get-option-key=\"report=>report.id\"\n        />\n      </div>\n    </div>\n    <div v-if=\"results && !!get(value, 'status.summary')\">\n      <SortableTable\n        no-rows-key=\"cis.noReportFound\"\n        default-sort-by=\"state\"\n        :search=\"false\"\n        :row-actions=\"false\"\n        :table-actions=\"false\"\n        :rows=\"results\"\n        :sub-rows=\"true\"\n        :sub-expandable=\"true\"\n        :sub-expand-column=\"true\"\n        :headers=\"reportCheckHeaders\"\n        key-field=\"id\"\n      >\n        <template #sub-row=\"{row, fullColspan, onRowMouseEnter, onRowMouseLeave}\">\n          <tr\n            class=\"sub-row\"\n            @mouseenter=\"onRowMouseEnter\"\n            @mouseleave=\"onRowMouseLeave\"\n          >\n            <td :colspan=\"fullColspan\">\n              <Banner\n                v-if=\"(row.state==='fail' || row.state==='warn')&& row.remediation\"\n                class=\"sub-banner\"\n                :label=\"remediationDisplay(row)\"\n                color=\"warning\"\n              />\n              <SortableTable\n                class=\"sub-table\"\n                :rows=\"row.nodeRows\"\n                :headers=\"nodeTableHeaders\"\n                :search=\"false\"\n                :row-actions=\"false\"\n                :table-actions=\"false\"\n                key-field=\"id\"\n              />\n            </td>\n          </tr>\n        </template>\n      </SortableTable>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.detail {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 10px;\n    border-bottom: 1px solid var(--border);\n\n    & .div {\n        padding: 0px 10px 0px 10px;\n    }\n}\n\n.sub-table {\n  padding: 0px 40px 0px 40px;\n}\n\n.sub-banner{\n  margin: 0px 40px 0px 40px;\n  width: auto;\n}\n\n.table-header {\n  align-items: flex-end;\n}\n</style>\n"],"mappings":"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"}]}