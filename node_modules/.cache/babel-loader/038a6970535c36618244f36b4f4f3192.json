{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/performanceTesting.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/performanceTesting.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9CmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQoZSkgeyBmb3IgKHZhciByID0gMTsgciA8IGFyZ3VtZW50cy5sZW5ndGg7IHIrKykgeyB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307IHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHQpKSA6IG93bktleXMoT2JqZWN0KHQpKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTsgfSk7IH0gcmV0dXJuIGU7IH0KaW1wb3J0IGRheSBmcm9tICdkYXlqcyc7CgovLyBUaGlzIGNvZGUgc2hvdWxkIG5vdCBiZSBpbmNsdWRlZCBpbiBhIHByb2R1Y3Rpb24gYnVpbGQKLy8gVGhpcyBhbGxvd3MgeW91IHRvIHNpbXVsYXRlIGxhcmdlIG51bWJlcnMgb2YgcmVzb3VyY2VzCgovLyBGYWtlIGV4dHJhIHJlc291cmNlcyB0byBzaW11bGF0ZSBzY2FsZQp2YXIgUEVSRl9EQVRBID0gewogIG5vZGU6IHsKICAgIGNvdW50OiA4MDAsCiAgICBzdGF0dXNSb3c6IDIKICB9LAogICdhcHBzLmRlcGxveW1lbnQnOiB7CiAgICBjb3VudDogNDAwMCwKICAgIHN0YXR1c1JvdzogNQogIH0sCiAgcG9kOiB7CiAgICBjb3VudDogNDAwMCwKICAgIHN0YXR1c1JvdzogMTAKICB9Cn07CgovLyBMb2cgYSB3YXJuaW5nIHdoZW4gcGVyZm9ybWFuY2UgZGF0YSBzaW11bGF0aW9uIGlzIGVuYWJsZWQKaWYgKCEhcHJvY2Vzcy5lbnYucGVyZlRlc3QgJiYgcHJvY2Vzcy5lbnYuZGV2KSB7CiAgY29uc29sZS53YXJuKCdQZXJmb3JtYW5jZSBUZXN0aW5nIGRhdGEgZW5hYmxlZCcsIFBFUkZfREFUQSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQp9CnZhciBERUZBVUxUUyA9IHsKICBjb3VudDogMSwKICAvLyBPbmUgY29weSBvZiBlYWNoIHJlc291cmNlCiAgc3RhdHVzUm93OiAwLAogIC8vIERvbid0IGFkZCBhbnkgc3RhdHVzIHJvd3MgKDAgPSBOb25lLCAxID0gQWxsLCBOID0gMSBvdXQgb2YgTikKICBjdXN0b206IG51bGwgLy8gQ3VzdG9tIGZ1bmN0aW9uIHRoYXQgY2FuIG1vZGlmeSBlYWNoIHJvdyA9IHRha2VzIG5vZGUgYW5kIGluZGV4IC0gZS5nLiAobm9kZSwgaW5kZXgpID0+IHsgbm9kZS5tZXRhZGF0YS5zdGF0ZS5lcnJvciA9IHRydWU7IH0KfTsKZXhwb3J0IGZ1bmN0aW9uIHBlcmZMb2FkQWxsKHR5cGUsIGRhdGEpIHsKICAvLyBjb25zb2xlLmxvZyhgJHsgdHlwZSB9YCk7CiAgaWYgKGRhdGEubGVuZ3RoID09PSAwKSB7CiAgICByZXR1cm4gZGF0YTsKICB9CiAgdmFyIG4gPSBkYXRhWzBdOwogIGlmICghbi5hcGlWZXJzaW9uKSB7CiAgICByZXR1cm4gZGF0YTsKICB9CiAgdmFyIGNvbmZpZyA9IFBFUkZfREFUQVt0eXBlXTsKICBpZiAoIWNvbmZpZykgewogICAgcmV0dXJuIGRhdGE7CiAgfQogIGlmICh0eXBlb2YgY29uZmlnID09PSAnbnVtYmVyJykgewogICAgY29uZmlnID0gewogICAgICBjb3VudDogY29uZmlnCiAgICB9OwogIH0KICBjb25maWcgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIERFRkFVTFRTKSwgY29uZmlnKTsKICByZXR1cm4gcmVwbGljYXRlKGRhdGEsIGNvbmZpZyk7Cn0KZnVuY3Rpb24gcmFuZE51bShtYXgpIHsKICByZXR1cm4gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbWF4KTsKfQpmdW5jdGlvbiByZXBsaWNhdGUoZGF0YSwgY29uZmlnKSB7CiAgaWYgKGRhdGEubGVuZ3RoID09PSAwKSB7CiAgICByZXR1cm4gZGF0YTsKICB9CgogIC8vIFByZXRlbmQgdGhlcmUgYXJlIG5vbmUgb2YgdGhlIHJlc291cmNlIHR5cGUKICBpZiAoY29uZmlnLmNvdW50ID09PSAwKSB7CiAgICByZXR1cm4gW107CiAgfQogIGlmIChjb25maWcuY291bnQgPD0gZGF0YS5sZW5ndGgpIHsKICAgIHJldHVybiBkYXRhLnNsaWNlKDAsIGNvbmZpZy5jb3VudCk7CiAgfQogIHZhciB0ZW1wbGF0ZXMgPSBbXTsKICB2YXIgaiA9IDA7CiAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChkKSB7CiAgICByZXR1cm4gdGVtcGxhdGVzLnB1c2goSlNPTi5zdHJpbmdpZnkoZCkpOwogIH0pOwogIHZhciBuZXdEYXRhID0gX3RvQ29uc3VtYWJsZUFycmF5KGRhdGEpOwoKICAvLyBXZSBhbHJlYWR5IGhhdmUgdGhlIGVsZW1udHMgaW4gZGF0YS4uLiBqdXN0IG5lZWQgdG8gcGFkIG91dAogIHZhciByZW1haW5pbmcgPSBjb25maWcuY291bnQgLSBkYXRhLmxlbmd0aDsKICBmb3IgKHZhciBpID0gMDsgaSA8IHJlbWFpbmluZzsgaSsrKSB7CiAgICB2YXIgX25ld05vZGUkbWV0YWRhdGE7CiAgICB2YXIgbmV3Tm9kZSA9IEpTT04ucGFyc2UodGVtcGxhdGVzW2pdKTsKICAgIG5ld05vZGUuaWQgPSAiIi5jb25jYXQobmV3Tm9kZS5pZCwgIl8iKS5jb25jYXQoaSk7CiAgICBuZXdOb2RlLm1ldGFkYXRhLnVpZCA9ICJ1aWRfIi5jb25jYXQoaSwgIl8iKS5jb25jYXQoTWF0aC5yYW5kb20oKSAqIDEwMDApOwogICAgbmV3Tm9kZS5tZXRhZGF0YS5uYW1lID0gIiIuY29uY2F0KChfbmV3Tm9kZSRtZXRhZGF0YSA9IG5ld05vZGUubWV0YWRhdGEpID09PSBudWxsIHx8IF9uZXdOb2RlJG1ldGFkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfbmV3Tm9kZSRtZXRhZGF0YS5uYW1lLCAiXyIpLmNvbmNhdChpKTsKICAgIG5ld05vZGUubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAgPSBkYXkoKS5mb3JtYXQoKTsKICAgIG5ld0RhdGEucHVzaChuZXdOb2RlKTsKICAgIGlmIChjb25maWcuc3RhdHVzUm93ID4gMCkgewogICAgICAvLyBGYWtlIGEgc3RhdHVzIHJvdyBvbmUgaW4gTiB0aW1lcywgd2hlcmUgTiBpcyB0aGUgc3RhdHVzUm93IHNldHRpbmcKICAgICAgdmFyIGFkZFN0YXR1c1JvdyA9IGNvbmZpZy5zdGF0dXNSb3cgPT09IDEgPyB0cnVlIDogcmFuZE51bShjb25maWcuc3RhdHVzUm93KSA9PT0gMDsKICAgICAgaWYgKGFkZFN0YXR1c1JvdykgewogICAgICAgIG5ld05vZGUubWV0YWRhdGEuc3RhdGUgPSBuZXdOb2RlLm1ldGFkYXRhLnN0YXRlIHx8IHt9OwogICAgICAgIHZhciBpc0Vycm9yID0gcmFuZE51bSgyKSA9PT0gMDsKICAgICAgICBpZiAoaXNFcnJvcikgewogICAgICAgICAgbmV3Tm9kZS5tZXRhZGF0YS5zdGF0ZS5lcnJvciA9IHRydWU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5ld05vZGUubWV0YWRhdGEuc3RhdGUudHJhbnNpdGlvbmluZyA9IHRydWU7CiAgICAgICAgfQogICAgICAgIG5ld05vZGUubWV0YWRhdGEuc3RhdGUubWVzc2FnZSA9ICJUZXN0IHN0YXRlIGRlc2NyaXB0aW9uIGZvciAiLmNvbmNhdChuZXdOb2RlLm1ldGFkYXRhLm5hbWUpOwogICAgICB9CiAgICB9CiAgICBpZiAoY29uZmlnLmN1c3RvbSkgewogICAgICBjb25maWcuY3VzdG9tKG5ld05vZGUsIGkpOwogICAgfQogICAgaisrOwogICAgaWYgKGogPT09IHRlbXBsYXRlcy5sZW5ndGgpIHsKICAgICAgaiA9IDA7CiAgICB9CiAgfQogIHJldHVybiBuZXdEYXRhOwp9"},{"version":3,"names":["day","PERF_DATA","node","count","statusRow","pod","process","env","perfTest","dev","console","warn","DEFAULTS","custom","perfLoadAll","type","data","length","n","apiVersion","config","_objectSpread","replicate","randNum","max","Math","floor","random","slice","templates","j","forEach","d","push","JSON","stringify","newData","_toConsumableArray","remaining","i","_newNode$metadata","newNode","parse","id","concat","metadata","uid","name","creationTimestamp","format","addStatusRow","state","isError","error","transitioning","message"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/performanceTesting.js"],"sourcesContent":["import day from 'dayjs';\n\n// This code should not be included in a production build\n// This allows you to simulate large numbers of resources\n\n// Fake extra resources to simulate scale\nconst PERF_DATA = {\n  node: {\n    count:     800,\n    statusRow: 2,\n  },\n  'apps.deployment': {\n    count:     4000,\n    statusRow: 5\n  },\n  pod: {\n    count:     4000,\n    statusRow: 10\n  },\n};\n\n// Log a warning when performance data simulation is enabled\nif (!!process.env.perfTest && process.env.dev ) {\n  console.warn('Performance Testing data enabled', PERF_DATA); // eslint-disable-line no-console\n}\n\nconst DEFAULTS = {\n  count:     1, // One copy of each resource\n  statusRow: 0, // Don't add any status rows (0 = None, 1 = All, N = 1 out of N)\n  custom:    null // Custom function that can modify each row = takes node and index - e.g. (node, index) => { node.metadata.state.error = true; }\n};\n\nexport function perfLoadAll(type, data) {\n  // console.log(`${ type }`);\n  if (data.length === 0) {\n    return data;\n  }\n\n  const n = data[0];\n\n  if (!n.apiVersion) {\n    return data;\n  }\n\n  let config = PERF_DATA[type];\n\n  if (!config) {\n    return data;\n  }\n\n  if (typeof config === 'number') {\n    config = { count: config };\n  }\n\n  config = {\n    ...DEFAULTS,\n    ...config\n  };\n\n  return replicate(data, config);\n}\n\nfunction randNum(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction replicate(data, config) {\n  if (data.length === 0) {\n    return data;\n  }\n\n  // Pretend there are none of the resource type\n  if (config.count === 0) {\n    return [];\n  }\n\n  if (config.count <= data.length) {\n    return data.slice(0, config.count);\n  }\n\n  const templates = [];\n  let j = 0;\n\n  data.forEach((d) => templates.push(JSON.stringify(d)));\n\n  const newData = [...data];\n\n  // We already have the elemnts in data... just need to pad out\n  const remaining = config.count - data.length;\n\n  for (let i = 0; i < remaining; i++) {\n    const newNode = JSON.parse(templates[j]);\n\n    newNode.id = `${ newNode.id }_${ i }`;\n    newNode.metadata.uid = `uid_${ i }_${ Math.random() * 1000 }`;\n    newNode.metadata.name = `${ newNode.metadata?.name }_${ i }`;\n    newNode.metadata.creationTimestamp = day().format();\n    newData.push(newNode);\n\n    if (config.statusRow > 0) {\n      // Fake a status row one in N times, where N is the statusRow setting\n      const addStatusRow = config.statusRow === 1 ? true : randNum(config.statusRow) === 0;\n\n      if (addStatusRow) {\n        newNode.metadata.state = newNode.metadata.state || {};\n        const isError = randNum(2) === 0;\n\n        if (isError) {\n          newNode.metadata.state.error = true;\n        } else {\n          newNode.metadata.state.transitioning = true;\n        }\n        newNode.metadata.state.message = `Test state description for ${ newNode.metadata.name }`;\n      }\n    }\n\n    if (config.custom) {\n      config.custom(newNode, i);\n    }\n\n    j++;\n    if (j === templates.length) {\n      j = 0;\n    }\n  }\n\n  return newData;\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAG,MAAM,OAAO;;AAEvB;AACA;;AAEA;AACA,IAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE;IACJC,KAAK,EAAM,GAAG;IACdC,SAAS,EAAE;EACb,CAAC;EACD,iBAAiB,EAAE;IACjBD,KAAK,EAAM,IAAI;IACfC,SAAS,EAAE;EACb,CAAC;EACDC,GAAG,EAAE;IACHF,KAAK,EAAM,IAAI;IACfC,SAAS,EAAE;EACb;AACF,CAAC;;AAED;AACA,IAAI,CAAC,CAACE,OAAO,CAACC,GAAG,CAACC,QAAQ,IAAIF,OAAO,CAACC,GAAG,CAACE,GAAG,EAAG;EAC9CC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEV,SAAS,CAAC,CAAC,CAAC;AAC/D;AAEA,IAAMW,QAAQ,GAAG;EACfT,KAAK,EAAM,CAAC;EAAE;EACdC,SAAS,EAAE,CAAC;EAAE;EACdS,MAAM,EAAK,IAAI,CAAC;AAClB,CAAC;AAED,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACtC;EACA,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAOD,IAAI;EACb;EAEA,IAAME,CAAC,GAAGF,IAAI,CAAC,CAAC,CAAC;EAEjB,IAAI,CAACE,CAAC,CAACC,UAAU,EAAE;IACjB,OAAOH,IAAI;EACb;EAEA,IAAII,MAAM,GAAGnB,SAAS,CAACc,IAAI,CAAC;EAE5B,IAAI,CAACK,MAAM,EAAE;IACX,OAAOJ,IAAI;EACb;EAEA,IAAI,OAAOI,MAAM,KAAK,QAAQ,EAAE;IAC9BA,MAAM,GAAG;MAAEjB,KAAK,EAAEiB;IAAO,CAAC;EAC5B;EAEAA,MAAM,GAAAC,aAAA,CAAAA,aAAA,KACDT,QAAQ,GACRQ,MAAM,CACV;EAED,OAAOE,SAAS,CAACN,IAAI,EAAEI,MAAM,CAAC;AAChC;AAEA,SAASG,OAAOA,CAACC,GAAG,EAAE;EACpB,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,GAAG,CAAC;AACxC;AAEA,SAASF,SAASA,CAACN,IAAI,EAAEI,MAAM,EAAE;EAC/B,IAAIJ,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;IACrB,OAAOD,IAAI;EACb;;EAEA;EACA,IAAII,MAAM,CAACjB,KAAK,KAAK,CAAC,EAAE;IACtB,OAAO,EAAE;EACX;EAEA,IAAIiB,MAAM,CAACjB,KAAK,IAAIa,IAAI,CAACC,MAAM,EAAE;IAC/B,OAAOD,IAAI,CAACY,KAAK,CAAC,CAAC,EAAER,MAAM,CAACjB,KAAK,CAAC;EACpC;EAEA,IAAM0B,SAAS,GAAG,EAAE;EACpB,IAAIC,CAAC,GAAG,CAAC;EAETd,IAAI,CAACe,OAAO,CAAC,UAACC,CAAC;IAAA,OAAKH,SAAS,CAACI,IAAI,CAACC,IAAI,CAACC,SAAS,CAACH,CAAC,CAAC,CAAC;EAAA,EAAC;EAEtD,IAAMI,OAAO,GAAAC,kBAAA,CAAOrB,IAAI,CAAC;;EAEzB;EACA,IAAMsB,SAAS,GAAGlB,MAAM,CAACjB,KAAK,GAAGa,IAAI,CAACC,MAAM;EAE5C,KAAK,IAAIsB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,SAAS,EAAEC,CAAC,EAAE,EAAE;IAAA,IAAAC,iBAAA;IAClC,IAAMC,OAAO,GAAGP,IAAI,CAACQ,KAAK,CAACb,SAAS,CAACC,CAAC,CAAC,CAAC;IAExCW,OAAO,CAACE,EAAE,MAAAC,MAAA,CAAOH,OAAO,CAACE,EAAE,OAAAC,MAAA,CAAML,CAAC,CAAG;IACrCE,OAAO,CAACI,QAAQ,CAACC,GAAG,UAAAF,MAAA,CAAWL,CAAC,OAAAK,MAAA,CAAMnB,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAG;IAC7Dc,OAAO,CAACI,QAAQ,CAACE,IAAI,MAAAH,MAAA,EAAAJ,iBAAA,GAAOC,OAAO,CAACI,QAAQ,cAAAL,iBAAA,uBAAhBA,iBAAA,CAAkBO,IAAI,OAAAH,MAAA,CAAML,CAAC,CAAG;IAC5DE,OAAO,CAACI,QAAQ,CAACG,iBAAiB,GAAGhD,GAAG,CAAC,CAAC,CAACiD,MAAM,CAAC,CAAC;IACnDb,OAAO,CAACH,IAAI,CAACQ,OAAO,CAAC;IAErB,IAAIrB,MAAM,CAAChB,SAAS,GAAG,CAAC,EAAE;MACxB;MACA,IAAM8C,YAAY,GAAG9B,MAAM,CAAChB,SAAS,KAAK,CAAC,GAAG,IAAI,GAAGmB,OAAO,CAACH,MAAM,CAAChB,SAAS,CAAC,KAAK,CAAC;MAEpF,IAAI8C,YAAY,EAAE;QAChBT,OAAO,CAACI,QAAQ,CAACM,KAAK,GAAGV,OAAO,CAACI,QAAQ,CAACM,KAAK,IAAI,CAAC,CAAC;QACrD,IAAMC,OAAO,GAAG7B,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC;QAEhC,IAAI6B,OAAO,EAAE;UACXX,OAAO,CAACI,QAAQ,CAACM,KAAK,CAACE,KAAK,GAAG,IAAI;QACrC,CAAC,MAAM;UACLZ,OAAO,CAACI,QAAQ,CAACM,KAAK,CAACG,aAAa,GAAG,IAAI;QAC7C;QACAb,OAAO,CAACI,QAAQ,CAACM,KAAK,CAACI,OAAO,iCAAAX,MAAA,CAAkCH,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAG;MAC1F;IACF;IAEA,IAAI3B,MAAM,CAACP,MAAM,EAAE;MACjBO,MAAM,CAACP,MAAM,CAAC4B,OAAO,EAAEF,CAAC,CAAC;IAC3B;IAEAT,CAAC,EAAE;IACH,IAAIA,CAAC,KAAKD,SAAS,CAACZ,MAAM,EAAE;MAC1Ba,CAAC,GAAG,CAAC;IACP;EACF;EAEA,OAAOM,OAAO;AAChB"}]}