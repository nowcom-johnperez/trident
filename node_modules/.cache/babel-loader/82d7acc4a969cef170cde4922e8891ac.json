{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CreateEditView","SECRET","LOGGING","SCHEMA","Tabbed","Tab","CruResource","NameNsDescription","Labels","LabeledSelect","Banner","PROVIDERS","_VIEW","clone","set","isEqual","isEmpty","jsyaml","createYaml","YamlEditor","EDITOR_MODES","components","mixins","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","type","stop","data","_this2","_selectedProviders$","_this$value$spec$sele","schemas","getters","isCreate","value","metadata","namespace","spec","providers","map","provider","_objectSpread","name","label","t","labelKey","mode","$set","forEach","default","selectedProviders","filter","_specProvider$servers","specProvider","correctedSpecProvider","servers","selectedProvider","bufferYaml","buffer","dump","concat","substring","indexOf","replace","initialBufferYaml","hasMultipleProvidersSelected","length","computed","enabledProviders","p","enabled","isNamespaced","CLUSTER_OUTPUT","cruMode","allProvidersSupported","methods","getComponent","require","launch","$refs","tabbed","select","saveSettings","done","_this3","urlCheck","some","checkValue","url","toLowerCase","startsWith","isLokiHttps","undefined","errors","_defineProperty","bufferJson","load","$delete","save","tabChanged","_ref","_this4","tab","$nextTick","yaml","refresh","focus","onYamlEditorReady","cm","getMode","fold","execCommand"],"sources":["node_modules/@rancher/shell/edit/logging.banzaicloud.io.output/index.vue"],"sourcesContent":["<script>\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { SECRET, LOGGING, SCHEMA } from '@shell/config/types';\nimport Tabbed from '@shell/components/Tabbed';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CruResource from '@shell/components/CruResource';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Labels from '@shell/components/form/Labels';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { Banner } from '@components/Banner';\nimport { PROVIDERS } from '@shell/models/logging.banzaicloud.io.output';\nimport { _VIEW } from '@shell/config/query-params';\nimport { clone, set } from '@shell/utils/object';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport jsyaml from 'js-yaml';\nimport { createYaml } from '@shell/utils/create-yaml';\nimport YamlEditor, { EDITOR_MODES } from '@shell/components/YamlEditor';\n\nexport default {\n  components: {\n    Banner, CruResource, Labels, LabeledSelect, NameNsDescription, Tab, Tabbed, YamlEditor\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    await this.$store.dispatch('cluster/findAll', { type: SECRET });\n  },\n\n  data() {\n    const schemas = this.$store.getters['cluster/all'](SCHEMA);\n\n    if (this.isCreate) {\n      this.value.metadata.namespace = 'default';\n    }\n\n    set(this.value, 'spec', this.value.spec || {});\n\n    const providers = PROVIDERS.map((provider) => ({\n      ...provider,\n      value: provider.name,\n      label: this.t(provider.labelKey)\n    }));\n\n    if (this.mode !== _VIEW) {\n      this.$set(this.value, 'spec', this.value.spec || {});\n\n      providers.forEach((provider) => {\n        this.$set(this.value.spec, provider.name, this.value.spec[provider.name] || clone(provider.default));\n      });\n    }\n\n    const selectedProviders = providers.filter((provider) => {\n      const specProvider = this.value.spec[provider.name];\n      const correctedSpecProvider = provider.name === 'forward' ? specProvider?.servers?.[0] || {} : specProvider;\n\n      return !isEmpty(correctedSpecProvider) && !isEqual(correctedSpecProvider, provider.default);\n    });\n\n    const selectedProvider = selectedProviders?.[0]?.value || providers[0].value;\n\n    let bufferYaml;\n\n    if ( !isEmpty(this.value.spec[selectedProvider]?.buffer) ) {\n      bufferYaml = jsyaml.dump(this.value.spec[selectedProvider].buffer);\n    } else {\n      bufferYaml = createYaml(schemas, `logging.banzaicloud.io.v1beta1.output.spec.${ selectedProvider }.buffer`, []);\n      // createYaml doesn't support passing reference types (array, map) as the first type. As such\n      // I'm manipulating the output since I'm not sure it's something we want to actually support\n      // seeing as it's really createResourceYaml and this here is a gray area between spoofed types\n      // and just a field within a spec.\n      bufferYaml = bufferYaml.substring(bufferYaml.indexOf('\\n') + 1).replace(/# {2}/g, '#');\n    }\n\n    return {\n      bufferYaml,\n      initialBufferYaml:            bufferYaml,\n      providers,\n      selectedProvider,\n      hasMultipleProvidersSelected: selectedProviders?.length > 1,\n      selectedProviders,\n      LOGGING\n    };\n  },\n\n  computed: {\n    EDITOR_MODES() {\n      return EDITOR_MODES;\n    },\n    enabledProviders() {\n      return this.providers.filter((p) => p.enabled);\n    },\n    isNamespaced() {\n      return this.value.type !== LOGGING?.CLUSTER_OUTPUT;\n    },\n    cruMode() {\n      if (this.hasMultipleProvidersSelected || !this.value.allProvidersSupported) {\n        return _VIEW;\n      }\n\n      return this.mode;\n    }\n  },\n\n  methods: {\n    getComponent(name) {\n      return require(`./providers/${ name }`).default;\n    },\n    launch(provider) {\n      this.$refs.tabbed.select(provider.name);\n    },\n    saveSettings(done) {\n      const t = this.$store.getters['i18n/t'];\n\n      if (this.selectedProvider === 'loki') {\n        const urlCheck = ['https://', 'http://'].some((checkValue) => this.value.spec['loki'].url.toLowerCase().startsWith(checkValue));\n        const isLokiHttps = this.value.spec['loki'].url ? urlCheck : undefined;\n\n        if (!isLokiHttps) {\n          this.errors = [t('logging.loki.urlInvalid')];\n\n          return done(false);\n        }\n      }\n\n      this.errors = [];\n\n      this.value.spec = { [this.selectedProvider]: this.value.spec[this.selectedProvider] };\n\n      const bufferJson = jsyaml.load(this.bufferYaml);\n\n      if (!isEmpty(bufferJson)) {\n        this.value.spec[this.selectedProvider].buffer = bufferJson;\n      } else {\n        this.$delete(this.value.spec[this.selectedProvider], 'buffer');\n      }\n      this.save(done);\n    },\n    tabChanged({ tab }) {\n      if ( tab.name === 'buffer' ) {\n        this.$nextTick(() => {\n          if ( this.$refs.yaml ) {\n            this.$refs.yaml.refresh();\n            this.$refs.yaml.focus();\n          }\n        });\n      }\n    },\n    onYamlEditorReady(cm) {\n      cm.getMode().fold = 'yamlcomments';\n      cm.execCommand('foldAll');\n      cm.execCommand('unfold');\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"output\">\n    <CruResource\n      :done-route=\"doneRoute\"\n      :mode=\"cruMode\"\n      :resource=\"value\"\n      :subtypes=\"[]\"\n      :validation-passed=\"true\"\n      :errors=\"errors\"\n      :can-yaml=\"true\"\n      @error=\"e=>errors = e\"\n      @finish=\"saveSettings\"\n      @cancel=\"done\"\n    >\n      <NameNsDescription\n        v-if=\"!isView\"\n        :value=\"value\"\n        :mode=\"mode\"\n        label=\"generic.name\"\n        :register-before-hook=\"registerBeforeHook\"\n        :namespaced=\"isNamespaced\"\n      />\n      <Banner\n        v-if=\"hasMultipleProvidersSelected\"\n        color=\"info\"\n      >\n        This output is configured with multiple providers. We currently only support a single provider per output. You can view or edit the YAML.\n      </Banner>\n      <Banner\n        v-else-if=\"!value.allProvidersSupported\"\n        color=\"info\"\n      >\n        This output is configured with providers we don't support yet. You can view or edit the YAML.\n      </Banner>\n      <Tabbed\n        v-else\n        ref=\"tabbed\"\n        :side-tabs=\"true\"\n        @changed=\"tabChanged($event)\"\n      >\n        <Tab\n          name=\"Output\"\n          label=\"Output\"\n          :weight=\"2\"\n        >\n          <div class=\"row\">\n            <div class=\"col span-6\">\n              <LabeledSelect\n                v-model=\"selectedProvider\"\n                label=\"Output\"\n                :options=\"providers\"\n                :mode=\"mode\"\n              />\n            </div>\n          </div>\n          <div class=\"spacer\" />\n          <component\n            :is=\"getComponent(selectedProvider)\"\n            :value=\"value.spec[selectedProvider]\"\n            :namespace=\"value.namespace\"\n            :mode=\"mode\"\n          />\n        </Tab>\n        <Tab\n          name=\"buffer\"\n          :label=\"t('logging.output.buffer.label')\"\n          :weight=\"1\"\n        >\n          <YamlEditor\n            ref=\"yaml\"\n            v-model=\"bufferYaml\"\n            :scrolling=\"false\"\n            :initial-yaml-values=\"initialBufferYaml\"\n            :editor-mode=\"isView ? EDITOR_MODES.VIEW_CODE : EDITOR_MODES.EDIT_CODE\"\n            @onReady=\"onYamlEditorReady\"\n          />\n        </Tab>\n        <Tab\n          v-if=\"!isView\"\n          name=\"labels-and-annotations\"\n          label-key=\"generic.labelsAndAnnotations\"\n          :weight=\"0\"\n        >\n          <Labels\n            default-container-class=\"labels-and-annotations-container\"\n            :value=\"value\"\n            :mode=\"mode\"\n            :display-side-by-side=\"false\"\n          />\n        </Tab>\n      </Tabbed>\n    </CruResource>\n  </div>\n</template>\n\n<style lang=\"scss\">\n  $chart: 110px;\n  $side: 15px;\n  $margin: 10px;\n  $logo: 60px;\n\n.output {\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n\n  .side-tabs {\n    flex: 1;\n  }\n  .provider {\n    h1 {\n      display: inline-block;\n    }\n  }\n\n  .box-container {\n    display: flex;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    margin: 0 -1*$margin;\n\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-4')) {\n      .toggle-gradient-box {\n        width: 100%;\n      }\n    }\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-7')) {\n      .toggle-gradient-box {\n        width: calc(50% - 2 * #{$margin});\n      }\n    }\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-9')) {\n      .toggle-gradient-box {\n        width: calc(33.33333% - 2 * #{$margin});\n      }\n    }\n    @media only screen and (min-width: map-get($breakpoints, '--viewport-12')) {\n      .toggle-gradient-box {\n        width: calc(25% - 2 * #{$margin});\n      }\n    }\n\n    .toggle-gradient-box {\n      margin: $margin;\n      padding: $margin;\n      position: relative;\n      border-radius: calc( 1.5 * var(--border-radius));\n\n      &:hover {\n        box-shadow: 0 0 30px var(--shadow);\n        transition: box-shadow 0.1s ease-in-out;\n        cursor: pointer;\n      }\n\n      .side-label {\n        transform: rotate(180deg);\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        min-width: calc(1.5 * var(--border-radius));\n        width: $side;\n        border-top-right-radius: calc( 1.5 * var(--border-radius));\n        border-bottom-right-radius: calc( 1.5 * var(--border-radius));\n\n        label {\n          text-align: center;\n          writing-mode: tb;\n          height: 100%;\n          padding: 0 2px;\n          display: block;\n          white-space: no-wrap;\n          text-overflow: ellipsis;\n        }\n      }\n\n      .logo {\n        text-align: center;\n        width: $logo;\n        height: $logo;\n        border-radius: calc(2 * var(--border-radius));\n        overflow: hidden;\n        background-color: white;\n        display: inline-block;\n        vertical-align: middle;\n\n        img {\n          width: $logo - 4px;\n          height: $logo - 4px;\n          object-fit: contain;\n          position: relative;\n          top: 2px;\n        }\n      }\n\n      &:hover {\n        background-position: right center;\n      }\n\n      .name {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        margin-bottom: 0;\n        display: inline-block;\n        vertical-align: middle;\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"}]}