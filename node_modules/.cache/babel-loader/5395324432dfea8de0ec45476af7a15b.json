{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.project.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.project.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DEFAULT_PROJECT","SYSTEM_PROJECT","MANAGEMENT","NAMESPACE","NORMAN","HybridModel","isEmpty","HARVESTER_NAME","HARVESTER","clearUnusedResourceQuotas","spec","types","forEach","type","_spec$type","_spec$type2","_spec$type3","_spec$type4","limit","Object","keys","key","usedLimit","every","k","Project","_HybridModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","get","_this$metadata","metadata","labels","_this$metadata2","_this","$rootGetters","inStore","all","concat","filter","ns","projectId","name","listLocation","_detailLocation","_get","_getPrototypeOf","prototype","replace","value","_save","_asyncToGenerator","regeneratorRuntime","mark","_callee2","forceReplaceOnReq","_this2","norman","newValue","retryCount","finishProjectCreation","newPSPTemplateID","wrap","_callee2$","_context2","prev","next","sent","save","_ref","_callee","_callee$","_context","doAction","podSecurityPolicyTemplateId","t0","status","setTimeout","stop","abrupt","_x","_remove","_callee3","_args3","_callee3$","_context3","remove","$dispatch","PROJECT","opt","force","root","id","normanEditProject","normanNewProject","_this3","_callee4","clearedResourceQuotas","normanProject","_callee4$","_context4","displayName","description","annotations","clusterId","creatorId","containerDefaultResourceLimit","setAnnotations","setLabels","setResourceQuotas","_this4","_callee5","_callee5$","_context5","canUpdateProjectBindings","schema","PROJECT_ROLE_TEMPLATE_BINDING","collectionMethods","includes","_this$schema","resourceMethods","find","x","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.project.js"],"sourcesContent":["import { DEFAULT_PROJECT, SYSTEM_PROJECT } from '@shell/config/labels-annotations';\nimport { MANAGEMENT, NAMESPACE, NORMAN } from '@shell/config/types';\nimport HybridModel from '@shell/plugins/steve/hybrid-class';\nimport isEmpty from 'lodash/isEmpty';\nimport { HARVESTER_NAME as HARVESTER } from '@shell/config/features';\n\nfunction clearUnusedResourceQuotas(spec, types) {\n  types.forEach((type) => {\n    if (spec[type]?.limit && !isEmpty(spec[type].limit)) {\n      Object.keys(spec[type].limit).forEach((key) => {\n        if (!spec[type].limit[key]) {\n          delete spec[type].limit[key];\n        }\n      });\n    }\n\n    if (spec[type]?.usedLimit && !isEmpty(spec[type].usedLimit)) {\n      Object.keys(spec[type].usedLimit).forEach((key) => {\n        if (!spec[type].usedLimit[key]) {\n          delete spec[type].usedLimit[key];\n        }\n      });\n    }\n\n    if ( spec[type]?.limit && isEmpty(spec[type].limit) ) {\n      spec[type].limit = null;\n    }\n\n    if ( spec[type]?.usedLimit && isEmpty(spec[type].usedLimit) ) {\n      spec[type].usedLimit = null;\n    }\n\n    if ( spec[type] && !isEmpty(spec[type]) && Object.keys(spec[type]).every( (k) => spec[type][k] === null ) ) {\n      spec[type] = null;\n    }\n  });\n\n  return spec;\n}\n\nexport default class Project extends HybridModel {\n  get isSystem() {\n    return this.metadata?.labels?.[SYSTEM_PROJECT] === 'true';\n  }\n\n  get isDefault() {\n    return this.metadata?.labels?.[DEFAULT_PROJECT] === 'true';\n  }\n\n  get namespaces() {\n    // I don't know how you'd end up with a project outside of rancher, but just in case...\n    if ( !this.$rootGetters['isRancher'] ) {\n      return [];\n    }\n\n    const inStore = this.$rootGetters['currentProduct'].inStore;\n\n    const all = this.$rootGetters[`${ inStore }/all`](NAMESPACE);\n\n    return all.filter((ns) => {\n      return ns.projectId === this.metadata.name;\n    });\n  }\n\n  get doneOverride() {\n    return this.listLocation;\n  }\n\n  get listLocation() {\n    // Harvester uses these resource directly... but has different routes. listLocation covers routes leading back to route\n    if (this.$rootGetters['currentProduct'].inStore === HARVESTER) {\n      return { name: `${ HARVESTER }-c-cluster-projectsnamespaces` };\n    }\n\n    return { name: 'c-cluster-product-projectsnamespaces' };\n  }\n\n  get _detailLocation() {\n    // Harvester uses these resource directly... but has different routes. detailLocation covers routes leading to resource (like edit)\n    const _detailLocation = super._detailLocation;\n\n    if (this.$rootGetters['currentProduct'].inStore === HARVESTER) {\n      _detailLocation.name = `${ HARVESTER }-${ _detailLocation.name }`.replace('-product', '');\n    }\n\n    return _detailLocation;\n  }\n\n  get parentLocationOverride() {\n    return this.listLocation;\n  }\n\n  async save(forceReplaceOnReq) {\n    const norman = await this.norman;\n\n    // PUT requests to Norman have trouble with nested objects due to the\n    // merging strategy performed on the backend. Whenever a field is\n    // removed, the resource should be replaced instead of merged,\n    // and the PUT request should have a query param _replace=true.\n    const newValue = await norman.save({ replace: forceReplaceOnReq });\n\n    let retryCount = 0;\n\n    const finishProjectCreation = async() => {\n      try {\n        await newValue.doAction('setpodsecuritypolicytemplate', { podSecurityPolicyTemplateId: this.spec.podSecurityPolicyTemplateId || null });\n      } catch (err) {\n        if ( err.status === 409 || err.status === 403 ) {\n          // The backend updates each new project soon after it is created,\n          // so there is a chance of a 409 resource conflict or forbidden error. If that happens,\n          // retry the action.\n\n          // The 403 permission error can happen due to the user requesting\n          // the project before the project is fully created and the project\n          // permissions are assigned to the user so we allow some\n          // time for that process to complete.\n\n          if (retryCount < 3) {\n            retryCount++;\n            await setTimeout(() => {\n              // Delay for three seconds to avoid another failure due to latency.\n              finishProjectCreation();\n            }, '3000');\n          } else {\n            throw err;\n          }\n        }\n      }\n    };\n\n    // Only update PSP template if the value changed\n    const newPSPTemplateID = this.spec.podSecurityPolicyTemplateId || null;\n\n    if (norman.podSecurityPolicyTemplateId !== newPSPTemplateID) {\n      await finishProjectCreation();\n    }\n\n    return newValue;\n  }\n\n  async remove() {\n    const norman = await this.norman;\n\n    await norman.remove(...arguments);\n    await this.$dispatch('management/findAll', { type: MANAGEMENT.PROJECT, opt: { force: true } }, { root: true });\n  }\n\n  get norman() {\n    return this.id ? this.normanEditProject : this.normanNewProject;\n  }\n\n  get normanNewProject() {\n    return (async() => {\n      const clearedResourceQuotas = clearUnusedResourceQuotas(this.spec, ['resourceQuota', 'namespaceDefaultResourceQuota']);\n\n      const normanProject = await this.$dispatch('rancher/create', {\n        type:                          NORMAN.PROJECT,\n        name:                          this.spec.displayName,\n        description:                   this.spec.description,\n        annotations:                   this.metadata.annotations,\n        labels:                        this.metadata.labels,\n        clusterId:                     this.$rootGetters['currentCluster'].id,\n        creatorId:                     this.$rootGetters['auth/principalId'],\n        containerDefaultResourceLimit: this.spec.containerDefaultResourceLimit,\n      }, { root: true });\n\n      // The backend seemingly required both labels/annotation and metadata.labels/annotations or it doesn't save the labels and annotations\n      normanProject.setAnnotations(this.metadata.annotations);\n      normanProject.setLabels(this.metadata.labels);\n      normanProject.setResourceQuotas(clearedResourceQuotas);\n\n      return normanProject;\n    })();\n  }\n\n  get normanEditProject() {\n    return (async() => {\n      const normanProject = await this.$dispatch('rancher/find', {\n        type: NORMAN.PROJECT,\n        id:   this.id.replace('/', ':'),\n      }, { root: true });\n\n      const clearedResourceQuotas = clearUnusedResourceQuotas(this.spec, ['resourceQuota', 'namespaceDefaultResourceQuota']);\n\n      normanProject.setAnnotations(this.metadata.annotations);\n      normanProject.setLabels(this.metadata.labels);\n      normanProject.setResourceQuotas(clearedResourceQuotas);\n      normanProject.description = this.spec.description;\n      normanProject.name = this.spec.displayName;\n      normanProject.containerDefaultResourceLimit = this.spec.containerDefaultResourceLimit;\n\n      return normanProject;\n    })();\n  }\n\n  // users with permissions for projectroletemplatebindings should be able to manage members on projects\n  get canUpdate() {\n    return super.canUpdate || this.canUpdateProjectBindings;\n  }\n\n  get canUpdateProjectBindings() {\n    const schema = this.$rootGetters[`rancher/schemaFor`](NORMAN.PROJECT_ROLE_TEMPLATE_BINDING);\n\n    return schema?.collectionMethods.includes('POST');\n  }\n\n  get canEditYaml() {\n    return this.schema?.resourceMethods?.find((x) => x === 'blocked-PUT') ? false : super.canUpdate;\n  }\n\n  get confirmRemove() {\n    return true;\n  }\n}\n"],"mappings":"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"}]}