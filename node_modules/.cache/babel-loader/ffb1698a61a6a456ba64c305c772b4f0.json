{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/codemirror.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/codemirror.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","VueCodemirror","CodeMirror","strPad","use","isLineComment","cm","lineNo","test","getTokenTypeAt","Pos","commentIndent","text","getLine","substr","spaceTo","search","out","countColumn","getOption","lineIndent","match","length","registerHelper","start","myIndent","line","lastLineInFold","i","end","lastLine","indent","from","to","defineExtension","regex","_this","operation","firstLine","e","foldCode","defineOption","codeMirror","addOverlay","name","token","stream","string","pos","next","val","old","prev","Init","state","markedSelection","markedSelectionStyle","reset","on","onCursorActivity","onChange","off","clear","update","CHUNK_SIZE","cmp","cmpPos","coverRange","addAt","array","cls","endLine","atEnd","mark","markText","className","undefined","push","splice","ranges","listSelections","somethingSelected","getCursor","coverStart","find","coverEnd","shift","pop"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/codemirror.js"],"sourcesContent":["/*\n * NOTE: This isn't actually a real plugin anymore, it's is dynamically loaded in components/CodeMirror.vue\n * so that it doesn't all get loaded put into vendor.js\n */\n\nimport Vue from 'vue';\nimport VueCodemirror from 'vue-codemirror';\nimport CodeMirror from 'codemirror';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/mode/yaml/yaml.js';\nimport 'codemirror/mode/javascript/javascript.js';\n\n// import 'codemirror/mode/dockerfile/dockerfile.js';\n// import 'codemirror/mode/shell/shell.js';\n// import 'codemirror/mode/markdown/markdown.js';\n\nimport 'codemirror/theme/base16-light.css';\nimport 'codemirror/theme/base16-dark.css';\n\nimport 'codemirror/keymap/vim.js';\nimport 'codemirror/keymap/emacs.js';\nimport 'codemirror/keymap/sublime.js';\n\nimport 'codemirror/addon/lint/lint.css';\nimport 'codemirror/addon/lint/lint.js';\nimport 'codemirror/addon/lint/yaml-lint.js';\n\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/fold/foldgutter.js';\n\nimport 'codemirror/addon/hint/show-hint.css';\nimport 'codemirror/addon/hint/show-hint.js';\nimport 'codemirror/addon/hint/anyword-hint.js';\n\nimport { strPad } from '@shell/utils/string';\n\nVue.use(VueCodemirror);\nexport default VueCodemirror;\n\nfunction isLineComment(cm, lineNo) {\n  return /\\bcomment\\b/.test(cm.getTokenTypeAt(CodeMirror.Pos(lineNo, 0)));\n}\n\nfunction commentIndent(cm, lineNo) {\n  const text = cm.getLine(lineNo).substr(1);\n  const spaceTo = text.search(/\\S/);\n\n  if (spaceTo === -1 ) {\n    return -1;\n  }\n\n  const out = CodeMirror.countColumn(text, null, cm.getOption('tabSize'));\n\n  return out;\n}\n\n// Like the regular indent in codemirror, but treat a YAML array\n// item that's at the same level as the parent key as intented on level more\n//\n// foo:\n// - a\n// - b\nfunction lineIndent(cm, lineNo) {\n  let text = cm.getLine(lineNo);\n  const match = text.match(/(\\s*(-\\s+)?)(\\S.*)/);\n\n  if ( !match ) {\n    return -1;\n  }\n\n  const spaceTo = match[1].length;\n\n  text = strPad('', spaceTo) + match[3];\n\n  if ( /\\bcomment\\b/.test(cm.getTokenTypeAt(CodeMirror.Pos(lineNo, spaceTo + 1)))) {\n    return -1;\n  }\n\n  return CodeMirror.countColumn(text, null, cm.getOption('tabSize'));\n}\n\n// https://github.com/codemirror/CodeMirror/blob/master/addon/fold/indent-fold.js\nCodeMirror.registerHelper('fold', 'indent', (cm, start) => {\n  const myIndent = lineIndent(cm, start.line);\n\n  if (myIndent < 0) {\n    return;\n  }\n  let lastLineInFold = null;\n\n  // Go through lines until we find a line that definitely doesn't belong in\n  // the block we're folding, or to the end.\n  for (let i = start.line + 1, end = cm.lastLine(); i <= end; ++i) {\n    const indent = lineIndent(cm, i);\n\n    if (indent === -1) {\n    } else if (indent > myIndent) {\n      // Lines with a greater indent are considered part of the block.\n      lastLineInFold = i;\n    } else {\n      // If this line has non-space, non-comment content, and is\n      // indented less or equal to the start line, it is the start of\n      // another block.\n      break;\n    }\n  }\n  if (lastLineInFold) {\n    return {\n      from: CodeMirror.Pos(start.line, cm.getLine(start.line).length),\n      to:   CodeMirror.Pos(lastLineInFold, cm.getLine(lastLineInFold).length)\n    };\n  }\n});\n\nCodeMirror.defineExtension('foldLinesMatching', function(regex) {\n  this.operation(() => {\n    for (let i = this.firstLine(), e = this.lastLine(); i <= e; i++) {\n      const line = this.getLine(i);\n\n      if ( line.match(regex) ) {\n        this.foldCode(CodeMirror.Pos(i, 0), null, 'fold');\n      }\n    }\n  });\n});\n\nCodeMirror.registerHelper('fold', 'yamlcomments', (cm, start) => {\n  if ( !isLineComment(cm, start.line) ) {\n    return;\n  }\n\n  const myIndent = commentIndent(cm, start.line);\n\n  if (myIndent < 0) {\n    return;\n  }\n\n  let lastLineInFold = null;\n\n  // Go through lines until we find a line that definitely doesn't belong in\n  // the block we're folding, or to the end.\n  for (let i = start.line + 1, end = cm.lastLine(); i <= end; ++i) {\n    if ( !isLineComment(cm, i) ) {\n      break;\n    }\n\n    const indent = commentIndent(cm, i);\n\n    if (indent === -1) {\n      // empty?\n    } else if (indent > myIndent) {\n      // Lines with a greater indent are considered part of the block.\n      lastLineInFold = i;\n    } else {\n      // If this line has non-space, non-comment content, and is\n      // indented less or equal to the start line, it is the start of\n      // another block.\n      break;\n    }\n  }\n\n  if (lastLineInFold) {\n    return {\n      from: CodeMirror.Pos(start.line, cm.getLine(start.line).length),\n      to:   CodeMirror.Pos(lastLineInFold, cm.getLine(lastLineInFold).length)\n    };\n  }\n});\n\n/**\n * It display a dot for each space character in the text;\n * used in combination with 'as-text-area' css properties in CodeMirror.vue to display line break markdowns\n */\nCodeMirror.defineOption('showMarkdownLineBreaks', false, (codeMirror) => {\n  codeMirror.addOverlay({\n    name:  'show-markdown-line-breaks',\n    token: (stream) => {\n      if (stream.string[stream.pos].match(/\\s/)) {\n        stream.next();\n\n        return stream.pos % 2 === 0 ? 'markdown-single-trailing-space-even' : 'markdown-single-trailing-space-odd';\n      }\n\n      stream.next();\n\n      return null;\n    }\n  });\n});\n\n/**\n * It enables the text color selection in CodeMirror.vue\n * references:\n *   demo:   https://codemirror.net/5/demo/markselection.html#\n *   add-on: https://codemirror.net/5/doc/manual.html#addon_mark-selection\n *   source: https://codemirror.net/5/addon/selection/mark-selection.js\n */\nCodeMirror.defineOption('styleSelectedText', false, (cm, val, old) => {\n  const prev = old && old !== CodeMirror.Init;\n\n  if (val && !prev) {\n    cm.state.markedSelection = [];\n    cm.state.markedSelectionStyle = typeof val === 'string' ? val : 'CodeMirror-selectedtext';\n    reset(cm);\n    cm.on('cursorActivity', onCursorActivity);\n    cm.on('change', onChange);\n  } else if (!val && prev) {\n    cm.off('cursorActivity', onCursorActivity);\n    cm.off('change', onChange);\n    clear(cm);\n    cm.state.markedSelection = cm.state.markedSelectionStyle = null;\n  }\n});\n\nfunction onCursorActivity(cm) {\n  if (cm.state.markedSelection) {\n    cm.operation(() => {\n      update(cm);\n    });\n  }\n}\n\nfunction onChange(cm) {\n  if (cm.state.markedSelection && cm.state.markedSelection.length) {\n    cm.operation(() => {\n      clear(cm);\n    });\n  }\n}\n\nconst CHUNK_SIZE = 8;\nconst Pos = CodeMirror.Pos;\nconst cmp = CodeMirror.cmpPos;\n\nfunction coverRange(cm, from, to, addAt) {\n  if (cmp(from, to) === 0) {\n    return;\n  }\n  const array = cm.state.markedSelection;\n  const cls = cm.state.markedSelectionStyle;\n\n  for (let line = from.line;;) {\n    const start = line === from.line ? from : Pos(line, 0);\n    const endLine = line + CHUNK_SIZE; const atEnd = endLine >= to.line;\n    const end = atEnd ? to : Pos(endLine, 0);\n    const mark = cm.markText(start, end, { className: cls });\n\n    if (addAt === null || addAt === undefined) {\n      array.push(mark);\n    } else {\n      array.splice(addAt++, 0, mark);\n    }\n    if (atEnd) {\n      break;\n    }\n    line = endLine;\n  }\n}\n\nfunction clear(cm) {\n  const array = cm.state.markedSelection;\n\n  for (let i = 0; i < array.length; ++i) {\n    array[i].clear();\n  }\n  array.length = 0;\n}\n\nfunction reset(cm) {\n  clear(cm);\n  const ranges = cm.listSelections();\n\n  for (let i = 0; i < ranges.length; i++) {\n    coverRange(cm, ranges[i].from(), ranges[i].to());\n  }\n}\n\nfunction update(cm) {\n  if (!cm.somethingSelected()) {\n    return clear(cm);\n  }\n  if (cm.listSelections().length > 1) {\n    return reset(cm);\n  }\n\n  const from = cm.getCursor('start'); const to = cm.getCursor('end');\n\n  const array = cm.state.markedSelection;\n\n  if (!array.length) {\n    return coverRange(cm, from, to);\n  }\n\n  let coverStart = array[0].find(); let coverEnd = array[array.length - 1].find();\n\n  if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE ||\n      cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0) {\n    return reset(cm);\n  }\n\n  while (cmp(from, coverStart.from) > 0) {\n    array.shift().clear();\n    coverStart = array[0].find();\n  }\n  if (cmp(from, coverStart.from) < 0) {\n    if (coverStart.to.line - from.line < CHUNK_SIZE) {\n      array.shift().clear();\n      coverRange(cm, from, coverStart.to, 0);\n    } else {\n      coverRange(cm, from, coverStart.from, 0);\n    }\n  }\n\n  while (cmp(to, coverEnd.to) < 0) {\n    array.pop().clear();\n    coverEnd = array[array.length - 1].find();\n  }\n  if (cmp(to, coverEnd.to) > 0) {\n    if (to.line - coverEnd.from.line < CHUNK_SIZE) {\n      array.pop().clear();\n      coverRange(cm, coverEnd.from, to);\n    } else {\n      coverRange(cm, coverEnd.to, to);\n    }\n  }\n}\n"],"mappings":"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"}]}