{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/management.cattle.io.feature.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/management.cattle.io.feature.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","mapGetters","AsyncButton","Card","ResourceTable","Banner","LabeledInput","MANAGEMENT","SETTING","ResourceFetch","components","mixins","props","resource","type","String","required","schema","Object","useQueryParamsForSimpleFiltering","Boolean","default","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","_this$serverUrlSettin","req","wrap","_callee$","_context","prev","next","$fetchType","serverUrlSetting","$store","getters","SERVER_URL","value","serverUrl","noUrlSet","process","server","$nuxt","context","headers","host","window","location","origin","stop","data","update","updateMode","error","enabling","restart","waiting","timer","computed","_objectSpread","t","filteredRows","rows","filter","x","name","promptForUrl","_this$update","id","enableRowActions","_schema$resourceMetho","FEATURE","resourceMethods","includes","$loadingResources","loadIndeterminate","watch","showPromptUpdate","show","$modal","hide","toUpdate","neu","Array","isArray","restartRequired","enabled","methods","close","commit","clearTimeout","toggleFlag","btnCB","doToggleWithRestart","doToggle","_this2","_callee2","_callee2$","_context2","spec","save","t0","err","waitForBackend","_this3","url","concat","setTimeout","_callee3","response","_callee3$","_context3","$axios","get","timeout","sent","status","dispatch","opt","force","saveUrl","_this4","_callee4","_callee4$","_context4"],"sources":["node_modules/@rancher/shell/list/management.cattle.io.feature.vue"],"sourcesContent":["<script>\nimport { mapState, mapGetters } from 'vuex';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Card } from '@components/Card';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport { Banner } from '@components/Banner';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\n\nexport default {\n  components: {\n    AsyncButton,\n    Banner,\n    Card,\n    ResourceTable,\n    LabeledInput\n  },\n  mixins: [ResourceFetch],\n  props:  {\n    resource: {\n      type:     String,\n      required: true,\n    },\n\n    schema: {\n      type:     Object,\n      required: true,\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    await this.$fetchType(this.resource);\n\n    this.serverUrlSetting = this.$store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.SERVER_URL);\n\n    if (this.serverUrlSetting?.value) {\n      this.serverUrl = this.serverUrlSetting.value;\n    } else {\n      this.noUrlSet = true;\n      if ( process.server ) {\n        const { req } = this.$nuxt.context;\n\n        this.serverUrl = req.headers.host;\n      } else {\n        this.serverUrl = window.location.origin;\n      }\n    }\n  },\n\n  data() {\n    return {\n      update:           [],\n      updateMode:       'activate',\n      error:            null,\n      enabling:         false,\n      restart:          false,\n      waiting:          false,\n      timer:            null,\n      serverUrlSetting: {},\n      serverUrl:        '',\n      noUrlSet:         false,\n    };\n  },\n\n  computed: {\n    ...mapState('action-menu', ['showPromptUpdate', 'toUpdate']),\n    ...mapGetters({ t: 'i18n/t' }),\n\n    filteredRows() {\n      return this.rows.filter((x) => x.name !== 'fleet');\n    },\n\n    promptForUrl() {\n      return this.update?.id === 'multi-cluster-management' && this.noUrlSet;\n    },\n\n    enableRowActions() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.FEATURE);\n\n      return schema?.resourceMethods?.includes('PUT');\n    },\n  },\n\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n\n  watch: {\n    showPromptUpdate(show) {\n      if (show) {\n        this.$modal.show('toggleFlag');\n      } else {\n        this.$modal.hide('toggleFlag');\n      }\n    },\n\n    toUpdate(neu) {\n      // Only support updating one at a time - bulk does not make sense, as they may\n      // be in different states and with different restart values\n      this.update = Array.isArray(neu) ? neu[0] : neu;\n      if (this.update) {\n        this.restart = this.update.restartRequired;\n        // If the value is currently false, then we will be enabling it\n        this.enabling = !this.update.enabled;\n        this.updateMode = this.enabling ? 'activate' : 'deactivate';\n      }\n    }\n  },\n\n  methods: {\n    close() {\n      this.$store.commit('action-menu/togglePromptUpdate');\n\n      if (this.timer) {\n        clearTimeout(this.timer);\n        this.timer = null;\n      }\n    },\n\n    toggleFlag(btnCB) {\n      if (this.restart) {\n        this.doToggleWithRestart(btnCB);\n      } else {\n        this.doToggle(btnCB);\n      }\n    },\n\n    async doToggle(btnCB) {\n      this.error = null;\n      try {\n        this.update.spec.value = !this.update.enabled;\n        await this.update.save();\n        btnCB(true);\n        this.close();\n      } catch (err) {\n        this.error = err;\n        btnCB(false);\n      }\n    },\n\n    doToggleWithRestart(btnCB) {\n      this.error = null;\n      try {\n        this.update.spec.value = !this.update.enabled;\n        // await can go back in when backend returns from the save before restarting\n        this.update.save();\n      } catch (err) {}\n\n      this.waitForBackend(btnCB, this.update.id);\n      this.waiting = true;\n    },\n\n    waitForBackend(btnCB, id) {\n      const url = `/v3/features/${ id }`;\n\n      this.timer = setTimeout(async() => {\n        try {\n          const response = await this.$axios.get(url, { timeout: 5000 });\n\n          if (response?.status === 200) {\n            this.rows = await this.$store.dispatch('management/findAll', { type: this.resource, opt: { force: true } });\n            btnCB(true);\n            this.close();\n            this.waiting = false;\n          }\n        } catch (e) {}\n\n        this.waitForBackend(btnCB, id);\n      }, 2500);\n    },\n\n    async saveUrl(btnCB) {\n      try {\n        this.serverUrlSetting.value = this.serverUrl;\n        await this.serverUrlSetting.save();\n        btnCB(true);\n      } catch (err) {\n        this.error = err;\n        btnCB(false);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"filteredRows\"\n      :row-actions=\"enableRowActions\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <template\n        slot=\"cell:name\"\n        slot-scope=\"scope\"\n      >\n        <div class=\"feature-name\">\n          <div>{{ scope.row.nameDisplay }}</div>\n          <i\n            v-if=\"scope.row.status.lockedValue !== null\"\n            class=\"icon icon-lock\"\n          />\n        </div>\n      </template>\n    </ResourceTable>\n    <modal\n      class=\"update-modal\"\n      name=\"toggleFlag\"\n      :width=\"350\"\n      height=\"auto\"\n      styles=\"max-height: 100vh;\"\n      :click-to-close=\"!restart || !waiting\"\n      @closed=\"close\"\n    >\n      <Card\n        v-if=\"!waiting\"\n        class=\"prompt-update\"\n        :show-highlight-border=\"false\"\n      >\n        <h4\n          slot=\"title\"\n          class=\"text-default-text\"\n        >\n          Are you sure?\n        </h4>\n        <div slot=\"body\">\n          <div\n            v-if=\"update\"\n            class=\"mb-10\"\n          >\n            <div v-if=\"enabling\">\n              <span>\n                {{ t('featureFlags.promptActivate', {flag: update.id}) }}\n              </span>\n              <div\n                v-if=\"promptForUrl\"\n                class=\"mt-10\"\n              >\n                <span> {{ t('featureFlags.requiresSetting') }}</span>\n                <div\n                  :style=\"{'align-items':'center'}\"\n                  class=\"row mt-10\"\n                >\n                  <LabeledInput\n                    v-model=\"serverUrl\"\n                    :label=\"t('setup.serverUrl.label')\"\n                  />\n                  <div class=\"col pl-5\">\n                    <AsyncButton @click=\"saveUrl\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <span v-else>\n              {{ t('featureFlags.promptDeactivate', {flag: update.id}) }}\n            </span>\n            <Banner\n              v-if=\"restart\"\n              color=\"warning\"\n              :label=\"t('featureFlags.restartRequired')\"\n            />\n          </div>\n          <div class=\"text-error mb-10\">\n            {{ error }}\n          </div>\n        </div>\n        <template #actions>\n          <button\n            class=\"btn role-secondary\"\n            @click=\"close\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n          <AsyncButton\n            :disabled=\"promptForUrl && !serverUrlSetting.value\"\n            :mode=\"updateMode\"\n            class=\"btn bg-error ml-10\"\n            @click=\"toggleFlag\"\n          />\n        </template>\n      </Card>\n      <Card\n        v-else\n        class=\"prompt-update\"\n        :show-highlight-border=\"false\"\n      >\n        <h4\n          slot=\"title\"\n          class=\"text-default-text\"\n        >\n          {{ t('featureFlags.restart.title') }}\n        </h4>\n        <div\n          slot=\"body\"\n          class=\"waiting\"\n        >\n          <p>{{ t('featureFlags.restart.wait') }}</p>\n          <span class=\"restarting-icon\">\n            <i class=\" icon icon-spinner icon-spin\" />\n          </span>\n        </div>\n        <template #actions>\n          <button\n            class=\"btn role-secondary\"\n            @click=\"close\"\n          >\n            {{ t('generic.cancel') }}\n          </button>\n        </template>\n      </Card>\n    </modal>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n  .prompt-update {\n    &.card-container {\n      box-shadow: none;\n    }\n\n    ::v-deep .card-actions {\n      display: flex;\n      justify-content: center;\n    }\n  }\n\n  .waiting {\n    text-align: center;\n    font-size: 14px;\n    margin: 10px 0;\n\n    p {\n      line-height: 20px;;\n    }\n  }\n\n  .restarting-icon {\n    display: flex;\n    justify-content: center;\n    margin-top: 10px;\n\n    > I {\n    font-size: 24px;\n    }\n  }\n\n  .feature-name {\n    align-items: center;\n    display: flex;\n\n    > i {\n      margin-left: 10px;\n    }\n  }\n</style>\n"],"mappings":"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"}]}