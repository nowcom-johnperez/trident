{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/settings/banners.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/c/_cluster/settings/banners.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isEmpty","Checkbox","Loading","AsyncButton","Banner","BannerSettings","allHash","MANAGEMENT","getVendor","SETTING","clone","_EDIT","_VIEW","NotificationSettings","DEFAULT_BANNER_SETTING","loginError","message","showMessage","bannerHeader","background","color","textAlignment","fontWeight","fontStyle","fontSize","textDecoration","text","bannerFooter","bannerConsent","button","showHeader","showFooter","showConsent","layout","components","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","hash","wrap","_callee$","_context","prev","next","uiBannerSetting","$store","dispatch","type","id","BANNERS","sent","Object","assign","stop","data","vendor","bannerVal","errors","computed","mode","_schema$resourceMetho","schema","getters","resourceMethods","includes","headerMode","_this$bannerVal","footerMode","_this$bannerVal2","consentMode","_this$bannerVal3","watch","neu","value","parsedBanner","JSON","parse","checkOrUpdateLegacyUIBannerSetting","_unused","methods","banner","cloned","textColor","_objectSpread","save","btnCB","_this2","_callee2","_callee2$","_context2","stringify","Promise","all","t0","push"],"sources":["node_modules/@rancher/shell/pages/c/_cluster/settings/banners.vue"],"sourcesContent":["<script>\nimport isEmpty from 'lodash/isEmpty';\n\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Loading from '@shell/components/Loading';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { Banner } from '@components/Banner';\nimport BannerSettings from '@shell/components/form/BannerSettings';\nimport { allHash } from '@shell/utils/promise';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { getVendor } from '@shell/config/private-label';\nimport { SETTING } from '@shell/config/settings';\nimport { clone } from '@shell/utils/object';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport NotificationSettings from '@shell/components/form/NotificationSettings.vue';\n\nconst DEFAULT_BANNER_SETTING = {\n  loginError:   { message: '', showMessage: 'false' },\n  bannerHeader: {\n    background:     null,\n    color:          null,\n    textAlignment:  'center',\n    fontWeight:     null,\n    fontStyle:      null,\n    fontSize:       '14px',\n    textDecoration: null,\n    text:           null,\n  },\n  bannerFooter: {\n    background:     null,\n    color:          null,\n    textAlignment:  'center',\n    fontWeight:     null,\n    fontStyle:      null,\n    fontSize:       '14px',\n    textDecoration: null,\n    text:           null\n  },\n  bannerConsent: {\n    background:     null,\n    color:          null,\n    textAlignment:  'center',\n    fontWeight:     null,\n    fontStyle:      null,\n    fontSize:       '14px',\n    textDecoration: null,\n    text:           null,\n    button:         null,\n  },\n  showHeader:  'false',\n  showFooter:  'false',\n  showConsent: 'false'\n};\n\nexport default {\n  layout: 'authenticated',\n\n  components: {\n    Checkbox,\n    Loading,\n    AsyncButton,\n    Banner,\n    BannerSettings,\n    NotificationSettings\n  },\n\n  async fetch() {\n    const hash = await allHash({ uiBannerSetting: this.$store.dispatch('management/find', { type: MANAGEMENT.SETTING, id: SETTING.BANNERS }) });\n\n    Object.assign(this, hash);\n  },\n\n  data() {\n    return {\n      vendor: getVendor(),\n\n      uiBannerSetting: null,\n      bannerVal:       {},\n\n      errors: [],\n\n    };\n  },\n\n  computed: {\n    mode() {\n      const schema = this.$store.getters[`management/schemaFor`](MANAGEMENT.SETTING);\n\n      return schema?.resourceMethods?.includes('PUT') ? _EDIT : _VIEW;\n    },\n\n    headerMode() {\n      return this.bannerVal?.showHeader === 'true' ? _EDIT : _VIEW;\n    },\n    footerMode() {\n      return this.bannerVal?.showFooter === 'true' ? _EDIT : _VIEW;\n    },\n    consentMode() {\n      return this.bannerVal?.showConsent === 'true' ? _EDIT : _VIEW;\n    }\n  },\n\n  watch: {\n    uiBannerSetting(neu) {\n      if (neu?.value && neu.value !== '') {\n        try {\n          const parsedBanner = JSON.parse(neu.value);\n\n          this.bannerVal = this.checkOrUpdateLegacyUIBannerSetting(parsedBanner);\n        } catch {}\n      }\n    }\n  },\n\n  methods: {\n    checkOrUpdateLegacyUIBannerSetting(parsedBanner) {\n      const {\n        bannerHeader, bannerFooter, bannerConsent, banner, loginError\n      } = parsedBanner;\n\n      if (isEmpty(bannerHeader) && isEmpty(bannerFooter) && isEmpty(bannerConsent)) {\n        let neu = DEFAULT_BANNER_SETTING;\n\n        if (!isEmpty(banner)) {\n          const cloned = clone(( banner ?? {} ));\n\n          if (cloned?.textColor) {\n            cloned['color'] = cloned.textColor;\n            delete cloned.textColor;\n          }\n\n          neu = {\n            bannerHeader:  { ...cloned },\n            bannerFooter:  { ...cloned },\n            loginError:    { ...DEFAULT_BANNER_SETTING.loginError, loginError: loginError?.showMessage === 'false' ? 'false' : 'true' },\n            bannerConsent: { ...DEFAULT_BANNER_SETTING.bannerConsent },\n            showHeader:    parsedBanner?.showHeader === 'true' ? 'true' : 'false',\n            showFooter:    parsedBanner?.showFooter === 'true' ? 'true' : 'false',\n            showConsent:   parsedBanner?.showConsent === 'true' ? 'true' : 'false'\n          };\n        }\n\n        return neu;\n      }\n\n      // If user has existing banners, they may not have consent banner - use default value\n      if (isEmpty(bannerConsent)) {\n        parsedBanner.bannerConsent = { ...DEFAULT_BANNER_SETTING.bannerConsent };\n      }\n\n      if (isEmpty(loginError)) {\n        parsedBanner.loginError = { ...DEFAULT_BANNER_SETTING.loginError };\n      }\n\n      return parsedBanner;\n    },\n\n    async save(btnCB) {\n      this.uiBannerSetting.value = JSON.stringify(this.bannerVal);\n\n      this.errors = [];\n\n      try {\n        await Promise.all([\n          this.uiBannerSetting.save()\n        ]);\n        btnCB(true);\n      } catch (err) {\n        this.errors.push(err);\n        btnCB(false);\n      }\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <h1 class=\"mb-20\">\n      {{ t('banner.label') }}\n    </h1>\n    <div>\n      <label class=\"text-label\">\n        {{ t(`advancedSettings.descriptions.${ 'ui-banners' }`, {}, true) }}\n      </label>\n\n      <template>\n        <!-- Header Settings -->\n        <h2 class=\"mt-40 mb-40\">\n          {{ t('banner.headerBanner') }}\n        </h2>\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <Checkbox\n              :value=\"bannerVal.showHeader === 'true'\"\n              :label=\"t('banner.showHeader')\"\n              :mode=\"mode\"\n              @input=\"e=>$set(bannerVal, 'showHeader', e.toString())\"\n            />\n          </div>\n        </div>\n        <BannerSettings\n          v-model=\"bannerVal\"\n          banner-type=\"bannerHeader\"\n          :mode=\"headerMode\"\n        />\n\n        <!-- Footer settings -->\n        <h2 class=\"mt-40 mb-40\">\n          {{ t('banner.footerBanner') }}\n        </h2>\n        <div class=\"row mt-40 mb-20\">\n          <div class=\"col span-6\">\n            <Checkbox\n              :value=\"bannerVal.showFooter === 'true'\"\n              :label=\"t('banner.showFooter')\"\n              :mode=\"mode\"\n              @input=\"e=>$set(bannerVal, 'showFooter', e.toString())\"\n            />\n          </div>\n        </div>\n        <BannerSettings\n          v-model=\"bannerVal\"\n          banner-type=\"bannerFooter\"\n          :mode=\"footerMode\"\n        />\n      </template>\n\n      <!-- Consent settings -->\n      <h2 class=\"mt-40 mb-40\">\n        {{ t('banner.loginScreenBanner') }}\n      </h2>\n      <template>\n        <div class=\"row mt-40 mb-20\">\n          <div class=\"col span-6\">\n            <Checkbox\n              :value=\"bannerVal.showConsent === 'true'\"\n              :label=\"t('banner.showConsent')\"\n              :mode=\"mode\"\n              @input=\"e => $set(bannerVal, 'showConsent', e.toString())\"\n            />\n          </div>\n        </div>\n        <BannerSettings\n          v-model=\"bannerVal\"\n          banner-type=\"bannerConsent\"\n          :mode=\"consentMode\"\n        />\n      </template>\n      <h2 class=\"mt-40 mb-40\">\n        {{ t('notifications.loginError.header') }}\n      </h2>\n      <NotificationSettings\n        v-model=\"bannerVal.loginError\"\n        :mode=\"mode\"\n        :label=\"t('notifications.loginError.messageLabel')\"\n      />\n    </div>\n    <template v-for=\"err in errors\">\n      <Banner\n        :key=\"err\"\n        color=\"error\"\n        :label=\"err\"\n      />\n    </template>\n    <div v-if=\"mode === 'edit'\">\n      <AsyncButton\n        class=\"pull-right mt-20\"\n        mode=\"apply\"\n        @click=\"save\"\n      />\n    </div>\n  </div>\n</template>\n\n<style scoped lang='scss'>\n.overlay {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: var(--overlay-bg);\n  z-index: 1;\n}\n</style>\n"],"mappings":"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"}]}