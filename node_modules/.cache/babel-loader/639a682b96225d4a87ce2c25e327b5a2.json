{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/Upgrading.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/Upgrading.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["get","RadioGroup","UnitInput","WORKLOAD_TYPES","_CREATE","mapGetters","InputWithSelect","components","props","value","type","Object","default","_default","String","DEPLOYMENT","mode","noPodSpec","Boolean","noDeploymentSpec","data","_podSpec$terminationG","_this$value","_this$value$strategy","strategy","strategyObj","_this$value$minReadyS","minReadySeconds","_this$value$progressD","progressDeadlineSeconds","_this$value$revisionH","revisionHistoryLimit","_this$value$podManage","podManagementPolicy","maxSurge","maxUnavailable","surgeUnits","unavailableUnits","rollingUpdate","includes","slice","indexOf","podSpec","terminationGracePeriodSeconds","computed","_objectSpread","strategyOptions","options","labels","t","DAEMON_SET","STATEFUL_SET","isDeployment","isStatefulSet","isDaemonSet","methods","update","_this$value2","template","spec","concat","$set","assign","updateStrategy","$emit","updateWithUnits","_ref","target","units","selected","text","parseInt"],"sources":["node_modules/@rancher/shell/edit/workload/Upgrading.vue"],"sourcesContent":["<script>\nimport { get } from '@shell/utils/object';\nimport { RadioGroup } from '@components/Form/Radio';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { WORKLOAD_TYPES } from '@shell/config/types';\nimport { _CREATE } from '@shell/config/query-params';\nimport { mapGetters } from 'vuex';\nimport InputWithSelect from '@shell/components/form/InputWithSelect';\n\nexport default {\n  components: {\n    RadioGroup, UnitInput, InputWithSelect\n  },\n  props: {\n    // spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    type: {\n      type:    String,\n      default: WORKLOAD_TYPES.DEPLOYMENT\n    },\n\n    mode: { type: String, default: _CREATE },\n\n    noPodSpec: {\n      type:    Boolean,\n      default: false\n    },\n\n    noDeploymentSpec: {\n      type:    Boolean,\n      default: false\n    }\n  },\n  data() {\n    const {\n      strategy:strategyObj = {},\n      minReadySeconds = 0,\n      progressDeadlineSeconds = 600,\n      revisionHistoryLimit = 10,\n      podManagementPolicy = 'OrderedReady'\n    } = this.value;\n    const strategy = strategyObj.type || 'RollingUpdate';\n    let maxSurge = '25';\n    let maxUnavailable = '25';\n    let surgeUnits = '%';\n    let unavailableUnits = '%';\n\n    if (strategyObj.rollingUpdate) {\n      maxSurge = strategyObj.rollingUpdate.maxSurge;\n      maxUnavailable = strategyObj.rollingUpdate.maxUnavailable;\n\n      if ( typeof maxSurge === 'string' && maxSurge.includes('%')) {\n        maxSurge = maxSurge.slice(0, maxSurge.indexOf('%'));\n      } else {\n        surgeUnits = 'Pods';\n      }\n\n      if ( typeof maxUnavailable === 'string' && maxUnavailable.includes('%')) {\n        unavailableUnits = '%';\n        maxUnavailable = maxUnavailable.slice(0, maxUnavailable.indexOf('%'));\n      } else {\n        unavailableUnits = 'Pods';\n      }\n    }\n\n    const podSpec = get(this.value, 'template.spec');\n\n    const terminationGracePeriodSeconds = podSpec?.terminationGracePeriodSeconds ?? 30;\n\n    return {\n      surgeUnits,\n      unavailableUnits,\n      strategy,\n      minReadySeconds,\n      progressDeadlineSeconds,\n      maxSurge,\n      maxUnavailable,\n      revisionHistoryLimit,\n      terminationGracePeriodSeconds,\n      podManagementPolicy\n    };\n  },\n  computed: {\n    strategyOptions() {\n      switch (this.type) {\n      case WORKLOAD_TYPES.DEPLOYMENT:\n        return {\n          options: ['RollingUpdate', 'Recreate'],\n          labels:  [this.t('workload.upgrading.strategies.labels.rollingUpdate'), this.t('workload.upgrading.strategies.labels.recreate')]\n        };\n      case WORKLOAD_TYPES.DAEMON_SET:\n      case WORKLOAD_TYPES.STATEFUL_SET:\n        return {\n          options: ['RollingUpdate', 'Delete'],\n          labels:  [this.t('workload.upgrading.strategies.labels.rollingUpdate'), this.t('workload.upgrading.strategies.labels.delete')]\n        };\n      default:\n        return null;\n      }\n    },\n\n    isDeployment() {\n      return this.type === WORKLOAD_TYPES.DEPLOYMENT;\n    },\n\n    isStatefulSet() {\n      return this.type === WORKLOAD_TYPES.STATEFUL_SET;\n    },\n\n    isDaemonSet() {\n      return this.type === WORKLOAD_TYPES.DAEMON_SET;\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  methods: {\n    update() {\n      const podSpec = this.value?.template?.spec;\n      const {\n        minReadySeconds,\n        revisionHistoryLimit,\n        progressDeadlineSeconds,\n        terminationGracePeriodSeconds\n      } = this;\n      let { maxSurge, maxUnavailable } = this;\n\n      if (this.surgeUnits === '%' && !maxSurge.includes('%')) {\n        maxSurge = `${ maxSurge }%`;\n      }\n      if (this.unavailableUnits === '%' && !maxUnavailable.includes('%')) {\n        maxUnavailable = `${ maxUnavailable }%`;\n      }\n\n      if (podSpec) {\n        this.$set(podSpec, 'terminationGracePeriodSeconds', terminationGracePeriodSeconds);\n      }\n\n      switch (this.type) {\n      case WORKLOAD_TYPES.DEPLOYMENT: {\n        let strategy;\n\n        if (this.strategy === 'RollingUpdate') {\n          strategy = {\n            rollingUpdate: {\n              maxSurge,\n              maxUnavailable,\n            },\n            type: this.strategy\n          };\n        } else {\n          strategy = { type: this.strategy };\n        }\n\n        Object.assign(this.value, {\n          strategy,\n          minReadySeconds,\n          revisionHistoryLimit,\n          progressDeadlineSeconds\n        });\n        break;\n      }\n      case WORKLOAD_TYPES.DAEMON_SET: {\n        let updateStrategy;\n\n        if (this.strategy === 'RollingUpdate') {\n          updateStrategy = { rollingUpdate: { maxUnavailable }, type: this.strategy };\n        } else {\n          updateStrategy = { type: this.strategy };\n        }\n\n        Object.assign(this.value, {\n          updateStrategy, minReadySeconds, revisionHistoryLimit\n        });\n        break;\n      }\n      case WORKLOAD_TYPES.STATEFUL_SET: {\n        const updateStrategy = { type: this.strategy };\n\n        Object.assign(this.value, {\n          updateStrategy,\n          revisionHistoryLimit,\n          podManagementPolicy:\n          this.podManagementPolicy\n        });\n        break;\n      }\n      default:\n        break;\n      }\n\n      this.$emit('input', this.value);\n    },\n\n    updateWithUnits({ selected:units, text:value }, target) {\n      if (units === 'Pods') {\n        this[target] = parseInt(value);\n      } else {\n        this[target] = `${ value }%`;\n      }\n      if (target === 'maxSurge') {\n        this.surgeUnits = units;\n      } else {\n        this.unavailableUnits = units;\n      }\n\n      this.update();\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <!--workload  spec.upgradeStrategy -->\n    <div\n      v-if=\"strategyOptions && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col\"\n        data-testid=\"input-policy-strategy\"\n      >\n        <RadioGroup\n          v-model=\"strategy\"\n          name=\"strategy\"\n          :options=\"strategyOptions.options\"\n          :labels=\"strategyOptions.labels\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"isStatefulSet && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-pod\"\n      >\n        <RadioGroup\n          v-model=\"podManagementPolicy\"\n          name=\"podManagement\"\n          :mode=\"mode\"\n          :label=\"t('workload.upgrading.podManagementPolicy.label')\"\n          :options=\"['OrderedReady', 'Parallel']\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <template v-if=\"strategy === 'RollingUpdate' && !noDeploymentSpec\">\n      <div\n        v-if=\"isDeployment || isDaemonSet\"\n        class=\"row mb-20\"\n        data-testid=\"input-policy-surge\"\n      >\n        <div\n          v-if=\"isDeployment\"\n          class=\"col span-6\"\n        >\n          <InputWithSelect\n            :text-value=\"maxSurge\"\n            :select-before-text=\"false\"\n            :select-value=\"surgeUnits\"\n            :text-label=\"t('workload.upgrading.maxSurge.label')\"\n            :mode=\"mode\"\n            type=\"number\"\n            :options=\"['Pods', '%']\"\n            @input=\"e=>updateWithUnits(e, 'maxSurge')\"\n          />\n        </div>\n        <div\n          class=\"col span-6\"\n          data-testid=\"input-policy-unavailable\"\n        >\n          <InputWithSelect\n            :text-value=\"maxUnavailable\"\n            :select-before-text=\"false\"\n            :select-value=\"unavailableUnits\"\n            :text-label=\"t('workload.upgrading.maxUnavailable.label')\"\n            :mode=\"mode\"\n            type=\"number\"\n            :options=\"['Pods', '%']\"\n            @input=\"e=>updateWithUnits(e, 'maxUnavailable')\"\n          />\n        </div>\n      </div>\n    </template>\n\n    <!-- workload spec -->\n    <div\n      v-if=\"!noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        v-if=\"!isStatefulSet\"\n        class=\"col span-6\"\n        data-testid=\"input-policy-min\"\n      >\n        <UnitInput\n          v-model=\"minReadySeconds\"\n          :suffix=\"t('suffix.seconds', {count: minReadySeconds})\"\n          label-key=\"workload.upgrading.minReadySeconds.label\"\n          tooltip-key=\"workload.upgrading.minReadySeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n      <div\n        v-if=\"isDeployment || isStatefulSet || isDaemonSet\"\n        class=\"col span-6\"\n        data-testid=\"input-policy-limit\"\n      >\n        <UnitInput\n          v-model=\"revisionHistoryLimit\"\n          :suffix=\"t('suffix.revisions', {count: revisionHistoryLimit})\"\n          label-key=\"workload.upgrading.revisionHistoryLimit.label\"\n          tooltip-key=\"workload.upgrading.revisionHistoryLimit.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"isDeployment && !noDeploymentSpec\"\n      class=\"row mb-20\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-deadline\"\n      >\n        <UnitInput\n          v-model=\"progressDeadlineSeconds\"\n          :suffix=\"t('suffix.seconds', {count: progressDeadlineSeconds})\"\n          label-key=\"workload.upgrading.progressDeadlineSeconds.label\"\n          tooltip-key=\"workload.upgrading.progressDeadlineSeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n\n    <!-- pod spec -->\n    <div\n      v-if=\"!noPodSpec\"\n      class=\"row\"\n    >\n      <div\n        class=\"col span-6\"\n        data-testid=\"input-policy-termination\"\n      >\n        <UnitInput\n          v-model=\"terminationGracePeriodSeconds\"\n          :suffix=\"t('suffix.seconds', {count: terminationGracePeriodSeconds})\"\n          label-key=\"workload.upgrading.terminationGracePeriodSeconds.label\"\n          tooltip-key=\"workload.upgrading.terminationGracePeriodSeconds.tip\"\n          :mode=\"mode\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"],"mappings":"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"}]}