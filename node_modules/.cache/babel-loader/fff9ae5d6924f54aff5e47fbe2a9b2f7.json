{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/NodeAffinity.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/NodeAffinity.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["debounce","_VIEW","mapGetters","get","isEmpty","clone","NODE","MatchExpressions","LabeledSelect","LabeledInput","randomStr","ArrayListGrouped","components","props","value","type","Object","default","_default","mode","String","matchingSelectorDisplay","Boolean","data","required","nodeSelectorTerms","_this$value","_this$value$preferred","preferredDuringSchedulingIgnoredDuringExecution","_this$value$requiredD","requiredDuringSchedulingIgnoredDuringExecution","_requiredDuringSchedu","allSelectorTerms","concat","_toConsumableArray","map","term","neu","_id","preference","assign","weightedNodeSelectorTerms","defaultWeight","rerenderNums","computed","_objectSpread","t","isView","hasWeighted","node","affinityOptions","out","created","queueUpdate","update","methods","forEach","matchExpressions","expression","matching","matchFields","field","weight","push","length","$emit","remove","changePriority","$delete","$set","priorityDisplay","updateExpressions","row","expressions","expressionsMatching"],"sources":["node_modules/@rancher/shell/components/form/NodeAffinity.vue"],"sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _VIEW } from '@shell/config/query-params';\nimport { mapGetters } from 'vuex';\nimport { get, isEmpty, clone } from '@shell/utils/object';\nimport { NODE } from '@shell/config/types';\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { randomStr } from '@shell/utils/string';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\n\nexport default {\n  components: {\n    ArrayListGrouped, MatchExpressions, LabeledSelect, LabeledInput\n  },\n\n  props: {\n    // value should be NodeAffinity or VolumeNodeAffinity\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    // has select for matching fields or expressions (used for node affinity)\n    // https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeselectorterm-v1-core\n    matchingSelectorDisplay: {\n      type:    Boolean,\n      default: false,\n    },\n  },\n\n  data() {\n    // VolumeNodeAffinity only has 'required' field\n    if (this.value.required) {\n      return { nodeSelectorTerms: this.value.required.nodeSelectorTerms };\n    } else {\n      const { preferredDuringSchedulingIgnoredDuringExecution = [], requiredDuringSchedulingIgnoredDuringExecution = {} } = this.value;\n      const { nodeSelectorTerms = [] } = requiredDuringSchedulingIgnoredDuringExecution;\n      const allSelectorTerms = [...preferredDuringSchedulingIgnoredDuringExecution, ...nodeSelectorTerms].map((term) => {\n        const neu = clone(term);\n\n        neu._id = randomStr(4);\n        if (term.preference) {\n          Object.assign(neu, term.preference);\n          delete neu.preference;\n        }\n\n        return neu;\n      });\n\n      return {\n        allSelectorTerms,\n        weightedNodeSelectorTerms: preferredDuringSchedulingIgnoredDuringExecution,\n        defaultWeight:             1,\n        // rules in MatchExpressions.vue can not catch changes what happens on parent component\n        // we need re-render it via key changing\n        rerenderNums:              randomStr(4)\n      };\n    }\n  },\n\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n    isView() {\n      return this.mode === _VIEW;\n    },\n    hasWeighted() {\n      return !!this.weightedNodeSelectorTerms;\n    },\n    node() {\n      return NODE;\n    },\n    affinityOptions() {\n      const out = [this.t('workload.scheduling.affinity.preferred'), this.t('workload.scheduling.affinity.required')];\n\n      return out;\n    }\n  },\n\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n\n  methods: {\n    update() {\n      const out = {};\n      const requiredDuringSchedulingIgnoredDuringExecution = { nodeSelectorTerms: [] };\n      const preferredDuringSchedulingIgnoredDuringExecution = [] ;\n\n      this.allSelectorTerms.forEach((t) => {\n        const term = { ...t };\n\n        // the 'matching' field isn't part of the affinity spec: including this in the save request will cause a flood of errors that might cause the request to fail\n        // same deal with term.preference.weight\n        if (term.matchExpressions) {\n          term.matchExpressions = (term.matchExpressions || []).map((expression) => {\n            const out = { ...expression };\n\n            delete out.matching;\n\n            return out;\n          });\n        }\n\n        if (term.matchFields) {\n          term.matchFields = (term.matchFields || []).map((field) => {\n            const out = { ...field };\n\n            delete out.matching;\n\n            return out;\n          });\n        }\n\n        if (term.weight) {\n          const neu = { weight: term.weight, preference: term };\n\n          delete neu.preference.weight;\n\n          preferredDuringSchedulingIgnoredDuringExecution.push(neu);\n        } else {\n          requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.push(term);\n        }\n      });\n\n      if (preferredDuringSchedulingIgnoredDuringExecution.length) {\n        out.preferredDuringSchedulingIgnoredDuringExecution = preferredDuringSchedulingIgnoredDuringExecution;\n      }\n      if (requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms.length) {\n        out.requiredDuringSchedulingIgnoredDuringExecution = requiredDuringSchedulingIgnoredDuringExecution;\n      }\n\n      this.$emit('input', out);\n    },\n\n    remove() {\n      this.rerenderNums = randomStr(4);\n      this.queueUpdate();\n    },\n\n    changePriority(term) {\n      if (term.weight) {\n        this.$delete(term, 'weight');\n      } else {\n        this.$set(term, 'weight', 1);\n      }\n      this.update();\n    },\n\n    priorityDisplay(term) {\n      return 'weight' in term ? this.t('workload.scheduling.affinity.preferred') : this.t('workload.scheduling.affinity.required');\n    },\n\n    updateExpressions(row, expressions) {\n      const expressionsMatching = {\n        matchFields:      [],\n        matchExpressions: []\n      };\n\n      if (expressions.length) {\n        expressions.forEach((expression) => {\n          expressionsMatching[expression.matching || 'matchExpressions'].push(expression);\n        });\n\n        this.$set(row, 'matchFields', expressionsMatching.matchFields);\n        this.$set(row, 'matchExpressions', expressionsMatching.matchExpressions);\n\n        this.update();\n      }\n    },\n\n    get,\n\n    isEmpty\n  }\n\n};\n</script>\n\n<template>\n  <div\n    class=\"row\"\n    @input=\"queueUpdate\"\n  >\n    <div class=\"col span-12\">\n      <ArrayListGrouped\n        v-model=\"allSelectorTerms\"\n        class=\"mt-20\"\n        :mode=\"mode\"\n        :default-add-value=\"{matchExpressions:[]}\"\n        :add-label=\"t('workload.scheduling.affinity.addNodeSelector')\"\n        @remove=\"remove\"\n      >\n        <template #default=\"props\">\n          <div class=\"row\">\n            <div class=\"col span-9\">\n              <LabeledSelect\n                :options=\"affinityOptions\"\n                :value=\"priorityDisplay(props.row.value)\"\n                :label=\"t('workload.scheduling.affinity.priority')\"\n                :mode=\"mode\"\n                :data-testid=\"`node-affinity-priority-index${props.i}`\"\n                @input=\"(changePriority(props.row.value))\"\n              />\n            </div>\n            <div\n              v-if=\"'weight' in props.row.value\"\n              class=\"col span-3\"\n            >\n              <LabeledInput\n                v-model.number=\"props.row.value.weight\"\n                :mode=\"mode\"\n                type=\"number\"\n                min=\"1\"\n                max=\"100\"\n                :label=\"t('workload.scheduling.affinity.weight.label')\"\n                :placeholder=\"t('workload.scheduling.affinity.weight.placeholder')\"\n                :data-testid=\"`node-affinity-weight-index${props.i}`\"\n              />\n            </div>\n          </div>\n          <MatchExpressions\n            :key=\"rerenderNums\"\n            :value=\"matchingSelectorDisplay ? props.row.value : props.row.value.matchExpressions\"\n            :matching-selector-display=\"matchingSelectorDisplay\"\n            :mode=\"mode\"\n            class=\"col span-12 mt-20\"\n            :type=\"node\"\n            :show-remove=\"false\"\n            :data-testid=\"`node-affinity-expressions-index${props.i}`\"\n            @input=\"(updateExpressions(props.row.value, $event))\"\n          />\n        </template>\n      </ArrayListGrouped>\n    </div>\n  </div>\n</template>\n\n<style>\n</style>\n"],"mappings":"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"}]}