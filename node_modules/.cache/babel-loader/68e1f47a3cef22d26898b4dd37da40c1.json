{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ServicePorts.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ServicePorts.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90eXBlb2YgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluY2x1ZGVzLmpzIjsKaW1wb3J0IGRlYm91bmNlIGZyb20gJ2xvZGFzaC9kZWJvdW5jZSc7CmltcG9ydCB7IF9FRElULCBfVklFVyB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgcmVtb3ZlQXQgfSBmcm9tICdAc2hlbGwvdXRpbHMvYXJyYXknOwppbXBvcnQgeyBjbG9uZSB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgU2VsZWN0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vU2VsZWN0JzsKaW1wb3J0IEVycm9yIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vRXJyb3InOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgU2VsZWN0OiBTZWxlY3QsCiAgICBFcnJvcjogRXJyb3IKICB9LAogIHByb3BzOiB7CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogbnVsbAogICAgfSwKICAgIG1vZGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBfRURJVAogICAgfSwKICAgIHNwZWNUeXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ0NsdXN0ZXJJUCcKICAgIH0sCiAgICBwYWRMZWZ0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgYXV0b0FkZElmRW1wdHk6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIHJ1bGVzOiB7CiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfSwKICAgICAgdHlwZTogQXJyYXksCiAgICAgIC8vIHdlIG9ubHkgd2FudCBmdW5jdGlvbnMgaW4gdGhlIHJ1bGVzIGFycmF5CiAgICAgIHZhbGlkYXRvcjogZnVuY3Rpb24gdmFsaWRhdG9yKHJ1bGVzKSB7CiAgICAgICAgcmV0dXJuIHJ1bGVzLmV2ZXJ5KGZ1bmN0aW9uIChydWxlKSB7CiAgICAgICAgICByZXR1cm4gWydmdW5jdGlvbiddLmluY2x1ZGVzKF90eXBlb2YocnVsZSkpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIHJvd3MgPSBjbG9uZSh0aGlzLnZhbHVlIHx8IFtdKTsKICAgIHJldHVybiB7CiAgICAgIHJvd3M6IHJvd3MKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgaXNWaWV3OiBmdW5jdGlvbiBpc1ZpZXcoKSB7CiAgICAgIHJldHVybiB0aGlzLm1vZGUgPT09IF9WSUVXOwogICAgfSwKICAgIHNob3dBZGQ6IGZ1bmN0aW9uIHNob3dBZGQoKSB7CiAgICAgIHJldHVybiAhdGhpcy5pc1ZpZXc7CiAgICB9LAogICAgc2hvd1JlbW92ZTogZnVuY3Rpb24gc2hvd1JlbW92ZSgpIHsKICAgICAgcmV0dXJuICF0aGlzLmlzVmlldzsKICAgIH0sCiAgICBzaG93UHJvdG9jb2w6IGZ1bmN0aW9uIHNob3dQcm90b2NvbCgpIHsKICAgICAgcmV0dXJuIHRoaXMuc3BlY1R5cGUgIT09ICdOb2RlUG9ydCc7CiAgICB9LAogICAgc2hvd05vZGVQb3J0OiBmdW5jdGlvbiBzaG93Tm9kZVBvcnQoKSB7CiAgICAgIHJldHVybiB0aGlzLnNwZWNUeXBlID09PSAnTm9kZVBvcnQnIHx8IHRoaXMuc3BlY1R5cGUgPT09ICdMb2FkQmFsYW5jZXInOwogICAgfSwKICAgIHByb3RvY29sT3B0aW9uczogZnVuY3Rpb24gcHJvdG9jb2xPcHRpb25zKCkgewogICAgICByZXR1cm4gWydUQ1AnLCAnVURQJ107CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5xdWV1ZVVwZGF0ZSA9IGRlYm91bmNlKHRoaXMudXBkYXRlLCA1MDApOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGlmICh0aGlzLmlzVmlldykgewogICAgICByZXR1cm47CiAgICB9CiAgICBpZiAodGhpcy5hdXRvQWRkSWZFbXB0eSAmJiB0aGlzLm1vZGUgIT09IF9FRElUICYmICh0aGlzID09PSBudWxsIHx8IHRoaXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHRoaXMucm93cy5sZW5ndGgpIDwgMSkgewogICAgICAvLyBkb24ndCBmb2N1cyBvbiBtb3VudCBiZWNhdXNlIHdlJ2xsIHB1bGwgZm9jdXMgZnJvbSBuYW1lL25hbWVzcGFjZSBpbnB1dAogICAgICB0aGlzLmFkZChmYWxzZSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBhZGQ6IGZ1bmN0aW9uIGFkZCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdmFyIGZvY3VzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB0cnVlOwogICAgICB0aGlzLnJvd3MucHVzaCh7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgcG9ydDogbnVsbCwKICAgICAgICBwcm90b2NvbDogJ1RDUCcsCiAgICAgICAgdGFyZ2V0UG9ydDogbnVsbAogICAgICB9KTsKICAgICAgdGhpcy5xdWV1ZVVwZGF0ZSgpOwogICAgICBpZiAodGhpcy5yb3dzLmxlbmd0aCA+IDAgJiYgZm9jdXMpIHsKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICB2YXIgaW5wdXRzID0gX3RoaXMuJHJlZnNbJ3BvcnQtbmFtZSddOwogICAgICAgICAgaW5wdXRzW2lucHV0cy5sZW5ndGggLSAxXS5mb2N1cygpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgcmVtb3ZlOiBmdW5jdGlvbiByZW1vdmUoaWR4KSB7CiAgICAgIHJlbW92ZUF0KHRoaXMucm93cywgaWR4KTsKICAgICAgdGhpcy5xdWV1ZVVwZGF0ZSgpOwogICAgfSwKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkgewogICAgICBpZiAodGhpcy5pc1ZpZXcpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnJvd3MpOwogICAgfQogIH0KfTs="},{"version":3,"names":["debounce","_EDIT","_VIEW","removeAt","clone","Select","Error","components","props","value","type","Array","default","mode","String","specType","padLeft","Boolean","autoAddIfEmpty","rules","_default","validator","every","rule","includes","_typeof","data","rows","computed","isView","showAdd","showRemove","showProtocol","showNodePort","protocolOptions","created","queueUpdate","update","mounted","length","add","methods","_this","focus","arguments","undefined","push","name","port","protocol","targetPort","$nextTick","inputs","$refs","remove","idx","$emit"],"sources":["node_modules/@rancher/shell/components/form/ServicePorts.vue"],"sourcesContent":["<script>\nimport debounce from 'lodash/debounce';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { removeAt } from '@shell/utils/array';\nimport { clone } from '@shell/utils/object';\nimport Select from '@shell/components/form/Select';\nimport Error from '@shell/components/form/Error';\n\nexport default {\n  components: { Select, Error },\n  props:      {\n    value: {\n      type:    Array,\n      default: null,\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    specType: {\n      type:    String,\n      default: 'ClusterIP',\n    },\n    padLeft: {\n      type:    Boolean,\n      default: false,\n    },\n    autoAddIfEmpty: {\n      type:    Boolean,\n      default: true,\n    },\n    rules: {\n      default:   () => [],\n      type:      Array,\n      // we only want functions in the rules array\n      validator: (rules) => rules.every((rule) => ['function'].includes(typeof rule))\n    }\n  },\n\n  data() {\n    const rows = clone(this.value || []);\n\n    return { rows };\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    showAdd() {\n      return !this.isView;\n    },\n\n    showRemove() {\n      return !this.isView;\n    },\n\n    showProtocol() {\n      return this.specType !== 'NodePort';\n    },\n\n    showNodePort() {\n      return this.specType === 'NodePort' || this.specType === 'LoadBalancer';\n    },\n\n    protocolOptions() {\n      return ['TCP', 'UDP'];\n    },\n  },\n\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n  },\n\n  mounted() {\n    if ( this.isView ) {\n      return;\n    }\n\n    if (this.autoAddIfEmpty && this.mode !== _EDIT && this?.rows.length < 1) {\n      // don't focus on mount because we'll pull focus from name/namespace input\n      this.add(false);\n    }\n  },\n\n  methods: {\n    add(focus = true) {\n      this.rows.push({\n        name:       '',\n        port:       null,\n        protocol:   'TCP',\n        targetPort: null,\n      });\n\n      this.queueUpdate();\n\n      if (this.rows.length > 0 && focus) {\n        this.$nextTick(() => {\n          const inputs = this.$refs['port-name'];\n\n          inputs[inputs.length - 1].focus();\n        });\n      }\n    },\n\n    remove(idx) {\n      removeAt(this.rows, idx);\n      this.queueUpdate();\n    },\n\n    update() {\n      if ( this.isView ) {\n        return;\n      }\n\n      this.$emit('input', this.rows);\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <div v-if=\"rows.length\">\n      <div\n        class=\"ports-headers\"\n        :class=\"{'show-protocol':showProtocol, 'show-node-port':showNodePort}\"\n      >\n        <span\n          v-if=\"padLeft\"\n          class=\"left\"\n        />\n        <span class=\"port-name\">\n          <t k=\"servicePorts.rules.name.label\" />\n        </span>\n        <span class=\"port\">\n          <t k=\"servicePorts.rules.listening.label\" />\n          <i\n            v-clean-tooltip=\"t('servicesPage.listeningPorts')\"\n            class=\"icon icon-info flex\"\n          />\n          <span class=\"text-error\">*</span>\n        </span>\n        <span\n          v-if=\"showProtocol\"\n          class=\"port-protocol\"\n        >\n          <t k=\"servicePorts.rules.protocol.label\" />\n        </span>\n        <span class=\"target-port\">\n          <t k=\"servicePorts.rules.target.label\" />\n          <i\n            v-clean-tooltip=\"t('servicesPage.targetPorts')\"\n            class=\"icon icon-info flex\"\n          />\n          <span class=\"text-error\">*</span>\n\n        </span>\n        <span\n          v-if=\"showNodePort\"\n          class=\"node-port\"\n        >\n          <t k=\"servicePorts.rules.node.label\" />\n        </span>\n        <span\n          v-if=\"showRemove\"\n          class=\"remove\"\n        />\n      </div>\n      <div\n        v-for=\"(row, idx) in rows\"\n        :key=\"idx\"\n        class=\"ports-row\"\n        :class=\"{'show-protocol':showProtocol, 'show-node-port':showNodePort}\"\n      >\n        <div\n          v-if=\"padLeft\"\n          class=\"left\"\n        />\n        <div class=\"port-name\">\n          <span v-if=\"isView\">{{ row.name }}</span>\n          <input\n            v-else\n            ref=\"port-name\"\n            v-model.number=\"row.name\"\n            type=\"text\"\n            :placeholder=\"t('servicePorts.rules.name.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div class=\"port\">\n          <span v-if=\"isView\">{{ row.port }}</span>\n          <input\n            v-else\n            ref=\"port\"\n            v-model.number=\"row.port\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            :placeholder=\"t('servicePorts.rules.listening.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div\n          v-if=\"showProtocol\"\n          class=\"port-protocol\"\n        >\n          <span v-if=\"isView\">{{ row.protocol }}</span>\n          <Select\n            v-else\n            v-model=\"row.protocol\"\n            :options=\"protocolOptions\"\n            @input=\"queueUpdate\"\n          />\n        </div>\n        <div class=\"target-port\">\n          <span v-if=\"isView\">{{ row.targetPort }}</span>\n          <input\n            v-else\n            v-model=\"row.targetPort\"\n            :placeholder=\"t('servicePorts.rules.target.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div\n          v-if=\"showNodePort\"\n          class=\"node-port\"\n        >\n          <span v-if=\"isView\">{{ row.nodePort }}</span>\n          <input\n            v-else\n            v-model.number=\"row.nodePort\"\n            type=\"number\"\n            min=\"1\"\n            max=\"65535\"\n            :placeholder=\"t('servicePorts.rules.node.placeholder')\"\n            @input=\"queueUpdate\"\n          >\n        </div>\n        <div\n          v-if=\"showRemove\"\n          class=\"remove\"\n        >\n          <button\n            type=\"button\"\n            class=\"btn role-link\"\n            @click=\"remove(idx)\"\n          >\n            <t k=\"generic.remove\" />\n          </button>\n        </div>\n        <Error\n          :value=\"{...row, idx}\"\n          :rules=\"rules\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"showAdd\"\n      class=\"footer\"\n    >\n      <button\n        type=\"button\"\n        class=\"btn role-tertiary add\"\n        @click=\"add()\"\n      >\n        <t k=\"generic.add\" />\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n $remove: 75;\n  $checkbox: 75;\n\n  .title {\n    margin-bottom: 10px;\n\n    .read-from-file {\n      float: right;\n    }\n  }\n\n  .ports-headers, .ports-row{\n    display: grid;\n    grid-column-gap: $column-gutter;\n    margin-bottom: 10px;\n    align-items: center;\n\n    &.show-protocol{\n      grid-template-columns: 23% 23% 10% 15% 15% 10%;\n      &:not(.show-node-port){\n        grid-template-columns: 31% 31% 10% 15% 10%;\n      }\n    }\n    &.show-node-port:not(.show-protocol){\n      grid-template-columns: 28% 28% 15% 15% 10%;\n    }\n  }\n\n  .ports-headers {\n    color: var(--input-label);\n  }\n\n  .toggle-host-ports {\n    color: var(--primary);\n  }\n\n  .remove BUTTON {\n    padding: 0px;\n  }\n\n  .ports-row {\n    > div {\n      height: 100%;\n    }\n\n    .port-protocol ::v-deep {\n      .unlabeled-select {\n        .v-select.inline {\n          margin-top: 2px;\n        }\n      }\n    }\n  }\n\n  .footer {\n    margin-top: 10px;\n    margin-left: 5px;\n\n    .protip {\n      float: right;\n      padding: 5px 0;\n    }\n  }\n</style>\n"],"mappings":";;;AACA,OAAAA,QAAA;AACA,SAAAC,KAAA,EAAAC,KAAA;AACA,SAAAC,QAAA;AACA,SAAAC,KAAA;AACA,OAAAC,MAAA;AACA,OAAAC,KAAA;AAEA;EACAC,UAAA;IAAAF,MAAA,EAAAA,MAAA;IAAAC,KAAA,EAAAA;EAAA;EACAE,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,OAAA;IACA;IACAC,IAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,OAAA,EAAAX;IACA;IACAc,QAAA;MACAL,IAAA,EAAAI,MAAA;MACAF,OAAA;IACA;IACAI,OAAA;MACAN,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAM,cAAA;MACAR,IAAA,EAAAO,OAAA;MACAL,OAAA;IACA;IACAO,KAAA;MACAP,OAAA,WAAAQ,SAAA;QAAA;MAAA;MACAV,IAAA,EAAAC,KAAA;MACA;MACAU,SAAA,WAAAA,UAAAF,KAAA;QAAA,OAAAA,KAAA,CAAAG,KAAA,WAAAC,IAAA;UAAA,oBAAAC,QAAA,CAAAC,OAAA,CAAAF,IAAA;QAAA;MAAA;IACA;EACA;EAEAG,IAAA,WAAAA,KAAA;IACA,IAAAC,IAAA,GAAAvB,KAAA,MAAAK,KAAA;IAEA;MAAAkB,IAAA,EAAAA;IAAA;EACA;EAEAC,QAAA;IACAC,MAAA,WAAAA,OAAA;MACA,YAAAhB,IAAA,KAAAX,KAAA;IACA;IAEA4B,OAAA,WAAAA,QAAA;MACA,aAAAD,MAAA;IACA;IAEAE,UAAA,WAAAA,WAAA;MACA,aAAAF,MAAA;IACA;IAEAG,YAAA,WAAAA,aAAA;MACA,YAAAjB,QAAA;IACA;IAEAkB,YAAA,WAAAA,aAAA;MACA,YAAAlB,QAAA,wBAAAA,QAAA;IACA;IAEAmB,eAAA,WAAAA,gBAAA;MACA;IACA;EACA;EAEAC,OAAA,WAAAA,QAAA;IACA,KAAAC,WAAA,GAAApC,QAAA,MAAAqC,MAAA;EACA;EAEAC,OAAA,WAAAA,QAAA;IACA,SAAAT,MAAA;MACA;IACA;IAEA,SAAAX,cAAA,SAAAL,IAAA,KAAAZ,KAAA,sDAAA0B,IAAA,CAAAY,MAAA;MACA;MACA,KAAAC,GAAA;IACA;EACA;EAEAC,OAAA;IACAD,GAAA,WAAAA,IAAA;MAAA,IAAAE,KAAA;MAAA,IAAAC,KAAA,GAAAC,SAAA,CAAAL,MAAA,QAAAK,SAAA,QAAAC,SAAA,GAAAD,SAAA;MACA,KAAAjB,IAAA,CAAAmB,IAAA;QACAC,IAAA;QACAC,IAAA;QACAC,QAAA;QACAC,UAAA;MACA;MAEA,KAAAd,WAAA;MAEA,SAAAT,IAAA,CAAAY,MAAA,QAAAI,KAAA;QACA,KAAAQ,SAAA;UACA,IAAAC,MAAA,GAAAV,KAAA,CAAAW,KAAA;UAEAD,MAAA,CAAAA,MAAA,CAAAb,MAAA,MAAAI,KAAA;QACA;MACA;IACA;IAEAW,MAAA,WAAAA,OAAAC,GAAA;MACApD,QAAA,MAAAwB,IAAA,EAAA4B,GAAA;MACA,KAAAnB,WAAA;IACA;IAEAC,MAAA,WAAAA,OAAA;MACA,SAAAR,MAAA;QACA;MACA;MAEA,KAAA2B,KAAA,eAAA7B,IAAA;IACA;EACA;AACA"}]}