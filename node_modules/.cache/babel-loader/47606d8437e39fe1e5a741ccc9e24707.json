{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/WorkloadPorts.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/WorkloadPorts.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","debounce","_EDIT","_VIEW","removeAt","findBy","clone","LabeledInput","LabeledSelect","HCI","HCI_LABELS_ANNOTATIONS","isHarvesterSatisfiesVersion","HARVESTER_NAME","HARVESTER","CAPI","SERVICE","components","props","value","type","Array","default","mode","String","services","_default","name","data","rows","map","row","_showHost","_serviceType","_name","concat","containerPort","protocol","toLowerCase","hostPort","_listeningPort","hostIP","_ipam","showHostPorts","some","workloadPortOptions","computed","_objectSpread","canNotAccessService","$store","getters","serviceTypeTooltip","t","undefined","isView","showAdd","showRemove","serviceTypes","label","clusterIPServicePorts","_ref","filter","svc","spec","ports","loadBalancerServicePorts","_ref2","nodePortServicePorts","_ref3","ipamOptions","ipamIndex","findIndex","serviceWithIpam","find","s","_s$metadata","metadata","annotations","CLOUD_PROVIDER_IPAM","showIpam","_this$provisioningClu","_this$provisioningClu2","_this$provisioningClu4","cloudProvider","version","provisioningCluster","kubernetesVersion","isRke2","_this$provisioningClu3","machineSelectorConfig","rkeConfig","agentConfig","config","isRke1","_currentCluster$spec","currentCluster","rancherKubernetesEngineConfig","_this","out","RANCHER_CLUSTER","c","_c$status","status","clusterName","created","_this2","queueUpdate","update","setServiceType","setIpam","methods","add","_this3","push","expose","$nextTick","inputs","$refs","length","focus","remove","idx","_iterator","_createForOfIteratorHelper","_step","n","done","err","e","f","$emit","portSpec","$set","port","nodePort","_this$serviceWithIpam"],"sources":["node_modules/@rancher/shell/components/form/WorkloadPorts.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport debounce from 'lodash/debounce';\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { removeAt, findBy } from '@shell/utils/array';\nimport { clone } from '@shell/utils/object';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { HCI as HCI_LABELS_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { isHarvesterSatisfiesVersion } from '@shell/utils/cluster';\nimport { HARVESTER_NAME as HARVESTER } from '@shell/config/features';\nimport { CAPI, SERVICE } from '@shell/config/types';\n\nexport default {\n  components: {\n    LabeledInput,\n    LabeledSelect,\n  },\n\n  props: {\n    value: {\n      type:    Array,\n      default: null,\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n\n    // array of services auto-created previously (only relevent when mode !== create)\n    services: {\n      type:    Array,\n      default: () => []\n    },\n\n    // workload name\n    name: {\n      type:    String,\n      default: ''\n    }\n  },\n\n  data() {\n    const rows = clone(this.value || []).map((row) => {\n      row._showHost = false;\n      row._serviceType = row._serviceType || '';\n      row._name = row.name ? `${ row.name }` : `${ row.containerPort }${ row.protocol.toLowerCase() }${ row.hostPort || row._listeningPort || '' }`;\n      if (row.hostPort || row.hostIP) {\n        row._showHost = true;\n      }\n\n      row._ipam = '';\n\n      return row;\n    });\n\n    // show host port column if existing port data has any host ports defined\n    const showHostPorts = !!rows.some((row) => !!row.hostPort);\n\n    return {\n      rows,\n      showHostPorts,\n      workloadPortOptions: ['TCP', 'UDP']\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n\n    canNotAccessService() {\n      return !this.$store.getters['cluster/schemaFor'](SERVICE);\n    },\n\n    serviceTypeTooltip() {\n      return this.canNotAccessService ? this.t('workload.container.noServiceAccess') : undefined;\n    },\n\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    showAdd() {\n      return !this.isView;\n    },\n\n    showRemove() {\n      return !this.isView;\n    },\n\n    serviceTypes() {\n      return [\n        {\n          label: this.t('workload.container.ports.noCreateService'),\n          value: ''\n        },\n        {\n          label: this.t('serviceTypes.clusterip'),\n          value: 'ClusterIP'\n        },\n        {\n          label: this.t('serviceTypes.nodeport'),\n          value: 'NodePort'\n        },\n        {\n          label: this.t('serviceTypes.loadbalancer'),\n          value: 'LoadBalancer'\n        },\n      ];\n    },\n\n    clusterIPServicePorts() {\n      return ((this.services.filter((svc) => svc.spec.type === 'ClusterIP') || [])[0] || {})?.spec?.ports;\n    },\n\n    loadBalancerServicePorts() {\n      return ((this.services.filter((svc) => svc.spec.type === 'LoadBalancer') || [])[0] || {})?.spec?.ports;\n    },\n\n    nodePortServicePorts() {\n      return ((this.services.filter((svc) => svc.spec.type === 'NodePort') || [])[0] || {})?.spec?.ports;\n    },\n\n    ipamOptions() {\n      return [{\n        label: 'DHCP',\n        value: 'dhcp',\n      }, {\n        label: 'Pool',\n        value: 'pool',\n      }];\n    },\n\n    ipamIndex() {\n      return this.rows.findIndex((row) => row._serviceType === 'LoadBalancer' && row.protocol === 'TCP');\n    },\n\n    serviceWithIpam() {\n      return this.services.find((s) => s?.metadata?.annotations[HCI_LABELS_ANNOTATIONS.CLOUD_PROVIDER_IPAM]);\n    },\n\n    showIpam() {\n      let cloudProvider;\n      const version = this.provisioningCluster?.kubernetesVersion;\n\n      if (this.provisioningCluster?.isRke2) {\n        const machineSelectorConfig = this.provisioningCluster?.spec?.rkeConfig?.machineSelectorConfig || {};\n        const agentConfig = (machineSelectorConfig[0] || {}).config;\n\n        cloudProvider = agentConfig?.['cloud-provider-name'];\n      } else if (this.provisioningCluster?.isRke1) {\n        const currentCluster = this.$store.getters['currentCluster'];\n\n        cloudProvider = currentCluster?.spec?.rancherKubernetesEngineConfig?.cloudProvider?.name;\n      }\n\n      return cloudProvider === HARVESTER &&\n              isHarvesterSatisfiesVersion(version);\n    },\n\n    provisioningCluster() {\n      const out = this.$store.getters['management/all'](CAPI.RANCHER_CLUSTER).find((c) => c?.status?.clusterName === this.currentCluster.metadata.name);\n\n      return out;\n    },\n  },\n\n  created() {\n    this.queueUpdate = debounce(this.update, 500);\n    this.rows.map((row) => {\n      this.setServiceType(row);\n      this.setIpam(row);\n    });\n  },\n\n  methods: {\n    add() {\n      this.rows.push({\n        name:          '',\n        expose:        true,\n        protocol:      'TCP',\n        containerPort: null,\n        hostPort:      null,\n        hostIP:        null,\n        _showHost:     false,\n        _serviceType:  '',\n        _ipam:         'dhcp',\n      });\n\n      this.queueUpdate();\n\n      this.$nextTick(() => {\n        const inputs = this.$refs.name;\n\n        inputs[inputs.length - 1].focus();\n      });\n    },\n\n    remove(idx) {\n      removeAt(this.rows, idx);\n      this.queueUpdate();\n    },\n\n    update() {\n      if ( this.isView ) {\n        return;\n      }\n      const out = [];\n\n      for ( const row of this.rows ) {\n        const value = clone(row);\n\n        delete value._showHost;\n        out.push(value);\n      }\n      this.$emit('input', out);\n    },\n\n    setServiceType(row) {\n      const { _name } = row;\n\n      if (this.loadBalancerServicePorts) {\n        const portSpec = findBy(this.loadBalancerServicePorts, 'name', _name);\n\n        if (portSpec) {\n          this.$set(row, '_listeningPort', portSpec.port);\n\n          row._serviceType = 'LoadBalancer';\n\n          return;\n        }\n      } if (this.nodePortServicePorts) {\n        const portSpec = findBy(this.nodePortServicePorts, 'name', _name);\n\n        if (portSpec) {\n          this.$set(row, '_listeningPort', portSpec.nodePort);\n\n          row._serviceType = 'NodePort';\n\n          return;\n        }\n      } if (this.clusterIPServicePorts) {\n        if (findBy(this.clusterIPServicePorts, 'name', _name)) {\n          row._serviceType = 'ClusterIP';\n\n          return;\n        }\n      }\n\n      return '';\n    },\n\n    setIpam(row) {\n      if (this.serviceWithIpam && row._serviceType === 'LoadBalancer' && row.protocol === 'TCP') {\n        row._ipam = this.serviceWithIpam?.metadata?.annotations[HCI_LABELS_ANNOTATIONS.CLOUD_PROVIDER_IPAM];\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div :style=\"{'width':'100%'}\">\n    <p\n      v-if=\"rows.length > 0\"\n      class=\"padded\"\n    >\n      {{ t('workload.container.ports.detailedDescription') }}\n    </p>\n    <div\n      v-for=\"(row, idx) in rows\"\n      :key=\"idx\"\n      class=\"ports-row\"\n      :class=\"{\n        'show-host':row._showHost,\n        'loadBalancer': row._serviceType === 'LoadBalancer',\n        'tcp': row.protocol === 'TCP',\n        'show-ipam': showIpam,\n      }\"\n    >\n      <div class=\"service-type\">\n        <LabeledSelect\n          v-model=\"row._serviceType\"\n          :mode=\"mode\"\n          :label=\"t('workload.container.ports.createService')\"\n          :options=\"serviceTypes\"\n          :disabled=\"canNotAccessService\"\n          :tooltip=\"serviceTypeTooltip\"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div class=\"portName\">\n        <LabeledInput\n          ref=\"name\"\n          v-model=\"row.name\"\n          :mode=\"mode\"\n          :label=\"t('workload.container.ports.name')\"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div class=\"port\">\n        <LabeledInput\n          v-model.number=\"row.containerPort\"\n          :mode=\"mode\"\n          type=\"number\"\n          min=\"1\"\n          max=\"65535\"\n          placeholder=\"e.g. 8080\"\n          :label=\"t('workload.container.ports.containerPort')\"\n          :required=\"row._serviceType === 'LoadBalancer' \"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div class=\"protocol col\">\n        <LabeledSelect\n          v-model=\"row.protocol\"\n          :mode=\"mode\"\n          :options=\"workloadPortOptions\"\n          :multiple=\"false\"\n          :label=\"t('workload.container.ports.protocol')\"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div\n        v-if=\"row._showHost\"\n        class=\"targetPort\"\n      >\n        <LabeledInput\n          ref=\"port\"\n          v-model.number=\"row.hostPort\"\n          :mode=\"mode\"\n          type=\"number\"\n          min=\"1\"\n          max=\"65535\"\n          placeholder=\"e.g. 80\"\n          :label=\"t('workload.container.ports.hostPort')\"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div\n        v-if=\"row._showHost\"\n        class=\"hostip\"\n      >\n        <LabeledInput\n          ref=\"port\"\n          v-model=\"row.hostIP\"\n          :mode=\"mode\"\n          placeholder=\"e.g. 1.1.1.1\"\n          :label=\"t('workload.container.ports.hostIP')\"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div\n        v-if=\"!row._showHost && row._serviceType !== 'LoadBalancer' && row._serviceType !== 'NodePort'\"\n        class=\"add-host\"\n      >\n        <button\n          :disabled=\"mode==='view'\"\n          type=\"button\"\n          class=\"btn btn-sm role-tertiary\"\n          @click=\"row._showHost = true\"\n        >\n          {{ t('workloadPorts.addHost') }}\n        </button>\n      </div>\n\n      <div v-if=\"row._serviceType === 'LoadBalancer' || row._serviceType === 'NodePort'\">\n        <LabeledInput\n          ref=\"port\"\n          v-model.number=\"row._listeningPort\"\n          type=\"number\"\n          :mode=\"mode\"\n          :label=\"t('workload.container.ports.listeningPort')\"\n          :required=\"row._serviceType === 'LoadBalancer' \"\n          @input=\"queueUpdate\"\n        />\n      </div>\n\n      <div v-if=\"showIpam && row._serviceType === 'LoadBalancer' && row.protocol === 'TCP'\">\n        <div v-if=\"idx === ipamIndex\">\n          <LabeledSelect\n            v-model=\"row._ipam\"\n            :mode=\"mode\"\n            :options=\"ipamOptions\"\n            :label=\"t('servicesPage.harvester.ipam.label')\"\n            :disabled=\"mode === 'edit'\"\n            @input=\"queueUpdate\"\n          />\n        </div>\n        <div v-else>\n          <LabeledSelect\n            v-model=\"rows[ipamIndex]._ipam\"\n            :mode=\"mode\"\n            :options=\"ipamOptions\"\n            :label=\"t('servicesPage.harvester.ipam.label')\"\n            :disabled=\"true\"\n            @input=\"queueUpdate\"\n          />\n        </div>\n      </div>\n\n      <div\n        v-if=\"showRemove\"\n        class=\"remove\"\n      >\n        <button\n          type=\"button\"\n          class=\"btn role-link\"\n          @click=\"remove(idx)\"\n        >\n          {{ t('workloadPorts.remove') }}\n        </button>\n      </div>\n    </div>\n    <div\n      v-if=\"showAdd\"\n      class=\"footer\"\n    >\n      <button\n        type=\"button\"\n        class=\"btn role-tertiary add\"\n        @click=\"add()\"\n      >\n        {{ t('workloadPorts.addPort') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n$remove: 75;\n$checkbox: 75;\n\n.title {\n  margin-bottom: 10px;\n\n  .read-from-file {\n    float: right;\n  }\n}\n.ports-headers, .ports-row{\n  display: grid;\n  grid-template-columns: 28% 28% 15% 10% 75px 0.5fr;\n  grid-column-gap: $column-gutter;\n  margin-bottom: 10px;\n  align-items: center;\n  & .port{\n    display: flex;\n    justify-content: space-between;\n  }\n\n  &.show-host{\n    grid-template-columns: 20% 20% 145px 90px 140px .5fr .5fr;\n  }\n\n  &.show-ipam.loadBalancer.tcp{\n    grid-template-columns: 20% 20% 145px 90px .5fr 140px .5fr;\n  }\n\n  &.show-ipam.show-host.loadBalancer{\n    grid-template-columns: 20% 10% 135px 90px 105px .5fr .5fr .5fr;\n  }\n\n  &.show-ipam.show-host.loadBalancer.tcp{\n    grid-template-columns: 12% 10% 135px 90px 105px .5fr .5fr 100px .5fr;\n  }\n}\n\n.add-host {\n  justify-self: center;\n}\n\n.protocol {\n  height: 100%;\n}\n\n.ports-headers {\n  color: var(--input-label);\n}\n\n.toggle-host-ports {\n  color: var(--primary);\n}\n\n.remove BUTTON {\n  padding: 0px;\n}\n\n.ports-row INPUT {\n  height: 50px;\n}\n\n.footer {\n  .protip {\n    float: right;\n    padding: 5px 0;\n  }\n}\n.ports-row .protocol ::v-deep .unlabeled-select,\n.ports-row .protocol ::v-deep .unlabeled-select .v-select {\n  height: 100%;\n}\n.ports-row .protocol ::v-deep .unlabeled-select .vs__dropdown-toggle {\n  padding-top: 12px;\n}\n</style>\n"],"mappings":"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"}]}