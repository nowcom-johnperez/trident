{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cis.cattle.io.clusterscanreport.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cis.cattle.io.clusterscanreport.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVmbGVjdC5jb25zdHJ1Y3QuanMiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iOwppbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zb3J0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9CmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gInVuZGVmaW5lZCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09ICJmdW5jdGlvbiIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9CmltcG9ydCB7IGNvbXBhcmUgfSBmcm9tICdAc2hlbGwvdXRpbHMvc29ydCc7CmltcG9ydCBTdGV2ZU1vZGVsIGZyb20gJ0BzaGVsbC9wbHVnaW5zL3N0ZXZlL3N0ZXZlLWNsYXNzJzsKdmFyIENJU1JlcG9ydCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1N0ZXZlTW9kZWwpIHsKICBfaW5oZXJpdHMoQ0lTUmVwb3J0LCBfU3RldmVNb2RlbCk7CiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDSVNSZXBvcnQpOwogIGZ1bmN0aW9uIENJU1JlcG9ydCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDSVNSZXBvcnQpOwogICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH0KICBfY3JlYXRlQ2xhc3MoQ0lTUmVwb3J0LCBbewogICAga2V5OiAiYWdncmVnYXRlZFRlc3RzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIganNvbiA9IHRoaXMucGFyc2VkUmVwb3J0OwogICAgICB2YXIgcmVzdWx0cyA9IGpzb24gPT09IG51bGwgfHwganNvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDoganNvbi5yZXN1bHRzOwogICAgICB2YXIgZmxhdHRlbmVkID0gcmVzdWx0cyA/IHJlc3VsdHMucmVkdWNlKGZ1bmN0aW9uIChhbGwsIGVhY2gpIHsKICAgICAgICBpZiAoZWFjaC5jaGVja3MpIHsKICAgICAgICAgIGFsbC5wdXNoLmFwcGx5KGFsbCwgX3RvQ29uc3VtYWJsZUFycmF5KGVhY2guY2hlY2tzKSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBhbGw7CiAgICAgIH0sIFtdKSA6IG51bGw7CiAgICAgIHZhciBzb3J0YWJsZUlkID0gZnVuY3Rpb24gc29ydGFibGVJZChpZCkgewogICAgICAgIHJldHVybiAoaWQgfHwgJycpLnNwbGl0KCcuJykubWFwKGZ1bmN0aW9uIChuKSB7CiAgICAgICAgICByZXR1cm4gK24gKyAxMDAwOwogICAgICAgIH0pLmpvaW4oJy4nKTsKICAgICAgfTsKICAgICAgdmFyIHNvcnRhYmxlU3RhdGUgPSBmdW5jdGlvbiBzb3J0YWJsZVN0YXRlKHN0YXRlKSB7CiAgICAgICAgdmFyIFNPUlRfT1JERVIgPSB7CiAgICAgICAgICBvdGhlcjogNywKICAgICAgICAgIG5vdEFwcGxpY2FibGU6IDYsCiAgICAgICAgICBza2lwOiA1LAogICAgICAgICAgcGFzczogNCwKICAgICAgICAgIHdhcm46IDMsCiAgICAgICAgICBtaXhlZDogMiwKICAgICAgICAgIGZhaWw6IDEKICAgICAgICB9OwogICAgICAgIHJldHVybiAiIi5jb25jYXQoU09SVF9PUkRFUltzdGF0ZV0gfHwgU09SVF9PUkRFUlsnb3RoZXInXSwgIiAiKS5jb25jYXQoc3RhdGUpOwogICAgICB9OwogICAgICB2YXIgc29ydGVkID0gZmxhdHRlbmVkLnNsaWNlKCkuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHZhciBzdGF0ZVNvcnQgPSBjb21wYXJlKHNvcnRhYmxlU3RhdGUoYS5zdGF0ZSksIHNvcnRhYmxlU3RhdGUoYi5zdGF0ZSkpOwogICAgICAgIHZhciBpZFNvcnQgPSBjb21wYXJlKHNvcnRhYmxlSWQoYS5pZCksIHNvcnRhYmxlSWQoYi5pZCkpOwogICAgICAgIGlmIChzdGF0ZVNvcnQpIHsKICAgICAgICAgIHJldHVybiBzdGF0ZVNvcnQ7CiAgICAgICAgfQogICAgICAgIHJldHVybiBpZFNvcnQ7CiAgICAgIH0pOwogICAgICByZXR1cm4gc29ydGVkOwogICAgfQogIH0sIHsKICAgIGtleTogIm5vZGVzIiwKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gdGhpcy5wYXJzZWRSZXBvcnQgPyB0aGlzLnBhcnNlZFJlcG9ydC5ub2RlcyA6IHt9OwogICAgfQogIH0sIHsKICAgIGtleTogInBhcnNlZFJlcG9ydCIsCiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgX3RoaXMkc3BlYzsKICAgICAgICB2YXIganNvbiA9IChfdGhpcyRzcGVjID0gdGhpcy5zcGVjKSA9PT0gbnVsbCB8fCBfdGhpcyRzcGVjID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRzcGVjLnJlcG9ydEpTT047CiAgICAgICAgdmFyIHBhcnNlZCA9IEpTT04ucGFyc2UoanNvbik7CiAgICAgICAgcmV0dXJuIHBhcnNlZDsKICAgICAgfSBjYXRjaCAoZSkge30KICAgICAgcmV0dXJuIG51bGw7CiAgICB9CiAgfV0pOwogIHJldHVybiBDSVNSZXBvcnQ7Cn0oU3RldmVNb2RlbCk7CmV4cG9ydCB7IENJU1JlcG9ydCBhcyBkZWZhdWx0IH07"},{"version":3,"names":["compare","SteveModel","CISReport","_SteveModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","json","parsedReport","results","flattened","reduce","all","each","checks","push","_toConsumableArray","sortableId","id","split","map","n","join","sortableState","state","SORT_ORDER","other","notApplicable","skip","pass","warn","mixed","fail","concat","sorted","slice","sort","a","b","stateSort","idSort","nodes","_this$spec","spec","reportJSON","parsed","JSON","parse","e","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cis.cattle.io.clusterscanreport.js"],"sourcesContent":["import { compare } from '@shell/utils/sort';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport default class CISReport extends SteveModel {\n  get aggregatedTests() {\n    const json = this.parsedReport;\n    const results = json?.results;\n\n    const flattened = results ? results.reduce((all, each) => {\n      if (each.checks) {\n        all.push(...each.checks);\n      }\n\n      return all;\n    }, []) : null;\n\n    const sortableId = (id) => (id || '').split('.').map((n) => +n + 1000).join('.');\n    const sortableState = (state) => {\n      const SORT_ORDER = {\n        other:         7,\n        notApplicable: 6,\n        skip:          5,\n        pass:          4,\n        warn:          3,\n        mixed:         2,\n        fail:          1,\n      };\n\n      return `${ SORT_ORDER[state] || SORT_ORDER['other'] } ${ state }`;\n    };\n\n    const sorted = flattened.slice().sort((a, b) => {\n      const stateSort = compare(sortableState(a.state), sortableState(b.state));\n      const idSort = compare(sortableId(a.id), sortableId(b.id));\n\n      if (stateSort) {\n        return stateSort;\n      }\n\n      return idSort;\n    });\n\n    return sorted;\n  }\n\n  get nodes() {\n    return this.parsedReport ? this.parsedReport.nodes : {};\n  }\n\n  get parsedReport() {\n    try {\n      const json = this.spec?.reportJSON;\n\n      const parsed = JSON.parse(json);\n\n      return parsed;\n    } catch (e) {\n    }\n\n    return null;\n  }\n}\n"],"mappings":"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"}]}