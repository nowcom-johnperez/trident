{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PromptRemove.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PromptRemove.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","mapGetters","get","isEmpty","escapeHtml","resourceNames","Card","Checkbox","alternateLabel","uniq","AsyncButton","CATALOG","CATALOG_ANNOTATIONS","LabeledInput","name","components","props","componentTestid","type","String","default","data","resource","$route","params","hasCustomRemove","randomPosition","Math","random","confirmName","error","warning","preventDelete","removeComponent","$store","getters","chartsToRemoveIsApp","chartsDeleteCrd","computed","_objectSpread","names","toRemove","map","obj","nameDisplay","slice","nameToMatchPosition","visibleNames","min","length","randomNamePos","floor","nameToMatch","_this$toRemove$","types","Set","reduce","array","each","push","size","t","count","schema","concat","selfLinks","needsConfirm","first","confirmRemove","plusMore","remaining","doneLocation","_this$toRemove$2","doneLocationRemove","currentRoute","out","id","metadata","_currentRoute$name","idIndex","indexOf","namespace","namespaceIndex","currentRouter","protip","deleteDisabled","confirmFailed","watch","showPromptRemove","show","_this$currentRouter","_selected$spec","selected","APP","spec","chart","annotations","AUTO_INSTALL","$modal","hide","neu","message","preventDeletionMessages","filter","item","preventDeletionMessage","warnDeletionMessages","warnDeletionMessage","methods","close","commit","remove","btnCB","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","_this$$refs","handled","serialRemove","wrap","_callee$","_context","prev","next","cachedDoneLocation","$refs","customPrompt","then","sent","t0","abrupt","undefined","some","removeSerially","parallelRemove","stop","_this2","_callee2","spoofedTypes","_iterator","_step","_callee2$","_context2","getSpoofedTypes","_createForOfIteratorHelper","s","n","done","value","e","f","finish","refreshSpoofedTypes","t1","_this3","_callee3","_callee3$","_context3","bulkRemove","Promise","all","resources","uniqueResourceTypes","_this4","inStore","promises","dispatch","opt","force","root","chartAddCrdToRemove","_this5","_callee4","res","_callee4$","_context4","relatedResourcesToRemove","includes","pop"],"sources":["node_modules/@rancher/shell/components/PromptRemove.vue"],"sourcesContent":["<script>\nimport { mapState, mapGetters } from 'vuex';\nimport { get, isEmpty } from '@shell/utils/object';\nimport { escapeHtml, resourceNames } from '@shell/utils/string';\nimport { Card } from '@components/Card';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { alternateLabel } from '@shell/utils/platform';\nimport { uniq } from '@shell/utils/array';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { CATALOG as CATALOG_ANNOTATIONS } from '@shell/config/labels-annotations';\nimport { CATALOG } from '@shell/config/types';\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\nexport default {\n  name: 'PromptRemove',\n\n  components: {\n    Card, Checkbox, AsyncButton, LabeledInput\n  },\n  props: {\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'prompt-remove'\n    }\n  },\n  data() {\n    const { resource } = this.$route.params;\n\n    return {\n      hasCustomRemove:     false,\n      randomPosition:      Math.random(),\n      confirmName:         '',\n      error:               '',\n      warning:             '',\n      preventDelete:       false,\n      removeComponent:     this.$store.getters['type-map/importCustomPromptRemove'](resource),\n      chartsToRemoveIsApp: false,\n      chartsDeleteCrd:     false\n    };\n  },\n  computed: {\n    names() {\n      return this.toRemove.map((obj) => obj.nameDisplay).slice(0, 5);\n    },\n\n    nameToMatchPosition() {\n      const visibleNames = Math.min(5, this.names.length);\n      const randomNamePos = Math.floor(this.randomPosition * visibleNames);\n\n      return randomNamePos;\n    },\n\n    nameToMatch() {\n      return this.names[this.nameToMatchPosition];\n    },\n\n    type() {\n      const types = new Set(this.toRemove.reduce((array, each) => {\n        array.push(each.type);\n\n        return array;\n      }, []));\n\n      if (types.size > 1) {\n        return this.t('generic.resource', { count: this.toRemove.length });\n      }\n\n      const schema = this.toRemove[0]?.schema;\n\n      if ( !schema ) {\n        return `resource${ this.toRemove.length === 1 ? '' : 's' }`;\n      }\n\n      return this.$store.getters['type-map/labelFor'](schema, this.toRemove.length);\n    },\n\n    selfLinks() {\n      return this.toRemove.map((resource) => {\n        return get(resource, 'links.self');\n      });\n    },\n\n    needsConfirm() {\n      const first = this.toRemove[0];\n\n      return first?.confirmRemove;\n    },\n\n    plusMore() {\n      const remaining = this.toRemove.length - this.names.length;\n\n      return this.t('promptRemove.andOthers', { count: remaining });\n    },\n\n    // if the current route ends with the ID of the resource being deleted, whatever page this is wont be valid after successful deletion: navigate away\n    doneLocation() {\n      // if deleting more than one resource, this is happening in list view and shouldn't redirect anywhere\n      if (this.toRemove.length > 1) {\n        return null;\n      }\n\n      if (this.toRemove[0].doneLocationRemove) {\n        return this.toRemove[0].doneLocationRemove;\n      }\n\n      const currentRoute = this.toRemove[0].currentRoute();\n      const out = {};\n      const params = { ...currentRoute.params };\n\n      if (params.id && (params.id === this.toRemove[0]?.metadata?.name || params.id === this.toRemove[0].id)) {\n        let { name = '' } = currentRoute;\n\n        const idIndex = name.indexOf('-id');\n\n        if (idIndex !== -1) {\n          name = name.slice(0, idIndex);\n        }\n\n        if (params.namespace) {\n          const namespaceIndex = name.indexOf('-namespace');\n\n          if (namespaceIndex !== -1) {\n            name = name.slice(0, namespaceIndex);\n          }\n          delete params.namespace;\n        }\n        delete params.id;\n\n        out.params = params;\n        out.name = name;\n      }\n\n      return out;\n    },\n\n    currentRouter() {\n      // ...don't need a router if there's no route to go to\n      if (!this.doneLocation) {\n        return null;\n      } else {\n        return this.toRemove[0].currentRouter();\n      }\n    },\n\n    protip() {\n      return this.t('promptRemove.protip', { alternateLabel });\n    },\n\n    deleteDisabled() {\n      const confirmFailed = this.needsConfirm && this.confirmName !== this.nameToMatch;\n\n      return this.preventDelete || confirmFailed;\n    },\n\n    ...mapState('action-menu', ['showPromptRemove', 'toRemove']),\n    ...mapGetters({ t: 'i18n/t' }),\n  },\n\n  watch: {\n    showPromptRemove(show) {\n      if (show) {\n        const selected = this.toRemove[0];\n\n        if (this.currentRouter?.currentRoute?.name === 'c-cluster-explorer-tools' &&\n            selected.type === CATALOG.APP &&\n            selected.spec?.chart?.metadata?.annotations[CATALOG_ANNOTATIONS.AUTO_INSTALL]) {\n          this.chartsToRemoveIsApp = true;\n        }\n\n        this.$modal.show('promptRemove');\n\n        let { resource } = this.$route.params;\n\n        if (this.toRemove.length > 0) {\n          resource = selected.type;\n        }\n\n        this.hasCustomRemove = this.$store.getters['type-map/hasCustomPromptRemove'](resource);\n\n        this.removeComponent = this.$store.getters['type-map/importCustomPromptRemove'](resource);\n      } else {\n        this.$modal.hide('promptRemove');\n      }\n    },\n\n    // check for any resources with a deletion prevention message,\n    // if none found (delete is allowed), then check for any resources with a warning message\n    toRemove(neu) {\n      let message;\n      const preventDeletionMessages = neu.filter((item) => item.preventDeletionMessage);\n\n      this.preventDelete = false;\n\n      if (!!preventDeletionMessages.length) {\n        this.preventDelete = true;\n        message = preventDeletionMessages[0].preventDeletionMessage;\n      } else {\n        const warnDeletionMessages = neu.filter((item) => item.warnDeletionMessage);\n\n        if (!!warnDeletionMessages.length) {\n          message = warnDeletionMessages[0].warnDeletionMessage;\n        }\n      }\n      if (typeof message === 'function' ) {\n        this.warning = message(this.toRemove);\n      } else if (!!message) {\n        this.warning = message;\n      } else {\n        this.warning = '';\n      }\n    }\n  },\n\n  methods: {\n    resourceNames,\n    escapeHtml,\n    close() {\n      this.confirmName = '';\n      this.error = '';\n      this.chartsDeleteCrd = false;\n      this.chartsToRemoveIsApp = false;\n      this.$store.commit('action-menu/togglePromptRemove');\n    },\n\n    async remove(btnCB) {\n      if (this.doneLocation) {\n        // doneLocation will recompute to undefined when delete request completes\n        this.cachedDoneLocation = { ...this.doneLocation };\n      }\n\n      if (this.hasCustomRemove && this.$refs?.customPrompt?.remove) {\n        let handled = this.$refs.customPrompt.remove(btnCB);\n\n        // If the response is a promise, then wait for the promise\n        if (handled && handled.then) {\n          try {\n            handled = await handled;\n          } catch (err) {\n            this.error = err;\n            btnCB(false);\n\n            return;\n          }\n        }\n\n        // If the remove function for the custom dialog handled the request, it can return true or not return anything\n        // if it returned false, then it wants us to continue with the deletion logic below - this is useful\n        // where the custom dialog needs to delete additional resources - it handles those and retrurns false to get us\n        // to delete the main resource\n        if (handled === undefined || handled) {\n          return;\n        }\n      }\n      const serialRemove = this.toRemove.some((resource) => resource.removeSerially);\n\n      if (serialRemove) {\n        this.serialRemove(btnCB);\n      } else {\n        this.parallelRemove(btnCB);\n      }\n    },\n    async serialRemove(btnCB) {\n      try {\n        const spoofedTypes = this.getSpoofedTypes(this.toRemove);\n\n        for (const resource of this.toRemove) {\n          await resource.remove();\n        }\n\n        await this.refreshSpoofedTypes(spoofedTypes);\n        this.done();\n      } catch (err) {\n        this.error = err.message || err;\n        btnCB(false);\n      }\n    },\n    async parallelRemove(btnCB) {\n      try {\n        if (typeof this.toRemove[0].bulkRemove !== 'undefined') {\n          await this.toRemove[0].bulkRemove(this.toRemove, {});\n        } else {\n          await Promise.all(this.toRemove.map((resource) => resource.remove()));\n        }\n\n        const spoofedTypes = this.getSpoofedTypes(this.toRemove);\n\n        await this.refreshSpoofedTypes(spoofedTypes);\n\n        this.done();\n      } catch (err) {\n        this.error = err.message || err;\n        btnCB(false);\n      }\n    },\n    done() {\n      if ( this.cachedDoneLocation && !isEmpty(this.cachedDoneLocation) ) {\n        this.currentRouter.push(this.cachedDoneLocation);\n      }\n      this.close();\n    },\n    getSpoofedTypes(resources) {\n      const uniqueResourceTypes = uniq(this.toRemove.map((resource) => resource.type));\n\n      return uniqueResourceTypes.filter(this.$store.getters['type-map/isSpoofed']);\n    },\n\n    // If spoofed we need to reload the values as the server can't have watchers for them.\n    refreshSpoofedTypes(types) {\n      const inStore = this.$store.getters['currentProduct'].inStore;\n      const promises = types.map((type) => this.$store.dispatch(`${ inStore }/findAll`, { type, opt: { force: true } }, { root: true }));\n\n      return Promise.all(promises);\n    },\n\n    async chartAddCrdToRemove() {\n      try {\n        const res = await this.toRemove[0].relatedResourcesToRemove();\n\n        if (!this.toRemove.includes(res)) {\n          this.toRemove.push(res);\n        } else if (!this.chartsDeleteCrd) {\n          this.toRemove.pop(res);\n        }\n      } catch (err) {\n        this.error = err;\n        this.chartsDeleteCrd = false;\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <modal\n    class=\"remove-modal\"\n    name=\"promptRemove\"\n    :width=\"400\"\n    height=\"auto\"\n    styles=\"max-height: 100vh;\"\n    @closed=\"close\"\n  >\n    <Card\n      class=\"prompt-remove\"\n      :show-highlight-border=\"false\"\n    >\n      <h4\n        slot=\"title\"\n        class=\"text-default-text\"\n      >\n        {{ t('promptRemove.title') }}\n      </h4>\n      <div slot=\"body\">\n        <div class=\"mb-10\">\n          <template v-if=\"!hasCustomRemove\">\n            {{ t('promptRemove.attemptingToRemove', { type }) }} <span\n              v-clean-html=\"resourceNames(names, plusMore, t)\"\n            />\n          </template>\n\n          <template>\n            <component\n              :is=\"removeComponent\"\n              v-if=\"hasCustomRemove\"\n              ref=\"customPrompt\"\n              v-model=\"toRemove\"\n              v-bind=\"_data\"\n              :close=\"close\"\n              :needs-confirm=\"needsConfirm\"\n              :value=\"toRemove\"\n              :names=\"names\"\n              :type=\"type\"\n              @errors=\"e => error = e\"\n              @done=\"done\"\n            />\n            <div\n              v-if=\"needsConfirm\"\n              class=\"mt-10\"\n            >\n              <span\n                v-clean-html=\"t('promptRemove.confirmName', { nameToMatch: escapeHtml(nameToMatch) }, true)\"\n              />\n            </div>\n          </template>\n        </div>\n        <LabeledInput\n          v-if=\"needsConfirm\"\n          id=\"confirm\"\n          v-model=\"confirmName\"\n          v-focus\n          :data-testid=\"componentTestid + '-input'\"\n          type=\"text\"\n        >\n          <div class=\"text-warning mb-10 mt-10\">\n            {{ warning }}\n          </div>\n          <div class=\"text-error mb-10 mt-10\">\n            {{ error }}\n          </div>\n          <div\n            v-if=\"!needsConfirm\"\n            class=\"text-info mt-20\"\n          >\n            {{ protip }}\n          </div>\n          <Checkbox\n            v-if=\"chartsToRemoveIsApp\"\n            v-model=\"chartsDeleteCrd\"\n            label-key=\"promptRemoveApp.removeCrd\"\n            class=\"mt-10 type\"\n            @input=\"chartAddCrdToRemove\"\n          />\n        </labeledinput>\n        <template v-else>\n          <div class=\"text-warning mb-10 mt-10\">\n            {{ warning }}\n          </div>\n          <div class=\"text-error mb-10 mt-10\">\n            {{ error }}\n          </div>\n        </template>\n      </div>\n      <template #actions>\n        <button\n          class=\"btn role-secondary\"\n          @click=\"close\"\n        >\n          {{ t('generic.cancel') }}\n        </button>\n        <div class=\"spacer\" />\n        <AsyncButton\n          mode=\"delete\"\n          class=\"btn bg-error ml-10\"\n          :disabled=\"deleteDisabled\"\n          :data-testid=\"componentTestid + '-confirm-button'\"\n          @click=\"remove\"\n        />\n      </template>\n    </Card>\n  </modal>\n</template>\n\n<style lang='scss'>\n  .prompt-remove {\n    &.card-container {\n      box-shadow: none;\n    }\n    #confirm {\n      width: 90%;\n      margin-left: 3px;\n    }\n\n    .remove-modal {\n        border-radius: var(--border-radius);\n        overflow: scroll;\n        max-height: 100vh;\n        & ::-webkit-scrollbar-corner {\n          background: rgba(0,0,0,0);\n        }\n    }\n\n    .actions {\n      text-align: right;\n    }\n\n    .card-actions {\n      display: flex;\n\n      .spacer {\n        flex: 1;\n      }\n    }\n  }\n</style>\n"],"mappings":"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"}]}