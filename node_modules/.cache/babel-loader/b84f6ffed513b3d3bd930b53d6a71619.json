{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/auth/verify.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/pages/auth/verify.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCB7IEdJVEhVQl9DT0RFLCBHSVRIVUJfTk9OQ0UsIEJBQ0tfVE8gfSBmcm9tICdAc2hlbGwvY29uZmlnL3F1ZXJ5LXBhcmFtcyc7CmltcG9ydCB7IGdldCB9IGZyb20gJ0BzaGVsbC91dGlscy9vYmplY3QnOwppbXBvcnQgeyBiYXNlNjREZWNvZGUgfSBmcm9tICdAc2hlbGwvdXRpbHMvY3J5cHRvJzsKaW1wb3J0IGxvYWRQbHVnaW5zIGZyb20gJ0BzaGVsbC9wbHVnaW5zL3BsdWdpbic7CnZhciBzYW1sUHJvdmlkZXJzID0gWydwaW5nJywgJ2FkZnMnLCAna2V5Y2xvYWsnLCAnb2t0YScsICdzaGliYm9sZXRoJ107CmZ1bmN0aW9uIHJlcGx5KGVyciwgY29kZSkgewogIHRyeSB7CiAgICB3aW5kb3cub3BlbmVyLndpbmRvdy5vbkF1dGhUZXN0KGVyciwgY29kZSk7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgd2luZG93LmNsb3NlKCk7CiAgICB9LCAyNTApOwogIH0gY2F0Y2ggKGUpIHsKICAgIHdpbmRvdy5jbG9zZSgpOwogIH0KfQpleHBvcnQgZGVmYXVsdCB7CiAgbGF5b3V0OiAndW5hdXRoZW50aWNhdGVkJywKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goX3JlZikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHN0b3JlLCByb3V0ZSwgcmVkaXJlY3QsIGNvZGUsIHN0YXRlU3RyLCBfcm91dGUkcXVlcnksIGVycm9yLCBlcnJvckRlc2NyaXB0aW9uLCBlcnJvckNvZGUsIGVycm9yTXNnLCBvdXQsIHBhcnNlZCwgX291dCwgX3BhcnNlZCwgdGVzdCwgcHJvdmlkZXIsIG5vbmNlLCByZXMsIGJhY2tUbzsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgc3RvcmUgPSBfcmVmLnN0b3JlLCByb3V0ZSA9IF9yZWYucm91dGUsIHJlZGlyZWN0ID0gX3JlZi5yZWRpcmVjdDsKICAgICAgICAgICAgY29kZSA9IHJvdXRlLnF1ZXJ5W0dJVEhVQl9DT0RFXTsKICAgICAgICAgICAgc3RhdGVTdHIgPSByb3V0ZS5xdWVyeVtHSVRIVUJfTk9OQ0VdOwogICAgICAgICAgICBfcm91dGUkcXVlcnkgPSByb3V0ZS5xdWVyeSwgZXJyb3IgPSBfcm91dGUkcXVlcnkuZXJyb3IsIGVycm9yRGVzY3JpcHRpb24gPSBfcm91dGUkcXVlcnkuZXJyb3JfZGVzY3JpcHRpb24sIGVycm9yQ29kZSA9IF9yb3V0ZSRxdWVyeS5lcnJvckNvZGUsIGVycm9yTXNnID0gX3JvdXRlJHF1ZXJ5LmVycm9yTXNnOwogICAgICAgICAgICBpZiAoIShlcnJvciB8fCBlcnJvckRlc2NyaXB0aW9uIHx8IGVycm9yQ29kZSB8fCBlcnJvck1zZykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBvdXQgPSBlcnJvckRlc2NyaXB0aW9uIHx8IGVycm9yIHx8IGVycm9yQ29kZTsKICAgICAgICAgICAgaWYgKGVycm9yTXNnKSB7CiAgICAgICAgICAgICAgb3V0ID0gc3RvcmUuZ2V0dGVyc1snaTE4bi93aXRoRmFsbGJhY2snXSgibG9naW4uc2VydmVyRXJyb3IuIi5jb25jYXQoZXJyb3JNc2cpLCBudWxsLCBlcnJvck1zZyk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmVkaXJlY3QoIi9hdXRoL2xvZ2luP2Vycj0iLmNvbmNhdChlc2NhcGUob3V0KSkpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDk7CiAgICAgICAgICAgIHBhcnNlZCA9IEpTT04ucGFyc2UoYmFzZTY0RGVjb2RlKHN0YXRlU3RyKSk7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxOTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTM7CiAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oOSk7CiAgICAgICAgICAgIF9vdXQgPSBzdG9yZS5nZXR0ZXJzWydpMThuL3QnXSgibG9naW4uZXJyb3IiKTsKICAgICAgICAgICAgY29uc29sZS5lcnJvcignRmFpbGVkIHRvIHBhcnNlIG5vbmNlJyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQoKICAgICAgICAgICAgcmVkaXJlY3QoIi9hdXRoL2xvZ2luP2Vycj0iLmNvbmNhdChlc2NhcGUoX291dCkpKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CiAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICBfcGFyc2VkID0gcGFyc2VkLCB0ZXN0ID0gX3BhcnNlZC50ZXN0LCBwcm92aWRlciA9IF9wYXJzZWQucHJvdmlkZXIsIG5vbmNlID0gX3BhcnNlZC5ub25jZTsKICAgICAgICAgICAgaWYgKCF0ZXN0KSB7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIyOwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDIyOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjU7CiAgICAgICAgICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaCgnYXV0aC92ZXJpZnlPQXV0aCcsIHsKICAgICAgICAgICAgICBjb2RlOiBjb2RlLAogICAgICAgICAgICAgIG5vbmNlOiBub25jZSwKICAgICAgICAgICAgICBwcm92aWRlcjogcHJvdmlkZXIKICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDI1OgogICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBpZiAoIShyZXMuX3N0YXR1cyA9PT0gMjAwKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzMzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBiYWNrVG8gPSByb3V0ZS5xdWVyeVtCQUNLX1RPXSB8fCAnLyc7IC8vIExvYWQgcGx1Z2lucwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzA7CiAgICAgICAgICAgIHJldHVybiBsb2FkUGx1Z2lucyh7CiAgICAgICAgICAgICAgYXBwOiBzdG9yZS5hcHAsCiAgICAgICAgICAgICAgc3RvcmU6IHN0b3JlLAogICAgICAgICAgICAgICRwbHVnaW46IHN0b3JlLiRwbHVnaW4KICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDMwOgogICAgICAgICAgICByZWRpcmVjdChiYWNrVG8pOwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzQ7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgY2FzZSAzMzoKICAgICAgICAgICAgcmVkaXJlY3QoIi9hdXRoL2xvZ2luP2Vycj0iLmNvbmNhdChlc2NhcGUocmVzKSkpOwogICAgICAgICAgY2FzZSAzNDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM5OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIGNhc2UgMzY6CiAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAzNjsKICAgICAgICAgICAgX2NvbnRleHQudDEgPSBfY29udGV4dFsiY2F0Y2giXSgyMik7CiAgICAgICAgICAgIHJlZGlyZWN0KCIvYXV0aC9sb2dpbj9lcnI9Ii5jb25jYXQoZXNjYXBlKF9jb250ZXh0LnQxKSkpOwogICAgICAgICAgY2FzZSAzOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzksIDEzXSwgWzIyLCAzNl1dKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBzdGF0ZUpTT04gPSB0aGlzLiRyb3V0ZS5xdWVyeVtHSVRIVUJfTk9OQ0VdIHx8ICcnOwogICAgdmFyIHBhcnNlZCA9IHt9OwogICAgdHJ5IHsKICAgICAgcGFyc2VkID0gSlNPTi5wYXJzZShiYXNlNjREZWNvZGUoc3RhdGVKU09OKSk7CiAgICB9IGNhdGNoIChfdW51c2VkKSB7fQogICAgdmFyIF9wYXJzZWQyID0gcGFyc2VkLAogICAgICB0ZXN0ID0gX3BhcnNlZDIudGVzdDsKICAgIHJldHVybiB7CiAgICAgIHRlc3Rpbmc6IHRlc3QKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKHRoaXMudGVzdGluZykgewogICAgICB0cnkgewogICAgICAgIHZhciBfdGhpcyQkcm91dGUkcXVlcnkgPSB0aGlzLiRyb3V0ZS5xdWVyeSwKICAgICAgICAgIHJlc3BFcnJvciA9IF90aGlzJCRyb3V0ZSRxdWVyeS5lcnJvciwKICAgICAgICAgIHJlc3BFcnJvckRlc2NyaXB0aW9uID0gX3RoaXMkJHJvdXRlJHF1ZXJ5LmVycm9yX2Rlc2NyaXB0aW9uLAogICAgICAgICAgY29kZSA9IF90aGlzJCRyb3V0ZSRxdWVyeVtHSVRIVUJfQ09ERV0sCiAgICAgICAgICBlcnJvck1zZyA9IF90aGlzJCRyb3V0ZSRxdWVyeS5lcnJvck1zZzsKICAgICAgICB2YXIgZXJyb3IgPSByZXNwRXJyb3JEZXNjcmlwdGlvbiB8fCByZXNwRXJyb3IgfHwgKCFjb2RlID8gJ05vIGNvZGUgc3VwcGxpZWQgYnkgYXV0aCBwcm92aWRlcicgOiBudWxsKTsKICAgICAgICBpZiAoZXJyb3JNc2cpIHsKICAgICAgICAgIGVycm9yID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snaTE4bi93aXRoRmFsbGJhY2snXSgibG9naW4uc2VydmVyRXJyb3IuIi5jb25jYXQoZXJyb3JNc2cpLCBudWxsLCBlcnJvck1zZyk7CiAgICAgICAgfQogICAgICAgIHJlcGx5KGVycm9yLCBjb2RlKTsKICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIHdpbmRvdy5jbG9zZSgpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB2YXIgcXVlcnkgPSB0aGlzLiRyb3V0ZS5xdWVyeTsKICAgICAgaWYgKHdpbmRvdy5vcGVuZXIpIHsKICAgICAgICB2YXIgY29uZmlnUXVlcnkgPSBnZXQocXVlcnksICdjb25maWcnKTsKICAgICAgICBpZiAoc2FtbFByb3ZpZGVycy5pbmNsdWRlcyhjb25maWdRdWVyeSkpIHsKICAgICAgICAgIGlmICh3aW5kb3cub3BlbmVyLndpbmRvdy5vbkF1dGhUZXN0KSB7CiAgICAgICAgICAgIHJlcGx5KG51bGwsIG51bGwpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVwbHkoewogICAgICAgICAgICAgIGVycjogJ2ZhaWx1cmUnCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["GITHUB_CODE","GITHUB_NONCE","BACK_TO","get","base64Decode","loadPlugins","samlProviders","reply","err","code","window","opener","onAuthTest","setTimeout","close","e","layout","fetch","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","store","route","redirect","stateStr","_route$query","error","errorDescription","errorCode","errorMsg","out","parsed","_out","_parsed","test","provider","nonce","res","backTo","wrap","_callee$","_context","prev","next","query","error_description","getters","concat","escape","abrupt","JSON","parse","t0","console","dispatch","sent","_status","app","$plugin","t1","stop","data","stateJSON","$route","_unused","_parsed2","testing","mounted","_this$$route$query","respError","respErrorDescription","$store","configQuery","includes"],"sources":["node_modules/@rancher/shell/pages/auth/verify.vue"],"sourcesContent":["<script>\nimport { GITHUB_CODE, GITHUB_NONCE, BACK_TO } from '@shell/config/query-params';\nimport { get } from '@shell/utils/object';\nimport { base64Decode } from '@shell/utils/crypto';\nimport loadPlugins from '@shell/plugins/plugin';\n\nconst samlProviders = ['ping', 'adfs', 'keycloak', 'okta', 'shibboleth'];\n\nfunction reply(err, code) {\n  try {\n    window.opener.window.onAuthTest(err, code);\n    setTimeout(() => {\n      window.close();\n    }, 250);\n  } catch (e) {\n    window.close();\n  }\n}\n\nexport default {\n  layout: 'unauthenticated',\n\n  async fetch({ store, route, redirect }) {\n    const code = route.query[GITHUB_CODE];\n    const stateStr = route.query[GITHUB_NONCE];\n    const {\n      error, error_description: errorDescription, errorCode, errorMsg\n    } = route.query;\n\n    if (error || errorDescription || errorCode || errorMsg) {\n      let out = errorDescription || error || errorCode;\n\n      if (errorMsg) {\n        out = store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n      }\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n    let parsed;\n\n    try {\n      parsed = JSON.parse(base64Decode((stateStr)));\n    } catch (err) {\n      const out = store.getters['i18n/t'](`login.error`);\n\n      console.error('Failed to parse nonce'); // eslint-disable-line no-console\n\n      redirect(`/auth/login?err=${ escape(out) }`);\n\n      return;\n    }\n\n    const { test, provider, nonce } = parsed;\n\n    if (test) {\n      return;\n    }\n\n    try {\n      const res = await store.dispatch('auth/verifyOAuth', {\n        code,\n        nonce,\n        provider\n      });\n\n      if ( res._status === 200) {\n        const backTo = route.query[BACK_TO] || '/';\n\n        // Load plugins\n        await loadPlugins({\n          app:     store.app,\n          store,\n          $plugin: store.$plugin\n        });\n\n        redirect(backTo);\n      } else {\n        redirect(`/auth/login?err=${ escape(res) }`);\n      }\n    } catch (err) {\n      redirect(`/auth/login?err=${ escape(err) }`);\n    }\n  },\n\n  data() {\n    const stateJSON = this.$route.query[GITHUB_NONCE] || '';\n\n    let parsed = {};\n\n    try {\n      parsed = JSON.parse(base64Decode(stateJSON));\n    } catch {\n    }\n\n    const { test } = parsed;\n\n    return { testing: test };\n  },\n\n  mounted() {\n    if ( this.testing ) {\n      try {\n        const {\n          error: respError, error_description: respErrorDescription, [GITHUB_CODE]: code, errorMsg\n        } = this.$route.query;\n\n        let error = respErrorDescription || respError || (!code ? 'No code supplied by auth provider' : null);\n\n        if (errorMsg) {\n          error = this.$store.getters['i18n/withFallback'](`login.serverError.${ errorMsg }`, null, errorMsg);\n        }\n\n        reply(error, code );\n      } catch (e) {\n        window.close();\n      }\n    } else {\n      const { query } = this.$route;\n\n      if ( window.opener ) {\n        const configQuery = get(query, 'config');\n\n        if ( samlProviders.includes(configQuery) ) {\n          if ( window.opener.window.onAuthTest ) {\n            reply(null, null);\n          } else {\n            reply({ err: 'failure' });\n          }\n        }\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <main class=\"main-layout\">\n    <h1 class=\"text-center mt-50\">\n      <span v-if=\"testing\">\n        Testing Configuration&hellip;\n      </span>\n      <span v-else>\n        Logging In&hellip;\n      </span>\n    </h1>\n  </main>\n</template>\n"],"mappings":"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"}]}