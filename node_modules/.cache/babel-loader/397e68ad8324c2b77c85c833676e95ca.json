{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cluster.x-k8s.io.machine.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cluster.x-k8s.io.machine.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ADDRESSES","CAPI","NODE","CAPI_LABELS","MACHINE_ROLES","NAME","EXPLORER","listNodeRoles","escapeHtml","insertAt","findBy","get","downloadUrl","SteveModel","notOnlyOfRole","current","all","foundType","isControlPlane","isEtcd","Object","keys","length","_iterator","_createForOfIteratorHelper","_step","_loop","m","value","forEach","type","v","_ret","s","n","done","err","e","f","CapiMachine","_SteveModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","out","_get","_getPrototypeOf","prototype","openSsh","action","enabled","links","shell","isRunning","icon","label","downloadKeys","sshkeys","t","forceRemove","altAction","isRemoveForceable","scaleDown","bulkAction","canScaleDown","bulkable","divider","name","nameDisplay","$dispatch","id","concat","component","attrs","machine","pod","root","toggleForceRemoveModal","resources","undefined","componentProps","_forceMachineRemove","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","machineRef","sent","setAnnotation","FORCE_MACHINE_REMOVE","save","stop","forceMachineRemove","toggleScaleDownModal","modalWidth","_machineRef","_callee2","ref","kind","_callee2$","_context2","spec","infrastructureRef","namespace","toLowerCase","abrupt","clusterName","clusterId","metadata","cluster","$rootGetters","RANCHER_CLUSTER","_this$metadata","labels","DEPLOYMENT_NAME","poolId","poolName","MACHINE_DEPLOYMENT","_this$metadata2","_this$status","_this$cluster","kubeId","status","nodeRef","params","product","resource","_this$cluster2","_this$metadata3","WORKER","CONTROL_PLANE","ETCD","conditions","reasonMessage","reason","_this$pool","canUpdate","pool","machines","isWorker","_this$status2","phase","_this$status3","internal","addresses","find","_ref","INTERNAL_IP","address","_this$status4","external","_ref2","EXTERNAL_IP","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/cluster.x-k8s.io.machine.js"],"sourcesContent":["import { ADDRESSES, CAPI, NODE } from '@shell/config/types';\nimport { CAPI as CAPI_LABELS, MACHINE_ROLES } from '@shell/config/labels-annotations';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport { listNodeRoles } from '@shell/models/cluster/node';\nimport { escapeHtml } from '@shell/utils/string';\nimport { insertAt, findBy } from '@shell/utils/array';\nimport { get } from '@shell/utils/object';\nimport { downloadUrl } from '@shell/utils/download';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\n/**\n * Prevent scaling down control plane or etcd machines to zero\n *\n * @param {machine | machineDeployment} current\n * @param {machine[]} all\n * @returns\n */\nexport function notOnlyOfRole(current, all) {\n  // This is a little overly optimised but avoids iterating over all machines every time\n\n  const foundType = { };\n\n  if (current.isControlPlane) {\n    foundType.isControlPlane = false;\n  }\n  if (current.isEtcd) {\n    foundType.isEtcd = false;\n  }\n  if (Object.keys(foundType).length === 0) {\n    return true; // It's neither type, so can always scale down\n  }\n\n  // If we have more than one of the required types then it's not the last of that type and can be scaled down\n  for (const m of all) {\n    Object.keys(foundType).forEach((type) => {\n      // Have we found this type?\n      if (m[type]) {\n        if (foundType[type]) {\n          // Another of this type exists, we don't need to check for it further\n          delete foundType[type];\n        } else {\n          // Record that we've found type\n          foundType[type] = true;\n        }\n      }\n    });\n\n    // Are there no types left to look for?\n    if (Object.keys(foundType).length === 0) {\n      return true;\n    }\n  }\n\n  return false;\n}\nexport default class CapiMachine extends SteveModel {\n  get _availableActions() {\n    const out = super._availableActions;\n\n    const openSsh = {\n      action:  'openSsh',\n      enabled: !!this.links.shell && this.isRunning,\n      icon:    'icon icon-fw icon-chevron-right',\n      label:   'SSH Shell',\n    };\n    const downloadKeys = {\n      action:  'downloadKeys',\n      enabled: !!this.links.sshkeys,\n      icon:    'icon icon-fw icon-download',\n      label:   this.t('node.actions.downloadSSHKey'),\n    };\n    const forceRemove = {\n      action:    'toggleForceRemoveModal',\n      altAction: 'forceMachineRemove',\n      enabled:   !!this.isRemoveForceable,\n      label:     this.t('node.actions.forceDelete'),\n      icon:      'icon icon-trash',\n    };\n    const scaleDown = {\n      action:     'toggleScaleDownModal',\n      bulkAction: 'toggleScaleDownModal',\n      enabled:    !!this.canScaleDown,\n      icon:       'icon icon-minus icon-fw',\n      label:      this.t('node.actions.scaleDown'),\n      bulkable:   true\n    };\n\n    insertAt(out, 0, { divider: true });\n    insertAt(out, 0, downloadKeys);\n    insertAt(out, 0, openSsh);\n    insertAt(out, 0, scaleDown);\n    insertAt(out, 0, forceRemove);\n\n    return out;\n  }\n\n  get canClone() {\n    return false;\n  }\n\n  openSsh(name) {\n    const label = name || this.nameDisplay;\n\n    this.$dispatch('wm/open', {\n      id:        `${ this.id }-ssh`,\n      label,\n      icon:      'terminal',\n      component: 'MachineSsh',\n      attrs:     { machine: this, pod: {} }\n    }, { root: true });\n  }\n\n  downloadKeys() {\n    downloadUrl(this.links.sshkeys);\n  }\n\n  toggleForceRemoveModal(resources = this) {\n    this.$dispatch('promptModal', {\n      componentProps: { machine: resources },\n      component:      'ForceMachineRemoveDialog'\n    });\n  }\n\n  async forceMachineRemove() {\n    const machine = await this.machineRef();\n\n    machine.setAnnotation(CAPI_LABELS.FORCE_MACHINE_REMOVE, 'true');\n    await machine.save();\n  }\n\n  toggleScaleDownModal(resources = this) {\n    this.$dispatch('promptModal', {\n      resources,\n      component:  'ScaleMachineDownDialog',\n      modalWidth: '450px'\n    });\n  }\n\n  async machineRef() {\n    const ref = this.spec.infrastructureRef;\n    const id = `${ ref.namespace }/${ ref.name }`;\n    const kind = `rke-machine.cattle.io.${ ref.kind.toLowerCase() }`;\n\n    return await this.$dispatch('find', { type: kind, id });\n  }\n\n  get cluster() {\n    if ( !this.spec.clusterName ) {\n      return null;\n    }\n\n    const clusterId = `${ this.metadata.namespace }/${ this.spec.clusterName }`;\n\n    const cluster = this.$rootGetters['management/byId'](CAPI.RANCHER_CLUSTER, clusterId);\n\n    return cluster;\n  }\n\n  get poolName() {\n    return this.metadata?.labels?.[ CAPI_LABELS.DEPLOYMENT_NAME ] || '';\n  }\n\n  get poolId() {\n    const poolId = `${ this.metadata.namespace }/${ this.poolName }`;\n\n    return poolId;\n  }\n\n  get pool() {\n    return this.$rootGetters['management/byId'](CAPI.MACHINE_DEPLOYMENT, this.poolId);\n  }\n\n  get operatingSystem() {\n    return this.metadata?.labels['cattle.io/os'] || 'linux';\n  }\n\n  get kubeNodeDetailLocation() {\n    const kubeId = this.status?.nodeRef?.name;\n    const cluster = this.cluster?.status?.clusterName;\n\n    if ( kubeId && cluster ) {\n      return {\n        name:   'c-cluster-product-resource-id',\n        params: {\n          cluster:  this.cluster.status.clusterName,\n          product:  EXPLORER,\n          resource: NODE,\n          id:       kubeId\n        }\n      };\n    }\n\n    return kubeId;\n  }\n\n  get groupByLabel() {\n    const name = this.cluster?.nameDisplay || this.spec.clusterName;\n\n    return this.$rootGetters['i18n/t']('resourceTable.groupLabel.cluster', { name: escapeHtml(name) });\n  }\n\n  get labels() {\n    return this.metadata?.labels || {};\n  }\n\n  get isWorker() {\n    return `${ this.labels[MACHINE_ROLES.WORKER] }` === 'true';\n  }\n\n  get isControlPlane() {\n    return `${ this.labels[MACHINE_ROLES.CONTROL_PLANE] }` === 'true';\n  }\n\n  get isEtcd() {\n    return `${ this.labels[MACHINE_ROLES.ETCD] }` === 'true';\n  }\n\n  get isRemoveForceable() {\n    const conditions = get(this, 'status.conditions');\n    const reasonMessage = (findBy(conditions, 'type', 'InfrastructureReady') || {}).reason;\n\n    if (reasonMessage === 'DeleteError') {\n      return true;\n    }\n\n    return null;\n  }\n\n  get canScaleDown() {\n    if (!this.canUpdate || !this.pool?.canUpdate) {\n      return false;\n    }\n\n    return notOnlyOfRole(this, this.cluster.machines);\n  }\n\n  get roles() {\n    const { isControlPlane, isWorker, isEtcd } = this;\n\n    return listNodeRoles(isControlPlane, isWorker, isEtcd, this.t('generic.all'));\n  }\n\n  get isRunning() {\n    return this.status?.phase === 'Running';\n  }\n\n  get internalIp() {\n    // This shows in the IP address column for RKE2 nodes in the\n    // list of nodes in the cluster detail page of Cluster Management.\n    const internal = this.status?.addresses?.find(({ type }) => {\n      return type === ADDRESSES.INTERNAL_IP;\n    })?.address;\n\n    if (internal) {\n      return internal;\n    }\n\n    return this.t('generic.none');\n  }\n\n  get externalIp() {\n    const external = this.status?.addresses?.find(({ type }) => {\n      return type === ADDRESSES.EXTERNAL_IP;\n    })?.address;\n\n    if (external) {\n      return external;\n    }\n\n    return this.t('generic.none');\n  }\n}\n"],"mappings":"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"}]}