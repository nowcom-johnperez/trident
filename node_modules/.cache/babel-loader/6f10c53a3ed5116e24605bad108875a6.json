{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/features.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/features.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTUFOQUdFTUVOVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwp2YXIgZGVmaW5pdGlvbnMgPSB7fTsKZXhwb3J0IHZhciBjcmVhdGUgPSBmdW5jdGlvbiBjcmVhdGUobmFtZSwgZGVmKSB7CiAgZGVmaW5pdGlvbnNbbmFtZV0gPSB7CiAgICBkZWY6IGRlZgogIH07CiAgcmV0dXJuIG5hbWU7Cn07CmV4cG9ydCB2YXIgbWFwRmVhdHVyZSA9IGZ1bmN0aW9uIG1hcEZlYXR1cmUobmFtZSkgewogIHJldHVybiB7CiAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLmdldHRlcnNbJ2ZlYXR1cmVzL2dldCddKG5hbWUpOwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgIHRocm93IG5ldyBFcnJvcignVGhlIGZlYXR1cmUgc3RvcmUgb25seSBzdXBwb3J0cyBnZXR0aW5nJyk7CiAgICB9CiAgfTsKfTsKCi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tCi8vIFRoZSBkZWZhdWx0ICgybmQgYXJnKSBpcyB1c2VkIG9ubHkgaWYgdGhlIGZsYWcgaXMgbWlzc2luZyBlbnRpcmVseSBmcm9tIHRoZSBzZXJ2ZXIuCi8vICAgIFRoaXMgaXMgbWFpbmx5IHVzZWZ1bCBmb3IgZGV2ZWxvcG1lbnQgYmVmb3JlIHRoZSBmbGFnIGhhcyBiZWVuIGNyZWF0ZWQgaW4gdGhlIEFQSS4uCgpleHBvcnQgdmFyIE1VTFRJX0NMVVNURVIgPSBjcmVhdGUoJ211bHRpLWNsdXN0ZXItbWFuYWdlbWVudCcsIHRydWUpOwpleHBvcnQgdmFyIExFR0FDWSA9IGNyZWF0ZSgnbGVnYWN5JywgZmFsc2UpOwpleHBvcnQgdmFyIFJLRTIgPSBjcmVhdGUoJ3JrZTInLCB0cnVlKTsKZXhwb3J0IHZhciBVTlNVUFBPUlRFRF9TVE9SQUdFX0RSSVZFUlMgPSBjcmVhdGUoJ3Vuc3VwcG9ydGVkLXN0b3JhZ2UtZHJpdmVycycsIGZhbHNlKTsKZXhwb3J0IHZhciBGTEVFVCA9IGNyZWF0ZSgnY29udGludW91cy1kZWxpdmVyeScsIHRydWUpOwpleHBvcnQgdmFyIEhBUlZFU1RFUiA9IGNyZWF0ZSgnaGFydmVzdGVyJywgdHJ1ZSk7CmV4cG9ydCB2YXIgSEFSVkVTVEVSX0NPTlRBSU5FUiA9IGNyZWF0ZSgnaGFydmVzdGVyLWJhcmVtZXRhbC1jb250YWluZXItd29ya2xvYWQnLCBmYWxzZSk7CgovLyBOb3QgY3VycmVudGx5IHVzZWQuLiBubyBwb2ludCBkZWZpbmluZyBvbmVzIHdlIGRvbid0IHVzZQovLyBleHBvcnQgY29uc3QgRU1CRURERURfQ0xVU1RFUl9BUEkgPSBjcmVhdGUoJ2VtYmVkZGVkLWNsdXN0ZXItYXBpJywgdHJ1ZSk7Ci8vIGV4cG9ydCBjb25zdCBJU1RJT19WSVJUVUFMX1NFUlZJQ0VfVUkgPSBjcmVhdGUoJ2lzdGlvLXZpcnR1YWwtc2VydmljZS11aScsIHRydWUpOwovLyBleHBvcnQgY29uc3QgUFJPVklTSU9OSU5HVjIgPSBjcmVhdGUoJ3Byb3Zpc2lvbmluZ3YyJywgdHJ1ZSk7Ci8vIGV4cG9ydCBjb25zdCBBVVRIID0gY3JlYXRlKCdhdXRoJywgdHJ1ZSk7CgovLyAtLS0tLS0tLS0tLS0tLS0tLS0tLQoKZXhwb3J0IHZhciBnZXR0ZXJzID0gewogIGdldDogZnVuY3Rpb24gZ2V0KHN0YXRlLCBnZXR0ZXJzLCByb290U3RhdGUsIHJvb3RHZXR0ZXJzKSB7CiAgICByZXR1cm4gZnVuY3Rpb24gKG5hbWUpIHsKICAgICAgdmFyIGRlZmluaXRpb24gPSBkZWZpbml0aW9uc1tuYW1lXTsKICAgICAgaWYgKCFkZWZpbml0aW9uKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJVbmtub3duIGZlYXR1cmU6ICIuY29uY2F0KG5hbWUpKTsKICAgICAgfQogICAgICB2YXIgZW50cnkgPSByb290R2V0dGVyc1snbWFuYWdlbWVudC9ieUlkJ10oTUFOQUdFTUVOVC5GRUFUVVJFLCBuYW1lKTsKICAgICAgaWYgKGVudHJ5KSB7CiAgICAgICAgcmV0dXJuIGVudHJ5LmVuYWJsZWQ7CiAgICAgIH0KICAgICAgcmV0dXJuIGRlZmluaXRpb24uZGVmOwogICAgfTsKICB9Cn07CmV4cG9ydCB2YXIgYWN0aW9ucyA9IHsKICBsb2FkU2VydmVyOiBmdW5jdGlvbiBsb2FkU2VydmVyKF9yZWYpIHsKICAgIHZhciByb290R2V0dGVycyA9IF9yZWYucm9vdEdldHRlcnMsCiAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgIGlmIChyb290R2V0dGVyc1snbWFuYWdlbWVudC9jYW5MaXN0J10oTUFOQUdFTUVOVC5GRUFUVVJFKSkgewogICAgICByZXR1cm4gZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsKICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULkZFQVRVUkUKICAgICAgfSwgewogICAgICAgIHJvb3Q6IHRydWUKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["MANAGEMENT","definitions","create","name","def","mapFeature","get","$store","getters","set","value","Error","MULTI_CLUSTER","LEGACY","RKE2","UNSUPPORTED_STORAGE_DRIVERS","FLEET","HARVESTER","HARVESTER_CONTAINER","state","rootState","rootGetters","definition","concat","entry","FEATURE","enabled","actions","loadServer","_ref","dispatch","type","root"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/store/features.js"],"sourcesContent":["import { MANAGEMENT } from '@shell/config/types';\n\nconst definitions = {};\n\nexport const create = function(name, def) {\n  definitions[name] = { def };\n\n  return name;\n};\n\nexport const mapFeature = function(name) {\n  return {\n    get() {\n      return this.$store.getters['features/get'](name);\n    },\n\n    set(value) {\n      throw new Error('The feature store only supports getting');\n    }\n  };\n};\n\n// --------------------\n// The default (2nd arg) is used only if the flag is missing entirely from the server.\n//    This is mainly useful for development before the flag has been created in the API..\n\nexport const MULTI_CLUSTER = create('multi-cluster-management', true);\nexport const LEGACY = create('legacy', false);\nexport const RKE2 = create('rke2', true);\nexport const UNSUPPORTED_STORAGE_DRIVERS = create('unsupported-storage-drivers', false);\nexport const FLEET = create('continuous-delivery', true);\nexport const HARVESTER = create('harvester', true);\nexport const HARVESTER_CONTAINER = create('harvester-baremetal-container-workload', false);\n\n// Not currently used.. no point defining ones we don't use\n// export const EMBEDDED_CLUSTER_API = create('embedded-cluster-api', true);\n// export const ISTIO_VIRTUAL_SERVICE_UI = create('istio-virtual-service-ui', true);\n// export const PROVISIONINGV2 = create('provisioningv2', true);\n// export const AUTH = create('auth', true);\n\n// --------------------\n\nexport const getters = {\n  get: (state, getters, rootState, rootGetters) => (name) => {\n    const definition = definitions[name];\n\n    if (!definition) {\n      throw new Error(`Unknown feature: ${ name }`);\n    }\n\n    const entry = rootGetters['management/byId'](MANAGEMENT.FEATURE, name);\n\n    if ( entry ) {\n      return entry.enabled;\n    }\n\n    return definition.def;\n  },\n};\n\nexport const actions = {\n  loadServer({ rootGetters, dispatch }) {\n    if ( rootGetters['management/canList'](MANAGEMENT.FEATURE) ) {\n      return dispatch('management/findAll', { type: MANAGEMENT.FEATURE }, { root: true });\n    }\n  },\n};\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,qBAAqB;AAEhD,IAAMC,WAAW,GAAG,CAAC,CAAC;AAEtB,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAYC,IAAI,EAAEC,GAAG,EAAE;EACxCH,WAAW,CAACE,IAAI,CAAC,GAAG;IAAEC,GAAG,EAAHA;EAAI,CAAC;EAE3B,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAYF,IAAI,EAAE;EACvC,OAAO;IACLG,GAAG,WAAAA,IAAA,EAAG;MACJ,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,CAACL,IAAI,CAAC;IAClD,CAAC;IAEDM,GAAG,WAAAA,IAACC,KAAK,EAAE;MACT,MAAM,IAAIC,KAAK,CAAC,yCAAyC,CAAC;IAC5D;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;;AAEA,OAAO,IAAMC,aAAa,GAAGV,MAAM,CAAC,0BAA0B,EAAE,IAAI,CAAC;AACrE,OAAO,IAAMW,MAAM,GAAGX,MAAM,CAAC,QAAQ,EAAE,KAAK,CAAC;AAC7C,OAAO,IAAMY,IAAI,GAAGZ,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;AACxC,OAAO,IAAMa,2BAA2B,GAAGb,MAAM,CAAC,6BAA6B,EAAE,KAAK,CAAC;AACvF,OAAO,IAAMc,KAAK,GAAGd,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC;AACxD,OAAO,IAAMe,SAAS,GAAGf,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC;AAClD,OAAO,IAAMgB,mBAAmB,GAAGhB,MAAM,CAAC,wCAAwC,EAAE,KAAK,CAAC;;AAE1F;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,IAAMM,OAAO,GAAG;EACrBF,GAAG,EAAE,SAAAA,IAACa,KAAK,EAAEX,OAAO,EAAEY,SAAS,EAAEC,WAAW;IAAA,OAAK,UAAClB,IAAI,EAAK;MACzD,IAAMmB,UAAU,GAAGrB,WAAW,CAACE,IAAI,CAAC;MAEpC,IAAI,CAACmB,UAAU,EAAE;QACf,MAAM,IAAIX,KAAK,qBAAAY,MAAA,CAAsBpB,IAAI,CAAG,CAAC;MAC/C;MAEA,IAAMqB,KAAK,GAAGH,WAAW,CAAC,iBAAiB,CAAC,CAACrB,UAAU,CAACyB,OAAO,EAAEtB,IAAI,CAAC;MAEtE,IAAKqB,KAAK,EAAG;QACX,OAAOA,KAAK,CAACE,OAAO;MACtB;MAEA,OAAOJ,UAAU,CAAClB,GAAG;IACvB,CAAC;EAAA;AACH,CAAC;AAED,OAAO,IAAMuB,OAAO,GAAG;EACrBC,UAAU,WAAAA,WAAAC,IAAA,EAA4B;IAAA,IAAzBR,WAAW,GAAAQ,IAAA,CAAXR,WAAW;MAAES,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAChC,IAAKT,WAAW,CAAC,oBAAoB,CAAC,CAACrB,UAAU,CAACyB,OAAO,CAAC,EAAG;MAC3D,OAAOK,QAAQ,CAAC,oBAAoB,EAAE;QAAEC,IAAI,EAAE/B,UAAU,CAACyB;MAAQ,CAAC,EAAE;QAAEO,IAAI,EAAE;MAAK,CAAC,CAAC;IACrF;EACF;AACF,CAAC"}]}