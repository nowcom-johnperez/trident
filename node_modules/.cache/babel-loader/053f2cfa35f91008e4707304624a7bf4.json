{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/getters.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/getters.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isArray","BY_TYPE","lookup","NAMESPACE","SCHEMA","COUNT","UI","SteveModel","HybridModel","cleanHybridResources","NormanModel","urlFor","normalizeType","pAndNFiltering","parse","STEVE_MODEL_TYPES","NORMAN","STEVE","GC_IGNORE_TYPES","_defineProperty","NAV_LINK","urlOptions","url","opt","parsedUrl","isSteve","path","startsWith","filter","concat","includes","keys","Object","forEach","key","vals","filterStrings","map","val","encodeURI","urlEnding","charAt","length","nextStringConnector","join","namespaceProjectFilter","checkAndCreateParam","_opt","Array","excludeFields","_toConsumableArray","excludeParamsString","field","limit","sortBy","orderBy","sortOrder","state","getters","type","id","namespaced","isApplicable","parts","split","defaultModel","obj","which","config","modelBaseClass","_obj$type","_obj$type2","classify","rootState","_obj$metadata","customModel","namespace","metadata","name","_obj$type3","_obj$type4","cleanResource","existing","data","_Object$getPrototypeO","counts","_objectSpread","typeSuperClass","getPrototypeOf","constructor","podsByNamespace","list","gcIgnoreTypes","currentGeneration","cache","types","generation"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/getters.js"],"sourcesContent":["import { isArray } from '@shell/utils/array';\nimport { BY_TYPE } from '@shell/plugins/dashboard-store/classify';\nimport { lookup } from '@shell/plugins/dashboard-store/model-loader';\nimport { NAMESPACE, SCHEMA, COUNT, UI } from '@shell/config/types';\n\nimport SteveModel from './steve-class';\nimport HybridModel, { cleanHybridResources } from './hybrid-class';\nimport NormanModel from './norman-class';\nimport { urlFor } from '@shell/plugins/dashboard-store/getters';\nimport { normalizeType } from '@shell/plugins/dashboard-store/normalize';\nimport pAndNFiltering from '@shell/utils/projectAndNamespaceFiltering.utils';\nimport { parse } from '@shell/utils/url';\n\nexport const STEVE_MODEL_TYPES = {\n  NORMAN:  'norman',\n  STEVE:   'steve',\n  BY_TYPE: 'byType'\n};\n\nconst GC_IGNORE_TYPES = {\n  [COUNT]:       true,\n  [NAMESPACE]:   true,\n  [SCHEMA]:      true,\n  [UI.NAV_LINK]: true,\n};\n\nexport default {\n  urlOptions: () => (url, opt) => {\n    opt = opt || {};\n    const parsedUrl = parse(url);\n    const isSteve = parsedUrl.path.startsWith('/v1');\n\n    // Filter\n    if ( opt.filter ) {\n      url += `${ (url.includes('?') ? '&' : '?') }`;\n      const keys = Object.keys(opt.filter);\n\n      keys.forEach((key) => {\n        let vals = opt.filter[key];\n\n        if ( !isArray(vals) ) {\n          vals = [vals];\n        }\n\n        // Steve's filter options now support more complex filtering not yet implemented here #9341\n        if (isSteve) {\n          url += `${ (url.includes('filter=') ? '&' : 'filter=') }`;\n        }\n\n        const filterStrings = vals.map((val) => {\n          return `${ encodeURI(key) }=${ encodeURI(val) }`;\n        });\n        const urlEnding = url.charAt(url.length - 1);\n        const nextStringConnector = ['&', '?', '='].includes(urlEnding) ? '' : '&';\n\n        url += `${ nextStringConnector }${ filterStrings.join('&') }`;\n      });\n    }\n\n    // `opt.namespaced` is either\n    // - a string representing a single namespace - add restriction to the url\n    // - an array of namespaces or projects - add restriction as a param\n    const namespaceProjectFilter = pAndNFiltering.checkAndCreateParam(opt);\n\n    if (namespaceProjectFilter) {\n      url += `${ (url.includes('?') ? '&' : '?') + namespaceProjectFilter }`;\n    }\n    // End: Filter\n\n    // Exclude\n    // excludeFields should be an array of strings representing the paths of the fields to exclude\n    // only works on Steve but is ignored without error by Norman\n    if (isSteve) {\n      if (Array.isArray(opt?.excludeFields)) {\n        opt.excludeFields = [...opt.excludeFields, 'metadata.managedFields'];\n      } else {\n        opt.excludeFields = ['metadata.managedFields'];\n      }\n      const excludeParamsString = opt.excludeFields.map((field) => `exclude=${ field }`).join('&');\n\n      url += `${ url.includes('?') ? '&' : '?' }${ excludeParamsString }`;\n    }\n    // End: Exclude\n\n    // Limit\n    const limit = opt.limit;\n\n    if ( limit ) {\n      url += `${ url.includes('?') ? '&' : '?' }limit=${ limit }`;\n    }\n    // End: Limit\n\n    // Sort\n    // Steve's sort options supports multi-column sorting and column specific sort orders, not implemented yet #9341\n    const sortBy = opt.sortBy;\n    const orderBy = opt.sortOrder;\n\n    if ( sortBy ) {\n      if (isSteve) {\n        url += `${ url.includes('?') ? '&' : '?' }sort=${ (orderBy === 'desc' ? '-' : '') + encodeURI(sortBy) }`;\n      } else {\n        url += `${ url.includes('?') ? '&' : '?' }sort=${ encodeURI(sortBy) }`;\n        if ( orderBy ) {\n          url += `${ url.includes('?') ? '&' : '?' }order=${ encodeURI(orderBy) }`;\n        }\n      }\n    }\n\n    // End: Sort\n\n    return url;\n  },\n\n  urlFor: (state, getters) => (type, id, opt) => {\n    let url = urlFor(state, getters)(type, id, opt);\n\n    // `namespaced` is either\n    // - a string representing a single namespace - add restriction to the url\n    // - an array of namespaces or projects - add restriction as a param\n    if (opt?.namespaced && !pAndNFiltering.isApplicable(opt)) {\n      const parts = url.split('/');\n\n      url = `${ parts.join('/') }/${ opt.namespaced }`;\n    }\n\n    return url;\n  },\n\n  defaultModel: (state) => (obj) => {\n    const which = state.config.modelBaseClass || STEVE_MODEL_TYPES.BY_TYPE.STEVE;\n\n    if ( which === STEVE_MODEL_TYPES.BY_TYPE ) {\n      if ( obj?.type?.startsWith('management.cattle.io.') || obj?.type?.startsWith('project.cattle.io.')) {\n        return HybridModel;\n      } else {\n        return SteveModel;\n      }\n    } else if ( which === STEVE_MODEL_TYPES.NORMAN ) {\n      return NormanModel;\n    } else {\n      return SteveModel;\n    }\n  },\n\n  classify: (state, getters, rootState) => (obj) => {\n    const customModel = lookup(state.config.namespace, obj?.type, obj?.metadata?.name, rootState);\n\n    if (customModel) {\n      return customModel;\n    }\n\n    const which = state.config.modelBaseClass || BY_TYPE;\n\n    if ( which === BY_TYPE ) {\n      if ( obj?.type?.startsWith('management.cattle.io.') || obj?.type?.startsWith('project.cattle.io.')) {\n        return HybridModel;\n      } else {\n        return SteveModel;\n      }\n    } else if ( which === STEVE_MODEL_TYPES.NORMAN ) {\n      return NormanModel;\n    } else {\n      return SteveModel;\n    }\n  },\n\n  cleanResource: () => (existing, data) => {\n    /**\n   * Resource counts are contained within a single 'count' resource with a 'counts' field that is a map of resource types\n   * When counts are updated through the websocket, only the resources that changed are sent so we can't load the new 'count' resource into the store as we would another resource\n   */\n    if (data?.type === COUNT && existing) {\n      data.counts = { ...existing.counts, ...data.counts };\n\n      return data;\n    }\n\n    // If the existing model has a cleanResource method, use it\n    if (existing?.cleanResource && typeof existing.cleanResource === 'function') {\n      return existing.cleanResource(data);\n    }\n\n    const typeSuperClass = Object.getPrototypeOf(Object.getPrototypeOf(existing))?.constructor;\n\n    return typeSuperClass === HybridModel ? cleanHybridResources(data) : data;\n  },\n\n  // Return all the pods for a given namespace\n  podsByNamespace: (state) => (namespace) => {\n    const map = state.podsByNamespace[namespace];\n\n    return map?.list || [];\n  },\n\n  gcIgnoreTypes: () => {\n    return GC_IGNORE_TYPES;\n  },\n\n  currentGeneration: (state) => (type) => {\n    type = normalizeType(type);\n\n    const cache = state.types[type];\n\n    if ( !cache ) {\n      return null;\n    }\n\n    return cache.generation;\n  },\n\n};\n"],"mappings":"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"}]}