{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/provisioning.cattle.io.cluster.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/list/provisioning.cattle.io.cluster.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgeyBCYW5uZXIgfSBmcm9tICdAY29tcG9uZW50cy9CYW5uZXInOwppbXBvcnQgUmVzb3VyY2VUYWJsZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9SZXNvdXJjZVRhYmxlJzsKaW1wb3J0IE1hc3RoZWFkIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL1Jlc291cmNlTGlzdC9NYXN0aGVhZCc7CmltcG9ydCB7IGFsbEhhc2ggfSBmcm9tICdAc2hlbGwvdXRpbHMvcHJvbWlzZSc7CmltcG9ydCB7IENBUEksIE1BTkFHRU1FTlQsIFNOQVBTSE9ULCBOT1JNQU4gfSBmcm9tICdAc2hlbGwvY29uZmlnL3R5cGVzJzsKaW1wb3J0IHsgTU9ERSwgX0lNUE9SVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgZmlsdGVyT25seUt1YmVybmV0ZXNDbHVzdGVycywgZmlsdGVySGlkZGVuTG9jYWxDbHVzdGVyIH0gZnJvbSAnQHNoZWxsL3V0aWxzL2NsdXN0ZXInOwppbXBvcnQgeyBtYXBGZWF0dXJlLCBIQVJWRVNURVIgYXMgSEFSVkVTVEVSX0ZFQVRVUkUgfSBmcm9tICdAc2hlbGwvc3RvcmUvZmVhdHVyZXMnOwppbXBvcnQgeyBOQU1FIGFzIEVYUExPUkVSIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9wcm9kdWN0L2V4cGxvcmVyJzsKaW1wb3J0IFJlc291cmNlRmV0Y2ggZnJvbSAnQHNoZWxsL21peGlucy9yZXNvdXJjZS1mZXRjaCc7CmltcG9ydCB7IEJhZGdlU3RhdGUgfSBmcm9tICdAY29tcG9uZW50cy9CYWRnZVN0YXRlJzsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEJhbm5lcjogQmFubmVyLAogICAgUmVzb3VyY2VUYWJsZTogUmVzb3VyY2VUYWJsZSwKICAgIE1hc3RoZWFkOiBNYXN0aGVhZCwKICAgIEJhZGdlU3RhdGU6IEJhZGdlU3RhdGUKICB9LAogIG1peGluczogW1Jlc291cmNlRmV0Y2hdLAogIHByb3BzOiB7CiAgICBsb2FkSW5kZXRlcm1pbmF0ZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGluY3JlbWVudGFsTG9hZGluZ0luZGljYXRvcjogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHVzZVF1ZXJ5UGFyYW1zRm9yU2ltcGxlRmlsdGVyaW5nOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBmZXRjaDogZnVuY3Rpb24gZmV0Y2goKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGhhc2gsIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX3RoaXMuJGluaXRpYWxpemVGZXRjaERhdGEoQ0FQSS5SQU5DSEVSX0NMVVNURVIpOwogICAgICAgICAgICBoYXNoID0gewogICAgICAgICAgICAgIHJhbmNoZXJDbHVzdGVyczogX3RoaXMuJGZldGNoVHlwZShDQVBJLlJBTkNIRVJfQ0xVU1RFUiksCiAgICAgICAgICAgICAgbm9ybWFuQ2x1c3RlcnM6IF90aGlzLiRmZXRjaFR5cGUoTk9STUFOLkNMVVNURVIsIFtdLCAncmFuY2hlcicpLAogICAgICAgICAgICAgIG1nbXRDbHVzdGVyczogX3RoaXMuJGZldGNoVHlwZShNQU5BR0VNRU5ULkNMVVNURVIpCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGlmIChfdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9jYW5MaXN0J10oU05BUFNIT1QpKSB7CiAgICAgICAgICAgICAgaGFzaC5ldGNkU25hcHNob3RzID0gX3RoaXMuJGZldGNoVHlwZShTTkFQU0hPVCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKF90aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2Nhbkxpc3QnXShDQVBJLk1BQ0hJTkUpKSB7CiAgICAgICAgICAgICAgaGFzaC5jYXBpTWFjaGluZXMgPSBfdGhpcy4kZmV0Y2hUeXBlKENBUEkuTUFDSElORSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKF90aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2Nhbkxpc3QnXShNQU5BR0VNRU5ULk5PREUpKSB7CiAgICAgICAgICAgICAgaGFzaC5tZ210Tm9kZXMgPSBfdGhpcy4kZmV0Y2hUeXBlKE1BTkFHRU1FTlQuTk9ERSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKF90aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2Nhbkxpc3QnXShNQU5BR0VNRU5ULk5PREVfUE9PTCkpIHsKICAgICAgICAgICAgICBoYXNoLm1nbXRQb29scyA9IF90aGlzLiRmZXRjaFR5cGUoTUFOQUdFTUVOVC5OT0RFX1BPT0wpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChfdGhpcy4kc3RvcmUuZ2V0dGVyc1snbWFuYWdlbWVudC9jYW5MaXN0J10oTUFOQUdFTUVOVC5OT0RFX1RFTVBMQVRFKSkgewogICAgICAgICAgICAgIGhhc2gubWdtdFRlbXBsYXRlcyA9IF90aGlzLiRmZXRjaFR5cGUoTUFOQUdFTUVOVC5OT0RFX1RFTVBMQVRFKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoX3RoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvY2FuTGlzdCddKENBUEkuTUFDSElORV9ERVBMT1lNRU5UKSkgewogICAgICAgICAgICAgIGhhc2gubWFjaGluZURlcGxveW1lbnRzID0gX3RoaXMuJGZldGNoVHlwZShDQVBJLk1BQ0hJTkVfREVQTE9ZTUVOVCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIC8vIEZldGNoIFJLRSB0ZW1wbGF0ZSByZXZpc2lvbnMgc28gd2UgY2FuIHNob3cgd2hlbiBhbiB1cGRhdGVkIHRlbXBsYXRlIGlzIGF2YWlsYWJsZQogICAgICAgICAgICAvLyBUaGlzIHJlcXVlc3QgZG9lcyBub3QgbmVlZCB0byBiZSBibG9ja2luZwogICAgICAgICAgICBpZiAoX3RoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvY2FuTGlzdCddKE1BTkFHRU1FTlQuUktFX1RFTVBMQVRFX1JFVklTSU9OKSkgewogICAgICAgICAgICAgIF90aGlzLiRmZXRjaFR5cGUoTUFOQUdFTUVOVC5SS0VfVEVNUExBVEVfUkVWSVNJT04pOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgcmV0dXJuIGFsbEhhc2goaGFzaCk7CiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfdGhpcy5tZ210Q2x1c3RlcnMgPSByZXMubWdtdENsdXN0ZXJzOwogICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc291cmNlOiBDQVBJLlJBTkNIRVJfQ0xVU1RFUiwKICAgICAgc2NoZW1hOiB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L3NjaGVtYUZvciddKENBUEkuUkFOQ0hFUl9DTFVTVEVSKSwKICAgICAgbWdtdENsdXN0ZXJzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBmaWx0ZXJlZFJvd3M6IGZ1bmN0aW9uIGZpbHRlcmVkUm93cygpIHsKICAgICAgLy8gSWYgSGFydmVzdGVyIGZlYXR1cmUgaXMgZW5hYmxlZCwgaGlkZSBIYXJ2ZXN0ZXIgQ2x1c3RlcnMKICAgICAgaWYgKHRoaXMuaGFydmVzdGVyRW5hYmxlZCkgewogICAgICAgIHJldHVybiBmaWx0ZXJIaWRkZW5Mb2NhbENsdXN0ZXIoZmlsdGVyT25seUt1YmVybmV0ZXNDbHVzdGVycyh0aGlzLnJvd3MsIHRoaXMuJHN0b3JlKSwgdGhpcy4kc3RvcmUpOwogICAgICB9CgogICAgICAvLyBPdGhlcndpc2UsIHNob3cgSGFydmVzdGVyIGNsdXN0ZXJzIC0gdGhlc2Ugd2lsbCBiZSBzaG93biB3aXRoIGEgd2FybmluZwogICAgICByZXR1cm4gZmlsdGVySGlkZGVuTG9jYWxDbHVzdGVyKHRoaXMucm93cywgdGhpcy4kc3RvcmUpOwogICAgfSwKICAgIGhpZGRlbkhhcnZlc3RlckNvdW50OiBmdW5jdGlvbiBoaWRkZW5IYXJ2ZXN0ZXJDb3VudCgpIHsKICAgICAgdmFyIHByb2R1Y3QgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50UHJvZHVjdCddOwogICAgICB2YXIgaXNFeHBsb3JlciA9IChwcm9kdWN0ID09PSBudWxsIHx8IHByb2R1Y3QgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHByb2R1Y3QubmFtZSkgPT09IEVYUExPUkVSOwoKICAgICAgLy8gRG9uJ3Qgc2hvdyBIYXJ2ZXN0ZXIgYmFubmVyIG1lc3NhZ2Ugb24gdGhlIGNsdXN0ZXIgbWFuYWdlbWVudCBwYWdlIG9yIGlmIEhhcnZlc3RlciBpZiBub3QgZW5hYmxlZAogICAgICBpZiAoIWlzRXhwbG9yZXIgfHwgIXRoaXMuaGFydmVzdGVyRW5hYmxlZCkgewogICAgICAgIHJldHVybiAwOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnJvd3MubGVuZ3RoIC0gZmlsdGVyT25seUt1YmVybmV0ZXNDbHVzdGVycyh0aGlzLnJvd3MsIHRoaXMuJHN0b3JlKS5sZW5ndGg7CiAgICB9LAogICAgY3JlYXRlTG9jYXRpb246IGZ1bmN0aW9uIGNyZWF0ZUxvY2F0aW9uKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICdjLWNsdXN0ZXItcHJvZHVjdC1yZXNvdXJjZS1jcmVhdGUnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgcHJvZHVjdDogdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudFByb2R1Y3QnXS5uYW1lLAogICAgICAgICAgcmVzb3VyY2U6IHRoaXMucmVzb3VyY2UKICAgICAgICB9CiAgICAgIH07CiAgICB9LAogICAgaW1wb3J0TG9jYXRpb246IGZ1bmN0aW9uIGltcG9ydExvY2F0aW9uKCkgewogICAgICByZXR1cm4gewogICAgICAgIG5hbWU6ICdjLWNsdXN0ZXItcHJvZHVjdC1yZXNvdXJjZS1jcmVhdGUnLAogICAgICAgIHBhcmFtczogewogICAgICAgICAgcHJvZHVjdDogdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudFByb2R1Y3QnXS5uYW1lLAogICAgICAgICAgcmVzb3VyY2U6IHRoaXMucmVzb3VyY2UKICAgICAgICB9LAogICAgICAgIHF1ZXJ5OiBfZGVmaW5lUHJvcGVydHkoe30sIE1PREUsIF9JTVBPUlQpCiAgICAgIH07CiAgICB9LAogICAgY2FuSW1wb3J0OiBmdW5jdGlvbiBjYW5JbXBvcnQoKSB7CiAgICAgIHZhciBzY2hlbWEgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L3NjaGVtYUZvciddKENBUEkuUkFOQ0hFUl9DTFVTVEVSKTsKICAgICAgcmV0dXJuICEhKHNjaGVtYSAhPT0gbnVsbCAmJiBzY2hlbWEgIT09IHZvaWQgMCAmJiBzY2hlbWEuY29sbGVjdGlvbk1ldGhvZHMuZmluZChmdW5jdGlvbiAoeCkgewogICAgICAgIHJldHVybiB4LnRvTG93ZXJDYXNlKCkgPT09ICdwb3N0JzsKICAgICAgfSkpOwogICAgfSwKICAgIGhhcnZlc3RlckVuYWJsZWQ6IG1hcEZlYXR1cmUoSEFSVkVTVEVSX0ZFQVRVUkUpLAogICAgbm9uU3RhbmRhcmROYW1lc3BhY2VzOiBmdW5jdGlvbiBub25TdGFuZGFyZE5hbWVzcGFjZXMoKSB7CiAgICAgIC8vIFNob3cgdGhlIG5hbWVzcGFjZSBncm91cGluZyBvcHRpb24gaWYgdGhlcmUncyBjbHVzdGVycyB3aXRoIG5hbWVzcGFjZXMgb3RoZXIgdGhhbiAnZmxlZXQtZGVmYXVsdCcgb3IgJ2ZsZWV0LWxvY2FsJwogICAgICAvLyBUaGlzIHdpbGwgYmUgdXNlZCB3aGVuIHRoZXJlJ3MgY2x1c3RlcnMgZnJvbSBleHRlbnNpb24gYmFzZWQgcHJvdmlzaW9uZXJzCiAgICAgIC8vIFdlIHNob3VsZCByZS12aXNpdCB0aGlzIGZvciBzY2FsaW5nIHJlYXNvbnMKICAgICAgcmV0dXJuIHRoaXMuZmlsdGVyZWRSb3dzLnNvbWUoZnVuY3Rpb24gKGMpIHsKICAgICAgICByZXR1cm4gYy5tZXRhZGF0YS5uYW1lc3BhY2UgIT09ICdmbGVldC1sb2NhbCcgJiYgYy5tZXRhZGF0YS5uYW1lc3BhY2UgIT09ICdmbGVldC1kZWZhdWx0JzsKICAgICAgfSk7CiAgICB9CiAgfSwKICAkbG9hZGluZ1Jlc291cmNlczogZnVuY3Rpb24gJGxvYWRpbmdSZXNvdXJjZXMoKSB7CiAgICAvLyByZXN1bHRzIGFyZSBmaWx0ZXJlZCBzbyB3ZSB3b3VsZG4ndCBnZXQgdGhlIGNvcnJlY3QgY291bnQgb24gaW5kaWNhdG9yLi4uCiAgICByZXR1cm4gewogICAgICBsb2FkSW5kZXRlcm1pbmF0ZTogdHJ1ZQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB3aW5kb3cuYyA9IHRoaXM7CiAgfQp9Ow=="},{"version":3,"names":["Banner","ResourceTable","Masthead","allHash","CAPI","MANAGEMENT","SNAPSHOT","NORMAN","MODE","_IMPORT","filterOnlyKubernetesClusters","filterHiddenLocalCluster","mapFeature","HARVESTER","HARVESTER_FEATURE","NAME","EXPLORER","ResourceFetch","BadgeState","components","mixins","props","loadIndeterminate","type","Boolean","default","incrementalLoadingIndicator","useQueryParamsForSimpleFiltering","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","hash","res","wrap","_callee$","_context","prev","next","$initializeFetchData","RANCHER_CLUSTER","rancherClusters","$fetchType","normanClusters","CLUSTER","mgmtClusters","$store","getters","etcdSnapshots","MACHINE","capiMachines","NODE","mgmtNodes","NODE_POOL","mgmtPools","NODE_TEMPLATE","mgmtTemplates","MACHINE_DEPLOYMENT","machineDeployments","RKE_TEMPLATE_REVISION","sent","stop","data","resource","schema","computed","filteredRows","harvesterEnabled","rows","hiddenHarvesterCount","product","isExplorer","name","length","createLocation","params","importLocation","query","_defineProperty","canImport","collectionMethods","find","x","toLowerCase","nonStandardNamespaces","some","c","metadata","namespace","$loadingResources","mounted","window"],"sources":["node_modules/@rancher/shell/list/provisioning.cattle.io.cluster.vue"],"sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Masthead from '@shell/components/ResourceList/Masthead';\nimport { allHash } from '@shell/utils/promise';\nimport { CAPI, MANAGEMENT, SNAPSHOT, NORMAN } from '@shell/config/types';\nimport { MODE, _IMPORT } from '@shell/config/query-params';\nimport { filterOnlyKubernetesClusters, filterHiddenLocalCluster } from '@shell/utils/cluster';\nimport { mapFeature, HARVESTER as HARVESTER_FEATURE } from '@shell/store/features';\nimport { NAME as EXPLORER } from '@shell/config/product/explorer';\nimport ResourceFetch from '@shell/mixins/resource-fetch';\nimport { BadgeState } from '@components/BadgeState';\n\nexport default {\n  components: {\n    Banner, ResourceTable, Masthead, BadgeState\n  },\n  mixins: [ResourceFetch],\n  props:  {\n    loadIndeterminate: {\n      type:    Boolean,\n      default: false\n    },\n\n    incrementalLoadingIndicator: {\n      type:    Boolean,\n      default: false\n    },\n\n    useQueryParamsForSimpleFiltering: {\n      type:    Boolean,\n      default: false\n    }\n  },\n\n  async fetch() {\n    this.$initializeFetchData(CAPI.RANCHER_CLUSTER);\n    const hash = {\n      rancherClusters: this.$fetchType(CAPI.RANCHER_CLUSTER),\n      normanClusters:  this.$fetchType(NORMAN.CLUSTER, [], 'rancher'),\n      mgmtClusters:    this.$fetchType(MANAGEMENT.CLUSTER),\n    };\n\n    if ( this.$store.getters['management/canList'](SNAPSHOT) ) {\n      hash.etcdSnapshots = this.$fetchType(SNAPSHOT);\n    }\n\n    if ( this.$store.getters['management/canList'](CAPI.MACHINE) ) {\n      hash.capiMachines = this.$fetchType(CAPI.MACHINE);\n    }\n\n    if ( this.$store.getters['management/canList'](MANAGEMENT.NODE) ) {\n      hash.mgmtNodes = this.$fetchType(MANAGEMENT.NODE);\n    }\n\n    if ( this.$store.getters['management/canList'](MANAGEMENT.NODE_POOL) ) {\n      hash.mgmtPools = this.$fetchType(MANAGEMENT.NODE_POOL);\n    }\n\n    if ( this.$store.getters['management/canList'](MANAGEMENT.NODE_TEMPLATE) ) {\n      hash.mgmtTemplates = this.$fetchType(MANAGEMENT.NODE_TEMPLATE);\n    }\n\n    if ( this.$store.getters['management/canList'](CAPI.MACHINE_DEPLOYMENT) ) {\n      hash.machineDeployments = this.$fetchType(CAPI.MACHINE_DEPLOYMENT);\n    }\n\n    // Fetch RKE template revisions so we can show when an updated template is available\n    // This request does not need to be blocking\n    if ( this.$store.getters['management/canList'](MANAGEMENT.RKE_TEMPLATE_REVISION) ) {\n      this.$fetchType(MANAGEMENT.RKE_TEMPLATE_REVISION);\n    }\n\n    const res = await allHash(hash);\n\n    this.mgmtClusters = res.mgmtClusters;\n  },\n\n  data() {\n    return {\n      resource:     CAPI.RANCHER_CLUSTER,\n      schema:       this.$store.getters['management/schemaFor'](CAPI.RANCHER_CLUSTER),\n      mgmtClusters: [],\n    };\n  },\n\n  computed: {\n    filteredRows() {\n      // If Harvester feature is enabled, hide Harvester Clusters\n      if (this.harvesterEnabled) {\n        return filterHiddenLocalCluster(filterOnlyKubernetesClusters(this.rows, this.$store), this.$store);\n      }\n\n      // Otherwise, show Harvester clusters - these will be shown with a warning\n      return filterHiddenLocalCluster(this.rows, this.$store);\n    },\n\n    hiddenHarvesterCount() {\n      const product = this.$store.getters['currentProduct'];\n      const isExplorer = product?.name === EXPLORER;\n\n      // Don't show Harvester banner message on the cluster management page or if Harvester if not enabled\n      if (!isExplorer || !this.harvesterEnabled) {\n        return 0;\n      }\n\n      return this.rows.length - filterOnlyKubernetesClusters(this.rows, this.$store).length;\n    },\n\n    createLocation() {\n      return {\n        name:   'c-cluster-product-resource-create',\n        params: {\n          product:  this.$store.getters['currentProduct'].name,\n          resource: this.resource\n        },\n      };\n    },\n\n    importLocation() {\n      return {\n        name:   'c-cluster-product-resource-create',\n        params: {\n          product:  this.$store.getters['currentProduct'].name,\n          resource: this.resource\n        },\n        query: { [MODE]: _IMPORT }\n      };\n    },\n\n    canImport() {\n      const schema = this.$store.getters['management/schemaFor'](CAPI.RANCHER_CLUSTER);\n\n      return !!schema?.collectionMethods.find((x) => x.toLowerCase() === 'post');\n    },\n\n    harvesterEnabled: mapFeature(HARVESTER_FEATURE),\n\n    nonStandardNamespaces() {\n      // Show the namespace grouping option if there's clusters with namespaces other than 'fleet-default' or 'fleet-local'\n      // This will be used when there's clusters from extension based provisioners\n      // We should re-visit this for scaling reasons\n      return this.filteredRows.some((c) => c.metadata.namespace !== 'fleet-local' && c.metadata.namespace !== 'fleet-default');\n    }\n  },\n\n  $loadingResources() {\n    // results are filtered so we wouldn't get the correct count on indicator...\n    return { loadIndeterminate: true };\n  },\n\n  mounted() {\n    window.c = this;\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"hiddenHarvesterCount\"\n      color=\"info\"\n      :label=\"t('cluster.harvester.clusterWarning', {count: hiddenHarvesterCount} )\"\n    />\n\n    <Masthead\n      :schema=\"schema\"\n      :resource=\"resource\"\n      :create-location=\"createLocation\"\n      component-testid=\"cluster-manager-list\"\n      :show-incremental-loading-indicator=\"incrementalLoadingIndicator\"\n      :load-resources=\"loadResources\"\n      :load-indeterminate=\"loadIndeterminate\"\n    >\n      <template\n        v-if=\"canImport\"\n        slot=\"extraActions\"\n      >\n        <n-link\n          :to=\"importLocation\"\n          class=\"btn role-primary mr-10\"\n          data-testid=\"cluster-manager-list-import\"\n        >\n          {{ t('cluster.importAction') }}\n        </n-link>\n      </template>\n    </Masthead>\n\n    <ResourceTable\n      :schema=\"schema\"\n      :rows=\"filteredRows\"\n      :namespaced=\"nonStandardNamespaces\"\n      :loading=\"loading\"\n      :use-query-params-for-simple-filtering=\"useQueryParamsForSimpleFiltering\"\n      :data-testid=\"'cluster-list'\"\n      :force-update-live-and-delayed=\"forceUpdateLiveAndDelayed\"\n    >\n      <!-- Why are state column and subrow overwritten here? -->\n      <!-- for rke1 clusters, where they try to use the mgmt cluster stateObj instead of prov cluster stateObj,  -->\n      <!-- updates were getting lost. This isn't performant as normal columns, but the list shouldn't grow -->\n      <!-- big enough for the performance to matter -->\n      <template #cell:state=\"{row}\">\n        <BadgeState\n          :color=\"row.stateBackground\"\n          :label=\"row.stateDisplay\"\n        />\n      </template>\n      <template #sub-row=\"{fullColspan, row, keyField, componentTestid, i, onRowMouseEnter, onRowMouseLeave}\">\n        <tr\n          v-if=\"row.stateDescription\"\n          :key=\"row[keyField] + '-description'\"\n          :data-testid=\"componentTestid + '-' + i + '-row-description'\"\n          class=\"state-description sub-row\"\n          @mouseenter=\"onRowMouseEnter\"\n          @mouseleave=\"onRowMouseLeave\"\n        >\n          <td>&nbsp;</td>\n          <td\n            :colspan=\"fullColspan - 1\"\n            :class=\"{ 'text-error' : row.stateObj.error }\"\n          >\n            {{ row.stateDescription }}\n          </td>\n        </tr>\n      </template>\n      <template #cell:summary=\"{row}\">\n        <span v-if=\"!row.stateParts.length\">{{ row.nodes.length }}</span>\n      </template>\n      <template #cell:explorer=\"{row}\">\n        <n-link\n          v-if=\"row.mgmt && row.mgmt.isReady && !row.hasError\"\n          data-testid=\"cluster-manager-list-explore-management\"\n          class=\"btn btn-sm role-secondary\"\n          :to=\"{name: 'c-cluster', params: {cluster: row.mgmt.id}}\"\n        >\n          {{ t('cluster.explore') }}\n        </n-link>\n        <button\n          v-else\n          data-testid=\"cluster-manager-list-explore\"\n          :disabled=\"true\"\n          class=\"btn btn-sm role-secondary\"\n        >\n          {{ t('cluster.explore') }}\n        </button>\n      </template>\n    </ResourceTable>\n  </div>\n</template>\n"],"mappings":"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"}]}