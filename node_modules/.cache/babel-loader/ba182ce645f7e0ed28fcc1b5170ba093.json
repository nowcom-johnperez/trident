{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ValueFromResource.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ValueFromResource.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CONFIG_MAP","SECRET","NAMESPACE","get","_VIEW","LabeledSelect","LabeledInput","components","props","mode","type","String","default","value","Object","_default","valueFrom","allConfigMaps","Array","allSecrets","namespaced","Boolean","loading","data","typeOpts","label","resourceKeyOpts","secretRef","configMapRef","keys","refName","name","fieldPath","referenced","key","valStr","containerName","resource","filter","metadata","push","apply","_toConsumableArray","prefix","concat","secrets","computed","isView","namespaces","map","$store","getters","inStore","sourceOptions","_this","_map$metadata","includes","namespace","secret","_secret$metadata","needsSource","sourceLabel","out","t","nameLabel","extraColumn","watch","neu","old","_neu$metadata","updateRow","methods","_this$name","_this$refName","length","$emit","_defineProperty","optional","divisor","apiVersion"],"sources":["node_modules/@rancher/shell/components/form/ValueFromResource.vue"],"sourcesContent":["<script>\nimport { CONFIG_MAP, SECRET, NAMESPACE } from '@shell/config/types';\nimport { get } from '@shell/utils/object';\nimport { _VIEW } from '@shell/config/query-params';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\n\nexport default {\n  components: {\n    LabeledSelect,\n    LabeledInput\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n    value: {\n      type:    Object,\n      default: () => {\n        return { valueFrom: {} };\n      }\n    },\n    allConfigMaps: {\n      type:    Array,\n      default: () => []\n    },\n    allSecrets: {\n      type:    Array,\n      default: () => []\n    },\n    // filter resource options by namespace(s) selected in top nav\n    namespaced: {\n      type:    Boolean,\n      default: true\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n  },\n\n  data() {\n    const typeOpts = [\n      { value: 'simple', label: 'Key/Value Pair' },\n      { value: 'resourceFieldRef', label: 'Resource' },\n      { value: 'configMapKeyRef', label: 'ConfigMap Key' },\n      { value: 'secretKeyRef', label: 'Secret key' },\n      { value: 'fieldRef', label: 'Pod Field' },\n      { value: 'secretRef', label: 'Secret' },\n      { value: 'configMapRef', label: 'ConfigMap' },\n    ];\n\n    const resourceKeyOpts = ['limits.cpu', 'limits.ephemeral-storage', 'limits.memory', 'requests.cpu', 'requests.ephemeral-storage', 'requests.memory'];\n    let type;\n\n    if (this.value.secretRef) {\n      type = 'secretRef';\n    } else if (this.value.configMapRef) {\n      type = 'configMapRef';\n    } else if (this.value.value) {\n      type = 'simple';\n    } else if (this.value.valueFrom) {\n      type = Object.keys((this.value.valueFrom))[0] || 'simple';\n    }\n\n    let refName;\n    let name;\n    let fieldPath;\n    let referenced;\n    let key;\n    let valStr;\n    const keys = [];\n\n    switch (type) {\n    case 'resourceFieldRef':\n      name = this.value.name;\n      refName = this.value.valueFrom[type].containerName;\n      key = this.value.valueFrom[type].resource || '';\n      break;\n    case 'configMapKeyRef':\n      name = this.value.name;\n      key = this.value.valueFrom[type].key || '';\n      refName = this.value.valueFrom[type].name;\n      referenced = this.allConfigMaps.filter((resource) => {\n        return resource.metadata.name === refName;\n      })[0];\n      if (referenced && referenced.data) {\n        keys.push(...Object.keys(referenced.data));\n      }\n      break;\n    case 'secretRef':\n    case 'configMapRef':\n      name = this.value.prefix;\n      refName = this.value[type].name;\n      break;\n    case 'secretKeyRef':\n      name = this.value.name;\n      key = this.value.valueFrom[type].key || '';\n      refName = this.value.valueFrom[type].name;\n      referenced = this.allSecrets.filter((resource) => {\n        return resource.metadata.name === refName;\n      })[0];\n      if (referenced && referenced.data) {\n        keys.push(...Object.keys(referenced.data));\n      }\n      break;\n    case 'fieldRef':\n      fieldPath = get(this.value.valueFrom, `${ type }.fieldPath`) || '';\n      name = this.value.name;\n      break;\n    default:\n      name = this.value.name;\n      valStr = this.value.value;\n      break;\n    }\n\n    return {\n      typeOpts, type, refName, referenced: refName, secrets: this.allSecrets, keys, key, fieldPath, name, resourceKeyOpts, valStr\n    };\n  },\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    namespaces() {\n      if (this.namespaced) {\n        const map = this.$store.getters.namespaces();\n\n        return Object.keys(map).filter((key) => map[key]);\n      } else {\n        const inStore = this.$store.getters['currentStore'](NAMESPACE);\n\n        return this.$store.getters[`${ inStore }/all`](NAMESPACE);\n      }\n    },\n\n    sourceOptions() {\n      if (this.type === 'configMapKeyRef' || this.type === 'configMapRef') {\n        return this.allConfigMaps.filter((map) => this.namespaces.includes(map?.metadata?.namespace));\n      } else if (this.type === 'secretRef' || this.type === 'secretKeyRef') {\n        return this.allSecrets.filter((secret) => this.namespaces.includes(secret?.metadata?.namespace));\n      } else {\n        return [];\n      }\n    },\n\n    needsSource() {\n      return this.type !== 'simple' && this.type !== 'resourceFieldRef' && this.type !== 'fieldRef' && !!this.type;\n    },\n\n    sourceLabel() {\n      let out;\n      const { type } = this;\n\n      if (!type) {\n        return;\n      }\n\n      switch (type) {\n      case 'secretKeyRef':\n      case 'secretRef':\n        out = 'workload.container.command.fromResource.secret';\n        break;\n      case 'configMapKeyRef':\n      case 'configMapRef':\n        out = 'workload.container.command.fromResource.configMap';\n        break;\n      default:\n        out = 'workload.container.command.fromResource.source.label';\n      }\n\n      return this.t(out);\n    },\n\n    nameLabel() {\n      if (this.type === 'configMapRef' || this.type === 'secretRef') {\n        return this.t('workload.container.command.fromResource.prefix');\n      } else {\n        return this.t('workload.container.command.fromResource.name.label');\n      }\n    },\n\n    extraColumn() {\n      return ['resourceFieldRef', 'configMapKeyRef', 'secretKeyRef'].includes(this.type);\n    },\n  },\n\n  watch: {\n    type() {\n      this.referenced = null;\n      this.key = '';\n      this.refName = '';\n      this.keys = [];\n      this.key = '';\n      this.valStr = '';\n      this.fieldPath = '';\n    },\n\n    referenced(neu, old) {\n      if (neu) {\n        if ((neu.type === SECRET || neu.type === CONFIG_MAP) && neu.data) {\n          this.keys = Object.keys(neu.data);\n        }\n        this.refName = neu?.metadata?.name;\n      }\n      this.updateRow();\n    },\n  },\n\n  methods: {\n    updateRow() {\n      if (!this.name?.length && !this.refName?.length) {\n        if (this.type !== 'fieldRef') {\n          this.$emit('input', null);\n\n          return;\n        }\n      }\n      let out = { name: this.name || this.refName };\n\n      switch (this.type) {\n      case 'configMapKeyRef':\n      case 'secretKeyRef':\n        out.valueFrom = {\n          [this.type]: {\n            key: this.key, name: this.refName, optional: false\n          }\n        };\n        break;\n      case 'resourceFieldRef':\n        out.valueFrom = {\n          [this.type]: {\n            containerName: this.refName, divisor: 1, resource: this.key\n          }\n        };\n        break;\n      case 'fieldRef':\n        if (!this.fieldPath || !this.fieldPath.length) {\n          out = null; break;\n        }\n        out.valueFrom = { [this.type]: { apiVersion: 'v1', fieldPath: this.fieldPath } };\n        break;\n      case 'simple':\n        out.value = this.valStr;\n        break;\n      default:\n        delete out.name;\n        out.prefix = this.name;\n        out[this.type] = { name: this.refName, optional: false };\n      }\n      this.$emit('input', out);\n    },\n    get\n  }\n};\n</script>\n\n<template>\n  <div class=\"var-row\">\n    <div class=\"type\">\n      <LabeledSelect\n        v-model=\"type\"\n        :mode=\"mode\"\n        :multiple=\"false\"\n        :options=\"typeOpts\"\n        option-label=\"label\"\n        :searchable=\"false\"\n        :reduce=\"e=>e.value\"\n        :label=\"t('workload.container.command.fromResource.type')\"\n        @input=\"updateRow\"\n      />\n    </div>\n\n    <div class=\"name\">\n      <LabeledInput\n        v-model=\"name\"\n        :label=\"nameLabel\"\n        :placeholder=\"t('workload.container.command.fromResource.name.placeholder')\"\n        :mode=\"mode\"\n        @input=\"updateRow\"\n      />\n    </div>\n\n    <div\n      v-if=\"type==='simple'\"\n      class=\"single-value\"\n    >\n      <LabeledInput\n        v-model=\"valStr\"\n        :label=\"t('workload.container.command.fromResource.value.label')\"\n        :placeholder=\"t('workload.container.command.fromResource.value.placeholder')\"\n        :mode=\"mode\"\n        @input=\"updateRow\"\n      />\n    </div>\n\n    <template v-else-if=\"needsSource\">\n      <div :class=\"{'single-value': type === 'configMapRef' || type === 'secretRef'}\">\n        <LabeledSelect\n          v-model=\"referenced\"\n          :options=\"sourceOptions\"\n          :multiple=\"false\"\n          :get-option-label=\"opt=>get(opt, 'metadata.name') || opt\"\n          :get-option-key=\"opt=>opt.id|| opt\"\n          :mode=\"mode\"\n          :label=\"sourceLabel\"\n          :loading=\"loading\"\n        />\n      </div>\n      <div v-if=\"type!=='secretRef' && type!== 'configMapRef'\">\n        <LabeledSelect\n          v-model=\"key\"\n          :multiple=\"false\"\n          :options=\"keys\"\n          :mode=\"mode\"\n          option-label=\"label\"\n          :label=\"t('workload.container.command.fromResource.key.label')\"\n          :loading=\"loading\"\n          @input=\"updateRow\"\n        />\n      </div>\n    </template>\n\n    <template v-else-if=\"type==='resourceFieldRef'\">\n      <div>\n        <LabeledInput\n          v-model=\"refName\"\n          :label=\"t('workload.container.command.fromResource.containerName')\"\n          :placeholder=\"t('workload.container.command.fromResource.source.placeholder')\"\n          :mode=\"mode\"\n          @input=\"updateRow\"\n        />\n      </div>\n      <div>\n        <LabeledSelect\n          v-model=\"key\"\n          :label=\"t('workload.container.command.fromResource.key.label')\"\n          :multiple=\"false\"\n          :options=\"resourceKeyOpts\"\n          :mode=\"mode\"\n          :searchable=\"false\"\n          :placeholder=\"t('workload.container.command.fromResource.key.placeholder', null, true)\"\n          @input=\"updateRow\"\n        />\n      </div>\n    </template>\n\n    <template v-else>\n      <div class=\"single-value\">\n        <LabeledInput\n          v-model=\"fieldPath\"\n          :placeholder=\"t('workload.container.command.fromResource.key.placeholder', null, true)\"\n          :label=\"t('workload.container.command.fromResource.key.label')\"\n          :mode=\"mode\"\n          @input=\"updateRow\"\n        />\n      </div>\n    </template>\n    <div class=\"remove\">\n      <button\n        v-if=\"!isView\"\n        type=\"button\"\n        class=\"btn role-link\"\n        @click.stop=\"$emit('remove')\"\n      >\n        {{ t('generic.remove') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.var-row{\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 100px;\n  grid-column-gap: 20px;\n  margin-bottom: 10px;\n  align-items: center;\n\n  .single-value {\n    grid-column: span 2;\n  }\n\n  .remove BUTTON {\n    padding: 0px;\n  }\n}\n\n</style>\n"],"mappings":"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"}]}