{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/ScaleMachineDownDialog.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/dialog/ScaleMachineDownDialog.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CAPI","CAPI_LABELS","GenericPrompt","components","props","resources","type","Array","required","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","Promise","all","$store","dispatch","MACHINE_DEPLOYMENT","MACHINE","stop","data","allToDelete","isArray","cluster","_this$deleteType","deleteType","_this$deleteType2","_slicedToArray","ignoredControlPlane","safeControlePlaneMachinesToDelete","_this$deleteType3","_this$deleteType4","ignoredEtcd","safeMachinesToDelete","ignored","filter","i","getters","schema","length","config","title","t","applyMode","applyAction","remove","methods","allToDeleteByType","reduce","res","m","typed","push","others","totalTypes","machines","typesToDelete","ignoredType","pop","undefined","concat","_toConsumableArray","_this2","_callee2","poolInfo","flatArray","_callee2$","_context2","set","pool","get","Map","from","entries","map","_ref","_ref2","setAnnotation","DELETE_MACHINE","save","then","scalePool"],"sources":["node_modules/@rancher/shell/dialog/ScaleMachineDownDialog.vue"],"sourcesContent":["<script>\nimport { CAPI as CAPI_LABELS } from '@shell/config/labels-annotations';\nimport { CAPI } from '@shell/config/types';\nimport GenericPrompt from './GenericPrompt';\n\nexport default {\n  components: { GenericPrompt },\n\n  props: {\n    resources: {\n      type:     Array,\n      required: true\n    }\n  },\n\n  async fetch() {\n    await Promise.all([\n      this.$store.dispatch('management/findAll', { type: CAPI.MACHINE_DEPLOYMENT }),\n      this.$store.dispatch('management/findAll', { type: CAPI.MACHINE })\n    ]);\n  },\n\n  data() {\n    const allToDelete = Array.isArray(this.resources) ? this.resources : [this.resources];\n    const cluster = allToDelete[0].cluster;\n\n    // Not all machines can be deleted, there must always be at least one left for roles control plane and etcd\n    // First ensure that at least one control plane exists... and then check from the remaining machines that at least one etcd exists\n    // This isn't optimisied, there may be cases that retaining a single machine with both roles would be better than retaining two with single roles\n    const [ignoredControlPlane, safeControlePlaneMachinesToDelete] = this.deleteType('isControlPlane', allToDelete, cluster);\n    const [ignoredEtcd, safeMachinesToDelete] = this.deleteType('isEtcd', safeControlePlaneMachinesToDelete, cluster);\n    const ignored = [ignoredControlPlane, ignoredEtcd].filter((i) => !!i);\n\n    return {\n      cluster,\n      allToDelete,\n      safeMachinesToDelete,\n      ignored,\n      type:   this.$store.getters['type-map/labelFor'](allToDelete[0].schema, allToDelete.length),\n      config: {\n        title:       this.t('promptRemove.title'),\n        applyMode:   'delete',\n        applyAction: this.remove,\n      }\n    };\n  },\n\n  methods: {\n    deleteType(type, allToDelete, cluster) {\n      const allToDeleteByType = allToDelete.reduce((res, m) => {\n        if (m[type]) {\n          res.typed.push(m);\n        } else {\n          res.others.push(m);\n        }\n\n        return res;\n      }, { typed: [], others: [] });\n\n      const totalTypes = cluster.machines.filter((m) => m[type]).length;\n      const typesToDelete = allToDeleteByType.typed.length;\n      // If we're attempting to remove all control plan machines.... ignore one\n      const ignoredType = totalTypes - typesToDelete === 0 ? allToDeleteByType.typed.pop() : undefined;\n      const safeMachinesToDelete = [...allToDeleteByType.typed, ...allToDeleteByType.others];\n\n      return [ignoredType, safeMachinesToDelete];\n    },\n\n    async remove() {\n      // Group machines into pools\n      const poolInfo = this.safeMachinesToDelete.reduce((res, m) => {\n        res.set(m.pool, res.get(m.pool) || []);\n        res.get(m.pool).push(m);\n\n        return res;\n      }, new Map());\n\n      // Mark all machines for deletion and then scale down their pool to the new size\n      const flatArray = Array.from(poolInfo.entries());\n\n      await Promise.all(flatArray.map(([pool, machines]) => {\n        return Promise\n          .all(machines.map((m) => {\n            m.setAnnotation(CAPI_LABELS.DELETE_MACHINE, 'true');\n\n            return m.save();\n          }))\n          .then(() => pool.scalePool(-machines.length, false));\n      }));\n\n      // Pool scale info is kept in the cluster itself, so now we've made the changes we can save them\n      await this.cluster.save();\n    }\n  }\n};\n</script>\n\n<template>\n  <GenericPrompt\n    v-bind=\"config\"\n    @close=\"$emit('close')\"\n  >\n    <template slot=\"body\">\n      <div class=\"pl-10 pr-10 mt-20 mb-20 body\">\n        <div v-if=\"allToDelete.length === 1\">\n          {{ t('promptRemove.attemptingToRemove', { type }) }} <b>{{ safeMachinesToDelete[0].name }}</b>\n        </div>\n        <div v-else>\n          {{ t('promptScaleMachineDown.attemptingToRemove', { type, count: allToDelete.length }, true) }}\n        </div>\n        <div\n          v-if=\"ignored.length\"\n          class=\"retained-machine\"\n        >\n          <span class=\"mb-20\">{{ t('promptScaleMachineDown.retainedMachine1') }}</span>\n          <span\n            v-for=\"i in ignored\"\n            :key=\"i.name\"\n            v-clean-html=\"t('promptScaleMachineDown.retainedMachine2', { name: i.name }, true)\"\n          />\n        </div>\n      </div>\n    </template>\n  </GenericPrompt>\n</template>\n\n<style lang='scss' scoped>\n  .body {\n    div:not(:last-of-type) {\n      padding-bottom: 15px;\n    }\n    .retained-machine {\n      display: flex;\n      flex-direction: column;\n    }\n  }\n</style>\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAAAA,IAAA,IAAAC,WAAA;AACA,SAAAD,IAAA;AACA,OAAAE,aAAA;AAEA;EACAC,UAAA;IAAAD,aAAA,EAAAA;EAAA;EAEAE,KAAA;IACAC,SAAA;MACAC,IAAA,EAAAC,KAAA;MACAC,QAAA;IACA;EACA;EAEAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;MAAA,OAAAF,kBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAC,OAAA,CAAAC,GAAA,EACAX,KAAA,CAAAY,MAAA,CAAAC,QAAA;cAAAjB,IAAA,EAAAN,IAAA,CAAAwB;YAAA,IACAd,KAAA,CAAAY,MAAA,CAAAC,QAAA;cAAAjB,IAAA,EAAAN,IAAA,CAAAyB;YAAA,GACA;UAAA;UAAA;YAAA,OAAAR,QAAA,CAAAS,IAAA;QAAA;MAAA,GAAAZ,OAAA;IAAA;EACA;EAEAa,IAAA,WAAAA,KAAA;IACA,IAAAC,WAAA,GAAArB,KAAA,CAAAsB,OAAA,MAAAxB,SAAA,SAAAA,SAAA,SAAAA,SAAA;IACA,IAAAyB,OAAA,GAAAF,WAAA,IAAAE,OAAA;;IAEA;IACA;IACA;IACA,IAAAC,gBAAA,QAAAC,UAAA,mBAAAJ,WAAA,EAAAE,OAAA;MAAAG,iBAAA,GAAAC,cAAA,CAAAH,gBAAA;MAAAI,mBAAA,GAAAF,iBAAA;MAAAG,iCAAA,GAAAH,iBAAA;IACA,IAAAI,iBAAA,QAAAL,UAAA,WAAAI,iCAAA,EAAAN,OAAA;MAAAQ,iBAAA,GAAAJ,cAAA,CAAAG,iBAAA;MAAAE,WAAA,GAAAD,iBAAA;MAAAE,oBAAA,GAAAF,iBAAA;IACA,IAAAG,OAAA,IAAAN,mBAAA,EAAAI,WAAA,EAAAG,MAAA,WAAAC,CAAA;MAAA,SAAAA,CAAA;IAAA;IAEA;MACAb,OAAA,EAAAA,OAAA;MACAF,WAAA,EAAAA,WAAA;MACAY,oBAAA,EAAAA,oBAAA;MACAC,OAAA,EAAAA,OAAA;MACAnC,IAAA,OAAAgB,MAAA,CAAAsB,OAAA,sBAAAhB,WAAA,IAAAiB,MAAA,EAAAjB,WAAA,CAAAkB,MAAA;MACAC,MAAA;QACAC,KAAA,OAAAC,CAAA;QACAC,SAAA;QACAC,WAAA,OAAAC;MACA;IACA;EACA;EAEAC,OAAA;IACArB,UAAA,WAAAA,WAAA1B,IAAA,EAAAsB,WAAA,EAAAE,OAAA;MACA,IAAAwB,iBAAA,GAAA1B,WAAA,CAAA2B,MAAA,WAAAC,GAAA,EAAAC,CAAA;QACA,IAAAA,CAAA,CAAAnD,IAAA;UACAkD,GAAA,CAAAE,KAAA,CAAAC,IAAA,CAAAF,CAAA;QACA;UACAD,GAAA,CAAAI,MAAA,CAAAD,IAAA,CAAAF,CAAA;QACA;QAEA,OAAAD,GAAA;MACA;QAAAE,KAAA;QAAAE,MAAA;MAAA;MAEA,IAAAC,UAAA,GAAA/B,OAAA,CAAAgC,QAAA,CAAApB,MAAA,WAAAe,CAAA;QAAA,OAAAA,CAAA,CAAAnD,IAAA;MAAA,GAAAwC,MAAA;MACA,IAAAiB,aAAA,GAAAT,iBAAA,CAAAI,KAAA,CAAAZ,MAAA;MACA;MACA,IAAAkB,WAAA,GAAAH,UAAA,GAAAE,aAAA,SAAAT,iBAAA,CAAAI,KAAA,CAAAO,GAAA,KAAAC,SAAA;MACA,IAAA1B,oBAAA,MAAA2B,MAAA,CAAAC,kBAAA,CAAAd,iBAAA,CAAAI,KAAA,GAAAU,kBAAA,CAAAd,iBAAA,CAAAM,MAAA;MAEA,QAAAI,WAAA,EAAAxB,oBAAA;IACA;IAEAY,MAAA,WAAAA,OAAA;MAAA,IAAAiB,MAAA;MAAA,OAAA1D,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAyD,SAAA;QAAA,IAAAC,QAAA,EAAAC,SAAA;QAAA,OAAA5D,kBAAA,CAAAG,IAAA,UAAA0D,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxD,IAAA,GAAAwD,SAAA,CAAAvD,IAAA;YAAA;cACA;cACAoD,QAAA,GAAAF,MAAA,CAAA7B,oBAAA,CAAAe,MAAA,WAAAC,GAAA,EAAAC,CAAA;gBACAD,GAAA,CAAAmB,GAAA,CAAAlB,CAAA,CAAAmB,IAAA,EAAApB,GAAA,CAAAqB,GAAA,CAAApB,CAAA,CAAAmB,IAAA;gBACApB,GAAA,CAAAqB,GAAA,CAAApB,CAAA,CAAAmB,IAAA,EAAAjB,IAAA,CAAAF,CAAA;gBAEA,OAAAD,GAAA;cACA,OAAAsB,GAAA,KAEA;cACAN,SAAA,GAAAjE,KAAA,CAAAwE,IAAA,CAAAR,QAAA,CAAAS,OAAA;cAAAN,SAAA,CAAAvD,IAAA;cAAA,OAEAC,OAAA,CAAAC,GAAA,CAAAmD,SAAA,CAAAS,GAAA,WAAAC,IAAA;gBAAA,IAAAC,KAAA,GAAAjD,cAAA,CAAAgD,IAAA;kBAAAN,IAAA,GAAAO,KAAA;kBAAArB,QAAA,GAAAqB,KAAA;gBACA,OAAA/D,OAAA,CACAC,GAAA,CAAAyC,QAAA,CAAAmB,GAAA,WAAAxB,CAAA;kBACAA,CAAA,CAAA2B,aAAA,CAAAnF,WAAA,CAAAoF,cAAA;kBAEA,OAAA5B,CAAA,CAAA6B,IAAA;gBACA,IACAC,IAAA;kBAAA,OAAAX,IAAA,CAAAY,SAAA,EAAA1B,QAAA,CAAAhB,MAAA;gBAAA;cACA;YAAA;cAAA4B,SAAA,CAAAvD,IAAA;cAAA,OAGAkD,MAAA,CAAAvC,OAAA,CAAAwD,IAAA;YAAA;YAAA;cAAA,OAAAZ,SAAA,CAAAhD,IAAA;UAAA;QAAA,GAAA4C,QAAA;MAAA;IACA;EACA;AACA"}]}