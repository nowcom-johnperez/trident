{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/FileSelector.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/FileSelector.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_EDIT","_VIEW","set","createOnSelected","field","contents","props","label","type","String","required","mode","default","disabled","Boolean","includeFileName","showGrowlError","multiple","byteLimit","Number","readAsDataUrl","directory","rawData","accept","computed","isView","methods","selectFile","$refs","uploader","value","click","fileChange","event","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","input","files","_iterator","_step","file","unboxedContents","asyncFileContents","fileContents","_unboxedContents","wrap","_callee$","_context","prev","next","target","Array","from","_createForOfIteratorHelper","s","n","done","size","$emit","concat","name","abrupt","t0","e","f","finish","length","map","getFileContents","Promise","all","sent","t1","$store","dispatch","title","error","root","stop","_this2","resolve","reject","reader","FileReader","onload","ev","result","onerror","err","readAsDataURL","readAsText"],"sources":["node_modules/@rancher/shell/components/form/FileSelector.vue"],"sourcesContent":["<script>\nimport { _EDIT, _VIEW } from '@shell/config/query-params';\nimport { set } from '@shell/utils/object';\n\nexport function createOnSelected(field) {\n  return function(contents) {\n    set(this, field, contents);\n  };\n}\n\nexport default {\n  props: {\n    label: {\n      type:     String,\n      required: true\n    },\n\n    mode: {\n      type:    String,\n      default: _EDIT\n    },\n\n    disabled: {\n      type:    Boolean,\n      default: false,\n    },\n\n    includeFileName: {\n      type:    Boolean,\n      default: false,\n    },\n\n    showGrowlError: {\n      type:    Boolean,\n      default: true\n    },\n\n    multiple: {\n      type:    Boolean,\n      default: false\n    },\n\n    byteLimit: {\n      type:    Number,\n      default: 0\n    },\n\n    readAsDataUrl: {\n      type:    Boolean,\n      default: false\n    },\n\n    directory: {\n      type:    Boolean,\n      default: false\n    },\n\n    rawData: {\n      type:    Boolean,\n      default: false\n    },\n\n    accept: {\n      type:    String,\n      default: '*'\n    },\n\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    }\n  },\n\n  methods: {\n    selectFile() {\n      // Clear the value so the user can reselect the same file again\n      this.$refs.uploader.value = null;\n      this.$refs.uploader.click();\n    },\n\n    async fileChange(event) {\n      const input = event.target;\n      const files = Array.from(input.files || []);\n\n      if (this.byteLimit) {\n        for (const file of files) {\n          if (file.size > this.byteLimit) {\n            this.$emit('error', `${ file.name } exceeds the file size limit of ${ this.byteLimit } bytes`);\n\n            return;\n          }\n        }\n      }\n\n      if (this.rawData) {\n        const unboxedContents = !this.multiple && files.length === 1 ? files[0] : files;\n\n        this.$emit('selected', unboxedContents);\n\n        return;\n      }\n\n      try {\n        const asyncFileContents = files.map(this.getFileContents);\n        const fileContents = await Promise.all(asyncFileContents);\n        const unboxedContents = !this.multiple && fileContents.length === 1 ? fileContents[0] : fileContents;\n\n        this.$emit('selected', unboxedContents);\n      } catch (error) {\n        this.$emit('error', error);\n        if (this.showGrowlError) {\n          this.$store.dispatch('growl/fromError', { title: 'Error reading file', error }, { root: true });\n        }\n      }\n    },\n\n    getFileContents(file) {\n      return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n\n        reader.onload = (ev) => {\n          const value = ev.target.result;\n          const name = file.name;\n          const fileContents = this.includeFileName ? { value, name } : value;\n\n          resolve(fileContents);\n        };\n\n        reader.onerror = (err) => {\n          reject(err);\n        };\n        if (this.readAsDataUrl) {\n          reader.readAsDataURL(file);\n        } else {\n          reader.readAsText(file);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<template>\n  <button\n    v-if=\"!isView\"\n    :disabled=\"disabled\"\n    type=\"button\"\n    class=\"file-selector btn\"\n    @click=\"selectFile\"\n  >\n    <span>{{ label }}</span>\n    <input\n      ref=\"uploader\"\n      type=\"file\"\n      class=\"hide\"\n      :multiple=\"multiple\"\n      :webkitdirectory=\"directory\"\n      :accept=\"accept\"\n      @change=\"fileChange\"\n    >\n  </button>\n</template>\n"],"mappings":"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"}]}