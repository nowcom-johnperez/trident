{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/QuestionMap.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/Questions/QuestionMap.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEtleVZhbHVlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vS2V5VmFsdWUnOwppbXBvcnQgUXVlc3Rpb24gZnJvbSAnLi9RdWVzdGlvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUXVlc3Rpb25NYXAnLAogIGNvbXBvbmVudHM6IHsKICAgIEtleVZhbHVlOiBLZXlWYWx1ZQogIH0sCiAgbWl4aW5zOiBbUXVlc3Rpb25dLAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKHZhbCkgewogICAgICB0aGlzLiRlbWl0KCdpbnB1dCcsIHZhbCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["KeyValue","Question","name","components","mixins","methods","update","val","$emit"],"sources":["node_modules/@rancher/shell/components/Questions/QuestionMap.vue"],"sourcesContent":["<script>\nimport KeyValue from '@shell/components/form/KeyValue';\nimport Question from './Question';\n\nexport default {\n  name:       'QuestionMap',\n  components: { KeyValue },\n  mixins:     [Question],\n\n  methods: {\n    update(val) {\n      this.$emit('input', val);\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div\n      v-if=\"showDescription\"\n      class=\"row mt-10\"\n    >\n      <div class=\"col span-12\">\n        {{ question.description }}\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col span-12 mt-10\">\n        <KeyValue\n          :key=\"question.variable\"\n          v-model=\"value\"\n          :title=\"question.label\"\n          :mode=\"mode\"\n          :protip=\"false\"\n          :disabled=\"disabled\"\n          :title-protip=\"displayTooltip\"\n          @input=\"update\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n"],"mappings":"AACA,OAAAA,QAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IAAAH,QAAA,EAAAA;EAAA;EACAI,MAAA,GAAAH,QAAA;EAEAI,OAAA;IACAC,MAAA,WAAAA,OAAAC,GAAA;MACA,KAAAC,KAAA,UAAAD,GAAA;IACA;EACA;AACA"}]}