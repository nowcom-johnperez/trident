{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/array.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/array.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["xor","get","removeObject","ary","obj","idx","indexOf","splice","removeObjects","objs","i","indexes","length","push","sort","a","b","ranges","first","last","shift","start","end","_ranges$i","addObject","addObjects","unique","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","includes","err","e","f","apply","insertAt","_len","arguments","Array","_key","concat","isArray","thing","removeAt","undefined","Error","clear","replaceWith","_len2","values","_key2","findOrFilterBy","method","keyOrObj","val","_typeof","item","path","want","have","filterBy","findBy","findStringIndex","items","trim","hasDuplicatedStrings","caseSensitive","normalizedItems","map","toLowerCase","index","sameContents","aryA","aryB","uniq","out","concatStrings","_toConsumableArray","aa","bb","reduce","acc","arr","getUniqueLabelKeys","aryResources","uniqueObj","res","r","Object","keys","metadata","labels","forEach","l"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/array.ts"],"sourcesContent":["import xor from 'lodash/xor';\nimport { get } from '@shell/utils/object';\n\nexport function removeObject<T>(ary: T[], obj: T): T[] {\n  const idx = ary.indexOf(obj);\n\n  if ( idx >= 0 ) {\n    ary.splice(idx, 1);\n  }\n\n  return ary;\n}\n\nexport function removeObjects<T>(ary: T[], objs: T[]): T[] {\n  let i;\n  let indexes = [];\n\n  for ( i = 0 ; i < objs.length ; i++ ) {\n    let idx = ary.indexOf(objs[i]);\n\n    // Find multiple copies of the same value\n    while ( idx !== -1 ) {\n      indexes.push(idx);\n      idx = ary.indexOf(objs[i], idx + 1);\n    }\n  }\n\n  if ( !indexes.length ) {\n    // That was easy...\n    return ary;\n  }\n\n  indexes = indexes.sort((a, b) => a - b);\n\n  const ranges = [];\n  let first: number;\n  let last: number;\n\n  // Group all the indexes into contiguous ranges\n  while ( indexes.length ) {\n    first = indexes.shift() as number;\n    last = first;\n\n    while ( indexes.length && indexes[0] === last + 1 ) {\n      last = indexes.shift() as number;\n    }\n\n    ranges.push({ start: first, end: last });\n  }\n\n  // Remove the items by range\n  for ( i = ranges.length - 1 ; i >= 0 ; i--) {\n    const { start, end } = ranges[i];\n\n    ary.splice(start, end - start + 1);\n  }\n\n  return ary;\n}\n\nexport function addObject<T>(ary: T[], obj: T): void {\n  const idx = ary.indexOf(obj);\n\n  if ( idx === -1 ) {\n    ary.push(obj);\n  }\n}\n\nexport function addObjects<T>(ary: T[], objs: T[]): void {\n  const unique: T[] = [];\n\n  for ( const obj of objs ) {\n    if ( !ary.includes(obj) && !unique.includes(obj) ) {\n      unique.push(obj);\n    }\n  }\n\n  ary.push(...unique);\n}\n\nexport function insertAt<T>(ary: T[], idx: number, ...objs: T[]): void {\n  ary.splice(idx, 0, ...objs);\n}\n\nexport function isArray<T>(thing: T[] | unknown): boolean {\n  return Array.isArray(thing);\n}\n\nexport function removeAt<T>(ary: T[], idx: number, length = 1): T[] {\n  if ( idx < 0 ) {\n    throw new Error('Index too low');\n  }\n\n  if ( idx + length > ary.length ) {\n    throw new Error('Index + length too high');\n  }\n\n  ary.splice(idx, length);\n\n  return ary;\n}\n\nexport function clear<T>(ary: T[]): void {\n  ary.splice(0, ary.length);\n}\n\nexport function replaceWith<T>(ary: T[], ...values: T[]): void {\n  ary.splice(0, ary.length, ...values);\n}\n\nfunction findOrFilterBy<T, K, V>(\n  method: 'filter', ary: T[] | null, keyOrObj: string | K, val?: V\n): T[];\nfunction findOrFilterBy<T, K, V>(\n  method: 'find', ary: T[] | null, keyOrObj: string | K, val?: V\n): T;\nfunction findOrFilterBy<T, K, V>(\n  method: keyof T[], ary: T[] | null, keyOrObj: string | K, val?: V\n): T[] {\n  ary = ary || [];\n\n  if ( typeof keyOrObj === 'object' ) {\n    return (ary[method] as Function)((item: T) => {\n      for ( const path in keyOrObj ) {\n        const want = keyOrObj[path];\n        const have = get(item, path);\n\n        if ( typeof want === 'undefined' ) {\n          if ( !have ) {\n            return false;\n          }\n        } else if ( have !== want ) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  } else if ( val === undefined ) {\n    return (ary[method] as Function)((item: T) => !!get(item, keyOrObj));\n  } else {\n    return (ary[method] as Function)((item: T) => get(item, keyOrObj) === val);\n  }\n}\n\nexport function filterBy<T, K, V>(\n  ary: T[] | null, keyOrObj: string | K, val?: V\n): T[] {\n  return findOrFilterBy('filter', ary, keyOrObj, val);\n}\n\nexport function findBy<T, K, V>(\n  ary: T[] | null, keyOrObj: string | K, val?: V\n): T {\n  return findOrFilterBy('find', ary, keyOrObj, val);\n}\n\nexport function findStringIndex(items: string[], item: string, trim = true): number {\n  return items.indexOf(trim ? item?.trim() : item);\n}\n\nexport function hasDuplicatedStrings(items: string[], caseSensitive = true): boolean {\n  const normalizedItems = items.map((i) => (caseSensitive ? i : i.toLowerCase()).trim());\n\n  for (let i = 0; i < items.length; i++) {\n    const index = findStringIndex(\n      normalizedItems,\n      (caseSensitive ? items[i] : items[i].toLowerCase()),\n    );\n\n    if (i !== index) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function sameContents<T>(aryA: T[], aryB: T[]): boolean {\n  return xor(aryA, aryB).length === 0;\n}\n\nexport function uniq<T>(ary: T[]): T[] {\n  const out: T[] = [];\n\n  addObjects(out, ary);\n\n  return out;\n}\n\nexport function concatStrings(a: string[], b: string[]): string[] {\n  return [...a.map((aa) => b.map((bb) => aa.concat(bb)))].reduce((acc, arr) => [...arr, ...acc], []);\n}\n\ninterface KubeResource { metadata: { labels: { [name: string]: string} } } // Migrate to central kube types resource when those are brought in\nexport function getUniqueLabelKeys<T extends KubeResource>(aryResources: T[]): string[] {\n  const uniqueObj = aryResources.reduce((res, r) => {\n    Object.keys(r.metadata.labels).forEach((l) => (res[l] = true));\n\n    return res;\n  }, {} as {[label: string]: boolean});\n\n  return Object.keys(uniqueObj).sort();\n}\n"],"mappings":"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"}]}