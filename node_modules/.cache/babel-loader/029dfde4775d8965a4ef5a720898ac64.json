{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/monitoring.coreos.com.route.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/monitoring.coreos.com.route.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["isEmpty","set","areRoutesSupportedFormat","canCreate","createDefaultRouteName","updateConfig","MONITORING","NAME","MONITORING_PRODUCT","jsyaml","SteveModel","ROOT_NAME","Route","_SteveModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","applyDefaults","spec","group_by","group_wait","group_interval","repeat_interval","match","match_re","get","remove","_this","updateRoutes","currentRoutes","filter","route","i","id","_save","_asyncToGenerator","regeneratorRuntime","mark","_callee","_this2","errors","wrap","_callee$","_context","prev","next","validationErrors","sent","abrupt","Promise","reject","existingRoute","find","Object","assign","push","stop","save","secret","canUpdate","$rootGetters","isRoot","canDelete","name","params","cluster","query","resource","type","rules","nullable","path","required","translationKey","validators","fn","$dispatch","saveYaml","yaml","parsed","load","text","receiver","to","SPOOFED","RECEIVER","product","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/monitoring.coreos.com.route.js"],"sourcesContent":["import { isEmpty, set } from '@shell/utils/object';\nimport { areRoutesSupportedFormat, canCreate, createDefaultRouteName, updateConfig } from '@shell/utils/alertmanagerconfig';\nimport { MONITORING } from '@shell/config/types';\nimport { NAME as MONITORING_PRODUCT } from '@shell/config/product/monitoring';\nimport jsyaml from 'js-yaml';\nimport SteveModel from '@shell/plugins/steve/steve-class';\n\nexport const ROOT_NAME = 'root';\n\nexport default class Route extends SteveModel {\n  applyDefaults() {\n    const spec = this.spec || {};\n\n    spec.group_by = spec.group_by || [];\n    spec.group_wait = spec.group_wait || '30s';\n    spec.group_interval = spec.group_interval || '5m';\n    spec.repeat_interval = spec.repeat_interval || '4h';\n    spec.match = spec.match || {};\n    spec.match_re = spec.match || {};\n\n    set(this, 'spec', spec);\n  }\n\n  get removeSerially() {\n    return true;\n  }\n\n  remove() {\n    return this.updateRoutes((currentRoutes) => {\n      return currentRoutes.filter((route, i) => {\n        return createDefaultRouteName(i) !== this.id;\n      });\n    });\n  }\n\n  async save() {\n    const errors = await this.validationErrors(this);\n\n    if (!isEmpty(errors)) {\n      return Promise.reject(errors);\n    }\n\n    await this.updateRoutes((currentRoutes) => {\n      const existingRoute = currentRoutes.find((route, i) => {\n        return createDefaultRouteName(i) === this.id;\n      });\n\n      if (existingRoute) {\n        Object.assign(existingRoute, this.spec);\n      } else {\n        currentRoutes.push(this.spec);\n      }\n\n      return currentRoutes;\n    });\n\n    return {};\n  }\n\n  get canUpdate() {\n    return this.secret.canUpdate;\n  }\n\n  get canCustomEdit() {\n    return true;\n  }\n\n  get canCreate() {\n    return canCreate(this.$rootGetters) && areRoutesSupportedFormat(this.secret);\n  }\n\n  get canDelete() {\n    return !this.isRoot && this.secret.canDelete;\n  }\n\n  get canViewInApi() {\n    return false;\n  }\n\n  get canYaml() {\n    return areRoutesSupportedFormat(this.secret);\n  }\n\n  get _detailLocation() {\n    return {\n      name:   'c-cluster-monitoring-route-receiver-id',\n      params: { cluster: this.$rootGetters['clusterId'], id: this.id },\n      query:  { resource: this.type }\n    };\n  }\n\n  get doneOverride() {\n    return {\n      name:   'c-cluster-monitoring-route-receiver',\n      params: { cluster: this.$rootGetters['clusterId'] },\n      query:  { resource: this.type }\n    };\n  }\n\n  get customValidationRules() {\n    const rules = [\n      {\n        nullable:       false,\n        path:           'spec.receiver',\n        required:       true,\n        translationKey: 'monitoring.route.fields.receiver'\n      },\n      {\n        path:           'spec.group_wait',\n        validators:     ['interval'],\n        translationKey: 'monitoring.route.fields.groupWait'\n      },\n      {\n        path:           'spec.group_interval',\n        validators:     ['interval'],\n        translationKey: 'monitoring.route.fields.groupInterval'\n      },\n      {\n        path:           'spec.repeat_interval',\n        validators:     ['interval'],\n        translationKey: 'monitoring.route.fields.repeatInterval'\n      }\n    ];\n\n    if (!this.isRoot) {\n      rules.push({\n        path:       'spec',\n        validators: ['matching']\n      });\n    }\n\n    return rules;\n  }\n\n  updateRoutes(fn) {\n    return updateConfig(this.$dispatch, 'route.routes', this.type, fn);\n  }\n\n  get isRoot() {\n    return this.id === ROOT_NAME;\n  }\n\n  saveYaml(yaml) {\n    const parsed = jsyaml.load(yaml);\n\n    Object.assign(this, parsed);\n\n    return this.save();\n  }\n\n  get receiverLink() {\n    return {\n      text: this.spec.receiver,\n      to:   {\n        name:   'c-cluster-product-resource-id',\n        params: {\n          resource: MONITORING.SPOOFED.RECEIVER, product: MONITORING_PRODUCT, id: this.spec.receiver\n        }\n      }\n    };\n  }\n}\n"],"mappings":"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"}]}