{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/forms.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/pkg/nowcom/pages/forms.vue","mtime":1716430386794},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IEFzeW5jQnV0dG9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FzeW5jQnV0dG9uJzsKaW1wb3J0IHsgX0NSRUFURSB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IHsgZXhjZXB0aW9uVG9FcnJvcnNBcnJheSB9IGZyb20gJ0BzaGVsbC91dGlscy9lcnJvcic7CmltcG9ydCB7IE5BTUVTUEFDRSwgTk9ERSwgTk9STUFOLCBNQU5BR0VNRU5UIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCBOYW1lc3BhY2UgZnJvbSAnQHNoZWxsL21vZGVscy9uYW1lc3BhY2UnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQXN5bmNCdXR0b246IEFzeW5jQnV0dG9uLAogICAgZXhjZXB0aW9uVG9FcnJvcnNBcnJheTogZXhjZXB0aW9uVG9FcnJvcnNBcnJheQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVycm9yczogW10sCiAgICAgIHZhbHVlOiB7CiAgICAgICAgbmFtZTogJycKICAgICAgfSwKICAgICAgc3VibWl0dGVkOiBmYWxzZSwKICAgICAgbW9kZTogX0NSRUFURQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHN1Ym1pdDogZnVuY3Rpb24gc3VibWl0KGJ1dHRvbkNiKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgnbWFuYWdlbWVudC9maW5kQWxsJywgewogICAgICAgICAgICAgICAgdHlwZTogTUFOQUdFTUVOVCwKICAgICAgICAgICAgICAgIG1ldGFkYXRhOiB7CiAgICAgICAgICAgICAgICAgIG5hbWU6ICd0ZXN0aW5nJwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGtpbmQ6ICJOYW1lc3BhY2VzIiwKICAgICAgICAgICAgICAgIGFwaVZlcnNpb246ICJ2MSIsCiAgICAgICAgICAgICAgICBzdGF0dXM6IHsKICAgICAgICAgICAgICAgICAgcGhhc2U6ICJBY3RpdmUiCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICBfdGhpcy52YWx1ZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kc3RvcmUuZ2V0dGVyc1snZGVmYXVsdE5hbWVzcGFjZSddKQoKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfdGhpcy52YWx1ZSk7CiAgICAgICAgICAgICAgLy8idHlwZSI6Im5hbWVzcGFjZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7ImZpZWxkLmNhdHRsZS5pby9jb250YWluZXJEZWZhdWx0UmVzb3VyY2VMaW1pdCI6Int9In0sIm5hbWUiOiJ0ZXN0aW5nIn0sImRpc2FibGVPcGVuQXBpVmFsaWRhdGlvbiI6ZmFsc2V9CiAgICAgICAgICAgICAgLy8gdGhpcy5zaG93KGZhbHNlKTsKICAgICAgICAgICAgICBidXR0b25DYih0cnVlKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDApOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJlcnIiLCBfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgYnV0dG9uQ2IoZmFsc2UpOwogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1swLCA4XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBjcmVhdGVOYW1lc3BhY2U6IGZ1bmN0aW9uIGNyZWF0ZU5hbWVzcGFjZShidXR0b25DYikgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZ2V0Q3NyZlRva2VuRnJvbUNvb2tpZSwgcGF5bG9hZDsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgZ2V0Q3NyZlRva2VuRnJvbUNvb2tpZSA9IGZ1bmN0aW9uIF9nZXRDc3JmVG9rZW5Gcm9tQ29vaygpIHsKICAgICAgICAgICAgICAgIHZhciBjc3JmQ29va2llTmFtZSA9ICdDU1JGJzsgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYWN0dWFsIENTUkYgY29va2llIG5hbWUKICAgICAgICAgICAgICAgIHZhciBjb29raWVWYWx1ZSA9IGRvY3VtZW50LmNvb2tpZS5zcGxpdCgnOyAnKS5maW5kKGZ1bmN0aW9uIChyb3cpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIHJvdy5zdGFydHNXaXRoKCIiLmNvbmNhdChjc3JmQ29va2llTmFtZSwgIj0iKSk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGlmIChjb29raWVWYWx1ZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY29va2llVmFsdWUuc3BsaXQoJz0nKVsxXTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBSZXR1cm4gYSBkZWZhdWx0IHZhbHVlIG9yIGhhbmRsZSB0aGUgY2FzZSB3aGVyZSB0aGUgY29va2llIGlzIG5vdCBmb3VuZAogICAgICAgICAgICAgICAgcmV0dXJuICdkZWZhdWx0LWNzcmYtdG9rZW4nOwogICAgICAgICAgICAgIH07IC8vIEZ1bmN0aW9uIHRvIGdldCB0aGUgQ1NSRiB0b2tlbiBmcm9tIHRoZSAnQ1NSRicgY29va2llCiAgICAgICAgICAgICAgcGF5bG9hZCA9IHsKICAgICAgICAgICAgICAgIHR5cGU6ICduYW1lc3BhY2UnLAogICAgICAgICAgICAgICAgbWV0YWRhdGE6IHsKICAgICAgICAgICAgICAgICAgYW5ub3RhdGlvbnM6IHsKICAgICAgICAgICAgICAgICAgICAnZmllbGQuY2F0dGxlLmlvL2NvbnRhaW5lckRlZmF1bHRSZXNvdXJjZUxpbWl0JzogJ3t9JwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBuYW1lOiAndGVzdGluZycKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBkaXNhYmxlT3BlbkFwaVZhbGlkYXRpb246IGZhbHNlCiAgICAgICAgICAgICAgfTsgLy8gTWFrZSB0aGUgcmVxdWVzdCB1c2luZyBBeGlvcyB3aXRoIHRoZSAnWC1BcGktQ3NyZicgaGVhZGVyIHNldCB0byB0aGUgJ0NTUkYnIGNvb2tpZSB2YWx1ZQogICAgICAgICAgICAgIGF4aW9zLnBvc3QoIi92MS9uYW1lc3BhY2VzIiwgcGF5bG9hZCwgewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAgICAgICAgICAgICAvLyBTZXQgdGhlIENvbnRlbnQtVHlwZSBoZWFkZXIKICAgICAgICAgICAgICAgICAgJ1gtQXBpLUNzcmYnOiBnZXRDc3JmVG9rZW5Gcm9tQ29va2llKCksCiAgICAgICAgICAgICAgICAgIC8vIEluY2x1ZGUgQ1NSRiB0b2tlbiBpbiB0aGUgaGVhZGVycwogICAgICAgICAgICAgICAgICAnQWNjZXB0JzogJ2FwcGxpY2F0aW9uL2pzb24nIC8vIFNwZWNpZnkgdGhhdCB5b3UgZXhwZWN0IEpTT04gaW4gdGhlIHJlc3BvbnNlCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgd2l0aENyZWRlbnRpYWxzOiB0cnVlIC8vIEVuYWJsZSBzZW5kaW5nIGFuZCByZWNlaXZpbmcgY29va2llcwogICAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgdGhlIHJlc3BvbnNlIGhlcmUKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdOYW1lc3BhY2UgY3JlYXRlZDonLCByZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIGJ1dHRvbkNiKHRydWUpOwogICAgICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgLy8gSGFuZGxlIGFueSBlcnJvcnMgaGVyZQogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3IgY3JlYXRpbmcgbmFtZXNwYWNlOicsIGVycm9yKTsKICAgICAgICAgICAgICAgIGJ1dHRvbkNiKGZhbHNlKTsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9IC8vIE90aGVyIG1ldGhvZHMgaGVyZQogIH0KfTs="},{"version":3,"names":["axios","AsyncButton","_CREATE","exceptionToErrorsArray","NAMESPACE","NODE","NORMAN","MANAGEMENT","Namespace","components","data","errors","value","name","submitted","mode","methods","submit","buttonCb","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","type","metadata","kind","apiVersion","status","phase","sent","console","log","t0","stop","createNamespace","_callee2","getCsrfTokenFromCookie","payload","_callee2$","_context2","_getCsrfTokenFromCook","csrfCookieName","cookieValue","document","cookie","split","find","row","startsWith","concat","annotations","disableOpenApiValidation","post","headers","withCredentials","then","response","catch","error"],"sources":["pkg/nowcom/pages/forms.vue"],"sourcesContent":["<script>\nimport axios from 'axios';\nimport AsyncButton from '@shell/components/AsyncButton';\nimport { _CREATE } from '@shell/config/query-params';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport { NAMESPACE, NODE, NORMAN, MANAGEMENT} from '@shell/config/types';\nimport Namespace from '@shell/models/namespace';\n\nexport default {\ncomponents: {\n    AsyncButton,\n    exceptionToErrorsArray,\n  },\n  data() {\n    return {\n      errors:           [],\n      value:           { name: '' },\n      submitted:       false,\n      mode:            _CREATE\n    };\n  },\n  methods:{\n    async submit(buttonCb) {\n\n        try {\n            // console.log(\"test NAMESPACE\")\n            //await this.$refs.changePassword.save();\n            this.value = await this.$store.dispatch('management/findAll', {\n                type: MANAGEMENT,\n                metadata: {\n                    name: 'testing',\n                },\n                kind: \"Namespaces\",\n                apiVersion: \"v1\",\n                status: {\n                    phase: \"Active\"\n                }\n            });\n\n            // console.log(this.$store.getters['defaultNamespace'])\n\n            console.log(this.value)\n            //\"type\":\"namespace\",\"metadata\":{\"annotations\":{\"field.cattle.io/containerDefaultResourceLimit\":\"{}\"},\"name\":\"testing\"},\"disableOpenApiValidation\":false}\n            // this.show(false);\n            buttonCb(true);\n        } catch (err) {\n            console.log(`err`, err)\n            buttonCb(false);\n        }\n    },\n    async createNamespace(buttonCb) {\n        // Function to get the CSRF token from the 'CSRF' cookie\n        function getCsrfTokenFromCookie() {\n            const csrfCookieName = 'CSRF'; // Replace with your actual CSRF cookie name\n            const cookieValue = document.cookie\n            .split('; ')\n            .find(row => row.startsWith(`${csrfCookieName}=`));\n\n            if (cookieValue) {\n            return cookieValue.split('=')[1];\n            }\n\n            // Return a default value or handle the case where the cookie is not found\n            return 'default-csrf-token';\n        }\n\n        const payload = {\n            type: 'namespace',\n            metadata: {\n            annotations: {\n                'field.cattle.io/containerDefaultResourceLimit': '{}',\n            },\n            name: 'testing',\n            },\n            disableOpenApiValidation: false,\n        };\n\n        // Make the request using Axios with the 'X-Api-Csrf' header set to the 'CSRF' cookie value\n        axios\n            .post(`/v1/namespaces`, payload, {\n            headers: {\n                'Content-Type': 'application/json', // Set the Content-Type header\n                'X-Api-Csrf': getCsrfTokenFromCookie(), // Include CSRF token in the headers\n                'Accept': 'application/json', // Specify that you expect JSON in the response\n            },\n            withCredentials: true, // Enable sending and receiving cookies\n            })\n            .then(response => {\n                // Handle the response here\n                console.log('Namespace created:', response.data);\n                buttonCb(true);\n            })\n            .catch(error => {\n                // Handle any errors here\n                console.error('Error creating namespace:', error);\n                buttonCb(false);\n            });\n    }\n\n\n     \n\n    // Other methods here\n  }\n\n};\n</script>\n<template>\n<AsyncButton\n  type=\"submit\"\n  mode=\"apply\"\n  class=\"btn bg-error ml-10\"\n  value=\"LOGIN\"\n  @click=\"submit\"\n/>\n</template>"],"mappings":";;;;;AACA,OAAAA,KAAA;AACA,OAAAC,WAAA;AACA,SAAAC,OAAA;AACA,SAAAC,sBAAA;AACA,SAAAC,SAAA,EAAAC,IAAA,EAAAC,MAAA,EAAAC,UAAA;AACA,OAAAC,SAAA;AAEA;EACAC,UAAA;IACAR,WAAA,EAAAA,WAAA;IACAE,sBAAA,EAAAA;EACA;EACAO,IAAA,WAAAA,KAAA;IACA;MACAC,MAAA;MACAC,KAAA;QAAAC,IAAA;MAAA;MACAC,SAAA;MACAC,IAAA,EAAAb;IACA;EACA;EACAc,OAAA;IACAC,MAAA,WAAAA,OAAAC,QAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,kBAAA,CAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAKAT,KAAA,CAAAU,MAAA,CAAAC,QAAA;gBACAC,IAAA,EAAAxB,UAAA;gBACAyB,QAAA;kBACAnB,IAAA;gBACA;gBACAoB,IAAA;gBACAC,UAAA;gBACAC,MAAA;kBACAC,KAAA;gBACA;cACA;YAAA;cAVAjB,KAAA,CAAAP,KAAA,GAAAc,QAAA,CAAAW,IAAA;cAYA;;cAEAC,OAAA,CAAAC,GAAA,CAAApB,KAAA,CAAAP,KAAA;cACA;cACA;cACAM,QAAA;cAAAQ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAc,EAAA,GAAAd,QAAA;cAEAY,OAAA,CAAAC,GAAA,QAAAb,QAAA,CAAAc,EAAA;cACAtB,QAAA;YAAA;YAAA;cAAA,OAAAQ,QAAA,CAAAe,IAAA;UAAA;QAAA,GAAAlB,OAAA;MAAA;IAEA;IACAmB,eAAA,WAAAA,gBAAAxB,QAAA;MAAA,OAAAE,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAqB,SAAA;QAAA,IAEAC,sBAAA,EAAAC,OAAA;QAAA,OAAAxB,kBAAA,CAAAG,IAAA,UAAAsB,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA;YAAA;cAAAgB,sBAAA,YAAAI,sBAAA;gBACA,IAAAC,cAAA;gBACA,IAAAC,WAAA,GAAAC,QAAA,CAAAC,MAAA,CACAC,KAAA,OACAC,IAAA,WAAAC,GAAA;kBAAA,OAAAA,GAAA,CAAAC,UAAA,IAAAC,MAAA,CAAAR,cAAA;gBAAA;gBAEA,IAAAC,WAAA;kBACA,OAAAA,WAAA,CAAAG,KAAA;gBACA;;gBAEA;gBACA;cACA,GAbA;cAeAR,OAAA;gBACAd,IAAA;gBACAC,QAAA;kBACA0B,WAAA;oBACA;kBACA;kBACA7C,IAAA;gBACA;gBACA8C,wBAAA;cACA,GAEA;cACA3D,KAAA,CACA4D,IAAA,mBAAAf,OAAA;gBACAgB,OAAA;kBACA;kBAAA;kBACA,cAAAjB,sBAAA;kBAAA;kBACA;gBACA;gBACAkB,eAAA;cACA,GACAC,IAAA,WAAAC,QAAA;gBACA;gBACA1B,OAAA,CAAAC,GAAA,uBAAAyB,QAAA,CAAAtD,IAAA;gBACAQ,QAAA;cACA,GACA+C,KAAA,WAAAC,KAAA;gBACA;gBACA5B,OAAA,CAAA4B,KAAA,8BAAAA,KAAA;gBACAhD,QAAA;cACA;YAAA;YAAA;cAAA,OAAA6B,SAAA,CAAAN,IAAA;UAAA;QAAA,GAAAE,QAAA;MAAA;IACA,EAKA;EACA;AAEA"}]}