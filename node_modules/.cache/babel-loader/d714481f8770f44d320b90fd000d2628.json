{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/mutations.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/mutations.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwpmdW5jdGlvbiBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihvLCBhbGxvd0FycmF5TGlrZSkgeyB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSAidW5kZWZpbmVkIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl0gfHwgb1siQEBpdGVyYXRvciJdOyBpZiAoIWl0KSB7IGlmIChBcnJheS5pc0FycmF5KG8pIHx8IChpdCA9IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvKSkgfHwgYWxsb3dBcnJheUxpa2UgJiYgbyAmJiB0eXBlb2Ygby5sZW5ndGggPT09ICJudW1iZXIiKSB7IGlmIChpdCkgbyA9IGl0OyB2YXIgaSA9IDA7IHZhciBGID0gZnVuY3Rpb24gRigpIHt9OyByZXR1cm4geyBzOiBGLCBuOiBmdW5jdGlvbiBuKCkgeyBpZiAoaSA+PSBvLmxlbmd0aCkgcmV0dXJuIHsgZG9uZTogdHJ1ZSB9OyByZXR1cm4geyBkb25lOiBmYWxzZSwgdmFsdWU6IG9baSsrXSB9OyB9LCBlOiBmdW5jdGlvbiBlKF9lKSB7IHRocm93IF9lOyB9LCBmOiBGIH07IH0gdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGl0ZXJhdGUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLiIpOyB9IHZhciBub3JtYWxDb21wbGV0aW9uID0gdHJ1ZSwgZGlkRXJyID0gZmFsc2UsIGVycjsgcmV0dXJuIHsgczogZnVuY3Rpb24gcygpIHsgaXQgPSBpdC5jYWxsKG8pOyB9LCBuOiBmdW5jdGlvbiBuKCkgeyB2YXIgc3RlcCA9IGl0Lm5leHQoKTsgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsgcmV0dXJuIHN0ZXA7IH0sIGU6IGZ1bmN0aW9uIGUoX2UyKSB7IGRpZEVyciA9IHRydWU7IGVyciA9IF9lMjsgfSwgZjogZnVuY3Rpb24gZigpIHsgdHJ5IHsgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0LnJldHVybiAhPSBudWxsKSBpdC5yZXR1cm4oKTsgfSBmaW5hbGx5IHsgaWYgKGRpZEVycikgdGhyb3cgZXJyOyB9IH0gfTsgfQpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldOyByZXR1cm4gYXJyMjsgfQppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQubWFwLmRlbGV0ZS1hbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQubWFwLmV2ZXJ5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lm1hcC5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQubWFwLmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQubWFwLmZpbmQta2V5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lm1hcC5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5tYXAua2V5LW9mLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0Lm1hcC5tYXAta2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5tYXAubWFwLXZhbHVlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5tYXAubWVyZ2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lc25leHQubWFwLnJlZHVjZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5tYXAuc29tZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzbmV4dC5tYXAudXBkYXRlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQtaW5kZXguanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZW50cmllcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mcm9tLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3IuanMiOwppbXBvcnQgeyBhZGRPYmplY3QgfSBmcm9tICdAc2hlbGwvdXRpbHMvYXJyYXknOwppbXBvcnQgeyBOQU1FU1BBQ0UsIFBPRCwgU0NIRU1BIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IGZvcmdldFR5cGUgYXMgX2ZvcmdldFR5cGUsIHJlc2V0U3RvcmUsIGxvYWRBbGwgYXMgX2xvYWRBbGwsIGxvYWQsIHJlbW92ZSBhcyBfcmVtb3ZlLCBiYXRjaENoYW5nZXMgYXMgX2JhdGNoQ2hhbmdlcywgcmVwbGFjZSB9IGZyb20gJ0BzaGVsbC9wbHVnaW5zL2Rhc2hib2FyZC1zdG9yZS9tdXRhdGlvbnMnOwppbXBvcnQgeyBrZXlGb3JTdWJzY3JpYmUgfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9zdGV2ZS9yZXNvdXJjZVdhdGNoZXInOwppbXBvcnQgeyBwZXJmTG9hZEFsbCB9IGZyb20gJ0BzaGVsbC9wbHVnaW5zL3N0ZXZlL3BlcmZvcm1hbmNlVGVzdGluZyc7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgY2xhc3NpZnkgfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9kYXNoYm9hcmQtc3RvcmUvY2xhc3NpZnknOwpmdW5jdGlvbiByZWdpc3Rlck5hbWVzcGFjZShzdGF0ZSwgbmFtZXNwYWNlKSB7CiAgdmFyIGNhY2hlID0gc3RhdGUucG9kc0J5TmFtZXNwYWNlW25hbWVzcGFjZV07CiAgaWYgKCFjYWNoZSkgewogICAgY2FjaGUgPSB7CiAgICAgIGxpc3Q6IFtdLAogICAgICBtYXA6IG5ldyBNYXAoKQogICAgfTsKICAgIFZ1ZS5zZXQoc3RhdGUucG9kc0J5TmFtZXNwYWNlLCBuYW1lc3BhY2UsIGNhY2hlKTsKICB9CiAgcmV0dXJuIGNhY2hlOwp9CgovKioKICogdXBkYXRlIHRoZSBwb2RzQnlOYW1lc3BhY2UgY2FjaGUgd2l0aCBuZXcgb3IgY2hhbmdlZCBwb2RzCiAqLwpmdW5jdGlvbiB1cGRhdGVQb2RzQnlOYW1lc3BhY2VDYWNoZShzdGF0ZSwgY3R4LCBwb2RzLCBsb2FkQWxsKSB7CiAgaWYgKGxvYWRBbGwpIHsKICAgIC8vIENsZWFyIHRoZSBlbnRpcmUgY2FjaGUgLSB0aGlzIGlzIGEgZnJlc2ggbG9hZAogICAgT2JqZWN0LmtleXMoc3RhdGUucG9kc0J5TmFtZXNwYWNlKS5mb3JFYWNoKGZ1bmN0aW9uIChucykgewogICAgICBkZWxldGUgc3RhdGUucG9kc0J5TmFtZXNwYWNlW25zXTsKICAgIH0pOwogIH0KCiAgLy8gR28gdGhyb3VnaCBhbGwgb2YgdGhlIHBvZHMgYW5kIHBvcHVsYXRlIGNhY2hlIGJ5IG5hbWVzcGFjZQogIHBvZHMuZm9yRWFjaChmdW5jdGlvbiAoZW50cnkpIHsKICAgIHZhciBjbGFzc3lSZXNvdXJjZSA9IHN0YXRlLnR5cGVzW1BPRF0ubWFwLmdldChlbnRyeS5pZCkgfHwgY2xhc3NpZnkoY3R4LCBlbnRyeSk7CiAgICB2YXIgY2FjaGUgPSByZWdpc3Rlck5hbWVzcGFjZShzdGF0ZSwgY2xhc3N5UmVzb3VyY2UubmFtZXNwYWNlKTsgLy8gUmF3IGVudHJ5Lm5hbWVzcGFjZSBkb2Vzbid0IGV4aXN0LCBzbyB1c2UgY2xhc3N5CiAgICB2YXIgZXhpc3RpbmcgPSBjYWNoZS5tYXAuZ2V0KGVudHJ5LmlkKTsKICAgIGlmIChleGlzdGluZykgewogICAgICAvLyBDQU5OT1QgQkUgVEhFIFNBTUUgUkVGRVJFTkNFCiAgICAgIHJlcGxhY2UoZXhpc3RpbmcsIGVudHJ5KTsKICAgIH0gZWxzZSB7CiAgICAgIGFkZE9iamVjdChjYWNoZS5saXN0LCBjbGFzc3lSZXNvdXJjZSk7CiAgICAgIGNhY2hlLm1hcC5zZXQoZW50cnkuaWQsIGNsYXNzeVJlc291cmNlKTsKICAgIH0KICB9KTsKfQoKLyoqCiAqIGNsZWFuIHRoZSBwb2RzQnlOYW1lc3BhY2UgY2FjaGUgb2YgcmVtb3ZlZCBwb2RzCiAqLwpmdW5jdGlvbiBjbGVhblBvZHNCeU5hbWVzcGFjZUNhY2hlKHN0YXRlLCByZXNvdXJjZSkgewogIGlmIChyZXNvdXJjZSAmJiByZXNvdXJjZS50eXBlID09PSBQT0QpIHsKICAgIHZhciBjYWNoZSA9IHN0YXRlLnBvZHNCeU5hbWVzcGFjZVtyZXNvdXJjZS5uYW1lc3BhY2VdOwoKICAgIC8vIEV4dHJhIGRlZmVuc2l2ZSBjaGVjayB0aGF0IHRoZSBjYWNoZSBleGlzdHMgZm9yIHRoZSBuYW1lc3BhY2UgYmVpbmcgcmVtb3ZlZAogICAgaWYgKGNhY2hlKSB7CiAgICAgIHZhciBpbkxpc3QgPSBjYWNoZS5saXN0LmZpbmRJbmRleChmdW5jdGlvbiAocCkgewogICAgICAgIHJldHVybiBwLmlkID09PSByZXNvdXJjZS5pZDsKICAgICAgfSk7CiAgICAgIGlmIChpbkxpc3QgPj0gMCkgewogICAgICAgIGNhY2hlLmxpc3Quc3BsaWNlKGluTGlzdCwgMSk7CiAgICAgIH0KICAgICAgY2FjaGUubWFwLmRlbGV0ZShyZXNvdXJjZS5pZCk7CiAgICB9CiAgfSBlbHNlIGlmIChyZXNvdXJjZSAmJiByZXNvdXJjZS50eXBlID09PSBOQU1FU1BBQ0UpIHsKICAgIC8vIE5hbWVzcGFjZSBkZWxldGVkCiAgICBkZWxldGUgc3RhdGUucG9kc0J5TmFtZXNwYWNlW3Jlc291cmNlLmlkXTsKICB9Cn0KZXhwb3J0IGRlZmF1bHQgewogIGJhdGNoQ2hhbmdlczogZnVuY3Rpb24gYmF0Y2hDaGFuZ2VzKHN0YXRlLCBfcmVmKSB7CiAgICB2YXIgY3R4ID0gX3JlZi5jdHgsCiAgICAgIGJhdGNoID0gX3JlZi5iYXRjaDsKICAgIF9iYXRjaENoYW5nZXMoc3RhdGUsIHsKICAgICAgY3R4OiBjdHgsCiAgICAgIGJhdGNoOiBiYXRjaAogICAgfSk7CiAgICBpZiAoYmF0Y2hbUE9EXSkgewogICAgICB2YXIgbmV3QW5kQ2hhbmdlZFBvZHMgPSBPYmplY3QuZW50cmllcyhiYXRjaFtQT0RdKS5yZWR1Y2UoZnVuY3Rpb24gKHBvZHMsIF9yZWYyKSB7CiAgICAgICAgdmFyIF9yZWYzID0gX3NsaWNlZFRvQXJyYXkoX3JlZjIsIDIpLAogICAgICAgICAgaWQgPSBfcmVmM1swXSwKICAgICAgICAgIHBvZCA9IF9yZWYzWzFdOwogICAgICAgIGlmIChwb2QuaWQpIHsKICAgICAgICAgIC8vIHJlc291cmNlLmNyZWF0ZSBhbmQgcmVzb3VyY2UuY2hhbmdlCiAgICAgICAgICBwb2RzLnB1c2gocG9kKTsgLy8gbXVzdCBOT1QgYmUgc2FtZSByZWZlcmVuY2UgZnJvbSBzdG9yZQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAvLyByZXNvdXJjZS5yZW1vdmUgKG5vdGUgLSB3ZSd2ZSBhbHJlYWR5IGxvc3QgdGhlIHJlc291cmNlIGluIHRoZSBzdG9yZSwgc28gcGFzcyB0aHJvdWdoIG1vY2tlZCBvbmUpCiAgICAgICAgICBjbGVhblBvZHNCeU5hbWVzcGFjZUNhY2hlKHN0YXRlLCB7CiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgdHlwZTogUE9ELAogICAgICAgICAgICBuYW1lc3BhY2U6IGlkLnN1YnN0cmluZygwLCBpZC5pbmRleE9mKCcvJykpCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHBvZHM7CiAgICAgIH0sIFtdKTsKICAgICAgdXBkYXRlUG9kc0J5TmFtZXNwYWNlQ2FjaGUoc3RhdGUsIGN0eCwgbmV3QW5kQ2hhbmdlZFBvZHMsIGZhbHNlKTsKICAgIH0KICAgIGlmIChiYXRjaFtOQU1FU1BBQ0VdKSB7CiAgICAgIE9iamVjdC5lbnRyaWVzKGJhdGNoW05BTUVTUEFDRV0pLmZvckVhY2goZnVuY3Rpb24gKF9yZWY0KSB7CiAgICAgICAgdmFyIF9yZWY1ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjQsIDIpLAogICAgICAgICAgaWQgPSBfcmVmNVswXSwKICAgICAgICAgIG5hbWVzcGFjZSA9IF9yZWY1WzFdOwogICAgICAgIGlmICghbmFtZXNwYWNlLmlkKSB7CiAgICAgICAgICAvLyByZXNvdXJjZS5yZW1vdmUgKG5vdGUgLSB3ZSd2ZSBhbHJlYWR5IGxvc3QgdGhlIHJlc291cmNlIGluIHRoZSBzdG9yZSwgc28gcGFzcyB0aHJvdWdoIG1vY2tlZCBvbmUpCiAgICAgICAgICBjbGVhblBvZHNCeU5hbWVzcGFjZUNhY2hlKHN0YXRlLCB7CiAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgdHlwZTogTkFNRVNQQUNFCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgbG9hZEFsbDogZnVuY3Rpb24gbG9hZEFsbChzdGF0ZSwgX3JlZjYpIHsKICAgIHZhciB0eXBlID0gX3JlZjYudHlwZSwKICAgICAgZGF0YSA9IF9yZWY2LmRhdGEsCiAgICAgIGN0eCA9IF9yZWY2LmN0eCwKICAgICAgc2tpcEhhdmVBbGwgPSBfcmVmNi5za2lwSGF2ZUFsbCwKICAgICAgbmFtZXNwYWNlID0gX3JlZjYubmFtZXNwYWNlLAogICAgICByZXZpc2lvbiA9IF9yZWY2LnJldmlzaW9uOwogICAgLy8gUGVyZm9ybWFuY2UgdGVzdGluZyBpbiBkZXYgYW5kIHdoZW4gZW52IHZhciBpcyBzZXQKICAgIGlmIChwcm9jZXNzLmVudi5kZXYgJiYgISFwcm9jZXNzLmVudi5wZXJmVGVzdCkgewogICAgICBkYXRhID0gcGVyZkxvYWRBbGwodHlwZSwgZGF0YSk7CiAgICB9CiAgICB2YXIgcHJveGllcyA9IF9sb2FkQWxsKHN0YXRlLCB7CiAgICAgIHR5cGU6IHR5cGUsCiAgICAgIGRhdGE6IGRhdGEsCiAgICAgIGN0eDogY3R4LAogICAgICBza2lwSGF2ZUFsbDogc2tpcEhhdmVBbGwsCiAgICAgIG5hbWVzcGFjZTogbmFtZXNwYWNlLAogICAgICByZXZpc2lvbjogcmV2aXNpb24KICAgIH0pOwoKICAgIC8vIElmIHdlIGxvYWRlZCBhIHNldCBvZiBwb2RzLCB0aGVuIHVwZGF0ZSB0aGUgcG9kc0J5TmFtZXNwYWNlIGNhY2hlCiAgICBpZiAodHlwZSA9PT0gUE9EKSB7CiAgICAgIHVwZGF0ZVBvZHNCeU5hbWVzcGFjZUNhY2hlKHN0YXRlLCBjdHgsIHByb3hpZXMsIHRydWUpOwogICAgfQoKICAgIC8vIE5vdGlmeSB0aGUgd2ViIHdvcmtlciBvZiB0aGUgaW5pdGlhbCBsb2FkIG9mIHNjaGVtYXMKICAgIGlmICh0eXBlID09PSBTQ0hFTUEpIHsKICAgICAgdmFyIHdvcmtlciA9ICh0aGlzLiR3b3JrZXJzIHx8IHt9KVtjdHguZ2V0dGVycy5zdG9yZU5hbWVdOwogICAgICBpZiAod29ya2VyKSB7CiAgICAgICAgLy8gU3RvcmUgcmF3IGpzb24gb2JqZWN0cywgbm90IHRoZSBwcm94aWVzCiAgICAgICAgd29ya2VyLnBvc3RNZXNzYWdlKHsKICAgICAgICAgIGxvYWRTY2hlbWFzOiBkYXRhCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LAogIGZvcmdldFR5cGU6IGZ1bmN0aW9uIGZvcmdldFR5cGUoc3RhdGUsIHR5cGUpIHsKICAgIGlmIChfZm9yZ2V0VHlwZShzdGF0ZSwgdHlwZSkpIHsKICAgICAgZGVsZXRlIHN0YXRlLmluRXJyb3Jba2V5Rm9yU3Vic2NyaWJlKHsKICAgICAgICB0eXBlOiB0eXBlCiAgICAgIH0pXTsKICAgIH0KICB9LAogIHJlc2V0OiBmdW5jdGlvbiByZXNldChzdGF0ZSkgewogICAgcmVzZXRTdG9yZShzdGF0ZSwgdGhpcy5jb21taXQpOwogICAgdGhpcy5jb21taXQoIiIuY29uY2F0KHN0YXRlLmNvbmZpZy5uYW1lc3BhY2UsICIvcmVzZXRTdWJzY3JpcHRpb25zIikpOwoKICAgIC8vIENsZWFyIHRoZSBwb2RzQnlOYW1lc3BhY2UgY2FjaGUKICAgIHN0YXRlLnBvZHNCeU5hbWVzcGFjZSA9IHt9OwogIH0sCiAgbG9hZE11bHRpOiBmdW5jdGlvbiBsb2FkTXVsdGkoc3RhdGUsIF9yZWY3KSB7CiAgICB2YXIgZGF0YSA9IF9yZWY3LmRhdGEsCiAgICAgIGN0eCA9IF9yZWY3LmN0eDsKICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcihkYXRhKSwKICAgICAgX3N0ZXA7CiAgICB0cnkgewogICAgICBmb3IgKF9pdGVyYXRvci5zKCk7ICEoX3N0ZXAgPSBfaXRlcmF0b3IubigpKS5kb25lOykgewogICAgICAgIHZhciBlbnRyeSA9IF9zdGVwLnZhbHVlOwogICAgICAgIHZhciByZXNvdXJjZSA9IGxvYWQoc3RhdGUsIHsKICAgICAgICAgIGRhdGE6IGVudHJ5LAogICAgICAgICAgY3R4OiBjdHgKICAgICAgICB9KTsKICAgICAgICBpZiAocmVzb3VyY2UudHlwZSA9PT0gUE9EICYmIHJlc291cmNlLm1ldGFkYXRhKSB7CiAgICAgICAgICB2YXIgY2FjaGUgPSByZWdpc3Rlck5hbWVzcGFjZShzdGF0ZSwgcmVzb3VyY2UubmFtZXNwYWNlKTsKICAgICAgICAgIGFkZE9iamVjdChjYWNoZS5saXN0LCByZXNvdXJjZSk7CiAgICAgICAgICBjYWNoZS5tYXAuc2V0KHJlc291cmNlLmlkLCByZXNvdXJjZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgIH0gZmluYWxseSB7CiAgICAgIF9pdGVyYXRvci5mKCk7CiAgICB9CiAgfSwKICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZShzdGF0ZSwgb2JqKSB7CiAgICBfcmVtb3ZlKHN0YXRlLCBvYmosIHRoaXMuZ2V0dGVycyk7CiAgICBjbGVhblBvZHNCeU5hbWVzcGFjZUNhY2hlKHN0YXRlLCBvYmopOwogIH0KfTs="},{"version":3,"names":["addObject","NAMESPACE","POD","SCHEMA","forgetType","resetStore","loadAll","load","remove","batchChanges","replace","keyForSubscribe","perfLoadAll","Vue","classify","registerNamespace","state","namespace","cache","podsByNamespace","list","map","Map","set","updatePodsByNamespaceCache","ctx","pods","Object","keys","forEach","ns","entry","classyResource","types","get","id","existing","cleanPodsByNamespaceCache","resource","type","inList","findIndex","p","splice","delete","_ref","batch","newAndChangedPods","entries","reduce","_ref2","_ref3","_slicedToArray","pod","push","substring","indexOf","_ref4","_ref5","_ref6","data","skipHaveAll","revision","process","env","dev","perfTest","proxies","worker","$workers","getters","storeName","postMessage","loadSchemas","inError","reset","commit","concat","config","loadMulti","_ref7","_iterator","_createForOfIteratorHelper","_step","s","n","done","value","metadata","err","e","f","obj"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/plugins/steve/mutations.js"],"sourcesContent":["import { addObject } from '@shell/utils/array';\nimport { NAMESPACE, POD, SCHEMA } from '@shell/config/types';\nimport {\n  forgetType,\n  resetStore,\n  loadAll,\n  load,\n  remove,\n  batchChanges,\n  replace\n} from '@shell/plugins/dashboard-store/mutations';\nimport { keyForSubscribe } from '@shell/plugins/steve/resourceWatcher';\nimport { perfLoadAll } from '@shell/plugins/steve/performanceTesting';\nimport Vue from 'vue';\nimport { classify } from '@shell/plugins/dashboard-store/classify';\n\nfunction registerNamespace(state, namespace) {\n  let cache = state.podsByNamespace[namespace];\n\n  if (!cache) {\n    cache = {\n      list: [],\n      map:  new Map()\n    };\n\n    Vue.set(state.podsByNamespace, namespace, cache);\n  }\n\n  return cache;\n}\n\n/**\n * update the podsByNamespace cache with new or changed pods\n */\nfunction updatePodsByNamespaceCache(state, ctx, pods, loadAll) {\n  if (loadAll) {\n    // Clear the entire cache - this is a fresh load\n    Object.keys(state.podsByNamespace).forEach((ns) => {\n      delete state.podsByNamespace[ns];\n    });\n  }\n\n  // Go through all of the pods and populate cache by namespace\n  pods.forEach((entry) => {\n    const classyResource = state.types[POD].map.get(entry.id) || classify(ctx, entry);\n\n    const cache = registerNamespace(state, classyResource.namespace); // Raw entry.namespace doesn't exist, so use classy\n    const existing = cache.map.get(entry.id);\n\n    if (existing) {\n      // CANNOT BE THE SAME REFERENCE\n      replace(existing, entry);\n    } else {\n      addObject(cache.list, classyResource);\n      cache.map.set(entry.id, classyResource);\n    }\n  });\n}\n\n/**\n * clean the podsByNamespace cache of removed pods\n */\nfunction cleanPodsByNamespaceCache(state, resource) {\n  if (resource && resource.type === POD) {\n    const cache = state.podsByNamespace[resource.namespace];\n\n    // Extra defensive check that the cache exists for the namespace being removed\n    if (cache) {\n      const inList = cache.list.findIndex((p) => p.id === resource.id);\n\n      if ( inList >= 0 ) {\n        cache.list.splice(inList, 1);\n      }\n      cache.map.delete(resource.id);\n    }\n  } else if (resource && resource.type === NAMESPACE) {\n    // Namespace deleted\n    delete state.podsByNamespace[resource.id];\n  }\n}\n\nexport default {\n  batchChanges(state, { ctx, batch }) {\n    batchChanges(state, { ctx, batch });\n\n    if (batch[POD]) {\n      const newAndChangedPods = Object.entries(batch[POD]).reduce((pods, [id, pod]) => {\n        if (pod.id) {\n          // resource.create and resource.change\n          pods.push(pod);// must NOT be same reference from store\n        } else {\n          // resource.remove (note - we've already lost the resource in the store, so pass through mocked one)\n          cleanPodsByNamespaceCache(state, {\n            id,\n            type:      POD,\n            namespace: id.substring(0, id.indexOf('/'))\n          });\n        }\n\n        return pods;\n      }, []);\n\n      updatePodsByNamespaceCache(state, ctx, newAndChangedPods, false);\n    }\n\n    if (batch[NAMESPACE]) {\n      Object.entries(batch[NAMESPACE]).forEach(([id, namespace]) => {\n        if (!namespace.id) {\n          // resource.remove (note - we've already lost the resource in the store, so pass through mocked one)\n          cleanPodsByNamespaceCache(state, {\n            id,\n            type: NAMESPACE,\n          });\n        }\n      });\n    }\n  },\n\n  loadAll(state, {\n    type,\n    data,\n    ctx,\n    skipHaveAll,\n    namespace,\n    revision\n  }) {\n    // Performance testing in dev and when env var is set\n    if (process.env.dev && !!process.env.perfTest) {\n      data = perfLoadAll(type, data);\n    }\n\n    const proxies = loadAll(state, {\n      type, data, ctx, skipHaveAll, namespace, revision\n    });\n\n    // If we loaded a set of pods, then update the podsByNamespace cache\n    if (type === POD) {\n      updatePodsByNamespaceCache(state, ctx, proxies, true);\n    }\n\n    // Notify the web worker of the initial load of schemas\n    if (type === SCHEMA) {\n      const worker = (this.$workers || {})[ctx.getters.storeName];\n\n      if (worker) {\n        // Store raw json objects, not the proxies\n        worker.postMessage({ loadSchemas: data });\n      }\n    }\n  },\n\n  forgetType(state, type) {\n    if ( forgetType(state, type) ) {\n      delete state.inError[keyForSubscribe({ type })];\n    }\n  },\n\n  reset(state) {\n    resetStore(state, this.commit);\n    this.commit(`${ state.config.namespace }/resetSubscriptions`);\n\n    // Clear the podsByNamespace cache\n    state.podsByNamespace = {};\n  },\n\n  loadMulti(state, { data, ctx }) {\n    for (const entry of data) {\n      const resource = load(state, { data: entry, ctx });\n\n      if (resource.type === POD && resource.metadata) {\n        const cache = registerNamespace(state, resource.namespace);\n\n        addObject(cache.list, resource);\n        cache.map.set(resource.id, resource);\n      }\n    }\n  },\n\n  remove(state, obj) {\n    remove(state, obj, this.getters);\n\n    cleanPodsByNamespaceCache(state, obj);\n  }\n};\n"],"mappings":"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"}]}