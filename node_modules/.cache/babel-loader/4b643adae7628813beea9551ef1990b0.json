{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Router","PluginRoutes","router","_classCallCheck","pluginRoutes","replacedRoutes","_createClass","key","value","logRoutes","r","_this","indent","arguments","length","undefined","spaces","Array","join","forEach","s","console","log","concat","name","path","children","uninstall","plugin","_this2","restore","Object","keys","routeName","info","index","savedRoute","id","shift","push","route","previous","splice","filter","pR","routes","find","updateMatcher","_toConsumableArray","options","addRoutes","_this3","allRoutes","_a","startsWith","productName","nameParts","split","substr","meta","product","existing","parent","pExisting","findIndex","existingRoute","unshift","newRoutes","_this4","pluginRoutesWithParents","orderedPluginRoutes","foundParentRoute","newRouter","mode","addRoute","matcher"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugin-routes.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport Router, { RouteConfig } from 'vue-router';\n\ninterface RouteInfo {\n  parent?: string;\n  route: RouteConfig;\n}\n\ninterface RouteInstallInfo {\n  plugin: string;\n  route: RouteConfig;\n}\n\ntype RouteInstallHistory = {\n  [route: string]: RouteInstallInfo[]\n}\n\nexport class PluginRoutes {\n  router: Router;\n  pluginRoutes: RouteConfig[] = [];\n\n  replacedRoutes: RouteInstallHistory = {};\n\n  constructor(router: Router) {\n    this.router = router;\n  }\n\n  public logRoutes(r: any, indent = 0) {\n    const spaces = Array(indent).join(' ');\n\n    r.forEach((s: any) => {\n      console.log(`${ spaces }${ s.name } -> ${ s.path }`); // eslint-disable-line no-console\n      this.logRoutes(s.children || [], indent + 2);\n    });\n  }\n\n  // Ensure we put back any routes that the plugin that is being uninstalled added\n  public uninstall(plugin: any) {\n    // List of routes we need to restore\n    const restore: RouteInfo[] = [];\n\n    Object.keys(this.replacedRoutes).forEach((routeName) => {\n      const info = this.replacedRoutes[routeName];\n\n      for (let index = 0; index < info.length; index++) {\n        const savedRoute = info[index];\n\n        if (savedRoute.plugin === plugin.id) {\n          // The plugin that is being uninstalled replaced an existing route that we will restore\n          if (index === 0) {\n            // Need to restore the previous route, since the plugin owned the active route\n            info.shift();\n\n            restore.push({ route: savedRoute.route });\n\n            break;\n          } else {\n            // Need to update the previous item so that when it is removed, it restores the correct route\n            const previous = info[index - 1];\n\n            previous.route = savedRoute.route;\n            info.splice(index, 1);\n\n            break;\n          }\n        }\n      }\n    });\n\n    // Remove routes from pluginRoutes, update matcher (to avoid dupes when re-adding plugin routes)\n    this.pluginRoutes = this.pluginRoutes.filter((pR) => !plugin.routes.find((r: any) => pR === r.route));\n    this.updateMatcher([], [\n      ...this.pluginRoutes,\n      ...(this.router.options.routes || [])\n    ]);\n\n    // Restore appropriate routes\n    if (restore.length > 0) {\n      this.addRoutes(null, restore);\n    }\n  }\n\n  public addRoutes(plugin: any, routes: RouteInfo[]) {\n    const allRoutes = [\n      ...this.pluginRoutes,\n      ...(this.router.options.routes || [])\n    ];\n\n    // Need to take into account if routes are being replaced\n    // Despite what the docs say, routes are not replaced, so we use a workaround\n    // Remove all routes that are being replaced\n    routes.forEach((r: RouteInfo) => {\n      // Patch colliding legacy routes that start /:product\n      if (r.route.path?.startsWith('/:product')) {\n        // Legacy pattern used by extensions - routes may collide, so modify them not to\n        let productName;\n\n        // If the route has a name (which is always the case for the extensions we have written), use it to get the product name\n        if (r.route.name) {\n          const nameParts = r.route.name.split('-');\n\n          // First part of the route name is the product name\n          productName = nameParts[0];\n        }\n\n        // Use the plugin name as the product, if the route does not have a name\n        productName = productName || plugin.name;\n\n        // Replace the path - removing :product and using the actual product name instead - this avoids route collisions\n        r.route.path = `/${ productName }${ r.route.path.substr(9) }`;\n        r.route.meta = r.route.meta || {};\n\n        r.route.meta.product = r.route.meta.product || productName;\n      }\n\n      // See if the route exists\n      let existing: any;\n\n      if (r.parent) {\n        const pExisting = allRoutes.findIndex((route: any) => route.name === r.parent) as any;\n        const path = `${ pExisting.path }${ r.route.path }`;\n\n        // TODO: Validate\n        existing = allRoutes.findIndex((route: any) => route.path === path);\n      } else {\n        // no parent route\n        existing = allRoutes.findIndex((route: any) => route.name === r.route.name);\n      }\n\n      if (existing >= 0) {\n        const existingRoute = allRoutes[existing];\n\n        // Store the route so we can restore it on uninstall\n        if (plugin && existingRoute?.name) {\n          if (!this.replacedRoutes[existingRoute.name]) {\n            this.replacedRoutes[existingRoute.name] = [];\n          }\n\n          this.replacedRoutes[existingRoute.name].unshift({\n            plugin: plugin.id,\n            route:  existingRoute\n          });\n        }\n\n        allRoutes.splice(existing, 1);\n      }\n    });\n\n    this.updateMatcher(routes, allRoutes);\n  }\n\n  private updateMatcher(newRoutes: RouteInfo[], allRoutes: RouteConfig[]) {\n    // Note - Always use a new router and replace the existing router's matching\n    // Using the existing router and adding routes to it will force nuxt middleware (specifically authenticated on default layout) to\n    // execute many times (nuxt middleware boils down to router.beforeEach). This issue was seen refreshing in a harvester cluster with a\n    // dynamically loaded cluster\n\n    const pluginRoutesWithParents: any[] = [];\n    const orderedPluginRoutes: any[] = [];\n\n    // separate plugin routes that have parent and not\n    newRoutes.forEach((r: any) => {\n      let foundParentRoute;\n\n      if (r.parent) {\n        foundParentRoute = allRoutes.find((route) => route.name === r.parent);\n\n        if (foundParentRoute) {\n          pluginRoutesWithParents.push(r);\n        }\n      }\n\n      if (!foundParentRoute) {\n        orderedPluginRoutes.push(r.route);\n      }\n\n      this.pluginRoutes.push(r.route);\n    });\n\n    const newRouter: Router = new Router({\n      mode:   'history',\n      routes: [...orderedPluginRoutes, ...allRoutes]\n    });\n\n    // handle plugin routes with parent\n    pluginRoutesWithParents.forEach((r: any) => {\n      newRouter.addRoute(r.parent, r.route);\n    });\n\n    // Typing is incorrect\n    (this.router as any).matcher = (newRouter as any).matcher;\n  }\n}\n"],"mappings":"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"}]}