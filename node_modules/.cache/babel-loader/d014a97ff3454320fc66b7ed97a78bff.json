{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/GrafanaDashboard.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/GrafanaDashboard.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Loading","Banner","computeDashboardUrl","CATALOG","components","props","url","type","String","required","vars","Object","default","_default","range","refreshRate","modifyPrefix","Boolean","backgroundColor","theme","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","inStore","res","wrap","_callee$","_context","prev","next","$store","getters","dispatch","concat","APP","id","sent","monitoringVersion","currentVersion","stop","data","loading","error","interval","errorTimer","computed","currentUrl","computeUrl","grafanaUrl","replace","graphWindow","_this$$refs$frame","$refs","frame","contentWindow","graphHistory","_this$graphWindow","history","graphDocument","_this$graphWindow2","document","watch","neu","_this$graphWindow3","angular","location","_this2","setInterval","reload","clearInterval","mounted","onload","inject","poll","beforeDestroy","methods","_this3","_this3$$refs$frame","errorElements","getElementsByClassName","errorCornerElements","panelInFullScreenElements","panelContainerElements","length","loaded","errorMessageElms","getElementsByTagName","errorMessage","innerText","isFailure","includes","Error","$set","ex","computeFromTo","from","to","embedUrl","clusterId","params","computeParams","fromTo","refresh","keys","entries","forEach","entry","paramName","ev","preventDefault","injectCss","_this$$refs$frame2","style","createElement","innerHTML","head","appendChild"],"sources":["node_modules/@rancher/shell/components/GrafanaDashboard.vue"],"sourcesContent":["<script>\r\nimport Loading from '@shell/components/Loading';\r\nimport { Banner } from '@components/Banner';\r\nimport { computeDashboardUrl } from '@shell/utils/grafana';\r\nimport { CATALOG } from '@shell/config/types';\r\n\r\nexport default {\r\n  components: { Banner, Loading },\r\n  props:      {\r\n    url: {\r\n      type:     String,\r\n      required: true,\r\n    },\r\n    vars: {\r\n      type:    Object,\r\n      default: () => ({})\r\n    },\r\n    range: {\r\n      type:    String,\r\n      default: null\r\n    },\r\n    refreshRate: {\r\n      type:    String,\r\n      default: null\r\n    },\r\n    // change the grafana url prefix for local clusters in certain monitoring versions\r\n    // project monitoring (projectHelmCharts) supply a grafana url that never needs to be modified in this way\r\n    modifyPrefix: {\r\n      type:    Boolean,\r\n      default: true\r\n    },\r\n    backgroundColor: {\r\n      type:    String,\r\n      default: '#1b1c21'\r\n    },\r\n    theme: {\r\n      type:    String,\r\n      default: 'dark'\r\n    }\r\n  },\r\n  async fetch() {\r\n    const inStore = this.$store.getters['currentProduct'].inStore;\r\n    const res = await this.$store.dispatch(`${ inStore }/find`, { type: CATALOG.APP, id: 'cattle-monitoring-system/rancher-monitoring' });\r\n\r\n    this.monitoringVersion = res?.currentVersion;\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false, error: false, interval: null, errorTimer: null, monitoringVersion: null\r\n    };\r\n  },\r\n  computed: {\r\n    currentUrl() {\r\n      return this.computeUrl();\r\n    },\r\n    grafanaUrl() {\r\n      return this.currentUrl.replace('&kiosk', '');\r\n    },\r\n    graphWindow() {\r\n      return this.$refs.frame?.contentWindow;\r\n    },\r\n    graphHistory() {\r\n      return this.graphWindow?.history;\r\n    },\r\n    graphDocument() {\r\n      return this.graphWindow?.document;\r\n    }\r\n  },\r\n  watch: {\r\n    currentUrl(neu) {\r\n      // Should consider changing `this.graphWindow?.angular` to something like `!loaded && !error`\r\n      // https://github.com/rancher/dashboard/pull/5802\r\n      if (this.graphHistory && this.graphWindow?.angular) {\r\n        this.graphWindow.location.replace(neu);\r\n      }\r\n    },\r\n\r\n    error(neu) {\r\n      if (neu) {\r\n        this.errorTimer = setInterval(() => {\r\n          this.reload();\r\n        }, 45000);\r\n      } else {\r\n        clearInterval(this.errorTimer);\r\n        this.errorTimer = null;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$refs.frame.onload = this.inject;\r\n    this.poll();\r\n  },\r\n  beforeDestroy() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n\r\n    if (this.errorTimer) {\r\n      clearInterval(this.errorTimer);\r\n    }\r\n  },\r\n  methods: {\r\n    poll() {\r\n      if (this.interval) {\r\n        clearInterval(this.interval);\r\n        this.interval = null;\r\n      }\r\n\r\n      this.interval = setInterval(() => {\r\n        try {\r\n          const graphWindow = this.$refs.frame?.contentWindow;\r\n          const errorElements = graphWindow.document.getElementsByClassName('alert-error');\r\n          const errorCornerElements = graphWindow.document.getElementsByClassName('panel-info-corner--error');\r\n          const panelInFullScreenElements = graphWindow.document.getElementsByClassName('panel-in-fullscreen');\r\n          const panelContainerElements = graphWindow.document.getElementsByClassName('panel-container');\r\n          const error = errorElements.length > 0 || errorCornerElements.length > 0;\r\n          const loaded = panelInFullScreenElements.length > 0 || panelContainerElements.length > 0;\r\n          const errorMessageElms = graphWindow.document.getElementsByTagName('pre');\r\n          const errorMessage = errorMessageElms.length > 0 ? errorMessageElms[0].innerText : '';\r\n          const isFailure = errorMessage.includes('\"status\": \"Failure\"');\r\n\r\n          if (error) {\r\n            throw new Error('An error was detected in the iframe');\r\n          }\r\n\r\n          this.$set(this, 'loading', !loaded);\r\n          this.$set(this, 'error', isFailure);\r\n        } catch (ex) {\r\n          this.$set(this, 'error', true);\r\n          this.$set(this, 'loading', false);\r\n          clearInterval(this.interval);\r\n          this.interval = null;\r\n        }\r\n      }, 100);\r\n    },\r\n    computeFromTo() {\r\n      return {\r\n        from: `now-${ this.range }`,\r\n        to:   `now`\r\n      };\r\n    },\r\n    computeUrl() {\r\n      const embedUrl = this.url;\r\n      const clusterId = this.$store.getters['currentCluster'].id;\r\n      const params = this.computeParams();\r\n\r\n      return computeDashboardUrl(this.monitoringVersion, embedUrl, clusterId, params, this.modifyPrefix);\r\n    },\r\n    computeParams() {\r\n      const params = {};\r\n      const fromTo = this.computeFromTo();\r\n\r\n      if (fromTo.from) {\r\n        params.from = fromTo.from;\r\n      }\r\n\r\n      if (fromTo.to) {\r\n        params.to = fromTo.to;\r\n      }\r\n\r\n      if (this.refreshRate) {\r\n        params.refresh = this.refreshRate;\r\n      }\r\n\r\n      if (Object.keys(this.vars).length > 0) {\r\n        Object.entries(this.vars).forEach((entry) => {\r\n          const paramName = `var-${ entry[0] }`;\r\n\r\n          params[paramName] = entry[1];\r\n        });\r\n      }\r\n\r\n      params.theme = this.theme;\r\n\r\n      return params;\r\n    },\r\n    reload(ev) {\r\n      ev && ev.preventDefault();\r\n      this.$refs.frame.contentWindow.location.reload();\r\n      this.poll();\r\n    },\r\n    injectCss() {\r\n      const style = document.createElement('style');\r\n\r\n      style.innerHTML = `\r\n        body .grafana-app .dashboard-content {\r\n          background: ${ this.backgroundColor };\r\n          padding: 0;\r\n        }\r\n\r\n        body .grafana-app .layout {\r\n          background: ${ this.backgroundColor };\r\n        }\r\n\r\n\r\n        body .grafana-app .dashboard-content .panel-container {\r\n          background-color: initial;\r\n          border: none;\r\n        }\r\n\r\n        body .grafana-app .dashboard-content .panel-wrapper {\r\n          height: 100%;\r\n        }\r\n\r\n        body .grafana-app .panel-menu-container {\r\n          display: none;\r\n        }\r\n\r\n        body .grafana-app .panel-title {\r\n          cursor: default;\r\n        }\r\n\r\n        body .grafana-app .panel-title .panel-title-text div {\r\n          display: none;\r\n        }\r\n      `;\r\n\r\n      const graphWindow = this.$refs.frame?.contentWindow;\r\n      const graphDocument = graphWindow?.document;\r\n\r\n      if (graphDocument.head) {\r\n        graphDocument.head.appendChild(style);\r\n      }\r\n    },\r\n\r\n    inject() {\r\n      this.injectCss();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"grafana-graph\">\r\n    <Banner\r\n      v-if=\"error\"\r\n      color=\"error\"\r\n      style=\"z-index: 1000\"\r\n    >\r\n      <div class=\"text-center\">\r\n        {{ t('grafanaDashboard.failedToLoad') }} <a\r\n          href=\"#\"\r\n          @click=\"reload\"\r\n        >{{ t('grafanaDashboard.reload') }}</a>\r\n      </div>\r\n    </Banner>\r\n    <iframe\r\n      v-show=\"!error\"\r\n      ref=\"frame\"\r\n      :class=\"{loading, frame: true}\"\r\n      :src=\"currentUrl\"\r\n      frameborder=\"0\"\r\n      scrolling=\"no\"\r\n    />\r\n    <div v-if=\"loading\">\r\n      <Loading />\r\n    </div>\r\n    <div\r\n      v-if=\"!loading && !error\"\r\n      class=\"external-link\"\r\n    >\r\n      <!-- https://github.com/harvester/harvester-installer/pull/512/files -->\r\n      <!-- It is necessary to include the parameter referer when accessing the Grafana page. -->\r\n      <!-- This parameter is required by the backend to identify the origin of the request from which cluster -->\r\n      <!-- The matching mechanism as follows: -->\r\n      <!-- ~.*/k8s/clusters/(c-m-.+)/.* -->\r\n      <!-- ~.*/dashboard/harvester/c/(c-m-.+)/.* -->\r\n      <a\r\n        :href=\"grafanaUrl\"\r\n        target=\"_blank\"\r\n        rel=\"noopener nofollow\"\r\n      >{{ t('grafanaDashboard.grafana') }} <i class=\"icon icon-external-link\" /></a>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang='scss' scoped>\r\n.grafana-graph {\r\n  position: relative;\r\n  min-height: 100%;\r\n  min-width: 100%;\r\n\r\n  & ::v-deep .content {\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0;\r\n  }\r\n\r\n  & ::v-deep .overlay {\r\n    position: static;\r\n    background-color: initial;\r\n  }\r\n\r\n  iframe {\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 20px;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n\r\n    &.loading {\r\n      visibility: hidden;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}