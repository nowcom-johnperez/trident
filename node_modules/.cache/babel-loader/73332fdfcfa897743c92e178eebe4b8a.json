{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugins.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugins.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["productsLoaded","clearModelCache","Plugin","PluginRoutes","UI_PLUGIN_BASE_URL","ExtensionPoint","MODEL_TYPE","_ref","inject","app","store","$axios","redirect","dynamic","validators","_lastLoaded","plugins","pluginRoutes","router","uiConfig","ep","internal","loadPluginAsync","plugin","_plugin$metadata","name","version","id","concat","url","metadata","direct","endpoint","_plugin$metadata2","main","loadAsync","mainFile","_this","Promise","resolve","reject","moduleUrl","element","document","createElement","src","type","async","oldPlugin","Object","values","find","p","startsWith","removed","removePlugin","then","window","onload","parentElement","removeChild","Error","Date","getTime","default","applyPlugin","dispatch","onerror","e","errorMessage","target","console","error","head","appendChild","catch","initPlugin","module","builtin","logout","_this2","_asyncToGenerator","regeneratorRuntime","mark","_callee","all","i","wrap","_callee$","_context","prev","next","length","abrupt","t0","stop","_this3","_callee2","promises","_callee2$","_context2","productNames","forEach","product","push","keys","types","typ","unregister","locales","localeObj","models","apply","_toConsumableArray","removeTypeFromStore","uninstall","uninstallHooks","fn","stores","pStore","key","storeName","map","commit","_this4","register","actionType","actionLocation","action","l10n","loadProducts","addRoutes","routes","_dynamic$type2","_dynamic$type","index","func","splice","getAll","getPlugins","getDynamic","typeName","_dynamic$typeName","getValidator","getUIConfig","uiArea","getAllUIConfig","lastLoad","listDynamic","products","loadPlugins","_ref2","_callee3","impl","_callee3$","_context3","sent","init","_x","arguments"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/core/plugins.js"],"sourcesContent":["import { productsLoaded } from '@shell/store/type-map';\nimport { clearModelCache } from '@shell/plugins/dashboard-store/model-loader';\nimport { Plugin } from './plugin';\nimport { PluginRoutes } from './plugin-routes';\nimport { UI_PLUGIN_BASE_URL } from '@shell/config/uiplugins';\nimport { ExtensionPoint } from './types';\n\nconst MODEL_TYPE = 'models';\n\nexport default function({\n  app,\n  store,\n  $axios,\n  redirect\n}, inject) {\n  const dynamic = {};\n  const validators = {};\n  let _lastLoaded = 0;\n\n  // Track which plugin loaded what, so we can unload stuff\n  const plugins = {};\n\n  const pluginRoutes = new PluginRoutes(app.router);\n\n  const uiConfig = {};\n\n  for (const ep in ExtensionPoint) {\n    uiConfig[ExtensionPoint[ep]] = {};\n  }\n\n  inject('plugin', {\n    // Plugins should not use these - but we will pass them in for now as a 2nd argument\n    // in case there are use cases not covered that require direct access - we may remove access later\n    internal() {\n      const internal = {\n        app,\n        store,\n        $axios,\n        redirect,\n        plugins: this\n      };\n\n      return internal;\n    },\n\n    // Load a plugin from a UI package\n    loadPluginAsync(plugin) {\n      const { name, version } = plugin;\n      const id = `${ name }-${ version }`;\n      let url;\n\n      if (plugin?.metadata?.direct === 'true') {\n        url = plugin.endpoint;\n      } else {\n        // See if the plugin has a main metadata property set\n        const main = plugin?.metadata?.main || `${ id }.umd.min.js`;\n\n        url = `${ UI_PLUGIN_BASE_URL }/${ name }/${ version }/plugin/${ main }`;\n      }\n\n      return this.loadAsync(id, url);\n    },\n\n    // Load a plugin from a UI package\n    loadAsync(id, mainFile) {\n      return new Promise((resolve, reject) => {\n        const moduleUrl = mainFile;\n        const element = document.createElement('script');\n\n        element.src = moduleUrl;\n        element.type = 'text/javascript';\n        element.async = true;\n\n        // id is `<product>-<version>`.\n        const oldPlugin = Object.values(plugins).find((p) => id.startsWith(p.name));\n\n        let removed = Promise.resolve();\n\n        if (oldPlugin) {\n          // Uninstall existing plugin if there is one. This ensures that last loaded plugin is not always used\n          // (nav harv1-->harv2-->harv1 and harv2 would be shown)\n          removed = this.removePlugin(oldPlugin.name).then(() => {\n            delete window[oldPlugin.id];\n\n            delete plugins[oldPlugin.id];\n          });\n        }\n\n        removed.then(() => {\n          element.onload = () => {\n            element.parentElement.removeChild(element);\n\n            if (!window[id]) {\n              return reject(new Error('Could not load plugin code'));\n            }\n\n            // Update the timestamp that new plugins were loaded - may be needed\n            // to update caches when new plugins are loaded\n            _lastLoaded = new Date().getTime();\n\n            // name is the name of the plugin, including the version number\n            const plugin = new Plugin(id);\n\n            plugins[id] = plugin;\n\n            // Initialize the plugin\n            window[id].default(plugin, this.internal());\n\n            // Uninstall existing plugin if there is one\n            this.removePlugin(plugin.name); // Removing this causes the plugin to not load on refresh\n\n            // Load all of the types etc from the plugin\n            this.applyPlugin(plugin);\n\n            // Add the plugin to the store\n            store.dispatch('uiplugins/addPlugin', plugin);\n\n            resolve();\n          };\n\n          element.onerror = (e) => {\n            element.parentElement.removeChild(element);\n            // Massage the error into something useful\n            const errorMessage = `Failed to load script from '${ e.target.src }'`;\n\n            console.error(errorMessage, e); // eslint-disable-line no-console\n            reject(new Error(errorMessage)); // This is more useful where it's used\n          };\n\n          document.head.appendChild(element);\n        }).catch((e) => {\n          const errorMessage = `Failed to unload old plugin${ oldPlugin?.id }`;\n\n          console.error(errorMessage, e); // eslint-disable-line no-console\n          reject(new Error(errorMessage)); // This is more useful where it's used\n        });\n      });\n    },\n\n    // Used by the dynamic loader when a plugin is included in the build\n    initPlugin(id, module) {\n      const plugin = new Plugin(id);\n\n      // Mark the plugin as being built-in\n      plugin.builtin = true;\n\n      plugins[id] = plugin;\n\n      // Initialize the plugin\n      const p = module;\n\n      try {\n        p.default(plugin, this.internal());\n\n        // Uninstall existing product if there is one\n        this.removePlugin(plugin.name);\n\n        // Load all of the types etc from the plugin\n        this.applyPlugin(plugin);\n\n        // Add the plugin to the store\n        store.dispatch('uiplugins/addPlugin', plugin);\n      } catch (e) {\n        console.error(`Error loading plugin ${ plugin.name }`); // eslint-disable-line no-console\n        console.error(e); // eslint-disable-line no-console\n      }\n    },\n\n    async logout() {\n      const all = Object.values(plugins);\n\n      for (let i = 0; i < all.length; i++) {\n        const plugin = all[i];\n\n        if (plugin.builtin) {\n          continue;\n        }\n\n        try {\n          await this.removePlugin(plugin.name);\n        } catch (e) {\n          console.error('Error removing plugin', e); // eslint-disable-line no-console\n        }\n\n        delete plugins[plugin.id];\n      }\n    },\n\n    // Remove the plugin\n    async removePlugin(name) {\n      const plugin = Object.values(plugins).find((p) => p.name === name);\n\n      if (!plugin) {\n        return;\n      }\n\n      const promises = [];\n\n      plugin.productNames.forEach((product) => {\n        promises.push(store.dispatch('type-map/removeProduct', { product, plugin }));\n      });\n\n      // Remove all of the types\n      Object.keys(plugin.types).forEach((typ) => {\n        Object.keys(plugin.types[typ]).forEach((name) => {\n          this.unregister(typ, name);\n\n          if (typ === MODEL_TYPE) {\n            clearModelCache(name);\n          }\n        });\n      });\n\n      // Remove locales\n      plugin.locales.forEach((localeObj) => {\n        promises.push(store.dispatch('i18n/removeLocale', localeObj));\n      });\n\n      if (plugin.types.models) {\n        // Ask the Steve stores to forget any data it has for models that we are removing\n        promises.push(...this.removeTypeFromStore(store, 'rancher', Object.keys(plugin.types.models)));\n        promises.push(...this.removeTypeFromStore(store, 'management', Object.keys(plugin.types.models)));\n      }\n\n      // Uninstall routes\n      pluginRoutes.uninstall(plugin);\n\n      // Call plugin uninstall hooks\n      plugin.uninstallHooks.forEach((fn) => fn(plugin, this.internal()));\n\n      // Remove the plugin itself\n      promises.push( store.dispatch('uiplugins/removePlugin', name));\n\n      // Unregister vuex stores\n      plugin.stores.forEach((pStore) => pStore.unregister(store));\n\n      // Remove validators\n      Object.keys(plugin.validators).forEach((key) => {\n        delete validators[key];\n      });\n\n      await Promise.all(promises);\n\n      // Update last load since we removed a plugin\n      _lastLoaded = new Date().getTime();\n    },\n\n    removeTypeFromStore(store, storeName, types) {\n      return (types || []).map((type) => store.commit(`${ storeName }/forgetType`, type));\n    },\n\n    // Apply the plugin based on its metadata\n    applyPlugin(plugin) {\n      // Types\n      Object.keys(plugin.types).forEach((typ) => {\n        Object.keys(plugin.types[typ]).forEach((name) => {\n          this.register(typ, name, plugin.types[typ][name]);\n        });\n      });\n\n      // UI Configuration - copy UI config from a plugin into the global uiConfig object\n      Object.keys(plugin.uiConfig).forEach((actionType) => {\n        Object.keys(plugin.uiConfig[actionType]).forEach((actionLocation) => {\n          plugin.uiConfig[actionType][actionLocation].forEach((action) => {\n            if (!uiConfig[actionType][actionLocation]) {\n              uiConfig[actionType][actionLocation] = [];\n            }\n            uiConfig[actionType][actionLocation].push(action);\n          });\n        });\n      });\n\n      // l10n\n      Object.keys(plugin.l10n).forEach((name) => {\n        plugin.l10n[name].forEach((fn) => {\n          this.register('l10n', name, fn);\n        });\n      });\n\n      // Initialize the product if the store is ready\n      if (productsLoaded()) {\n        this.loadProducts([plugin]);\n      }\n\n      // Register vuex stores\n      plugin.stores.forEach((pStore) => pStore.register()(store));\n\n      // Locales\n      plugin.locales.forEach((localeObj) => {\n        store.dispatch('i18n/addLocale', localeObj);\n      });\n\n      // Routes\n      pluginRoutes.addRoutes(plugin, plugin.routes);\n\n      // Validators\n      Object.keys(plugin.validators).forEach((key) => {\n        validators[key] = plugin.validators[key];\n      });\n    },\n\n    /**\n     * Register 'something' that can be dynamically loaded - e.g. model, edit, create, list, i18n\n     * @param {String} type type of thing to register, e.g. 'edit'\n     * @param {String} name unique name of 'something'\n     * @param {Function} fn function that dynamically loads the module for the thing being registered\n     */\n    register(type, name, fn) {\n      if (!dynamic[type]) {\n        dynamic[type] = {};\n      }\n\n      // Accumulate l10n resources rather than replace\n      if (type === 'l10n') {\n        if (!dynamic[type][name]) {\n          dynamic[type][name] = [];\n        }\n\n        dynamic[type][name].push(fn);\n      } else {\n        dynamic[type][name] = fn;\n      }\n    },\n\n    unregister(type, name, fn) {\n      if (type === 'l10n') {\n        if (dynamic[type]?.[name]) {\n          const index = dynamic[type][name].find((func) => func === fn);\n\n          if (index !== -1) {\n            dynamic[type][name].splice(index, 1);\n          }\n        }\n      } else if (dynamic[type]?.[name]) {\n        delete dynamic[type][name];\n      }\n    },\n\n    // For debugging\n    getAll() {\n      return dynamic;\n    },\n\n    getPlugins() {\n      return plugins;\n    },\n\n    getDynamic(typeName, name) {\n      return dynamic[typeName]?.[name];\n    },\n\n    getValidator(name) {\n      return validators[name];\n    },\n\n    /**\n     * Return the UI configuration for the given type and location\n     */\n    getUIConfig(type, uiArea) {\n      return uiConfig[type][uiArea] || [];\n    },\n\n    /**\n     * Returns all UI Configuration (useful for debugging)\n     */\n    getAllUIConfig() {\n      return uiConfig;\n    },\n\n    // Timestamp that a UI package was last loaded\n    // Typically used to invalidate caches (e.g. i18n) when new plugins are loaded\n    get lastLoad() {\n      return _lastLoaded;\n    },\n\n    listDynamic(typeName) {\n      if (!dynamic[typeName]) {\n        return [];\n      }\n\n      return Object.keys(dynamic[typeName]);\n    },\n\n    // Get the products provided by plugins\n    get products() {\n      return dynamic.products || [];\n    },\n\n    // Load all of the products provided by plugins\n    loadProducts(loadPlugins) {\n      if (!loadPlugins) {\n        loadPlugins = Object.values(plugins);\n      }\n\n      loadPlugins.forEach((plugin) => {\n        if (plugin.products) {\n          plugin.products.forEach(async(p) => {\n            const impl = await p;\n\n            if (impl.init) {\n              impl.init(plugin, store);\n            }\n          });\n        }\n      });\n    },\n  });\n}\n"],"mappings":"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"}]}