{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/computed.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/computed.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIucGFyc2UtZmxvYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zcGxpdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5lbnRyaWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKdmFyIF9yZXF1aXJlID0gcmVxdWlyZSgnQHNoZWxsL3V0aWxzL29iamVjdCcpLAogIF9zZXQgPSBfcmVxdWlyZS5zZXQsCiAgX2dldCA9IF9yZXF1aXJlLmdldDsKCi8qKg0KICogQ3JlYXRlcyBhIGNvbXB1dGVkIHByb3BlcnR5IHRoYXQgaGFuZGxlcyBjb252ZXJ0aW5nIHN0cmluZ3MgdG8gbnVtYmVycyBhbmQgbnVtYmVycyB0byBzdHJpbmdzLiBQYXJ0aWN1bGFybHkgd2hlbiBkZWFsaW5nIHdpdGggVW5pdElucHV0Lg0KICogQHBhcmFtIHsqfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSByZWFsIHZhbHVlDQogKiBAcmV0dXJucyB0aGUgY29tcHV0ZWQgcHJvcGVydHkNCiAqLwpleHBvcnQgZnVuY3Rpb24gaW50ZWdlclN0cmluZyhwYXRoKSB7CiAgcmV0dXJuIHsKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICByZXR1cm4gTnVtYmVyLnBhcnNlRmxvYXQoX2dldCh0aGlzLCBwYXRoKSk7CiAgICB9LAogICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsdWUpIHsKICAgICAgX3NldCh0aGlzLCBwYXRoLCB2YWx1ZS50b1N0cmluZygxMCkpOwogICAgfQogIH07Cn0KCi8qKg0KICogQ3JlYXRlcyBhIGNvbXB1dGVkIHByb3BlcnR5IHRoYXQgaGFuZGxlcyBjb252ZXJ0aW5nIHN0cmluZ3MgYSBsaXN0IG9mIHN0cmluZ3MgdGhhdCBsb29rIGxpa2UgWydrZXk9dmFsdWUnXSBpbnRvIHsga2V5OiB2YWx1ZSB9IGFuZCBiYWNrDQogKiBAcGFyYW0geyp9IHBhdGggVGhlIHBhdGggb2YgdGhlIHJlYWwgdmFsdWUNCiAqIEBwYXJhbSB7Kn0gZGVsaW1pdGVyIHRoZSBjaGFyYWN0ZXIvcyB1c2VkIGJldHdlZW4gdGhlIGtleS92YWx1ZS4gRGVmYXVsdCB2YWx1ZSAnPScuDQogKiBAcmV0dXJucyB0aGUgY29tcHV0ZWQgcHJvcGVydHkNCiAqLwpleHBvcnQgZnVuY3Rpb24ga2V5VmFsdWVTdHJpbmdzKHBhdGgpIHsKICB2YXIgZGVsaW1pdGVyID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiAnPSc7CiAgcmV0dXJuIHsKICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICB2YXIgX2dldDI7CiAgICAgIHZhciByZXN1bHQgPSB7fTsKICAgICAgKF9nZXQyID0gX2dldCh0aGlzLCBwYXRoKSkgPT09IG51bGwgfHwgX2dldDIgPT09IHZvaWQgMCB8fCBfZ2V0Mi5mb3JFYWNoKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIHZhciBfZW50cnkkc3BsaXQgPSBlbnRyeS5zcGxpdChkZWxpbWl0ZXIpLAogICAgICAgICAgX2VudHJ5JHNwbGl0MiA9IF9zbGljZWRUb0FycmF5KF9lbnRyeSRzcGxpdCwgMiksCiAgICAgICAgICBrZXkgPSBfZW50cnkkc3BsaXQyWzBdLAogICAgICAgICAgdmFsdWUgPSBfZW50cnkkc3BsaXQyWzFdOwogICAgICAgIHJlc3VsdFtrZXldID0gdmFsdWU7CiAgICAgIH0pOwogICAgICByZXR1cm4gcmVzdWx0OwogICAgfSwKICAgIHNldDogZnVuY3Rpb24gc2V0KHZhbHVlKSB7CiAgICAgIHZhciBuZXdWYWx1ZSA9IE9iamVjdC5lbnRyaWVzKHZhbHVlKS5tYXAoZnVuY3Rpb24gKF9yZWYpIHsKICAgICAgICB2YXIgX3JlZjIgPSBfc2xpY2VkVG9BcnJheShfcmVmLCAyKSwKICAgICAgICAgIGtleSA9IF9yZWYyWzBdLAogICAgICAgICAgdmFsdWUgPSBfcmVmMlsxXTsKICAgICAgICByZXR1cm4gIiIuY29uY2F0KGtleSkuY29uY2F0KGRlbGltaXRlcikuY29uY2F0KHZhbHVlKTsKICAgICAgfSk7CiAgICAgIF9zZXQodGhpcywgcGF0aCwgbmV3VmFsdWUpOwogICAgfQogIH07Cn0="},{"version":3,"names":["_require","require","set","get","integerString","path","Number","parseFloat","value","toString","keyValueStrings","delimiter","arguments","length","undefined","_get2","result","forEach","entry","_entry$split","split","_entry$split2","_slicedToArray","key","newValue","Object","entries","map","_ref","_ref2","concat"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/computed.js"],"sourcesContent":["const { set, get } = require('@shell/utils/object');\r\n\r\n/**\r\n * Creates a computed property that handles converting strings to numbers and numbers to strings. Particularly when dealing with UnitInput.\r\n * @param {*} path The path of the real value\r\n * @returns the computed property\r\n */\r\nexport function integerString(path) {\r\n  return {\r\n    get() {\r\n      return Number.parseFloat(get(this, path));\r\n    },\r\n\r\n    set(value) {\r\n      set(this, path, value.toString(10));\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a computed property that handles converting strings a list of strings that look like ['key=value'] into { key: value } and back\r\n * @param {*} path The path of the real value\r\n * @param {*} delimiter the character/s used between the key/value. Default value '='.\r\n * @returns the computed property\r\n */\r\nexport function keyValueStrings(path, delimiter = '=') {\r\n  return {\r\n    get() {\r\n      const result = {};\r\n\r\n      get(this, path)?.forEach((entry) => {\r\n        const [key, value] = entry.split(delimiter);\r\n\r\n        result[key] = value;\r\n      });\r\n\r\n      return result;\r\n    },\r\n    set(value) {\r\n      const newValue = Object.entries(value).map(([key, value]) => `${ key }${ delimiter }${ value }`);\r\n\r\n      set(this, path, newValue);\r\n    }\r\n  };\r\n}\r\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,QAAA,GAAqBC,OAAO,CAAC,qBAAqB,CAAC;EAA3CC,IAAG,GAAAF,QAAA,CAAHE,GAAG;EAAEC,IAAG,GAAAH,QAAA,CAAHG,GAAG;;AAEhB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAE;EAClC,OAAO;IACLF,GAAG,WAAAA,IAAA,EAAG;MACJ,OAAOG,MAAM,CAACC,UAAU,CAACJ,IAAG,CAAC,IAAI,EAAEE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAEDH,GAAG,WAAAA,IAACM,KAAK,EAAE;MACTN,IAAG,CAAC,IAAI,EAAEG,IAAI,EAAEG,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC;IACrC;EACF,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACL,IAAI,EAAmB;EAAA,IAAjBM,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EACnD,OAAO;IACLT,GAAG,WAAAA,IAAA,EAAG;MAAA,IAAAY,KAAA;MACJ,IAAMC,MAAM,GAAG,CAAC,CAAC;MAEjB,CAAAD,KAAA,GAAAZ,IAAG,CAAC,IAAI,EAAEE,IAAI,CAAC,cAAAU,KAAA,eAAfA,KAAA,CAAiBE,OAAO,CAAC,UAACC,KAAK,EAAK;QAClC,IAAAC,YAAA,GAAqBD,KAAK,CAACE,KAAK,CAACT,SAAS,CAAC;UAAAU,aAAA,GAAAC,cAAA,CAAAH,YAAA;UAApCI,GAAG,GAAAF,aAAA;UAAEb,KAAK,GAAAa,aAAA;QAEjBL,MAAM,CAACO,GAAG,CAAC,GAAGf,KAAK;MACrB,CAAC,CAAC;MAEF,OAAOQ,MAAM;IACf,CAAC;IACDd,GAAG,WAAAA,IAACM,KAAK,EAAE;MACT,IAAMgB,QAAQ,GAAGC,MAAM,CAACC,OAAO,CAAClB,KAAK,CAAC,CAACmB,GAAG,CAAC,UAAAC,IAAA;QAAA,IAAAC,KAAA,GAAAP,cAAA,CAAAM,IAAA;UAAEL,GAAG,GAAAM,KAAA;UAAErB,KAAK,GAAAqB,KAAA;QAAA,UAAAC,MAAA,CAAUP,GAAG,EAAAO,MAAA,CAAKnB,SAAS,EAAAmB,MAAA,CAAKtB,KAAK;MAAA,CAAG,CAAC;MAEhGN,IAAG,CAAC,IAAI,EAAEG,IAAI,EAAEmB,QAAQ,CAAC;IAC3B;EACF,CAAC;AACH"}]}