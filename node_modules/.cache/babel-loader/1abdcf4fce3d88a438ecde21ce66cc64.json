{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/auth/saml.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/auth/saml.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwpmdW5jdGlvbiBvd25LZXlzKGUsIHIpIHsgdmFyIHQgPSBPYmplY3Qua2V5cyhlKTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpOyByICYmIChvID0gby5maWx0ZXIoZnVuY3Rpb24gKHIpIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTsgfSkpLCB0LnB1c2guYXBwbHkodCwgbyk7IH0gcmV0dXJuIHQ7IH0KZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKSB7IGZvciAodmFyIHIgPSAxOyByIDwgYXJndW1lbnRzLmxlbmd0aDsgcisrKSB7IHZhciB0ID0gbnVsbCAhPSBhcmd1bWVudHNbcl0gPyBhcmd1bWVudHNbcl0gOiB7fTsgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgX2RlZmluZVByb3BlcnR5KGUsIHIsIHRbcl0pOyB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsIHIsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodCwgcikpOyB9KTsgfSByZXR1cm4gZTsgfQppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCBMb2FkaW5nIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0xvYWRpbmcnOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IEF1dGhDb25maWcgZnJvbSAnQHNoZWxsL21peGlucy9hdXRoLWNvbmZpZyc7CmltcG9ydCBDcnVSZXNvdXJjZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9DcnVSZXNvdXJjZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IHsgQ2hlY2tib3ggfSBmcm9tICdAY29tcG9uZW50cy9Gb3JtL0NoZWNrYm94JzsKaW1wb3J0IHsgQmFubmVyIH0gZnJvbSAnQGNvbXBvbmVudHMvQmFubmVyJzsKaW1wb3J0IEFsbG93ZWRQcmluY2lwYWxzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2F1dGgvQWxsb3dlZFByaW5jaXBhbHMnOwppbXBvcnQgRmlsZVNlbGVjdG9yIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vRmlsZVNlbGVjdG9yJzsKaW1wb3J0IEF1dGhCYW5uZXIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvYXV0aC9BdXRoQmFubmVyJzsKaW1wb3J0IGNvbmZpZyBmcm9tICdAc2hlbGwvZWRpdC9hdXRoL2xkYXAvY29uZmlnJzsKZXhwb3J0IHZhciBTSElCQk9MRVRIID0gJ3NoaWJib2xldGgnOwpleHBvcnQgdmFyIE9LVEEgPSAnb2t0YSc7CgovLyBTdGFuZGFyZCBMREFQIGRlZmF1bHRzCnZhciBMREFQX0RFRkFVTFRTID0gewogIGNvbm5lY3Rpb25UaW1lb3V0OiA1MDAwLAogIGdyb3VwRE5BdHRyaWJ1dGU6ICdlbnRyeUROJywKICBncm91cE1lbWJlck1hcHBpbmdBdHRyaWJ1dGU6ICdtZW1iZXInLAogIGdyb3VwTWVtYmVyVXNlckF0dHJpYnV0ZTogJ2VudHJ5RE4nLAogIGdyb3VwTmFtZUF0dHJpYnV0ZTogJ2NuJywKICBncm91cE9iamVjdENsYXNzOiAnZ3JvdXBPZk5hbWVzJywKICBncm91cFNlYXJjaEF0dHJpYnV0ZTogJ2NuJywKICBuZXN0ZWRHcm91cE1lbWJlcnNoaXBFbmFibGVkOiBmYWxzZSwKICBwb3J0OiAzODksCiAgc2VydmVyczogW10sCiAgc3RhcnR0bHM6IGZhbHNlLAogIHRsczogZmFsc2UsCiAgZGlzYWJsZWRTdGF0dXNCaXRtYXNrOiAwLAogIHVzZXJMb2dpbkF0dHJpYnV0ZTogJ3VpZCcsCiAgdXNlck1lbWJlckF0dHJpYnV0ZTogJ21lbWJlck9mJywKICB1c2VyTmFtZUF0dHJpYnV0ZTogJ2NuJywKICB1c2VyT2JqZWN0Q2xhc3M6ICdpbmV0T3JnUGVyc29uJywKICB1c2VyU2VhcmNoQXR0cmlidXRlOiAndWlkfHNufGdpdmVuTmFtZScKfTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIExvYWRpbmc6IExvYWRpbmcsCiAgICBDcnVSZXNvdXJjZTogQ3J1UmVzb3VyY2UsCiAgICBMYWJlbGVkSW5wdXQ6IExhYmVsZWRJbnB1dCwKICAgIEJhbm5lcjogQmFubmVyLAogICAgQWxsb3dlZFByaW5jaXBhbHM6IEFsbG93ZWRQcmluY2lwYWxzLAogICAgQ2hlY2tib3g6IENoZWNrYm94LAogICAgRmlsZVNlbGVjdG9yOiBGaWxlU2VsZWN0b3IsCiAgICBjb25maWc6IGNvbmZpZywKICAgIEF1dGhCYW5uZXI6IEF1dGhCYW5uZXIKICB9LAogIG1peGluczogW0NyZWF0ZUVkaXRWaWV3LCBBdXRoQ29uZmlnXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd0xkYXA6IGZhbHNlLAogICAgICBzaG93TGRhcERldGFpbHM6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRBcmdzOiBmdW5jdGlvbiB0QXJncygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBiYXNlVXJsOiB0aGlzLnNlcnZlclNldHRpbmcsCiAgICAgICAgcHJvdmlkZXI6IHRoaXMuZGlzcGxheU5hbWUsCiAgICAgICAgdXNlcm5hbWU6IHRoaXMucHJpbmNpcGFsLmxvZ2luTmFtZSB8fCB0aGlzLnByaW5jaXBhbC5uYW1lCiAgICAgIH07CiAgICB9LAogICAgdG9TYXZlOiBmdW5jdGlvbiB0b1NhdmUoKSB7CiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHsKICAgICAgICBlbmFibGVkOiB0cnVlCiAgICAgIH0sIHRoaXMubW9kZWwpOwogICAgfSwKICAgIC8vIERvZXMgdGhlIGF1dGggcHJvdmlkZXIgc3VwcG9ydCBMREFQIGZvciBzZWFyY2ggaW4gYWRkaXRpb24gdG8gU0FNTD8KICAgIHN1cHBvcnRzTERBUFNlYXJjaDogZnVuY3Rpb24gc3VwcG9ydHNMREFQU2VhcmNoKCkgewogICAgICByZXR1cm4gdGhpcy5OQU1FID09PSBTSElCQk9MRVRIIHx8IHRoaXMuTkFNRSA9PT0gT0tUQTsKICAgIH0sCiAgICBsZGFwSG9zdHM6IGZ1bmN0aW9uIGxkYXBIb3N0cygpIHsKICAgICAgdmFyIF90aGlzJG1vZGVsOwogICAgICB2YXIgaG9zdHMgPSAoKF90aGlzJG1vZGVsID0gdGhpcy5tb2RlbCkgPT09IG51bGwgfHwgX3RoaXMkbW9kZWwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1vZGVsLm9wZW5MZGFwQ29uZmlnLnNlcnZlcnMpIHx8IFtdOwogICAgICByZXR1cm4gaG9zdHMuam9pbignLCcpOwogICAgfSwKICAgIGxkYXBQcm90b2NvbDogZnVuY3Rpb24gbGRhcFByb3RvY29sKCkgewogICAgICB2YXIgX3RoaXMkbW9kZWwyLCBfdGhpcyRtb2RlbDM7CiAgICAgIGlmICgoX3RoaXMkbW9kZWwyID0gdGhpcy5tb2RlbCkgIT09IG51bGwgJiYgX3RoaXMkbW9kZWwyICE9PSB2b2lkIDAgJiYgKF90aGlzJG1vZGVsMiA9IF90aGlzJG1vZGVsMi5vcGVuTGRhcENvbmZpZykgIT09IG51bGwgJiYgX3RoaXMkbW9kZWwyICE9PSB2b2lkIDAgJiYgX3RoaXMkbW9kZWwyLnN0YXJ0dGxzKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCgnYXV0aENvbmZpZy5sZGFwLnByb3RvY29scy5zdGFydHRscycpOwogICAgICB9IGVsc2UgaWYgKChfdGhpcyRtb2RlbDMgPSB0aGlzLm1vZGVsKSAhPT0gbnVsbCAmJiBfdGhpcyRtb2RlbDMgIT09IHZvaWQgMCAmJiAoX3RoaXMkbW9kZWwzID0gX3RoaXMkbW9kZWwzLm9wZW5MZGFwQ29uZmlnKSAhPT0gbnVsbCAmJiBfdGhpcyRtb2RlbDMgIT09IHZvaWQgMCAmJiBfdGhpcyRtb2RlbDMudGxzKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCgnYXV0aENvbmZpZy5sZGFwLnByb3RvY29scy50bHMnKTsKICAgICAgfQogICAgICByZXR1cm4gdGhpcy50KCdhdXRoQ29uZmlnLmxkYXAucHJvdG9jb2xzLmxkYXAnKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzaG93TGRhcDogZnVuY3Rpb24gc2hvd0xkYXAobmV1LCBvbGQpIHsKICAgICAgaWYgKG5ldSAmJiAhdGhpcy5tb2RlbC5vcGVuTGRhcENvbmZpZykgewogICAgICAgIC8vIFVzZSBhIHNwcmVhZCBvZiBjb25maWcsIHNvIHRoYXQgaWYgZG9uJ3QgbWFrZSBjaGFuZ2VzIHRvIHRoZSBkZWZhdWx0cyBpZiB0aGUgdXNlciBlZGl0cyB0aGVtCiAgICAgICAgdGhpcy4kc2V0KHRoaXMubW9kZWwsICdvcGVuTGRhcENvbmZpZycsIF9vYmplY3RTcHJlYWQoe30sIExEQVBfREVGQVVMVFMpKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"names":["Loading","CreateEditView","AuthConfig","CruResource","LabeledInput","Checkbox","Banner","AllowedPrincipals","FileSelector","AuthBanner","config","SHIBBOLETH","OKTA","LDAP_DEFAULTS","connectionTimeout","groupDNAttribute","groupMemberMappingAttribute","groupMemberUserAttribute","groupNameAttribute","groupObjectClass","groupSearchAttribute","nestedGroupMembershipEnabled","port","servers","starttls","tls","disabledStatusBitmask","userLoginAttribute","userMemberAttribute","userNameAttribute","userObjectClass","userSearchAttribute","components","mixins","data","showLdap","showLdapDetails","computed","tArgs","baseUrl","serverSetting","provider","displayName","username","principal","loginName","name","toSave","_objectSpread","enabled","model","supportsLDAPSearch","NAME","ldapHosts","_this$model","hosts","openLdapConfig","join","ldapProtocol","_this$model2","_this$model3","t","watch","neu","old","$set"],"sources":["node_modules/@rancher/shell/edit/auth/saml.vue"],"sourcesContent":["<script>\nimport Loading from '@shell/components/Loading';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport AuthConfig from '@shell/mixins/auth-config';\nimport CruResource from '@shell/components/CruResource';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { Banner } from '@components/Banner';\nimport AllowedPrincipals from '@shell/components/auth/AllowedPrincipals';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport AuthBanner from '@shell/components/auth/AuthBanner';\nimport config from '@shell/edit/auth/ldap/config';\n\nexport const SHIBBOLETH = 'shibboleth';\nexport const OKTA = 'okta';\n\n// Standard LDAP defaults\nconst LDAP_DEFAULTS = {\n  connectionTimeout:            5000,\n  groupDNAttribute:             'entryDN',\n  groupMemberMappingAttribute:  'member',\n  groupMemberUserAttribute:     'entryDN',\n  groupNameAttribute:           'cn',\n  groupObjectClass:             'groupOfNames',\n  groupSearchAttribute:         'cn',\n  nestedGroupMembershipEnabled: false,\n  port:                         389,\n  servers:                      [],\n  starttls:                     false,\n  tls:                          false,\n  disabledStatusBitmask:        0,\n  userLoginAttribute:           'uid',\n  userMemberAttribute:          'memberOf',\n  userNameAttribute:            'cn',\n  userObjectClass:              'inetOrgPerson',\n  userSearchAttribute:          'uid|sn|givenName'\n};\n\nexport default {\n  components: {\n    Loading,\n    CruResource,\n    LabeledInput,\n    Banner,\n    AllowedPrincipals,\n    Checkbox,\n    FileSelector,\n    config,\n    AuthBanner\n  },\n\n  mixins: [CreateEditView, AuthConfig],\n  data() {\n    return {\n      showLdap:        false,\n      showLdapDetails: false,\n    };\n  },\n\n  computed: {\n    tArgs() {\n      return {\n        baseUrl:  this.serverSetting,\n        provider: this.displayName,\n        username: this.principal.loginName || this.principal.name,\n      };\n    },\n\n    toSave() {\n      return { enabled: true, ...this.model };\n    },\n\n    // Does the auth provider support LDAP for search in addition to SAML?\n    supportsLDAPSearch() {\n      return this.NAME === SHIBBOLETH || this.NAME === OKTA;\n    },\n\n    ldapHosts() {\n      const hosts = this.model?.openLdapConfig.servers || [];\n\n      return hosts.join(',');\n    },\n\n    ldapProtocol() {\n      if (this.model?.openLdapConfig?.starttls) {\n        return this.t('authConfig.ldap.protocols.starttls');\n      } else if (this.model?.openLdapConfig?.tls) {\n        return this.t('authConfig.ldap.protocols.tls');\n      }\n\n      return this.t('authConfig.ldap.protocols.ldap');\n    }\n  },\n  watch: {\n    showLdap(neu, old) {\n      if (neu && !this.model.openLdapConfig) {\n        // Use a spread of config, so that if don't make changes to the defaults if the user edits them\n        this.$set(this.model, 'openLdapConfig', { ...LDAP_DEFAULTS });\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div v-else>\n    <CruResource\n      :cancel-event=\"true\"\n      :done-route=\"doneRoute\"\n      :mode=\"mode\"\n      :resource=\"model\"\n      :subtypes=\"[]\"\n      :validation-passed=\"true\"\n      :finish-button-mode=\"model.enabled ? 'edit' : 'enable'\"\n      :can-yaml=\"false\"\n      :errors=\"errors\"\n      :show-cancel=\"showCancel\"\n      @error=\"e=>errors = e\"\n      @finish=\"save\"\n      @cancel=\"cancel\"\n    >\n      <template v-if=\"model.enabled && !isEnabling && !editConfig\">\n        <AuthBanner\n          :t-args=\"tArgs\"\n          :disable=\"disable\"\n          :edit=\"goToEdit\"\n        >\n          <template\n            slot=\"rows\"\n          >\n            <tr><td>{{ t(`authConfig.saml.displayName`) }}: </td><td>{{ model.displayNameField }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.userName`) }}: </td><td>{{ model.userNameField }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.UID`) }}: </td><td>{{ model.uidField }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.entityID`) }}: </td><td>{{ model.entityID }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.api`) }}: </td><td>{{ model.rancherApiHost }}</td></tr>\n            <tr><td>{{ t(`authConfig.saml.groups`) }}: </td><td>{{ model.groupsField }}</td></tr>\n          </template>\n\n          <template\n            v-if=\"supportsLDAPSearch\"\n            slot=\"footer\"\n          >\n            <Banner\n              v-if=\"showLdap\"\n              color=\"success\"\n              class=\"banner\"\n            >\n              <div\n                class=\"advanced-ldap-banner\"\n              >\n                <div>{{ t('authConfig.saml.search.on') }}</div>\n                <div>\n                  <a\n                    class=\"toggle-btn\"\n                    @click=\"showLdapDetails = !showLdapDetails\"\n                  >\n                    <template v-if=\"showLdapDetails\">{{ t('authConfig.saml.search.hide') }}</template>\n                    <template v-else>{{ t('authConfig.saml.search.show') }}</template>\n                  </a>\n                </div>\n              </div>\n            </Banner>\n            <Banner\n              v-else\n              color=\"info\"\n            >\n              {{ t('authConfig.saml.search.off') }}\n            </Banner>\n\n            <table v-if=\"showLdapDetails && model.openLdapConfig\">\n              <tr><td>{{ t('authConfig.ldap.hostname.label') }}:</td><td>{{ ldapHosts }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.port') }}:</td><td>{{ model.openLdapConfig.port }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.protocol') }}:</td><td>{{ ldapProtocol }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.serviceAccountDN') }}:</td><td>{{ model.openLdapConfig.serviceAccountDistinguishedName }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.userSearchBase.label') }}:</td><td>{{ model.openLdapConfig.userSearchBase }}</td></tr>\n              <tr><td>{{ t('authConfig.ldap.groupSearchBase.label') }}:</td><td>{{ model.openLdapConfig.groupSearchBase }}</td></tr>\n            </table>\n          </template>\n        </AuthBanner>\n\n        <hr>\n\n        <AllowedPrincipals\n          :provider=\"NAME\"\n          :auth-config=\"model\"\n          :mode=\"mode\"\n        />\n      </template>\n\n      <template v-else>\n        <Banner\n          v-if=\"!model.enabled\"\n          :label=\"t('authConfig.stateBanner.disabled', tArgs)\"\n          color=\"warning\"\n        />\n\n        <h3>{{ t(`authConfig.saml.${NAME}`) }}</h3>\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.displayNameField\"\n              :label=\"t(`authConfig.saml.displayName`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.userNameField\"\n              :label=\"t(`authConfig.saml.userName`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-20\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.uidField\"\n              :label=\"t(`authConfig.saml.UID`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.groupsField\"\n              :label=\"t(`authConfig.saml.groups`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n        <div class=\"row mb-20\">\n          <div\n            v-if=\"NAME === 'keycloak' || NAME === 'ping'\"\n            class=\"col span-6\"\n          >\n            <LabeledInput\n              v-model=\"model.entityID\"\n              :label=\"t(`authConfig.saml.entityID`)\"\n              :mode=\"mode\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"model.rancherApiHost\"\n              :label=\"t(`authConfig.saml.api`)\"\n              :mode=\"mode\"\n              required\n            />\n          </div>\n        </div>\n\n        <div class=\"row mb-20\">\n          <div class=\"col span-4\">\n            <LabeledInput\n              v-model=\"model.spKey\"\n              :label=\"t(`authConfig.saml.key.label`)\"\n              :placeholder=\"t(`authConfig.saml.key.placeholder`)\"\n              :mode=\"mode\"\n              required\n              type=\"multiline\"\n            />\n            <FileSelector\n              class=\"role-tertiary add mt-5\"\n              :label=\"t('generic.readFromFile')\"\n              :mode=\"mode\"\n              @selected=\"$set(model, 'spKey', $event)\"\n            />\n          </div>\n          <div class=\"col span-4\">\n            <LabeledInput\n              v-model=\"model.spCert\"\n              :label=\"t(`authConfig.saml.cert.label`)\"\n              :placeholder=\"t(`authConfig.saml.cert.placeholder`)\"\n              :mode=\"mode\"\n              required\n              type=\"multiline\"\n            />\n            <FileSelector\n              class=\"role-tertiary add mt-5\"\n              :label=\"t('generic.readFromFile')\"\n              :mode=\"mode\"\n              @selected=\"$set(model, 'spCert', $event)\"\n            />\n          </div>\n          <div class=\"col span-4\">\n            <LabeledInput\n              v-model=\"model.idpMetadataContent\"\n              :label=\"t(`authConfig.saml.metadata.label`)\"\n              :placeholder=\"t(`authConfig.saml.metadata.placeholder`)\"\n              :mode=\"mode\"\n              required\n              type=\"multiline\"\n            />\n            <FileSelector\n              class=\"role-tertiary add mt-5\"\n              :label=\"t('generic.readFromFile')\"\n              :mode=\"mode\"\n              @selected=\"$set(model, 'idpMetadataContent', $event)\"\n            />\n          </div>\n        </div>\n        <div\n          v-if=\"!model.enabled\"\n          class=\"row\"\n        >\n          <div class=\"col span-12\">\n            <Banner color=\"info\">\n              <div v-clean-html=\"t('authConfig.associatedWarning', tArgs, true)\" />\n            </Banner>\n          </div>\n        </div>\n        <div v-if=\"supportsLDAPSearch\">\n          <div class=\"row\">\n            <h2>{{ t('authConfig.saml.search.title') }}</h2>\n          </div>\n          <div class=\"row\">\n            <Banner\n              label-key=\"authConfig.saml.search.message\"\n              color=\"info\"\n            />\n          </div>\n          <div class=\"row\">\n            <Checkbox\n              v-model=\"showLdap\"\n              :mode=\"mode\"\n              :label=\"t('authConfig.saml.showLdap')\"\n            />\n          </div>\n          <div class=\"row mt-20 mb-20\">\n            <config\n              v-if=\"showLdap && model.openLdapConfig\"\n              v-model=\"model.openLdapConfig\"\n              :type=\"NAME\"\n              :mode=\"mode\"\n              :is-create=\"!model.enabled\"\n            />\n          </div>\n        </div>\n      </template>\n    </CruResource>\n  </div>\n</template>\n<style lang=\"scss\" scoped>\n  .banner {\n    display: block;\n\n    &::v-deep code {\n      padding: 0 3px;\n      margin: 0 3px;\n    }\n  }\n\n  // Banner shows message and link formatted right aligned\n  .advanced-ldap-banner {\n    display: flex;\n    flex: 1;\n\n    > :first-child {\n      flex: 1;\n    }\n\n    .toggle-btn {\n      cursor: pointer;\n      user-select: none;\n    }\n  }\n</style>\n"],"mappings":";;;;;;;;;;;;AACA,OAAAA,OAAA;AACA,OAAAC,cAAA;AACA,OAAAC,UAAA;AACA,OAAAC,WAAA;AACA,SAAAC,YAAA;AACA,SAAAC,QAAA;AACA,SAAAC,MAAA;AACA,OAAAC,iBAAA;AACA,OAAAC,YAAA;AACA,OAAAC,UAAA;AACA,OAAAC,MAAA;AAEA,WAAAC,UAAA;AACA,WAAAC,IAAA;;AAEA;AACA,IAAAC,aAAA;EACAC,iBAAA;EACAC,gBAAA;EACAC,2BAAA;EACAC,wBAAA;EACAC,kBAAA;EACAC,gBAAA;EACAC,oBAAA;EACAC,4BAAA;EACAC,IAAA;EACAC,OAAA;EACAC,QAAA;EACAC,GAAA;EACAC,qBAAA;EACAC,kBAAA;EACAC,mBAAA;EACAC,iBAAA;EACAC,eAAA;EACAC,mBAAA;AACA;AAEA;EACAC,UAAA;IACAhC,OAAA,EAAAA,OAAA;IACAG,WAAA,EAAAA,WAAA;IACAC,YAAA,EAAAA,YAAA;IACAE,MAAA,EAAAA,MAAA;IACAC,iBAAA,EAAAA,iBAAA;IACAF,QAAA,EAAAA,QAAA;IACAG,YAAA,EAAAA,YAAA;IACAE,MAAA,EAAAA,MAAA;IACAD,UAAA,EAAAA;EACA;EAEAwB,MAAA,GAAAhC,cAAA,EAAAC,UAAA;EACAgC,IAAA,WAAAA,KAAA;IACA;MACAC,QAAA;MACAC,eAAA;IACA;EACA;EAEAC,QAAA;IACAC,KAAA,WAAAA,MAAA;MACA;QACAC,OAAA,OAAAC,aAAA;QACAC,QAAA,OAAAC,WAAA;QACAC,QAAA,OAAAC,SAAA,CAAAC,SAAA,SAAAD,SAAA,CAAAE;MACA;IACA;IAEAC,MAAA,WAAAA,OAAA;MACA,OAAAC,aAAA;QAAAC,OAAA;MAAA,QAAAC,KAAA;IACA;IAEA;IACAC,kBAAA,WAAAA,mBAAA;MACA,YAAAC,IAAA,KAAAzC,UAAA,SAAAyC,IAAA,KAAAxC,IAAA;IACA;IAEAyC,SAAA,WAAAA,UAAA;MAAA,IAAAC,WAAA;MACA,IAAAC,KAAA,KAAAD,WAAA,QAAAJ,KAAA,cAAAI,WAAA,uBAAAA,WAAA,CAAAE,cAAA,CAAAjC,OAAA;MAEA,OAAAgC,KAAA,CAAAE,IAAA;IACA;IAEAC,YAAA,WAAAA,aAAA;MAAA,IAAAC,YAAA,EAAAC,YAAA;MACA,KAAAD,YAAA,QAAAT,KAAA,cAAAS,YAAA,gBAAAA,YAAA,GAAAA,YAAA,CAAAH,cAAA,cAAAG,YAAA,eAAAA,YAAA,CAAAnC,QAAA;QACA,YAAAqC,CAAA;MACA,YAAAD,YAAA,QAAAV,KAAA,cAAAU,YAAA,gBAAAA,YAAA,GAAAA,YAAA,CAAAJ,cAAA,cAAAI,YAAA,eAAAA,YAAA,CAAAnC,GAAA;QACA,YAAAoC,CAAA;MACA;MAEA,YAAAA,CAAA;IACA;EACA;EACAC,KAAA;IACA3B,QAAA,WAAAA,SAAA4B,GAAA,EAAAC,GAAA;MACA,IAAAD,GAAA,UAAAb,KAAA,CAAAM,cAAA;QACA;QACA,KAAAS,IAAA,MAAAf,KAAA,oBAAAF,aAAA,KAAAnC,aAAA;MACA;IACA;EACA;AACA"}]}