{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/index.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ButtonDropdown","Mount","_VIEW","CodeMirror","jsyaml","ArrayListGrouped","randomStr","name","components","props","mode","type","String","default","value","Object","_default","namespace","savePvcHookName","required","configMaps","Array","secrets","namespacedPvcs","registerBeforeHook","Function","loading","Boolean","data","initializeStorage","computed","isView","volumeTypeOptions","_this","excludedFiles","defaultVolumeTypes","customVolumeTypes","require","context","keys","map","path","replace","filter","file","includes","concat","_toConsumableArray","sort","volumeType","label","t","action","addVolume","pvcNames","pvc","metadata","methods","volumes","$set","removeVolume","volume","removeName","row","_ref","toLowerCase","push","_type","persistentVolumeClaim","csi","volumeAttributes","emptyDir","medium","_defineProperty","vol","key","_typeof","getComponent","component","_unused","headerFor","$store","getters","yamlDisplay","dump","_unused2","openPopover","button","$refs","buttonDropdown","togglePopover","e","refresh","cm","forEach","removePvcForm","hookName","$emit"],"sources":["node_modules/@rancher/shell/edit/workload/storage/index.vue"],"sourcesContent":["<script>\nimport ButtonDropdown from '@shell/components/ButtonDropdown';\nimport Mount from '@shell/edit/workload/storage/Mount';\nimport { _VIEW } from '@shell/config/query-params';\nimport CodeMirror from '@shell/components/CodeMirror';\nimport jsyaml from 'js-yaml';\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport { randomStr } from '@shell/utils/string';\n\nexport default {\n  name: 'Storage',\n\n  components: {\n    ArrayListGrouped, ButtonDropdown, Mount, CodeMirror\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n\n    // pod spec\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n\n    namespace: {\n      type:    String,\n      default: null,\n    },\n\n    savePvcHookName: {\n      type:     String,\n      required: true,\n    },\n\n    // namespaced configmaps and secrets\n    configMaps: {\n      type:    Array,\n      default: () => [],\n    },\n\n    secrets: {\n      type:    Array,\n      default: () => [],\n    },\n    namespacedPvcs: {\n      type:    Array,\n      default: () => [],\n    },\n\n    registerBeforeHook: {\n      type:    Function,\n      default: null,\n    },\n    loading: {\n      default: false,\n      type:    Boolean\n    },\n  },\n\n  data() {\n    this.initializeStorage();\n\n    return {};\n  },\n\n  computed: {\n    isView() {\n      return this.mode === _VIEW;\n    },\n\n    /**\n     * Generated list of volumes\n     */\n    volumeTypeOptions() {\n      const excludedFiles = ['index', 'Mount', 'PVC', 'ContainerMountPaths'];\n      const defaultVolumeTypes = [\n        'csi',\n        'configMap',\n        'createPVC',\n        'persistentVolumeClaim'\n      ];\n      // Get all the custom volume types from the file names of this folder\n      const customVolumeTypes = require\n        .context('@shell/edit/workload/storage', false, /^.*\\.vue$/)\n        .keys()\n        .map((path) => path.replace(/(\\.\\/)|(.vue)/g, ''))\n        .filter((file) => !excludedFiles.includes(file));\n\n      return [\n        ...customVolumeTypes,\n        ...defaultVolumeTypes\n      ]\n        .sort()\n        .map((volumeType) => ({\n          label:  this.t(`workload.storage.subtypes.${ volumeType }`),\n          action: this.addVolume,\n          value:  volumeType,\n        }));\n    },\n\n    pvcNames() {\n      return this.namespacedPvcs.map((pvc) => pvc.metadata.name);\n    },\n  },\n\n  // watch: {\n  //   storageVolumes(neu, old) {\n  //     removeObjects(this.value.volumes, old);\n  //     addObjects(this.value.volumes, neu);\n  //     const names = neu.reduce((all, each) => {\n  //       all.push(each.name);\n\n  //       return all;\n  //     }, []);\n\n  //     this.container.volumeMounts = this.container.volumeMounts.filter(mount => names.includes(mount.name));\n  //   }\n  // },\n\n  methods: {\n    /**\n     * Initialize missing values for the container\n     */\n    initializeStorage() {\n      if (!this.value.volumes) {\n        this.$set(this.value, 'volumes', []);\n      }\n    },\n\n    /**\n     * Remove all mounts for given storage volume\n     */\n    removeVolume(volume) {\n      const removeName = volume.row.value.name;\n\n      this.value.volumes = this.value.volumes.filter(({ name }) => name !== removeName);\n    },\n\n    addVolume(type) {\n      const name = `vol-${ randomStr(5).toLowerCase() }`;\n\n      if (type === 'createPVC') {\n        this.value.volumes.push({\n          _type:                 'createPVC',\n          persistentVolumeClaim: {},\n          name,\n        });\n      } else if (type === 'csi') {\n        this.value.volumes.push({\n          _type: type,\n          csi:   { volumeAttributes: {} },\n          name,\n        });\n      } else if (type === 'emptyDir') {\n        this.value.volumes.push({\n          _type:    type,\n          emptyDir: { medium: '' },\n          name,\n        });\n      } else {\n        this.value.volumes.push({\n          _type:  type,\n          [type]: {},\n          name,\n        });\n      }\n\n      // this.container.volumeMounts.push({ name });\n    },\n\n    volumeType(vol) {\n      const type = Object.keys(vol).filter(\n        (key) => typeof vol[key] === 'object'\n      )[0];\n\n      return type;\n    },\n\n    // import component for volume type\n    getComponent(type) {\n      switch (type) {\n      case 'configMap':\n        return require(`@shell/edit/workload/storage/secret.vue`).default;\n      case 'createPVC':\n      case 'persistentVolumeClaim':\n        return require(`@shell/edit/workload/storage/persistentVolumeClaim/index.vue`)\n          .default;\n      case 'csi':\n        return require(`@shell/edit/workload/storage/csi/index.vue`).default;\n\n      default: {\n        let component;\n\n        try {\n          component = require(`@shell/edit/workload/storage/${ type }.vue`).default;\n        } catch {}\n\n        return component;\n      }\n      }\n    },\n\n    headerFor(type) {\n      if (\n        this.$store.getters['i18n/exists'](`workload.storage.subtypes.${ type }`)\n      ) {\n        return this.t(`workload.storage.subtypes.${ type }`);\n      } else {\n        return type;\n      }\n    },\n\n    yamlDisplay(volume) {\n      try {\n        return jsyaml.dump(volume);\n      } catch {\n        return volume;\n      }\n    },\n\n    openPopover() {\n      const button = this.$refs.buttonDropdown;\n\n      try {\n        button.togglePopover();\n      } catch (e) {}\n    },\n\n    // codemirror needs to refresh if it is in a tab that wasn't visible on page load\n    refresh() {\n      if (this.$refs.cm) {\n        this.$refs.cm.forEach((component) => component.refresh());\n      }\n    },\n\n    removePvcForm(hookName) {\n      this.$emit('removePvcForm', hookName);\n    }\n  },\n};\n</script>\n\n<template>\n  <div>\n    <!-- Storage Volumes -->\n    <ArrayListGrouped\n      :key=\"value.volumes.length\"\n      v-model=\"value.volumes\"\n      :mode=\"mode\"\n      @remove=\"removeVolume\"\n    >\n      <!-- Custom/default storage volume form -->\n      <template #default=\"props\">\n        <h3>{{ headerFor(volumeType(props.row.value)) }}</h3>\n        <div class=\"bordered-section\">\n          <component\n            :is=\"getComponent(volumeType(props.row.value))\"\n            v-if=\"getComponent(volumeType(props.row.value))\"\n            :value=\"props.row.value\"\n            :pod-spec=\"value\"\n            :mode=\"mode\"\n            :namespace=\"namespace\"\n            :secrets=\"secrets\"\n            :config-maps=\"configMaps\"\n            :pvcs=\"pvcNames\"\n            :register-before-hook=\"registerBeforeHook\"\n            :save-pvc-hook-name=\"savePvcHookName\"\n            :loading=\"loading\"\n            @removePvcForm=\"removePvcForm\"\n          />\n          <div v-else-if=\"isView\">\n            <CodeMirror\n              ref=\"cm\"\n              :value=\"yamlDisplay(props.row.value)\"\n              :options=\"{ readOnly: true, cursorBlinkRate: -1 }\"\n            />\n          </div>\n        </div>\n\n        <!-- Mount point list to be mapped to volume\n        <Mount\n          :container=\"container\"\n          :name=\"props.row.value.name\"\n          :mode=\"mode\"\n        /> -->\n      </template>\n\n      <!-- Add Storage Volume -->\n      <template #add>\n        <ButtonDropdown\n          v-if=\"!isView\"\n          id=\"select-volume\"\n          :button-label=\"t('workload.storage.addVolume')\"\n          :dropdown-options=\"volumeTypeOptions\"\n          size=\"sm\"\n          @click-action=\"e=>addVolume(e.value)\"\n        />\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n.volume-source {\n  padding: 20px;\n  margin: 20px 0px 20px 0px;\n  position: relative;\n\n  ::v-deep .code-mirror {\n    .CodeMirror {\n      background-color: var(--yaml-editor-bg);\n      & .CodeMirror-gutters {\n        background-color: var(--yaml-editor-bg);\n      }\n    }\n  }\n}\n\n.remove-vol {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  padding: 0px;\n}\n\n.add-vol:focus {\n  outline: none;\n  box-shadow: none;\n}\n</style>\n"],"mappings":"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"}]}