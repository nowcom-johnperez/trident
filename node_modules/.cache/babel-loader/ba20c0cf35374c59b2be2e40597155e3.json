{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/settings.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/settings.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmFzc2lnbi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgTUFOQUdFTUVOVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBERUZBVUxUX1BFUkZfU0VUVElORywgU0VUVElORyB9IGZyb20gJ0BzaGVsbC9jb25maWcvc2V0dGluZ3MnOwpleHBvcnQgdmFyIGZldGNoT3JDcmVhdGVTZXR0aW5nID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShzdG9yZSwgaWQsIHZhbCkgewogICAgdmFyIHNhdmUsCiAgICAgIHNldHRpbmcsCiAgICAgIHNjaGVtYSwKICAgICAgdXJsLAogICAgICBfYXJncyA9IGFyZ3VtZW50czsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIHNhdmUgPSBfYXJncy5sZW5ndGggPiAzICYmIF9hcmdzWzNdICE9PSB1bmRlZmluZWQgPyBfYXJnc1szXSA6IHRydWU7CiAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA0OwogICAgICAgICAgcmV0dXJuIHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmQnLCB7CiAgICAgICAgICAgIHR5cGU6IE1BTkFHRU1FTlQuU0VUVElORywKICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICB9KTsKICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBzZXR0aW5nID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgNzoKICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgIHNjaGVtYSA9IHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvc2NoZW1hRm9yJ10oTUFOQUdFTUVOVC5TRVRUSU5HKTsKICAgICAgICAgIHVybCA9IHNjaGVtYS5saW5rRm9yKCdjb2xsZWN0aW9uJyk7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvY3JlYXRlJywgewogICAgICAgICAgICB0eXBlOiBNQU5BR0VNRU5ULlNFVFRJTkcsCiAgICAgICAgICAgIG1ldGFkYXRhOiB7CiAgICAgICAgICAgICAgbmFtZTogaWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdmFsdWU6IHZhbCwKICAgICAgICAgICAgZGVmYXVsdDogdmFsIHx8ICcnCiAgICAgICAgICB9KTsKICAgICAgICBjYXNlIDEzOgogICAgICAgICAgc2V0dGluZyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICBpZiAoIXNhdmUpIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE3OwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNzsKICAgICAgICAgIHJldHVybiBzZXR0aW5nLnNhdmUoewogICAgICAgICAgICB1cmw6IHVybAogICAgICAgICAgfSk7CiAgICAgICAgY2FzZSAxNzoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHNldHRpbmcpOwogICAgICAgIGNhc2UgMTg6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwgN11dKTsKICB9KSk7CiAgcmV0dXJuIGZ1bmN0aW9uIGZldGNoT3JDcmVhdGVTZXR0aW5nKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCk7Ci8qKgogICogRmV0Y2ggYSBzcGVjaWZpYyBzZXR0aW5nIHRoYXQgbWlnaHQgbm90IGV4aXN0CiAgKiBXZSBmZXRjaCBhbGwgc2V0dGluZ3MgLSByZWFsaXR5IGlzIFJhbmNoZXIgd2lsbCBoYXZlIGRvbmUgdGhpcyBhbHJlYWR5LCBzbyB0aGVyZSdzIG5vIG92ZXJoZWFkIGluIGRvaW5nCiAgKiB0aGlzIC0gYnV0IGlmIHdlIGZldGNoIGEgc3BlY2lmaWMgc2V0dGluZyB0aGF0IGRvZXMgbm90IGV4aXN0LCB3ZSB3aWxsIGdldCBhIDQwNCwgd2hpY2ggd2UgZG9uJ3Qgd2FudAogICovCmV4cG9ydCB2YXIgZmV0Y2hTZXR0aW5nID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHN0b3JlLCBpZCkgewogICAgdmFyIGFsbCwgc2V0dGluZzsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDI7CiAgICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2goJ21hbmFnZW1lbnQvZmluZEFsbCcsIHsKICAgICAgICAgICAgdHlwZTogTUFOQUdFTUVOVC5TRVRUSU5HCiAgICAgICAgICB9KTsKICAgICAgICBjYXNlIDI6CiAgICAgICAgICBhbGwgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgIHNldHRpbmcgPSAoYWxsIHx8IFtdKS5maW5kKGZ1bmN0aW9uIChzZXR0aW5nKSB7CiAgICAgICAgICAgIHJldHVybiBzZXR0aW5nLmlkID09PSBpZDsKICAgICAgICAgIH0pOwogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHNldHRpbmcpOwogICAgICAgIGNhc2UgNToKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CiAgcmV0dXJuIGZ1bmN0aW9uIGZldGNoU2V0dGluZyhfeDQsIF94NSkgewogICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIHNldFNldHRpbmcgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmMyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoc3RvcmUsIGlkLCB2YWwpIHsKICAgIHZhciBzZXR0aW5nOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgIHJldHVybiBmZXRjaE9yQ3JlYXRlU2V0dGluZyhzdG9yZSwgaWQsIHZhbCwgZmFsc2UpOwogICAgICAgIGNhc2UgMjoKICAgICAgICAgIHNldHRpbmcgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgIHNldHRpbmcudmFsdWUgPSB2YWw7CiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDY7CiAgICAgICAgICByZXR1cm4gc2V0dGluZy5zYXZlKCk7CiAgICAgICAgY2FzZSA2OgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHNldHRpbmcpOwogICAgICAgIGNhc2UgNzoKICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgIH0KICAgIH0sIF9jYWxsZWUzKTsKICB9KSk7CiAgcmV0dXJuIGZ1bmN0aW9uIHNldFNldHRpbmcoX3g2LCBfeDcsIF94OCkgewogICAgcmV0dXJuIF9yZWYzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOwpleHBvcnQgdmFyIGdldFBlcmZvcm1hbmNlU2V0dGluZyA9IGZ1bmN0aW9uIGdldFBlcmZvcm1hbmNlU2V0dGluZyhyb290R2V0dGVycykgewogIHZhciBwZXJmU2V0dGluZ1Jlc291cmNlID0gcm9vdEdldHRlcnNbJ21hbmFnZW1lbnQvYnlJZCddKE1BTkFHRU1FTlQuU0VUVElORywgU0VUVElORy5VSV9QRVJGT1JNQU5DRSk7CiAgdmFyIHBlcmZTZXR0aW5nID0ge307CiAgaWYgKHBlcmZTZXR0aW5nUmVzb3VyY2UgPT09IG51bGwgfHwgcGVyZlNldHRpbmdSZXNvdXJjZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogcGVyZlNldHRpbmdSZXNvdXJjZS52YWx1ZSkgewogICAgdHJ5IHsKICAgICAgcGVyZlNldHRpbmcgPSBKU09OLnBhcnNlKHBlcmZTZXR0aW5nUmVzb3VyY2UudmFsdWUpOwogICAgfSBjYXRjaCAoZSkgewogICAgICBjb25zb2xlLndhcm4oJ3VpLXBlcmZvcm1hbmNlIHNldHRpbmcgY29udGFpbnMgaW52YWxpZCBkYXRhJyk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZQogICAgfQogIH0KICAvLyBTdGFydCB3aXRoIHRoZSBkZWZhdWx0IGFuZCBvdmVyd3JpdGUgdGhlIHZhbHVlcyBmcm9tIHRoZSBzZXR0aW5nIC0gZW5zdXJlcyB3ZSBoYXZlIGRlZmF1bHRzIGZvciBuZXdseSBhZGRlZCBvcHRpb25zCiAgcmV0dXJuIE9iamVjdC5hc3NpZ24oREVGQVVMVF9QRVJGX1NFVFRJTkcsIHBlcmZTZXR0aW5nIHx8IHt9KTsKfTs="},{"version":3,"names":["MANAGEMENT","DEFAULT_PERF_SETTING","SETTING","fetchOrCreateSetting","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","store","id","val","save","setting","schema","url","_args","arguments","wrap","_callee$","_context","prev","next","length","undefined","dispatch","type","sent","t0","getters","linkFor","metadata","name","value","default","abrupt","stop","_x","_x2","_x3","apply","fetchSetting","_ref2","_callee2","all","_callee2$","_context2","find","_x4","_x5","setSetting","_ref3","_callee3","_callee3$","_context3","_x6","_x7","_x8","getPerformanceSetting","rootGetters","perfSettingResource","UI_PERFORMANCE","perfSetting","JSON","parse","e","console","warn","Object","assign"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/settings.ts"],"sourcesContent":["import { MANAGEMENT } from '@shell/config/types';\nimport { Store } from 'vuex';\nimport { DEFAULT_PERF_SETTING, PerfSettings, SETTING } from '@shell/config/settings';\n\nexport const fetchOrCreateSetting = async(store: Store<any>, id: string, val: string, save = true): Promise<any> => {\n  let setting;\n\n  try {\n    setting = await store.dispatch('management/find', { type: MANAGEMENT.SETTING, id });\n  } catch {\n    const schema = store.getters['management/schemaFor'](MANAGEMENT.SETTING);\n    const url = schema.linkFor('collection');\n\n    setting = await store.dispatch('management/create', {\n      type: MANAGEMENT.SETTING, metadata: { name: id }, value: val, default: val || ''\n    });\n    if ( save ) {\n      await setting.save({ url });\n    }\n  }\n\n  return setting;\n};\n\n/**\n  * Fetch a specific setting that might not exist\n  * We fetch all settings - reality is Rancher will have done this already, so there's no overhead in doing\n  * this - but if we fetch a specific setting that does not exist, we will get a 404, which we don't want\n  */\nexport const fetchSetting = async(store: Store<any>, id: string): Promise<any> => {\n  const all = await store.dispatch('management/findAll', { type: MANAGEMENT.SETTING });\n  const setting = (all || []).find((setting: any) => setting.id === id);\n\n  return setting;\n};\n\nexport const setSetting = async(store: Store<any>, id: string, val: string): Promise<any> => {\n  const setting = await fetchOrCreateSetting(store, id, val, false);\n\n  setting.value = val;\n  await setting.save();\n\n  return setting;\n};\n\nexport const getPerformanceSetting = (rootGetters: Record<string, (arg0: string, arg1: string) => any>): PerfSettings => {\n  const perfSettingResource = rootGetters['management/byId'](MANAGEMENT.SETTING, SETTING.UI_PERFORMANCE);\n  let perfSetting = {};\n\n  if (perfSettingResource?.value) {\n    try {\n      perfSetting = JSON.parse(perfSettingResource.value);\n    } catch (e) {\n      console.warn('ui-performance setting contains invalid data'); // eslint-disable-line no-console\n    }\n  }\n\n  // Start with the default and overwrite the values from the setting - ensures we have defaults for newly added options\n  return Object.assign(DEFAULT_PERF_SETTING, perfSetting || {});\n};\n"],"mappings":"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"}]}