{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cis.cattle.io.clusterscan.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/cis.cattle.io.clusterscan.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CruResource","LabeledSelect","LabeledInput","UnitInput","Banner","Loading","CIS","CONFIG_MAP","mapGetters","createEditView","allHash","Checkbox","RadioGroup","get","_VIEW","_CREATE","isValidCron","semver","require","components","mixins","props","value","type","Object","default","_default","mode","String","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","hash","scanProfileName","proxyObj","wrap","_callee$","_context","prev","next","profiles","$store","dispatch","CLUSTER_SCAN_PROFILE","benchmarks","BENCHMARK","sent","id","defaultConfigMap","t0","allProfiles","spec","filter","profile","$set","stop","data","metadata","name","generateName","scheduledScanConfig","scanAlertRule","isScheduled","hasAlertManager","computed","_objectSpread","currentCluster","t","canBeScheduled","warn","validProfiles","_this2","profileNames","_profile$spec","benchmarkVersion","benchmark","getters","validateBenchmark","map","label","defaultProfile","provider","status","includes","pairs","split","clusterVersion","kubernetesVersion","forEach","pair","version","match","satisfies","replace","e","_profile$spec2","find","cis16","monitoringUrl","$router","resolve","params","cluster","$route","href","validated","schedule","watch","neu","_neu$spec","methods","_benchmark$spec","clusterProvider","_benchmark$spec2","_benchmark$spec3","_benchmark$spec5","kubernetesVersionDisplay","minKubernetesVersion","_benchmark$spec4","gt","maxKubernetesVersion","_benchmark$spec6","saveScan","cb","save"],"sources":["node_modules/@rancher/shell/edit/cis.cattle.io.clusterscan.vue"],"sourcesContent":["<script>\nimport CruResource from '@shell/components/CruResource';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { Banner } from '@components/Banner';\nimport Loading from '@shell/components/Loading';\nimport { CIS, CONFIG_MAP } from '@shell/config/types';\nimport { mapGetters } from 'vuex';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { allHash } from '@shell/utils/promise';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { get } from '@shell/utils/object';\nimport { _VIEW, _CREATE } from '@shell/config/query-params';\nimport { isValidCron } from 'cron-validator';\n\nconst semver = require('semver');\n\nexport default {\n  components: {\n    CruResource, LabeledSelect, Banner, Loading, Checkbox, LabeledInput, RadioGroup, UnitInput\n  },\n\n  mixins: [createEditView],\n\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n    mode: {\n      type:    String,\n      default: 'create'\n    }\n  },\n\n  async fetch() {\n    const hash = await allHash({\n      profiles:   this.$store.dispatch('cluster/findAll', { type: CIS.CLUSTER_SCAN_PROFILE }),\n      benchmarks: this.$store.dispatch('cluster/findAll', { type: CIS.BENCHMARK }),\n    });\n\n    try {\n      this.defaultConfigMap = await this.$store.dispatch('cluster/find', { type: CONFIG_MAP, id: 'cis-operator-system/default-clusterscanprofiles' });\n    } catch {}\n\n    this.allProfiles = hash.profiles;\n    const { scanProfileName } = this.value.spec;\n\n    // if mode is _CREATE and scanProfileName is defined, this is a clone\n    // check if the profile referred to in the original spec still exists\n    if (scanProfileName && this.mode === _CREATE) {\n      const proxyObj = this.allProfiles.filter((profile) => profile.id === scanProfileName)[0];\n\n      if (!proxyObj) {\n        this.$set(this.value.spec, 'scanProfileName', '');\n      }\n    }\n  },\n\n  data() {\n    if (!this.value.metadata.name) {\n      this.value.metadata.generateName = 'scan-';\n    }\n    if (!this.value.spec.scheduledScanConfig) {\n      this.$set(this.value.spec, 'scheduledScanConfig', { scanAlertRule: {} });\n    }\n    if (!this.value.spec.scheduledScanConfig.scanAlertRule) {\n      this.$set(this.value.spec.scheduledScanConfig, 'scanAlertRule', { });\n    }\n    const isScheduled = !!get(this.value, 'spec.scheduledScanConfig.cronSchedule');\n\n    return {\n      allProfiles:         [],\n      defaultConfigMap:    null,\n      scheduledScanConfig: this.value.spec.scheduledScanConfig,\n      scanAlertRule:       this.value.spec.scheduledScanConfig.scanAlertRule,\n      hasAlertManager:     false,\n      isScheduled\n    };\n  },\n\n  computed: {\n    ...mapGetters({ currentCluster: 'currentCluster', t: 'i18n/t' }),\n\n    canBeScheduled() {\n      // check if scan was created and run with an older cis install that doesn't support scheduling/alerting/warn state\n      if (this.mode === _VIEW) {\n        const warn = get(this.value, 'status.summary.warn');\n\n        return !!warn || warn === 0;\n      }\n\n      return this.value.canBeScheduled();\n    },\n\n    validProfiles() {\n      const profileNames = this.allProfiles.filter((profile) => {\n        const benchmarkVersion = profile?.spec?.benchmarkVersion;\n        const benchmark = this.$store.getters['cluster/byId'](CIS.BENCHMARK, benchmarkVersion);\n\n        return this.validateBenchmark(benchmark, this.currentCluster );\n      }).map((profile) => {\n        return { label: profile.id, value: profile.id };\n      });\n\n      return profileNames;\n    },\n\n    defaultProfile() {\n      if (this.defaultConfigMap) {\n        const profiles = this.defaultConfigMap.data;\n        const provider = this.currentCluster.status.provider;\n\n        let name = profiles[provider] || profiles.default;\n\n        if (name.includes(':')) {\n          const pairs = name.split('\\n');\n          const clusterVersion = this.currentCluster.kubernetesVersion;\n\n          pairs.forEach((pair) => {\n            const version = (pair.match(/[<>=]+[-._a-zA-Z0-9]+/) || [])[0];\n\n            try {\n              if (semver.satisfies(clusterVersion, version)) {\n                name = pair.replace(/[<>=]+[-._a-zA-Z0-9]+: /, '');\n              }\n            } catch (e) {\n              // Ignore entries with invalid semver\n            }\n          });\n        }\n        if (name) {\n          const profile = this.allProfiles.find((profile) => profile.id === name);\n          const benchmarkVersion = profile?.spec?.benchmarkVersion;\n          const benchmark = this.$store.getters['cluster/byId'](CIS.BENCHMARK, benchmarkVersion);\n\n          if (this.validateBenchmark(benchmark, this.currentCluster )) {\n            return profile;\n          }\n        }\n        const cis16 = this.validProfiles.find((profile) => profile.value === 'cis-1.6-profile');\n\n        if (cis16) {\n          return this.allProfiles.find((profile) => profile.id === 'cis-1.6-profile');\n        } else {\n          return this.allProfiles.find((profile) => profile.id === 'cis-1.5-profile');\n        }\n      }\n\n      return null;\n    },\n\n    monitoringUrl() {\n      return this.$router.resolve({\n        name:   'c-cluster-monitoring',\n        params: { cluster: this.$route.params.cluster }\n      }).href;\n    },\n\n    validated() {\n      if (this.isScheduled) {\n        const schedule = get(this.value, 'spec.scheduledScanConfig.cronSchedule');\n\n        if (!schedule) {\n          return false;\n        } else {\n          return isValidCron(schedule) && !!this.value.spec.scanProfileName;\n        }\n      }\n\n      return !!this.value.spec.scanProfileName;\n    }\n\n  },\n\n  watch: {\n    defaultProfile(neu) {\n      if (neu && !this.value.spec.scanProfileName) {\n        const benchmarkVersion = neu?.spec?.benchmarkVersion;\n        const benchmark = this.$store.getters['cluster/byId'](CIS.BENCHMARK, benchmarkVersion);\n\n        if (!this.validateBenchmark(benchmark, this.currentCluster)) {\n          return;\n        }\n        this.value.spec.scanProfileName = neu?.id;\n      }\n    },\n  },\n\n  methods: {\n    validateBenchmark(benchmark, currentCluster) {\n      if (!!benchmark?.spec?.clusterProvider) {\n        if ( benchmark?.spec?.clusterProvider !== currentCluster.status.provider) {\n          return false;\n        }\n      }\n\n      try {\n        const clusterVersion = currentCluster.kubernetesVersionDisplay;\n\n        if (benchmark?.spec?.minKubernetesVersion) {\n          if (semver.gt(benchmark?.spec?.minKubernetesVersion, clusterVersion)) {\n            return false;\n          }\n        }\n        if (benchmark?.spec?.maxKubernetesVersion) {\n          if (semver.gt(clusterVersion, benchmark?.spec?.maxKubernetesVersion)) {\n            return false;\n          }\n        }\n      } catch (e) {\n        // Ignore error if something is invalid semver\n      }\n\n      return true;\n    },\n\n    saveScan(cb) {\n      if (!this.value.isScheduled || !this.isScheduled) {\n        delete this.value.spec.scheduledScanConfig;\n      }\n      this.save(cb);\n    },\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n\n  <CruResource\n    v-else\n    :validation-passed=\"validated\"\n    :done-route=\"doneRoute\"\n    :resource=\"value\"\n    :mode=\"mode\"\n    :errors=\"errors\"\n    @finish=\"saveScan\"\n    @error=\"e=>errors = e\"\n  >\n    <template>\n      <Banner\n        v-if=\"!validProfiles.length\"\n        color=\"warning\"\n        :label=\"t('cis.noProfiles')\"\n      />\n\n      <div\n        v-else\n        class=\"row mb-20\"\n      >\n        <div class=\"col span-6\">\n          <LabeledSelect\n            v-model=\"value.spec.scanProfileName\"\n            :mode=\"mode\"\n            :label=\"t('cis.profile')\"\n            :options=\"validProfiles\"\n          />\n        </div>\n        <div\n          v-if=\"canBeScheduled\"\n          class=\"col span-6\"\n        >\n          <span>{{ t('cis.scoreWarning.label') }}</span> <i\n            v-clean-tooltip=\"t('cis.scoreWarning.protip')\"\n            class=\"icon icon-info\"\n          />\n          <RadioGroup\n            v-model=\"value.spec.scoreWarning\"\n            :mode=\"mode\"\n            name=\"scoreWarning\"\n            :options=\"['pass', 'fail']\"\n            :labels=\"[t('cis.scan.pass'), t('cis.scan.fail')]\"\n          />\n        </div>\n      </div>\n      <template v-if=\"canBeScheduled\">\n        <h3>Scheduling</h3>\n        <div class=\"row mb-20\">\n          <div class=\"col\">\n            <RadioGroup\n              v-model=\"isScheduled\"\n              :mode=\"mode\"\n              name=\"scheduling\"\n              :options=\"[ {value: false, label: t('cis.scheduling.disable')}, {value: true, label: t('cis.scheduling.enable')}]\"\n            />\n          </div>\n        </div>\n        <template v-if=\"isScheduled\">\n          <div class=\"row mb-20\">\n            <div class=\"col span-6\">\n              <LabeledInput\n                v-model=\"scheduledScanConfig.cronSchedule\"\n                required\n                :mode=\"mode\"\n                :label=\"t('cis.cronSchedule.label')\"\n                :placeholder=\"t('cis.cronSchedule.placeholder')\"\n                type=\"cron\"\n              />\n            </div>\n            <div class=\"col span-6\">\n              <UnitInput\n                v-model.number=\"scheduledScanConfig.retentionCount\"\n                :suffix=\"t('cis.reports')\"\n                type=\"number\"\n                :mode=\"mode\"\n                :label=\"t('cis.retention')\"\n              />\n            </div>\n          </div>\n          <h3>\n            Alerting\n          </h3>\n          <div class=\"row mb-20\">\n            <div class=\"col span-12\">\n              <Banner\n                v-if=\"scanAlertRule.alertOnFailure || scanAlertRule.alertOnComplete\"\n                class=\"mt-0\"\n                :color=\"hasAlertManager ? 'info' : 'warning'\"\n              >\n                <span v-clean-html=\"t('cis.alertNeeded', {link: monitoringUrl}, true)\" />\n              </banner>\n              <Checkbox\n                v-model=\"scanAlertRule.alertOnComplete\"\n                :mode=\"mode\"\n                :label=\"t('cis.alertOnComplete')\"\n              />\n              <Checkbox\n                v-model=\"scanAlertRule.alertOnFailure\"\n                :mode=\"mode\"\n                :label=\"t('cis.alertOnFailure')\"\n              />\n            </div>\n          </div>\n        </template>\n      </template>\n    </template>\n  </CruResource>\n</template>\n"],"mappings":"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"}]}