{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/promptRemove/mixin/roleDeletionCheck.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/promptRemove/mixin/roleDeletionCheck.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapState","mapGetters","resourceNames","MANAGEMENT","SUBTYPE_MAPPING","CLUSTER","key","data","warning","info","computed","_objectSpread","t","names","toRemove","map","obj","nameDisplay","slice","plusMore","remaining","length","count","watch","value","handler","neu","handleRoleDeletionCheck","type","$route","hash","immediate","methods","rolesToRemove","resourceType","queryHash","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","resourceToCheck","propToMatch","numberOfRolesWithBinds","uniqueUsersWithBinds","_users$data","request","users","userMap","wrap","_callee$","_context","prev","next","Set","t0","GLOBAL_ROLE","GLOBAL_ROLE_BINDING","abrupt","includes","CLUSTER_ROLE_TEMPLATE_BINDING","PROJECT_ROLE_TEMPLATE_BINDING","$store","dispatch","url","concat","method","root","sent","USER","reduce","user","username","id","forEach","usedRoles","filter","item","uniqueUsers","_toConsumableArray","userName","add","size","t1","stop"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/promptRemove/mixin/roleDeletionCheck.js"],"sourcesContent":["import { mapState, mapGetters } from 'vuex';\nimport { resourceNames } from '@shell/utils/string';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { SUBTYPE_MAPPING } from '@shell/models/management.cattle.io.roletemplate';\nconst CLUSTER = SUBTYPE_MAPPING.CLUSTER.key;\n\nexport default {\n  data() {\n    return {\n      warning: '',\n      info:    '',\n    };\n  },\n\n  computed: {\n    ...mapState('action-menu', ['toRemove']),\n    ...mapGetters({ t: 'i18n/t' }),\n\n    names() {\n      return this.toRemove.map((obj) => obj.nameDisplay).slice(0, 5);\n    },\n\n    plusMore() {\n      const remaining = this.toRemove.length - this.names.length;\n\n      return this.t('promptRemove.andOthers', { count: remaining });\n    },\n  },\n  watch: {\n    value: {\n      handler(neu) {\n        this.handleRoleDeletionCheck(neu, neu[0].type, this.$route.hash);\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    resourceNames,\n    async handleRoleDeletionCheck(rolesToRemove, resourceType, queryHash) {\n      this.warning = '';\n      let resourceToCheck;\n      let propToMatch;\n      let numberOfRolesWithBinds = 0;\n      const uniqueUsersWithBinds = new Set();\n\n      this.info = this.t('rbac.globalRoles.waiting', { count: rolesToRemove.length });\n\n      switch (resourceType) {\n      case MANAGEMENT.GLOBAL_ROLE:\n        resourceToCheck = MANAGEMENT.GLOBAL_ROLE_BINDING;\n        propToMatch = 'globalRoleName';\n        break;\n      default:\n        if (queryHash.includes(CLUSTER)) {\n          resourceToCheck = MANAGEMENT.CLUSTER_ROLE_TEMPLATE_BINDING;\n        } else {\n          resourceToCheck = MANAGEMENT.PROJECT_ROLE_TEMPLATE_BINDING;\n        }\n        propToMatch = 'roleTemplateName';\n        break;\n      }\n\n      try {\n        const request = await this.$store.dispatch('management/request', {\n          url:    `/v1/${ resourceToCheck }`,\n          method: 'get',\n        }, { root: true });\n\n        // We need to fetch the users here in order to get an accurate count when selecting global roles.\n        const users = await this.$store.dispatch('management/request', {\n          url:    `/v1/${ MANAGEMENT.USER }`,\n          method: 'get',\n        }, { root: true });\n\n        const userMap = users.data?.reduce((map, user) => {\n          if ( user.username ) {\n            map[user.id] = user;\n          }\n\n          return map;\n        }, {});\n\n        if (request.data && request.data.length) {\n          rolesToRemove.forEach((toRemove) => {\n            const usedRoles = request.data.filter((item) => item[propToMatch] === toRemove.id);\n\n            if (usedRoles.length) {\n              const uniqueUsers = [...new Set(usedRoles.map((item) => item.userName).filter((user) => userMap[user]))];\n\n              if (uniqueUsers.length) {\n                numberOfRolesWithBinds++;\n                uniqueUsers.forEach((user) => uniqueUsersWithBinds.add(user));\n              }\n            }\n          });\n\n          if (numberOfRolesWithBinds && uniqueUsersWithBinds.size) {\n            this.info = '';\n            this.warning = this.t('rbac.globalRoles.usersBound', { count: uniqueUsersWithBinds.size });\n          } else {\n            this.info = this.t('rbac.globalRoles.notBound', null, true);\n          }\n        } else {\n          this.info = this.t('rbac.globalRoles.notBound', null, true);\n        }\n      } catch (e) {\n        this.info = this.t('rbac.globalRoles.unableToCheck');\n      }\n    },\n  },\n};\n"],"mappings":"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"}]}