{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["LabeledInput","LabeledSelect","_EDIT","MatchExpressions","convert","matching","simplify","POD","ArrayList","Banner","throttle","isValidCIDR","TARGET_OPTIONS","IP_BLOCK","NAMESPACE_SELECTOR","POD_SELECTOR","NAMESPACE_AND_POD_SELECTOR","components","props","value","type","Object","default","_default","mode","String","namespace","allPods","Array","allNamespaces","data","_this","$nextTick","$set","portOptions","matchingPods","matchingNamespaces","invalidCidr","invalidCidrs","targetOptions","values","throttleTime","computed","podSelectorExpressions","get","_this$value$TARGET_OP","_this$value$TARGET_OP2","matchLabels","matchExpressions","set","namespaceSelectorExpressions","_this$value$TARGET_OP3","_this$value$TARGET_OP4","selectTargetOptions","_iterator","_createForOfIteratorHelper","_step","s","n","done","option","push","label","t","concat","err","e","f","targetType","_iterator2","_step2","_this2","$delete","updateMatches","handler","getMatchingNamespaces","getMatchingPods","leading","immediate","matchingNamespacesAndPods","_this3","_objectSpread","policyNamespace","keys","reduce","acc","k","_defineProperty","watch","methods","validateCIDR","_this$value$TARGET_OP5","_this$value$TARGET_OP6","exceptCidrs","except","filter","cidr","map","_match$","namespaces","matches","id","allInNamespace","pod","some","ns","metadata","match","matched","length","sample","nameDisplay","none","total","_match$2"],"sources":["node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget.vue"],"sourcesContent":["<script>\n\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { _EDIT } from '@shell/config/query-params';\nimport MatchExpressions from '@shell/components/form/MatchExpressions';\nimport { convert, matching, simplify } from '@shell/utils/selector';\nimport { POD } from '@shell/config/types';\nimport ArrayList from '@shell/components/form/ArrayList';\nimport { Banner } from '@components/Banner';\nimport throttle from 'lodash/throttle';\nimport { isValidCIDR } from '@shell/utils/validators/cidr';\n\nconst TARGET_OPTIONS = {\n  IP_BLOCK:                   'ipBlock',\n  NAMESPACE_SELECTOR:         'namespaceSelector',\n  POD_SELECTOR:               'podSelector',\n  NAMESPACE_AND_POD_SELECTOR: 'namespaceAndPodSelector',\n};\n\nexport default {\n  components: {\n    ArrayList, Banner, LabeledInput, LabeledSelect, MatchExpressions\n  },\n  props: {\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      },\n    },\n    mode: {\n      type:    String,\n      default: _EDIT,\n    },\n    type: {\n      type:    String,\n      default: 'ingress'\n    },\n    namespace: {\n      type:    String,\n      default: ''\n    },\n    allPods: {\n      type:    Array,\n      default: () => {\n        return [];\n      },\n    },\n    allNamespaces: {\n      type:    Array,\n      default: () => {\n        return [];\n      },\n    },\n  },\n  data() {\n    if (!this.value[TARGET_OPTIONS.IP_BLOCK] &&\n      !this.value[TARGET_OPTIONS.POD_SELECTOR] &&\n      !this.value[TARGET_OPTIONS.NAMESPACE_SELECTOR] &&\n      !this.value[TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR]\n    ) {\n      this.$nextTick(() => {\n        this.$set(this.value, TARGET_OPTIONS.IP_BLOCK, {});\n      });\n    }\n\n    return {\n      portOptions:        ['TCP', 'UDP'],\n      matchingPods:       {},\n      matchingNamespaces: {},\n      invalidCidr:        null,\n      invalidCidrs:       [],\n      POD,\n      TARGET_OPTIONS,\n      targetOptions:      Object.values(TARGET_OPTIONS),\n      throttleTime:       250,\n    };\n  },\n  computed: {\n    podSelectorExpressions: {\n      get() {\n        return convert(\n          this.value[TARGET_OPTIONS.POD_SELECTOR]?.matchLabels || {},\n          this.value[TARGET_OPTIONS.POD_SELECTOR]?.matchExpressions || []\n        );\n      },\n      set(podSelectorExpressions) {\n        this.$set(this.value, TARGET_OPTIONS.POD_SELECTOR, simplify(podSelectorExpressions));\n      }\n    },\n    namespaceSelectorExpressions: {\n      get() {\n        return convert(\n          this.value[TARGET_OPTIONS.NAMESPACE_SELECTOR]?.matchLabels || {},\n          this.value[TARGET_OPTIONS.NAMESPACE_SELECTOR]?.matchExpressions || []\n        );\n      },\n      set(namespaceSelectorExpressions) {\n        this.$set(this.value, TARGET_OPTIONS.NAMESPACE_SELECTOR, simplify(namespaceSelectorExpressions));\n      }\n    },\n    selectTargetOptions() {\n      const selectTargetOptions = [];\n\n      for (const option of this.targetOptions) {\n        selectTargetOptions.push({\n          label: this.t(`networkpolicy.rules.${ option }.label`),\n          value: option,\n        });\n      }\n\n      return selectTargetOptions;\n    },\n    targetType: {\n      get() {\n        for (const option of this.targetOptions) {\n          if (this.value[TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR] || (this.value[TARGET_OPTIONS.NAMESPACE_SELECTOR] && this.value[TARGET_OPTIONS.POD_SELECTOR])) {\n            return TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR;\n          }\n          if (this.value[option]) {\n            return option;\n          }\n        }\n\n        return null;\n      },\n      set(targetType) {\n        this.$delete(this.value, TARGET_OPTIONS.IP_BLOCK);\n        this.$delete(this.value, TARGET_OPTIONS.NAMESPACE_SELECTOR);\n        this.$delete(this.value, TARGET_OPTIONS.POD_SELECTOR);\n        this.$delete(this.value, TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR);\n        this.$nextTick(() => {\n          this.$set(this.value, targetType, {});\n        });\n      }\n    },\n    updateMatches() {\n      return {\n        handler: throttle(function() {\n          this.matchingNamespaces = this.getMatchingNamespaces();\n          this.matchingPods = this.getMatchingPods();\n        }, this.throttle, { leading: true }),\n        immediate: true\n      };\n    },\n    matchingNamespacesAndPods() {\n      return {\n        policyNamespace: this.namespace,\n        ...Object.keys(this.matchingNamespaces).reduce((acc, k) => ({ ...acc, [`${ k }Namespaces`]: this.matchingNamespaces[k] }), {}),\n        ...Object.keys(this.matchingPods).reduce((acc, k) => ({ ...acc, [`${ k }Pods`]: this.matchingPods[k] }), {}),\n      };\n    }\n  },\n  watch: {\n    namespace:                    'updateMatches',\n    'value.podSelector':          'updateMatches',\n    'value.namespaceSelector':    'updateMatches',\n    'value.ipBlock.cidr':         'validateCIDR',\n    'value.ipBlock.except':       'validateCIDR',\n    podSelectorExpressions:       'updateMatches',\n    namespaceSelectorExpressions: 'updateMatches',\n  },\n  methods: {\n    validateCIDR() {\n      const exceptCidrs = this.value[TARGET_OPTIONS.IP_BLOCK]?.except || [];\n\n      this.invalidCidrs = exceptCidrs\n        .filter((cidr) => !isValidCIDR(cidr))\n        .map((invalidCidr) => invalidCidr || '<blank>');\n\n      if (this.value[TARGET_OPTIONS.IP_BLOCK]?.cidr && !isValidCIDR(this.value[TARGET_OPTIONS.IP_BLOCK].cidr)) {\n        this.invalidCidr = this.value[TARGET_OPTIONS.IP_BLOCK].cidr;\n      } else {\n        this.invalidCidr = null;\n      }\n    },\n    getMatchingPods() {\n      const namespaces = this.targetType === TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR ? this.matchingNamespaces.matches : [{ id: this.namespace }];\n      const allInNamespace = this.allPods.filter((pod) => namespaces.some((ns) => ns.id === pod.metadata.namespace));\n      const match = matching(allInNamespace, this.podSelectorExpressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      return {\n        matched,\n        matches: match,\n        none:    matched === 0,\n        sample,\n        total:   allInNamespace.length,\n      };\n    },\n    getMatchingNamespaces() {\n      const allNamespaces = this.allNamespaces;\n      const match = matching(allNamespaces, this.namespaceSelectorExpressions);\n      const matched = match.length || 0;\n      const sample = match[0]?.nameDisplay;\n\n      return {\n        matched,\n        matches: match,\n        none:    matched === 0,\n        sample,\n        total:   allNamespaces.length,\n      };\n    },\n  }\n};\n</script>\n\n<template>\n  <div class=\"rule\">\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"targetType\"\n          data-testid=\"labeled-select-type-selector\"\n          :mode=\"mode\"\n          :tooltip=\"targetType === TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR ? t('networkpolicy.selectors.matchingNamespacesAndPods.tooltip') : null\"\n          :options=\"selectTargetOptions\"\n          :multiple=\"false\"\n          :label=\"t('networkpolicy.rules.type')\"\n        />\n      </div>\n    </div>\n    <div v-if=\"targetType === TARGET_OPTIONS.IP_BLOCK\">\n      <div class=\"row\">\n        <div class=\"col span-6\">\n          <LabeledInput\n            v-model=\"value[TARGET_OPTIONS.IP_BLOCK].cidr\"\n            data-testid=\"labeled-input-ip-block-selector\"\n            :mode=\"mode\"\n            :placeholder=\"t('networkpolicy.rules.ipBlock.cidr.placeholder')\"\n            :label=\"t('networkpolicy.rules.ipBlock.cidr.label')\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"invalidCidr\"\n        class=\"row\"\n      >\n        <div class=\"col span-12\">\n          <Banner color=\"error\">\n            <t k=\"networkpolicy.rules.ipBlock.invalidCidr\" />\n          </Banner>\n        </div>\n      </div>\n      <div class=\"row mt-20\">\n        <div class=\"col span-12\">\n          <ArrayList\n            v-model=\"value[TARGET_OPTIONS.IP_BLOCK].except\"\n            :add-label=\"t('networkpolicy.rules.ipBlock.addExcept')\"\n            :mode=\"mode\"\n            :show-header=\"true\"\n            :value-label=\"t('networkpolicy.rules.ipBlock.exceptions')\"\n            :value-placeholder=\"t('networkpolicy.rules.ipBlock.cidr.placeholder')\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"invalidCidrs.length\"\n        class=\"row mb-10\"\n      >\n        <div class=\"col span-12\">\n          <Banner color=\"error\">\n            <t k=\"networkpolicy.rules.ipBlock.invalidExceptionCidrs\" />{{ invalidCidrs.join(', ') }}\n          </Banner>\n        </div>\n      </div>\n    </div>\n    <div v-if=\"targetType === TARGET_OPTIONS.POD_SELECTOR\">\n      <div class=\"row\">\n        <div class=\"col span-12\">\n          <Banner color=\"success\">\n            <span v-clean-html=\"t('networkpolicy.selectors.matchingPods.matchesSome', matchingPods)\" />\n          </Banner>\n        </div>\n      </div>\n      <div class=\"row mb-0\">\n        <div class=\"col span-12\">\n          <MatchExpressions\n            v-model=\"podSelectorExpressions\"\n            data-testid=\"match-expression-pod-selector\"\n            :mode=\"mode\"\n            :show-remove=\"false\"\n            :initial-empty-row=\"true\"\n            :type=\"POD\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"targetType === TARGET_OPTIONS.NAMESPACE_SELECTOR\">\n      <div class=\"row\">\n        <div class=\"col span-12\">\n          <Banner color=\"success\">\n            <span v-clean-html=\"t('networkpolicy.selectors.matchingNamespaces.matchesSome', matchingNamespaces)\" />\n          </Banner>\n        </div>\n      </div>\n      <div class=\"row mb-0\">\n        <div class=\"col span-12\">\n          <MatchExpressions\n            v-model=\"namespaceSelectorExpressions\"\n            data-testid=\"match-expression-namespace-selector\"\n            :mode=\"mode\"\n            :show-remove=\"false\"\n            :initial-empty-row=\"true\"\n            :type=\"POD\"\n          />\n        </div>\n      </div>\n    </div>\n    <div v-if=\"targetType === TARGET_OPTIONS.NAMESPACE_AND_POD_SELECTOR\">\n      <div class=\"row\">\n        <div class=\"col span-12\">\n          <Banner color=\"success\">\n            <span\n              v-if=\"!namespaceSelectorExpressions.length\"\n              v-clean-html=\"t('networkpolicy.selectors.matchingPods.matchesSome', matchingPods)\"\n            />\n            <span\n              v-else\n              v-clean-html=\"t('networkpolicy.selectors.matchingNamespacesAndPods.matchesSome', matchingNamespacesAndPods)\"\n            />\n          </Banner>\n        </div>\n      </div>\n      <div class=\"row mb-0\">\n        <div class=\"col span-1 namespace-pod-rule\">\n          <span class=\"label\">\n            {{ t('networkpolicy.rules.namespace') }}\n          </span>\n        </div>\n        <div class=\"col span-11\">\n          <MatchExpressions\n            v-model=\"namespaceSelectorExpressions\"\n            data-testid=\"match-expression-namespace-and-pod-selector-ns-rule\"\n            :mode=\"mode\"\n            :show-add-button=\"false\"\n            :show-remove-button=\"false\"\n            :show-remove=\"false\"\n            :initial-empty-row=\"true\"\n            :type=\"POD\"\n          />\n        </div>\n      </div>\n      <div class=\"row mb-0\">\n        <div class=\"col span-1 namespace-pod-rule\">\n          <span class=\"label\">\n            {{ t('networkpolicy.rules.pod') }}\n          </span>\n        </div>\n        <div class=\"col span-11\">\n          <MatchExpressions\n            v-model=\"podSelectorExpressions\"\n            data-testid=\"match-expression-namespace-and-pod-selector-pod-rule\"\n            :mode=\"mode\"\n            :show-add-button=\"false\"\n            :show-remove-button=\"false\"\n            :show-remove=\"false\"\n            :initial-empty-row=\"true\"\n            :type=\"POD\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang='scss' scoped>\n  .namespace-pod-rule {\n    display: table;\n    width: 100px;\n    padding: 0, 10px, 0, 0;\n    text-align: center;\n\n    .label {\n      display:table-cell;\n      vertical-align:middle;\n    }\n  }\n</style>\n"],"mappings":"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"}]}