{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/__tests__/monitoring.coreos.com.prometheusrule.test.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/__tests__/monitoring.coreos.com.prometheusrule.test.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXNuZXh0LnN0cmluZy5hdC5qcyI7CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmltcG9ydCB7IG1vdW50IH0gZnJvbSAnQHZ1ZS90ZXN0LXV0aWxzJzsKaW1wb3J0IEZvcm1WYWxpZGF0aW9uIGZyb20gJ0BzaGVsbC9taXhpbnMvZm9ybS12YWxpZGF0aW9uJzsKaW1wb3J0IE1vbml0b3JpbmcgZnJvbSAnQHNoZWxsL2VkaXQvbW9uaXRvcmluZy5jb3Jlb3MuY29tLnByb21ldGhldXNydWxlL2luZGV4LnZ1ZSc7CmltcG9ydCB7IF9FRElUIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy9xdWVyeS1wYXJhbXMnOwppbXBvcnQgeyBjbGVhbkh0bWxEaXJlY3RpdmUgfSBmcm9tICdAc2hlbGwvcGx1Z2lucy9jbGVhbi1odG1sLWRpcmVjdGl2ZSc7CmRlc2NyaWJlKCdlZGl0OiBtYW5hZ2VtZW50LmNhdHRsZS5pby5zZXR0aW5nIHNob3VsZCcsIGZ1bmN0aW9uICgpIHsKICB2YXIgTU9DS0VEX0VSUk9SUyA9IFsnZXJyb3IxJywgJ2Vycm9yMicsICdlcnJvcjMnLCAnZXJyb3I0JywgJ2Vycm9yNSddOwogIHZhciBFUlJPUl9CQU5ORVJfU0VMRUNUT1IgPSAnW2RhdGEtdGVzdGlkPSJiYW5uZXItY2xvc2UiXSc7CiAgdmFyIHJlcXVpcmVkU2V0dXAgPSBmdW5jdGlvbiByZXF1aXJlZFNldHVwKCkgewogICAgcmV0dXJuIHsKICAgICAgLy8gUmVtb3ZlIGFsbCB0aGVzZSBtb2NrcyBhZnRlciBtaWdyYXRpb24gdG8gVnVlIDIuNy8zIGR1ZSBtaXhpbiBsb2dpYwogICAgICBtb2NrczogewogICAgICAgICRzdG9yZTogewogICAgICAgICAgZ2V0dGVyczogewogICAgICAgICAgICBjdXJyZW50U3RvcmU6IGZ1bmN0aW9uIGN1cnJlbnRTdG9yZSgpIHsKICAgICAgICAgICAgICByZXR1cm4gJ2N1cnJlbnRfc3RvcmUnOwogICAgICAgICAgICB9LAogICAgICAgICAgICAnY3VycmVudF9zdG9yZS9zY2hlbWFGb3InOiBqZXN0LmZuKCksCiAgICAgICAgICAgICdjdXJyZW50X3N0b3JlL2FsbCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKSwKICAgICAgICAgICAgJ2kxOG4vZXhpc3RzJzogamVzdC5mbigpLAogICAgICAgICAgICBuYW1lc3BhY2VzOiBmdW5jdGlvbiBuYW1lc3BhY2VzKCkgewogICAgICAgICAgICAgIHJldHVybiB7fTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgJHJvdXRlOiB7CiAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICBBUzogJycKICAgICAgICAgIH0sCiAgICAgICAgICBuYW1lOiAnJwogICAgICAgIH0sCiAgICAgICAgJHJvdXRlcjogewogICAgICAgICAgYXBwbHlRdWVyeTogamVzdC5mbigpCiAgICAgICAgfQogICAgICB9CiAgICB9OwogIH07CiAgaXQoJ3Nob3VsZCBjbG9zZSBlcnJvciBiYW5uZXJzJywgLyojX19QVVJFX18qL19hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgIHZhciB3cmFwcGVyLCBlcnJvckJhbm5lcnMsIGksIHJlc3VsdEVycm9yQmFubmVyczsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgIGNhc2UgMDoKICAgICAgICAgIGplc3Quc3B5T24oRm9ybVZhbGlkYXRpb24uY29tcHV0ZWQsICdmdlVucmVwb3J0ZWRWYWxpZGF0aW9uRXJyb3JzJykubW9ja1JldHVyblZhbHVlKE1PQ0tFRF9FUlJPUlMpOwogICAgICAgICAgd3JhcHBlciA9IG1vdW50KE1vbml0b3JpbmcsIF9vYmplY3RTcHJlYWQoewogICAgICAgICAgICBwcm9wc0RhdGE6IHsKICAgICAgICAgICAgICBjYW5ZYW1sOiBmYWxzZSwKICAgICAgICAgICAgICBtb2RlOiBfRURJVCwKICAgICAgICAgICAgICByZXNvdXJjZToge30sCiAgICAgICAgICAgICAgdmFsdWU6IHsKICAgICAgICAgICAgICAgIHZhbHVlOiAnYW55dGhpbmcnCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBuYW1lOiAnJwogICAgICAgICAgICB9LAogICAgICAgICAgICBkaXJlY3RpdmVzOiB7CiAgICAgICAgICAgICAgY2xlYW5IdG1sRGlyZWN0aXZlOiBjbGVhbkh0bWxEaXJlY3RpdmUKICAgICAgICAgICAgfQogICAgICAgICAgfSwgcmVxdWlyZWRTZXR1cCgpKSk7CiAgICAgICAgICBlcnJvckJhbm5lcnMgPSB3cmFwcGVyLmZpbmRBbGwoRVJST1JfQkFOTkVSX1NFTEVDVE9SKTsgLy8gQXNzZXJ0IHRoYXQgYWxsIHRoZSBlcnJvciBiYW5uZXJzIGFyZSByZW5kZXJlZAogICAgICAgICAgZXhwZWN0KGVycm9yQmFubmVycykudG9IYXZlTGVuZ3RoKE1PQ0tFRF9FUlJPUlMubGVuZ3RoKTsKICAgICAgICAgIGkgPSAwOwogICAgICAgIGNhc2UgNToKICAgICAgICAgIGlmICghKGkgPCBNT0NLRURfRVJST1JTLmxlbmd0aCkpIHsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEzOwogICAgICAgICAgICBicmVhazsKICAgICAgICAgIH0KICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgcmV0dXJuIGVycm9yQmFubmVycy5hdCgwKS50cmlnZ2VyKCdjbGljaycpOwogICAgICAgIGNhc2UgODoKICAgICAgICAgIHJlc3VsdEVycm9yQmFubmVycyA9IHdyYXBwZXIuZmluZEFsbChFUlJPUl9CQU5ORVJfU0VMRUNUT1IpOyAvLyBBc3NlcnQgdGhhdCBhbiBlcnJvciBiYW5uZXIgaXMgY2xvc2VkIHVudGlsIHRoZSBsYXN0IG9uZQogICAgICAgICAgZXhwZWN0KHJlc3VsdEVycm9yQmFubmVycykudG9IYXZlTGVuZ3RoKE1PQ0tFRF9FUlJPUlMubGVuZ3RoIC0gMSAtIGkpOwogICAgICAgIGNhc2UgMTA6CiAgICAgICAgICBpKys7CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgMTM6CiAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKSk7Cn0pOw=="},{"version":3,"names":["mount","FormValidation","Monitoring","_EDIT","cleanHtmlDirective","describe","MOCKED_ERRORS","ERROR_BANNER_SELECTOR","requiredSetup","mocks","$store","getters","currentStore","jest","fn","namespaces","$route","query","AS","name","$router","applyQuery","it","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrapper","errorBanners","i","resultErrorBanners","wrap","_callee$","_context","prev","next","spyOn","computed","mockReturnValue","_objectSpread","propsData","canYaml","mode","resource","value","directives","findAll","expect","toHaveLength","length","at","trigger","stop"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/__tests__/monitoring.coreos.com.prometheusrule.test.ts"],"sourcesContent":["import { mount } from '@vue/test-utils';\nimport FormValidation from '@shell/mixins/form-validation';\nimport Monitoring from '@shell/edit/monitoring.coreos.com.prometheusrule/index.vue';\nimport { _EDIT } from '@shell/config/query-params';\nimport { cleanHtmlDirective } from '@shell/plugins/clean-html-directive';\n\ndescribe('edit: management.cattle.io.setting should', () => {\n  const MOCKED_ERRORS = ['error1', 'error2', 'error3', 'error4', 'error5'];\n  const ERROR_BANNER_SELECTOR = '[data-testid=\"banner-close\"]';\n  const requiredSetup = () => ({\n    // Remove all these mocks after migration to Vue 2.7/3 due mixin logic\n    mocks: {\n      $store: {\n        getters: {\n          currentStore:              () => 'current_store',\n          'current_store/schemaFor': jest.fn(),\n          'current_store/all':       jest.fn(),\n          'i18n/t':                  jest.fn(),\n          'i18n/exists':             jest.fn(),\n          namespaces:                () => ({})\n        }\n      },\n      $route:  { query: { AS: '' }, name: '' },\n      $router: { applyQuery: jest.fn() }\n    }\n  });\n\n  it('should close error banners', async() => {\n    jest.spyOn(FormValidation.computed, 'fvUnreportedValidationErrors').mockReturnValue(MOCKED_ERRORS);\n\n    const wrapper = mount(Monitoring, {\n      propsData: {\n        canYaml:  false,\n        mode:     _EDIT,\n        resource: {},\n        value:    { value: 'anything' },\n        name:     ''\n      },\n      directives: { cleanHtmlDirective },\n      ...requiredSetup()\n    });\n\n    const errorBanners = wrapper.findAll(ERROR_BANNER_SELECTOR);\n\n    // Assert that all the error banners are rendered\n    expect(errorBanners).toHaveLength(MOCKED_ERRORS.length);\n\n    for (let i = 0; i < MOCKED_ERRORS.length; i++) {\n      await errorBanners.at(0).trigger('click');\n      const resultErrorBanners = wrapper.findAll(ERROR_BANNER_SELECTOR);\n\n      // Assert that an error banner is closed until the last one\n      expect(resultErrorBanners).toHaveLength(MOCKED_ERRORS.length - 1 - i);\n    }\n  });\n});\n"],"mappings":"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"}]}