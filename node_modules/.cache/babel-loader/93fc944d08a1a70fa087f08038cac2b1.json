{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/nuxt.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/nuxt.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","isSamePath","_isSamePath","joinURL","normalizeURL","withQuery","withoutTrailingSlash","process","client","window","onNuxtReadyCbs","onNuxtReady","cb","push","createGetCounter","counterObject","defaultKey","arguments","length","undefined","getCounter","id","empty","globalHandleError","error","config","errorHandler","interopDefault","promise","then","m","default","hasFetch","vm","$options","fetch","purifyData","data","env","NODE_ENV","Object","entries","filter","_ref","_ref2","_slicedToArray","key","value","valid","Function","Promise","console","warn","concat","reduce","obj","_ref3","_ref4","getChildrenComponentInstancesUsingFetch","instances","children","$children","_iterator","_createForOfIteratorHelper","_step","s","n","done","child","$fetch","err","e","f","applyAsyncData","Component","asyncData","options","__hasNuxtData","ComponentData","_originDataFn","call","$ssrContext","cid","_objectSpread","_Ctor","sanitizeComponent","extend","extendOptions","name","__file","getMatchedComponents","route","matches","prop","Array","prototype","apply","matched","map","index","keys","getMatchedComponentsInstances","flatMapComponents","fn","components","promises","resolveRouteComponents","all","_ref5","_asyncToGenerator","regeneratorRuntime","mark","_callee","instance","match","timeNow","previousReloadTime","wrap","_callee$","_context","prev","next","sent","t0","sessionStorage","Date","now","parseInt","getItem","setItem","location","reload","abrupt","stop","_x","_x2","_x3","_x4","getRouteData","_x5","_getRouteData","_callee2","_callee2$","_context2","meta","setContext","_x6","_x7","_setContext","_callee3","app","context","_yield$Promise$all","_yield$Promise$all2","currentRouteData","fromRouteData","_callee3$","_context3","isStatic","static","isDev","isHMR","store","payload","base","router","commit","version","dev","pl","perfTest","rancherEnv","api","req","res","ssrContext","redirect","status","path","query","_redirected","pathType","_typeof","resolve","fullPath","test","server","replace","Error","beforeNuxtRender","beforeRenderFns","nuxtState","__NUXT__","from","_errored","Boolean","params","middlewareSeries","appContext","promisify","slice","getLocation","mode","hash","decodeURI","pathname","startsWith","search","compile","str","tokensToFunction","parse","getQueryDiff","toQuery","fromQuery","diff","queries","k","String","normalizeError","message","JSON","stringify","constructor","statusCode","response","PATH_REGEXP","RegExp","join","tokens","defaultDelimiter","delimiter","exec","escaped","offset","prefix","capture","group","modifier","asterisk","partial","repeat","optional","pattern","escapeGroup","escapeString","substr","encodeURIComponentPretty","slashAllowed","re","encodeURI","c","charCodeAt","toString","toUpperCase","encodeAsterisk","i","flags","opts","encode","pretty","encodeURIComponent","token","segment","TypeError","isArray","j","sensitive","addLifecycleHook","hook","includes","urlJoin","stripTrailingSlash","setScrollRestoration","newVal","history","scrollRestoration"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/nuxt.js"],"sourcesContent":["import Vue from 'vue';\nimport {\n  isSamePath as _isSamePath, joinURL, normalizeURL, withQuery, withoutTrailingSlash\n} from 'ufo';\n\n// window.{{globals.loadedCallback}} hook\n// Useful for jsdom testing or plugins (https://github.com/tmpvar/jsdom#dealing-with-asynchronous-script-loading)\nif (process.client) {\n  window.onNuxtReadyCbs = [];\n  window.onNuxtReady = (cb) => {\n    window.onNuxtReadyCbs.push(cb);\n  };\n}\n\nexport function createGetCounter(counterObject, defaultKey = '') {\n  return function getCounter(id = defaultKey) {\n    if (counterObject[id] === undefined) {\n      counterObject[id] = 0;\n    }\n\n    return counterObject[id]++;\n  };\n}\n\nexport function empty() {}\n\nexport function globalHandleError(error) {\n  if (Vue.config.errorHandler) {\n    Vue.config.errorHandler(error);\n  }\n}\n\nexport function interopDefault(promise) {\n  return promise.then((m) => m.default || m);\n}\n\nexport function hasFetch(vm) {\n  return vm.$options && typeof vm.$options.fetch === 'function' && !vm.$options.fetch.length;\n}\nexport function purifyData(data) {\n  if (process.env.NODE_ENV === 'production') {\n    return data;\n  }\n\n  return Object.entries(data).filter(\n    ([key, value]) => {\n      const valid = !(value instanceof Function) && !(value instanceof Promise);\n\n      if (!valid) {\n        console.warn(`${ key } is not able to be stringified. This will break in a production environment.`); // eslint-disable-line no-console\n      }\n\n      return valid;\n    }\n  ).reduce((obj, [key, value]) => {\n    obj[key] = value;\n\n    return obj;\n  }, {});\n}\nexport function getChildrenComponentInstancesUsingFetch(vm, instances = []) {\n  const children = vm.$children || [];\n\n  for (const child of children) {\n    if (child.$fetch) {\n      instances.push(child);\n      continue; // Don't get the children since it will reload the template\n    }\n    if (child.$children) {\n      getChildrenComponentInstancesUsingFetch(child, instances);\n    }\n  }\n\n  return instances;\n}\n\nexport function applyAsyncData(Component, asyncData) {\n  if (\n    // For SSR, we once all this function without second param to just apply asyncData\n    // Prevent doing this for each SSR request\n    !asyncData && Component.options.__hasNuxtData\n  ) {\n    return;\n  }\n\n  const ComponentData = Component.options._originDataFn || Component.options.data || function() {\n    return {};\n  };\n\n  Component.options._originDataFn = ComponentData;\n\n  Component.options.data = function() {\n    const data = ComponentData.call(this, this);\n\n    if (this.$ssrContext) {\n      asyncData = this.$ssrContext.asyncData[Component.cid];\n    }\n\n    return { ...data, ...asyncData };\n  };\n\n  Component.options.__hasNuxtData = true;\n\n  if (Component._Ctor && Component._Ctor.options) {\n    Component._Ctor.options.data = Component.options.data;\n  }\n}\n\nexport function sanitizeComponent(Component) {\n  // If Component already sanitized\n  if (Component.options && Component._Ctor === Component) {\n    return Component;\n  }\n  if (!Component.options) {\n    Component = Vue.extend(Component); // fix issue #6\n    Component._Ctor = Component;\n  } else {\n    Component._Ctor = Component;\n    Component.extendOptions = Component.options;\n  }\n  // If no component name defined, set file path as name, (also fixes #5703)\n  if (!Component.options.name && Component.options.__file) {\n    Component.options.name = Component.options.__file;\n  }\n\n  return Component;\n}\n\nexport function getMatchedComponents(route, matches = false, prop = 'components') {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m[prop]).map((key) => {\n      matches && matches.push(index);\n\n      return m[prop][key];\n    });\n  }));\n}\n\nexport function getMatchedComponentsInstances(route, matches = false) {\n  return getMatchedComponents(route, matches, 'instances');\n}\n\nexport function flatMapComponents(route, fn) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.components).reduce((promises, key) => {\n      if (m.components[key]) {\n        promises.push(fn(m.components[key], m.instances[key], m, key, index));\n      } else {\n        delete m.components[key];\n      }\n\n      return promises;\n    }, []);\n  }));\n}\n\nexport function resolveRouteComponents(route, fn) {\n  return Promise.all(\n    flatMapComponents(route, async(Component, instance, match, key) => {\n      // If component is a function, resolve it\n      if (typeof Component === 'function' && !Component.options) {\n        try {\n          Component = await Component();\n        } catch (error) {\n          // Handle webpack chunk loading errors\n          // This may be due to a new deployment or a network problem\n          if (\n            error &&\n            error.name === 'ChunkLoadError' &&\n            typeof window !== 'undefined' &&\n            window.sessionStorage\n          ) {\n            const timeNow = Date.now();\n            const previousReloadTime = parseInt(window.sessionStorage.getItem('nuxt-reload'));\n\n            // check for previous reload time not to reload infinitely\n            if (!previousReloadTime || previousReloadTime + 60000 < timeNow) {\n              window.sessionStorage.setItem('nuxt-reload', timeNow);\n              window.location.reload(true /* skip cache */);\n            }\n          }\n\n          throw error;\n        }\n      }\n      match.components[key] = Component = sanitizeComponent(Component);\n\n      return typeof fn === 'function' ? fn(Component, instance, match, key) : Component;\n    })\n  );\n}\n\nexport async function getRouteData(route) {\n  if (!route) {\n    return;\n  }\n  // Make sure the components are resolved (code-splitting)\n  await resolveRouteComponents(route);\n\n  // Send back a copy of route with meta based on Component definition\n  return {\n    ...route,\n    meta: getMatchedComponents(route).map((Component, index) => {\n      return { ...Component.options.meta, ...(route.matched[index] || {}).meta };\n    })\n  };\n}\n\nexport async function setContext(app, context) {\n  // If context not defined, create it\n  if (!app.context) {\n    app.context = {\n      isStatic: process.static,\n      isDev:    true,\n      isHMR:    false,\n      app,\n      store:    app.store,\n      payload:  context.payload,\n      error:    context.error,\n      base:     app.router.options.base,\n      env:      {\n        commit: 'head', version: '0.1.2', dev: true, pl: 1, perfTest: false, rancherEnv: 'web', api: 'http://localhost:8989'\n      }\n    };\n    // Only set once\n\n    if (context.req) {\n      app.context.req = context.req;\n    }\n    if (context.res) {\n      app.context.res = context.res;\n    }\n\n    if (context.ssrContext) {\n      app.context.ssrContext = context.ssrContext;\n    }\n    app.context.redirect = (status, path, query) => {\n      if (!status) {\n        return;\n      }\n      app.context._redirected = true;\n      // if only 1 or 2 arguments: redirect('/') or redirect('/', { foo: 'bar' })\n      let pathType = typeof path;\n\n      if (typeof status !== 'number' && (pathType === 'undefined' || pathType === 'object')) {\n        query = path || {};\n        path = status;\n        pathType = typeof path;\n        status = 302;\n      }\n      if (pathType === 'object') {\n        path = app.router.resolve(path).route.fullPath;\n      }\n      // \"/absolute/route\", \"./relative/route\" or \"../relative/route\"\n      if (/(^[.]{1,2}\\/)|(^\\/(?!\\/))/.test(path)) {\n        app.context.next({\n          path,\n          query,\n          status\n        });\n      } else {\n        path = withQuery(path, query);\n        if (process.server) {\n          app.context.next({\n            path,\n            status\n          });\n        }\n        if (process.client) {\n          // https://developer.mozilla.org/en-US/docs/Web/API/Location/replace\n          window.location.replace(path);\n\n          // Throw a redirect error\n          throw new Error('ERR_REDIRECT');\n        }\n      }\n    };\n    if (process.server) {\n      app.context.beforeNuxtRender = (fn) => context.beforeRenderFns.push(fn);\n    }\n    if (process.client) {\n      app.context.nuxtState = window.__NUXT__;\n    }\n  }\n\n  // Dynamic keys\n  const [currentRouteData, fromRouteData] = await Promise.all([\n    getRouteData(context.route),\n    getRouteData(context.from)\n  ]);\n\n  if (context.route) {\n    app.context.route = currentRouteData;\n  }\n\n  if (context.from) {\n    app.context.from = fromRouteData;\n  }\n\n  app.context.next = context.next;\n  app.context._redirected = false;\n  app.context._errored = false;\n  app.context.isHMR = Boolean(context.isHMR);\n  app.context.params = app.context.route.params || {};\n  app.context.query = app.context.route.query || {};\n}\n\nexport function middlewareSeries(promises, appContext) {\n  if (!promises.length || appContext._redirected || appContext._errored) {\n    return Promise.resolve();\n  }\n\n  return promisify(promises[0], appContext)\n    .then(() => {\n      return middlewareSeries(promises.slice(1), appContext);\n    });\n}\n\nexport function promisify(fn, context) {\n  let promise;\n\n  if (fn.length === 2) {\n    console.warn('Callback-based asyncData, fetch or middleware calls are deprecated. Please switch to promises or async/await syntax'); // eslint-disable-line no-console\n\n    // fn(context, callback)\n    promise = new Promise((resolve) => {\n      fn(context, (err, data) => {\n        if (err) {\n          context.error(err);\n        }\n        data = data || {};\n        resolve(data);\n      });\n    });\n  } else {\n    promise = fn(context);\n  }\n\n  if (promise && promise instanceof Promise && typeof promise.then === 'function') {\n    return promise;\n  }\n\n  return Promise.resolve(promise);\n}\n\n// Imported from vue-router\nexport function getLocation(base, mode) {\n  if (mode === 'hash') {\n    return window.location.hash.replace(/^#\\//, '');\n  }\n\n  base = decodeURI(base).slice(0, -1); // consideration is base is normalized with trailing slash\n  let path = decodeURI(window.location.pathname);\n\n  if (base && path.startsWith(base)) {\n    path = path.slice(base.length);\n  }\n\n  const fullPath = (path || '/') + window.location.search + window.location.hash;\n\n  return normalizeURL(fullPath);\n}\n\n// Imported from path-to-regexp\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nexport function compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\n\nexport function getQueryDiff(toQuery, fromQuery) {\n  const diff = {};\n  const queries = { ...toQuery, ...fromQuery };\n\n  for (const k in queries) {\n    if (String(toQuery[k]) !== String(fromQuery[k])) {\n      diff[k] = true;\n    }\n  }\n\n  return diff;\n}\n\nexport function normalizeError(err) {\n  let message;\n\n  if (!(err.message || typeof err === 'string')) {\n    try {\n      message = JSON.stringify(err, null, 2);\n    } catch (e) {\n      message = `[${ err.constructor.name }]`;\n    }\n  } else {\n    message = err.message || err;\n  }\n\n  return {\n    ...err,\n    message,\n    statusCode: (err.statusCode || err.status || (err.response && err.response.status) || 500)\n  };\n}\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nconst PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse(str, options) {\n  const tokens = [];\n  let key = 0;\n  let index = 0;\n  let path = '';\n  const defaultDelimiter = (options && options.delimiter) || '/';\n  let res;\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    const m = res[0];\n    const escaped = res[1];\n    const offset = res.index;\n\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue;\n    }\n\n    const next = str[index];\n    const prefix = res[2];\n    const name = res[3];\n    const capture = res[4];\n    const group = res[5];\n    const modifier = res[6];\n    const asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    const partial = prefix !== null && next !== null && next !== prefix;\n    const repeat = modifier === '+' || modifier === '*';\n    const optional = modifier === '?' || modifier === '*';\n    const delimiter = res[2] || defaultDelimiter;\n    const pattern = capture || group;\n\n    tokens.push({\n      name:     name || key++,\n      prefix:   prefix || '',\n      delimiter,\n      optional,\n      repeat,\n      partial,\n      asterisk: Boolean(asterisk),\n      pattern:  pattern ? escapeGroup(pattern) : (asterisk ? '.*' : `[^${ escapeString(delimiter) }]+?`)\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens;\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty(str, slashAllowed) {\n  const re = slashAllowed ? /[?#]/g : /[/?#]/g;\n\n  return encodeURI(str).replace(re, (c) => {\n    return `%${ c.charCodeAt(0).toString(16).toUpperCase() }`;\n  });\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk(str) {\n  return encodeURIComponentPretty(str, true);\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup(group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1');\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction(tokens, options) {\n  // Compile all the tokens into regexps.\n  const matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (let i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp(`^(?:${ tokens[i].pattern })$`, flags(options));\n    }\n  }\n\n  return function(obj, opts) {\n    let path = '';\n    const data = obj || {};\n    const options = opts || {};\n    const encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue;\n      }\n\n      const value = data[token.name || 'pathMatch'];\n      let segment;\n\n      if (value === null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue;\n        } else {\n          throw new TypeError(`Expected \"${ token.name }\" to be defined`);\n        }\n      }\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError(`Expected \"${ token.name }\" to not repeat, but received \\`${ JSON.stringify(value) }\\``);\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue;\n          } else {\n            throw new TypeError(`Expected \"${ token.name }\" to not be empty`);\n          }\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError(`Expected all \"${ token.name }\" to match \"${ token.pattern }\", but received \\`${ JSON.stringify(segment) }\\``);\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue;\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError(`Expected \"${ token.name }\" to match \"${ token.pattern }\", but received \"${ segment }\"`);\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path;\n  };\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags(options) {\n  return options && options.sensitive ? '' : 'i';\n}\n\nexport function addLifecycleHook(vm, hook, fn) {\n  if (!vm.$options[hook]) {\n    vm.$options[hook] = [];\n  }\n  if (!vm.$options[hook].includes(fn)) {\n    vm.$options[hook].push(fn);\n  }\n}\n\nexport const urlJoin = joinURL;\n\nexport const stripTrailingSlash = withoutTrailingSlash;\n\nexport const isSamePath = _isSamePath;\n\nexport function setScrollRestoration(newVal) {\n  try {\n    window.history.scrollRestoration = newVal;\n  } catch (e) {}\n}\n"],"mappings":"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"}]}