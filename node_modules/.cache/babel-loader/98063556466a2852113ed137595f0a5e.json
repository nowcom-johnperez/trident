{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["addParam","url","key","val","out","includes","Array","isArray","map","v","concat","encodeURIComponent","join","addParams","params","_typeof","Object","keys","forEach","removeParam","parsed","parse","_a","query","stringify","parseLinkHeader","str","lines","split","_iterator","_createForOfIteratorHelper","_step","s","n","done","line","value","match","toLowerCase","err","e","f","isMaybeSecure","port","proto","protocol","portMatch","ports","equals","endsWith","i","length","j","suffix","portStr","o","options","m","parser","strictMode","exec","Error","uri","queryStr","replace","q","_","$1","$2","name","strict","loose","user","password","host","path","anchor"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/url.ts"],"sourcesContent":["type UriField = 'source' | 'protocol' | 'authority' | 'userInfo' | 'user' | 'password' | 'host' | 'port' | 'relative' | 'path' | 'directory' | 'file' | 'queryStr' | 'anchor'\ntype UriFields = {\n  [key in UriField]: string; // eslint-disable-line no-unused-vars\n}\ntype QueryParams = {\n  [key: string]: string\n}\n\ninterface ParsedUri extends UriFields {\n  query: QueryParams;\n}\n\nexport function addParam(url: string, key: string, val: string | string[]): string {\n  let out = url + (url.includes('?') ? '&' : '?');\n\n  // val can be a string or an array of strings\n  if ( !Array.isArray(val) ) {\n    val = [val];\n  }\n  out += val.map((v) => {\n    if ( v === null ) {\n      return `${ encodeURIComponent(key) }`;\n    } else {\n      return `${ encodeURIComponent(key) }=${ encodeURIComponent(v) }`;\n    }\n  }).join('&');\n\n  return out;\n}\n\nexport function addParams(url: string, params: QueryParams): string {\n  if ( params && typeof params === 'object' ) {\n    Object.keys(params).forEach((key) => {\n      url = addParam(url, key, params[key]);\n    });\n  }\n\n  return url;\n}\n\nexport function removeParam(url: string, key: string): string {\n  const parsed = parse(url);\n\n  if ( parsed.query?.[key] ) {\n    delete parsed.query[key];\n  }\n\n  return stringify(parsed);\n}\n\nexport function parseLinkHeader(str: string): Record<string, string> {\n  const out: { [key: string]: string} = { };\n  const lines = (str || '').split(',');\n\n  for ( const line of lines ) {\n    const match = line.match(/^\\s*<([^>]+)>\\s*;\\s*rel\\s*=\"(.*)\"/);\n\n    if ( match ) {\n      out[match[2].toLowerCase()] = match[1];\n    }\n  }\n\n  return out;\n}\n\nexport function isMaybeSecure(port: number, proto: string): boolean {\n  const protocol = proto.toLowerCase();\n\n  return portMatch([port], [443, 8443], ['443']) || protocol === 'https';\n}\n\nexport function portMatch(ports: number[], equals: number[], endsWith: string[]): boolean {\n  for (let i = 0; i < ports.length; i++) {\n    const port = ports[i];\n\n    if (equals.includes(port)) {\n      return true;\n    }\n\n    for (let j = 0; j < endsWith.length; j++) {\n      const suffix = `${ endsWith[j] }`;\n      const portStr = `${ port }`;\n\n      if (portStr !== suffix && portStr.endsWith(suffix)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// https://javascriptsource.com/parseuri/\n// MIT License\nexport function parse(str: string): ParsedUri {\n  const o = parse.options;\n  const m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\n  if (!m) {\n    throw new Error(`Cannot parse as uri: ${ str }`);\n  }\n  const uri = {} as ParsedUri;\n  let i = 14;\n\n  while (i--) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri.query = {};\n  uri.queryStr.replace(o.q.parser, (_, $1: string, $2: string): string => {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n\n    return '';\n  });\n\n  return uri;\n}\n\nparse.options = {\n  strictMode: false,\n  key:        ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'queryStr', 'anchor'],\n  q:          {\n    name:   'query',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n} as {\n  strictMode: boolean,\n  key: UriField[],\n  q: {\n    name: 'query',\n    parser: RegExp\n  },\n  parser: {\n    strict: RegExp,\n    loose: RegExp\n  }\n};\n\nexport function stringify(uri: ParsedUri): string {\n  let out = `${ uri.protocol }://`;\n\n  if ( uri.user && uri.password ) {\n    out += `${ uri.user }:${ uri.password }@`;\n  } else if ( uri.user ) {\n    out += `${ uri.user }@`;\n  }\n\n  out += uri.host;\n\n  if ( uri.port ) {\n    out += `:${ uri.port }`;\n  }\n\n  out += uri.path || '/';\n\n  out = addParams(out, uri.query || {});\n\n  if ( uri.anchor ) {\n    out += `#${ uri.anchor }`;\n  }\n\n  return out;\n}\n"],"mappings":"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"}]}