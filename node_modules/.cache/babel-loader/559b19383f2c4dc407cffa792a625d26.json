{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/parse-externalid.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/parse-externalid.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwp2YXIgRVhURVJOQUxfSUQgPSB7CiAgS0lORF9TRVBBUkFUT1I6ICc6Ly8nLAogIEdST1VQX1NFUEFSQVRPUjogJzonLAogIEJBU0VfU0VQQVJBVE9SOiAnKicsCiAgSURfU0VQQVJBVE9SOiAnOicsCiAgS0lORF9BTEw6ICdjb250YWluZXJzJywKICBTWVNURU1fQ0FURUdPUklFUzogWydSYW5jaGVyIHNlcnZpY2VzJ10sCiAgQ0FUQUxPR19ERUZBVUxUX0dST1VQOiAnbGlicmFyeScKfTsKCi8vIFBhcnNlcyBleHRlcm5hbElkcyBvbiBzZXJ2aWNlcyBpbnRvCi8vIHsKLy8gIGtpbmQ6IHdoYXQga2luZCBvZiBpZCB0aGlzIGlzIHN1cHBvc2VkIHRvIGJlCi8vICBncm91cDogZm9yIGNhdGFsb2csIHdoYXQgZ3JvdXAgaXQncyBpbgovLyAgaWQ6IHRoZSBhY3R1YWwgZXh0ZXJuYWwgaWQKZXhwb3J0IGZ1bmN0aW9uIHBhcnNlRXh0ZXJuYWxJZChleHRlcm5hbElkKSB7CiAgdmFyIG5hbWVWZXJzaW9uOwogIHZhciBvdXQgPSB7CiAgICBraW5kOiBudWxsLAogICAgZ3JvdXA6IG51bGwsCiAgICBiYXNlOiBudWxsLAogICAgaWQ6IG51bGwsCiAgICBuYW1lOiBudWxsLAogICAgdmVyc2lvbjogbnVsbAogIH07CiAgaWYgKCFleHRlcm5hbElkKSB7CiAgICByZXR1cm4gb3V0OwogIH0KICB2YXIgaWR4ID0gZXh0ZXJuYWxJZC5pbmRleE9mKEVYVEVSTkFMX0lELktJTkRfU0VQQVJBVE9SKTsKICBpZiAoaWR4ID49IDApIHsKICAgIC8vIE5ldyBzdHlsZSBraW5kOi8vW2dyb3VwOl1pZAogICAgb3V0LmtpbmQgPSBleHRlcm5hbElkLnN1YnN0cigwLCBpZHgpOwogICAgdmFyIHJlc3QgPSBleHRlcm5hbElkLnN1YnN0cihpZHggKyBFWFRFUk5BTF9JRC5LSU5EX1NFUEFSQVRPUi5sZW5ndGgpOwogICAgaWR4ID0gcmVzdC5pbmRleE9mKEVYVEVSTkFMX0lELkdST1VQX1NFUEFSQVRPUik7CiAgICBvdXQuaWQgPSByZXN0OwogICAgaWYgKGlkeCA+PSAwKSB7CiAgICAgIC8vIFdpdGggZ3JvdXAga2luZDovL2dyb3VwL2lkCiAgICAgIG91dC5ncm91cCA9IHJlc3Quc3Vic3RyKDAsIGlkeCk7CiAgICAgIG5hbWVWZXJzaW9uID0gcmVzdC5zdWJzdHIoaWR4ICsgMSk7CiAgICB9IGVsc2UgewogICAgICAvLyBXaXRob3V0IGdyb3VwIGtpbmQ6Ly9pZAogICAgICBpZiAob3V0LmtpbmQgPT09IEVYVEVSTkFMX0lELktJTkRfQ0FUQUxPRykgewogICAgICAgIC8vIEZvciBjYXRhbG9nIGtpbmRzLCB3ZSBoYXZlIGEgZGVmYXVsdCBncm91cAogICAgICAgIG91dC5ncm91cCA9IEVYVEVSTkFMX0lELkNBVEFMT0dfREVGQVVMVF9HUk9VUDsKICAgICAgfQogICAgICBuYW1lVmVyc2lvbiA9IHJlc3Q7CiAgICB9CiAgfSBlbHNlIHsKICAgIHZhciBkYXNoZWRJZHggPSBleHRlcm5hbElkLmxhc3RJbmRleE9mKCctJyk7CgogICAgLy8gT2xkIHN0eWxlIGp1c3QgYW4gSUQKICAgIG91dC5raW5kID0gRVhURVJOQUxfSUQuS0lORF9DQVRBTE9HOwogICAgdmFyIGdyb3VwID0gRVhURVJOQUxfSUQuQ0FUQUxPR19ERUZBVUxUX0dST1VQOwogICAgdmFyIG5hbWUgPSBleHRlcm5hbElkLnN1YnN0cigwLCBkYXNoZWRJZHgpOwogICAgdmFyIHZlcnNpb24gPSBleHRlcm5hbElkLnN1YnN0cihkYXNoZWRJZHggKyAxKTsKICAgIG5hbWVWZXJzaW9uID0gIiIuY29uY2F0KG5hbWUpLmNvbmNhdChFWFRFUk5BTF9JRC5JRF9TRVBBUkFUT1IpLmNvbmNhdCh2ZXJzaW9uKTsKICAgIC8vIGRlZmF1bHRncm91cDpleHRpZDp2ZXJzaW9uCiAgICBvdXQuaWQgPSAiIi5jb25jYXQoZ3JvdXApLmNvbmNhdChFWFRFUk5BTF9JRC5HUk9VUF9TRVBBUkFUT1IpLmNvbmNhdChuYW1lVmVyc2lvbik7CiAgICBvdXQuZ3JvdXAgPSBncm91cDsKICB9CiAgaWYgKG5hbWVWZXJzaW9uKSB7CiAgICBpZHggPSBuYW1lVmVyc2lvbi5sYXN0SW5kZXhPZihFWFRFUk5BTF9JRC5JRF9TRVBBUkFUT1IpOwogICAgdmFyIG5hbWVCYXNlOwogICAgaWYgKGlkeCA+IDApIHsKICAgICAgb3V0LnZlcnNpb24gPSBuYW1lVmVyc2lvbi5zdWJzdHIoaWR4ICsgMSk7CiAgICAgIG5hbWVCYXNlID0gbmFtZVZlcnNpb24uc3Vic3RyKDAsIGlkeCk7CiAgICB9IGVsc2UgewogICAgICBuYW1lQmFzZSA9IG5hbWVWZXJzaW9uOwogICAgfQogICAgb3V0LnRlbXBsYXRlSWQgPSAiIi5jb25jYXQob3V0Lmdyb3VwKS5jb25jYXQoRVhURVJOQUxfSUQuR1JPVVBfU0VQQVJBVE9SKS5jb25jYXQobmFtZUJhc2UpOwogICAgaWR4ID0gbmFtZUJhc2UubGFzdEluZGV4T2YoRVhURVJOQUxfSUQuQkFTRV9TRVBBUkFUT1IpOwogICAgaWYgKGlkeCA+IDApIHsKICAgICAgb3V0LmJhc2UgPSBuYW1lQmFzZS5zdWJzdHIoMCwgaWR4KTsKICAgICAgb3V0Lm5hbWUgPSBuYW1lQmFzZS5zdWJzdHIoaWR4ICsgMSk7CiAgICB9IGVsc2UgewogICAgICBvdXQubmFtZSA9IG5hbWVCYXNlOwogICAgfQogIH0KICByZXR1cm4gb3V0Owp9CmV4cG9ydCBmdW5jdGlvbiBwYXJzZUhlbG1FeHRlcm5hbElkKGV4dGVybmFsSWQpIHsKICB2YXIgb3V0ID0gewogICAga2luZDogbnVsbCwKICAgIGdyb3VwOiBudWxsLAogICAgYmFzZTogbnVsbCwKICAgIGlkOiBudWxsLAogICAgbmFtZTogbnVsbCwKICAgIHZlcnNpb246IG51bGwKICB9OwogIGlmICghZXh0ZXJuYWxJZCkgewogICAgcmV0dXJuIG91dDsKICB9CiAgdmFyIGlkeCA9IGV4dGVybmFsSWQuaW5kZXhPZihFWFRFUk5BTF9JRC5LSU5EX1NFUEFSQVRPUik7CgogIC8vIG5vdCB2ZXJ5IHNtYXJ0IGJ1dCBtYXliZSBkb2Vzbid0IG5lZWQgdG8gYmU/CiAgaWYgKGlkeCA+PSAwKSB7CiAgICBvdXQua2luZCA9IGV4dGVybmFsSWQuc3Vic3RyKDAsIGlkeCk7CiAgICB2YXIgcmVzdCA9IGV4dGVybmFsSWQuc3Vic3RyKGlkeCArIEVYVEVSTkFMX0lELktJTkRfU0VQQVJBVE9SLmxlbmd0aCArIDEpOwogICAgb3V0LmlkID0gZXh0ZXJuYWxJZDsKICAgIHJlc3QgPSByZXN0LnNwbGl0KCcmJyk7CiAgICByZXN0LmZvckVhY2goZnVuY3Rpb24gKGl0KSB7CiAgICAgIHZhciBfaXQkc3BsaXQgPSBpdC5zcGxpdCgnPScpLAogICAgICAgIF9pdCRzcGxpdDIgPSBfc2xpY2VkVG9BcnJheShfaXQkc3BsaXQsIDIpLAogICAgICAgIG5tID0gX2l0JHNwbGl0MlswXSwKICAgICAgICB2bCA9IF9pdCRzcGxpdDJbMV07CiAgICAgIG91dFtubV0gPSB2bDsKICAgIH0pOwogIH0KICB2YXIgY2F0YWxvZyA9IG91dC5jYXRhbG9nOwogIGlmIChjYXRhbG9nLmluY2x1ZGVzKCcvJykpIHsKICAgIGNhdGFsb2cgPSBjYXRhbG9nLnJlcGxhY2UoJy8nLCAnOicpOwogIH0gZWxzZSB7CiAgICBjYXRhbG9nID0gImNhdHRsZS1nbG9iYWwtZGF0YToiLmNvbmNhdChjYXRhbG9nKTsKICB9CiAgb3V0LnRlbXBsYXRlSWQgPSAiIi5jb25jYXQoY2F0YWxvZywgIi0iKS5jb25jYXQob3V0LnRlbXBsYXRlKTsKICBvdXQudGVtcGxhdGVWZXJzaW9uSWQgPSAiIi5jb25jYXQoY2F0YWxvZywgIi0iKS5jb25jYXQob3V0LnRlbXBsYXRlLCAiLSIpLmNvbmNhdChvdXQudmVyc2lvbik7CiAgcmV0dXJuIG91dDsKfQ=="},{"version":3,"names":["EXTERNAL_ID","KIND_SEPARATOR","GROUP_SEPARATOR","BASE_SEPARATOR","ID_SEPARATOR","KIND_ALL","SYSTEM_CATEGORIES","CATALOG_DEFAULT_GROUP","parseExternalId","externalId","nameVersion","out","kind","group","base","id","name","version","idx","indexOf","substr","rest","length","KIND_CATALOG","dashedIdx","lastIndexOf","concat","nameBase","templateId","parseHelmExternalId","split","forEach","it","_it$split","_it$split2","_slicedToArray","nm","vl","catalog","includes","replace","template","templateVersionId"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/parse-externalid.js"],"sourcesContent":["const EXTERNAL_ID = {\n  KIND_SEPARATOR:    '://',\n  GROUP_SEPARATOR:   ':',\n  BASE_SEPARATOR:    '*',\n  ID_SEPARATOR:      ':',\n  KIND_ALL:          'containers',\n  SYSTEM_CATEGORIES: [\n    'Rancher services'\n  ],\n  CATALOG_DEFAULT_GROUP: 'library',\n};\n\n// Parses externalIds on services into\n// {\n//  kind: what kind of id this is supposed to be\n//  group: for catalog, what group it's in\n//  id: the actual external id\nexport function parseExternalId(externalId) {\n  let nameVersion;\n  const out = {\n    kind:    null,\n    group:   null,\n    base:    null,\n    id:      null,\n    name:    null,\n    version: null,\n  };\n\n  if (!externalId) {\n    return out;\n  }\n\n  let idx = externalId.indexOf(EXTERNAL_ID.KIND_SEPARATOR);\n\n  if (idx >= 0) {\n    // New style kind://[group:]id\n    out.kind = externalId.substr(0, idx);\n\n    const rest = externalId.substr(idx + EXTERNAL_ID.KIND_SEPARATOR.length);\n\n    idx = rest.indexOf(EXTERNAL_ID.GROUP_SEPARATOR);\n    out.id = rest;\n    if (idx >= 0) {\n      // With group kind://group/id\n      out.group = rest.substr(0, idx);\n      nameVersion = rest.substr(idx + 1);\n    } else {\n      // Without group kind://id\n      if (out.kind === EXTERNAL_ID.KIND_CATALOG) {\n        // For catalog kinds, we have a default group\n        out.group = EXTERNAL_ID.CATALOG_DEFAULT_GROUP;\n      }\n\n      nameVersion = rest;\n    }\n  } else {\n    const dashedIdx = externalId.lastIndexOf('-');\n\n    // Old style just an ID\n    out.kind = EXTERNAL_ID.KIND_CATALOG;\n    const group = EXTERNAL_ID.CATALOG_DEFAULT_GROUP;\n    const name = externalId.substr(0, dashedIdx);\n    const version = externalId.substr(dashedIdx + 1);\n\n    nameVersion = `${ name }${ EXTERNAL_ID.ID_SEPARATOR }${ version }`;\n    // defaultgroup:extid:version\n    out.id = `${ group }${ EXTERNAL_ID.GROUP_SEPARATOR }${ nameVersion }`;\n    out.group = group;\n  }\n\n  if ( nameVersion ) {\n    idx = nameVersion.lastIndexOf(EXTERNAL_ID.ID_SEPARATOR);\n    let nameBase;\n\n    if ( idx > 0 ) {\n      out.version = nameVersion.substr(idx + 1);\n      nameBase = nameVersion.substr(0, idx);\n    } else {\n      nameBase = nameVersion;\n    }\n\n    out.templateId = `${ out.group }${ EXTERNAL_ID.GROUP_SEPARATOR }${ nameBase }`;\n\n    idx = nameBase.lastIndexOf(EXTERNAL_ID.BASE_SEPARATOR);\n    if ( idx > 0 ) {\n      out.base = nameBase.substr(0, idx);\n      out.name = nameBase.substr(idx + 1);\n    } else {\n      out.name = nameBase;\n    }\n  }\n\n  return out;\n}\n\nexport function parseHelmExternalId(externalId) {\n  const out = {\n    kind:    null,\n    group:   null,\n    base:    null,\n    id:      null,\n    name:    null,\n    version: null,\n  };\n\n  if (!externalId) {\n    return out;\n  }\n\n  const idx = externalId.indexOf(EXTERNAL_ID.KIND_SEPARATOR);\n\n  // not very smart but maybe doesn't need to be?\n  if (idx >= 0) {\n    out.kind = externalId.substr(0, idx);\n\n    let rest = externalId.substr(idx + EXTERNAL_ID.KIND_SEPARATOR.length + 1);\n\n    out.id = externalId;\n    rest = rest.split('&');\n    rest.forEach((it) => {\n      const [nm, vl] = it.split('=');\n\n      out[nm] = vl;\n    });\n  }\n\n  let catalog = out.catalog;\n\n  if ( catalog.includes('/') ) {\n    catalog = catalog.replace('/', ':');\n  } else {\n    catalog = `cattle-global-data:${ catalog }`;\n  }\n\n  out.templateId = `${ catalog }-${ out.template }`;\n  out.templateVersionId = `${ catalog }-${ out.template }-${ out.version }`;\n\n  return out;\n}\n"],"mappings":"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"}]}