{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ChangePassword.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/form/ChangePassword.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","Banner","Checkbox","Password","NORMAN","_CREATE","_EDIT","components","props","mode","type","String","default","mustChangePassword","Boolean","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","users","user","wrap","_callee$","_context","prev","next","isChange","$store","dispatch","USER","opt","url","filter","me","sent","username","userChangeOnLogin","stop","data","ctx","errorMessages","pCanShowMismatchedPassword","pIsRandomGenerated","form","deleteKeys","currentP","newP","genP","confirmP","computed","_objectSpread","t","isRandomGenerated","get","set","validate","passwordGen","p","passwordCurrent","passwordNew","passwordConfirm","passwordConfirmBlurred","password","isCreateEdit","isCreate","isEdit","userGeneratedPasswordsRequired","created","methods","passwordsMatch","match","baseIsUserGenPasswordValid","isValid","$emit","save","_this2","_callee2","_callee2$","_context2","changePassword","abrupt","setPassword","_this3","_callee3","_callee3$","_context3","actionName","resource","body","newPassword","_this4","_callee4","_callee4$","_context4","currentPassword","t0","message","_this5","_callee5","tokens","_callee5$","_context5","TOKEN","force","Promise","all","reduce","res","token","current","push","remove","length"],"sources":["node_modules/@rancher/shell/components/form/ChangePassword.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport { Banner } from '@components/Banner';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport Password from '@shell/components/form/Password';\nimport { NORMAN } from '@shell/config/types';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\n\n// Component handles three use cases\n// 1) isChange - Current user is changing their own password\n// 2) isCreate - New password is for a new user\n// 3) isEdit - New password is for an existing user\nexport default {\n  components: {\n    Checkbox, Banner, Password\n  },\n  props: {\n    mode: {\n      type:    String,\n      default: null\n    },\n    mustChangePassword: {\n      type:    Boolean,\n      default: false\n    }\n  },\n  async fetch() {\n    if (this.isChange) {\n      // Fetch the username for hidden input fields. The value itself is not needed if create or changing another user's password\n      const users = await this.$store.dispatch('rancher/findAll', {\n        type: NORMAN.USER,\n        opt:  { url: '/v3/users', filter: { me: true } }\n      });\n      const user = users?.[0];\n\n      this.username = user?.username;\n    }\n    this.userChangeOnLogin = this.mustChangePassword;\n  },\n  data(ctx) {\n    return {\n      username:                   '',\n      errorMessages:              [],\n      pCanShowMismatchedPassword: false,\n      pIsRandomGenerated:         false,\n      form:                       {\n        deleteKeys:        false,\n        currentP:          '',\n        newP:              '',\n        genP:              '',\n        confirmP:          '',\n        userChangeOnLogin: false,\n      },\n    };\n  },\n  computed: {\n    ...mapGetters({ t: 'i18n/t' }),\n\n    isRandomGenerated: {\n      get() {\n        return this.pIsRandomGenerated;\n      },\n\n      set(isRandomGenerated) {\n        this.pIsRandomGenerated = isRandomGenerated;\n        this.errorMessages = [];\n        this.validate();\n      }\n    },\n\n    passwordGen: {\n      get() {\n        return this.form.genP;\n      },\n\n      set(p) {\n        this.form.genP = p;\n        this.validate();\n      }\n    },\n\n    passwordCurrent: {\n      get() {\n        return this.form.currentP;\n      },\n\n      set(p) {\n        this.form.currentP = p;\n        this.validate();\n      }\n    },\n\n    passwordNew: {\n      get() {\n        return this.form.newP;\n      },\n\n      set(p) {\n        this.form.newP = p;\n        this.validate();\n      }\n    },\n\n    passwordConfirm: {\n      get() {\n        return this.form.confirmP;\n      },\n\n      set(p) {\n        this.form.confirmP = p;\n        this.validate();\n      }\n    },\n\n    userChangeOnLogin: {\n      get() {\n        return this.form.userChangeOnLogin;\n      },\n\n      set(p) {\n        this.form.userChangeOnLogin = p;\n        this.validate();\n      }\n    },\n\n    passwordConfirmBlurred: {\n      get() {\n        return this.pCanShowMismatchedPassword;\n      },\n\n      set(p) {\n        this.pCanShowMismatchedPassword = p;\n        this.validate();\n      }\n    },\n\n    password() {\n      return this.isRandomGenerated ? this.passwordGen : this.passwordNew;\n    },\n\n    isChange() {\n      // Change password prompt\n      return !this.mode;\n    },\n\n    isCreateEdit() {\n      return this.isCreate || this.isEdit;\n    },\n\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n\n    isEdit() {\n      // Edit user prompt\n      return this.mode === _EDIT;\n    },\n\n    userGeneratedPasswordsRequired() {\n      if (this.isChange) {\n        return true;\n      }\n      if (this.isCreate) {\n        return !this.isRandomGenerated;\n      }\n      if (this.isEdit) {\n        return !!this.passwordNew || !!this.passwordConfirm;\n      }\n\n      return false;\n    }\n  },\n  created() {\n    // Catch the 'create' case and there's no content\n    this.validate();\n  },\n\n  methods: {\n    passwordsMatch() {\n      const match = this.passwordNew === this.passwordConfirm;\n\n      this.errorMessages = this.passwordConfirmBlurred && !match ? [this.t('changePassword.errors.mismatchedPassword')] : [];\n\n      return match;\n    },\n\n    baseIsUserGenPasswordValid() {\n      return this.passwordsMatch() && !!this.passwordNew;\n    },\n\n    isValid() {\n      if (this.isChange) {\n        return !!this.passwordCurrent && (this.isRandomGenerated ? true : this.baseIsUserGenPasswordValid());\n      }\n\n      if (this.isRandomGenerated) {\n        // If we're not changing current user... and password is randomly generated... there'll be no new/confirm mismatch\n        return true;\n      }\n\n      if (this.isCreate) {\n        return this.baseIsUserGenPasswordValid();\n      }\n\n      if (this.isEdit) {\n        // If the user generated password is required... ensure it's valid\n        return this.userGeneratedPasswordsRequired ? this.baseIsUserGenPasswordValid() : true;\n      }\n\n      return false;\n    },\n\n    validate() {\n      const isValid = this.isValid();\n\n      if (isValid) {\n        // Covers the case where we don't re-evaluate the error messages (don't need to at the time)\n        this.errorMessages = [];\n      }\n\n      this.$emit('valid', isValid);\n      this.$emit('input', {\n        password:          this.password,\n        userChangeOnLogin: this.userChangeOnLogin\n      });\n    },\n\n    async save(user) {\n      if (this.isChange) {\n        await this.changePassword();\n        if (this.form.deleteKeys) {\n          await this.deleteKeys();\n        }\n      } else if (this.isEdit) {\n        return this.setPassword(user);\n      }\n    },\n\n    async setPassword(user) {\n      // Error handling is catered for by caller\n      await this.$store.dispatch('rancher/resourceAction', {\n        type:       NORMAN.USER,\n        actionName: 'setpassword',\n        resource:   user,\n        body:       { newPassword: this.isRandomGenerated ? this.form.genP : this.form.newP },\n      });\n    },\n\n    async changePassword() {\n      try {\n        await this.$store.dispatch('rancher/collectionAction', {\n          type:       NORMAN.USER,\n          actionName: 'changepassword',\n          body:       {\n            currentPassword: this.form.currentP,\n            newPassword:     this.isRandomGenerated ? this.form.genP : this.form.newP\n          },\n        });\n      } catch (err) {\n        this.errorMessages = [err.message || this.t('changePassword.errors.failedToChange')];\n        throw err;\n      }\n    },\n\n    async deleteKeys() {\n      try {\n        const tokens = await this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.TOKEN,\n          opt:  {\n            // Ensure we have any new tokens since last fetched... and that we don't attempt to delete previously deleted tokens\n            force: true\n          }\n        });\n\n        await Promise.all(tokens.reduce((res, token) => {\n          if (!token.current) {\n            res.push(token.remove());\n          }\n\n          return res;\n        }, []));\n      } catch (err) {\n        if (err.message) {\n          this.errorMessages = [err.message];\n        } else if (err.length > 1) {\n          this.errorMessages = [this.t('changePassword.errors.failedDeleteKeys')];\n        } else {\n          this.errorMessages = [this.t('changePassword.errors.failedDeleteKey')];\n        }\n        throw err;\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <div\n    class=\"change-password\"\n    :class=\"{'change': isChange, 'create': isCreate, 'edit': isEdit}\"\n  >\n    <div class=\"form\">\n      <div class=\"fields\">\n        <Checkbox\n          v-if=\"isChange\"\n          v-model=\"form.deleteKeys\"\n          label-key=\"changePassword.deleteKeys.label\"\n          class=\"mt-10\"\n        />\n        <Checkbox\n          v-if=\"isCreateEdit\"\n          v-model=\"userChangeOnLogin\"\n          label-key=\"changePassword.changeOnLogin.label\"\n          class=\"mt-10 type\"\n        />\n        <Checkbox\n          v-if=\"isCreateEdit\"\n          v-model=\"isRandomGenerated\"\n          label-key=\"changePassword.generatePassword.label\"\n          class=\"mt-10 type\"\n        />\n\n        <!-- Create two 'invisible fields' for password managers -->\n        <input\n          id=\"username\"\n          type=\"text\"\n          name=\"username\"\n          autocomplete=\"username\"\n          :value=\"username\"\n          tabindex=\"-1\"\n          :data-lpignore=\"!isChange\"\n        >\n        <input\n          id=\"password\"\n          type=\"password\"\n          name=\"password\"\n          autocomplete=\"password\"\n          :value=\"password\"\n          tabindex=\"-1\"\n          :data-lpignore=\"!isChange\"\n        >\n        <Password\n          v-if=\"isChange\"\n          v-model=\"passwordCurrent\"\n          data-testid=\"account__current_password\"\n          class=\"mt-10\"\n          :required=\"true\"\n          :label=\"t('changePassword.currentPassword.label')\"\n        />\n        <div\n          v-if=\"isRandomGenerated\"\n          :class=\"{'row': isCreateEdit}\"\n        >\n          <div :class=\"{'col': isCreateEdit, 'span-8': isCreateEdit}\">\n            <Password\n              v-model=\"passwordGen\"\n              class=\"mt-10\"\n              :is-random=\"true\"\n              :required=\"false\"\n              :label=\"t('changePassword.randomGen.generated.label')\"\n            />\n          </div>\n        </div>\n        <div\n          v-else\n          class=\"userGen\"\n          :class=\"{'row': isCreateEdit}\"\n        >\n          <div :class=\"{'col': isCreateEdit, 'span-4': isCreateEdit}\">\n            <Password\n              v-model=\"passwordNew\"\n              data-testid=\"account__new_password\"\n              class=\"mt-10\"\n              :label=\"t('changePassword.userGen.newPassword.label')\"\n              :required=\"userGeneratedPasswordsRequired\"\n              :ignore-password-managers=\"!isChange\"\n            />\n          </div>\n          <div :class=\"{'col': isCreateEdit, 'span-4': isCreateEdit}\">\n            <Password\n              v-model=\"passwordConfirm\"\n              data-testid=\"account__confirm_password\"\n              class=\"mt-10\"\n              :label=\"t('changePassword.userGen.confirmPassword.label')\"\n              :required=\"userGeneratedPasswordsRequired\"\n              :ignore-password-managers=\"!isChange\"\n              @blur=\"passwordConfirmBlurred = true\"\n            />\n          </div>\n        </div>\n      </div>\n      <Checkbox\n        v-if=\"isChange\"\n        v-model=\"isRandomGenerated\"\n        label-key=\"changePassword.generatePassword.label\"\n        class=\"mt-10 type\"\n      />\n    </div>\n    <div\n      v-if=\"errorMessages && errorMessages.length\"\n      class=\"text-error\"\n      :class=\"{'row': isCreateEdit}\"\n    >\n      <div :class=\"{'col': isCreateEdit, 'span-8': isCreateEdit}\">\n        <Banner\n          v-for=\"(err, i) in errorMessages\"\n          :key=\"i\"\n          color=\"error\"\n          :label=\"err\"\n          class=\"mb-0\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .change-password {\n    display: flex;\n    flex-direction: column;\n\n    &.change {\n      .form .fields {\n        height: 240px;\n      }\n    }\n\n    &.create, &.edit {\n      height: 185px;\n      .form {\n        .fields {\n          display: flex;\n          flex-direction: column;\n        }\n      }\n    }\n\n    .form {\n      display: flex;\n      flex-direction: column;\n      .fields{\n        #username, #password {\n          height: 0;\n          width: 0;\n          background-size: 0;\n          padding: 0;\n          border: none;\n        }\n      }\n    }\n\n    .text-error {\n      height: 53px;\n    }\n  }\n\n</style>\n"],"mappings":"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"}]}