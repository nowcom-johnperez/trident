{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/auth.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/auth.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Popup","popupWindowOptions","parse","parseUrl","addParam","BACK_TO","SPA","_EDIT","_FLAGGED","MANAGEMENT","allHash","openAuthPopup","url","provider","popup","promise","Promise","resolve","reject","window","onAuthTest","error","code","Error","open","returnTo","opt","vm","_opt$route","route","$router","options","base","routerBase","concat","replace","returnToUrl","location","origin","parsed","href","query","spa","undefined","backTo","config","authProvidersInfo","_ref","_asyncToGenerator","regeneratorRuntime","mark","_callee","store","rows","nonLocal","supportedNonLocal","enabled","enabledLocation","wrap","_callee$","_context","prev","next","dispatch","type","AUTH_CONFIG","sent","filter","x","name","id","length","params","mode","abrupt","stop","_x","apply","arguments","checkSchemasForFindAllHash","types","hash","_i","_Object$entries","Object","entries","_Object$entries$_i","_slicedToArray","key","value","schema","getters","inStoreType","validSchema","schemaValidator","checkPermissions","_loop","_Object$entries2$_i","_Object$entries2","_i2","resourceMethods","every","method","includes","collectionMethods","_ret","canViewResource","resource","inStore","schemaFor","validResource"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/auth.js"],"sourcesContent":["import { Popup, popupWindowOptions } from '@shell/utils/window';\r\nimport { parse as parseUrl, addParam } from '@shell/utils/url';\r\nimport { BACK_TO, SPA, _EDIT, _FLAGGED } from '@shell/config/query-params';\r\nimport { MANAGEMENT } from '@shell/config/types';\r\nimport { allHash } from '@shell/utils/promise';\r\n\r\nexport function openAuthPopup(url, provider) {\r\n  const popup = new Popup(() => {\r\n    popup.promise = new Promise((resolve, reject) => {\r\n      popup.resolve = resolve;\r\n      popup.reject = reject;\r\n    });\r\n\r\n    window.onAuthTest = (error, code) => {\r\n      if (error) {\r\n        popup.reject(error);\r\n      }\r\n\r\n      delete window.onAuthTest;\r\n      popup.resolve(code);\r\n    };\r\n  }, () => {\r\n    popup.reject(new Error('Access was not authorized'));\r\n  });\r\n\r\n  popup.open(url, 'auth-test', popupWindowOptions());\r\n\r\n  return popup.promise;\r\n}\r\n\r\nexport function returnTo(opt, vm) {\r\n  let { route = `/auth/verify` } = opt;\r\n\r\n  if ( vm.$router.options && vm.$router.options.base ) {\r\n    const routerBase = vm.$router.options.base;\r\n\r\n    if ( routerBase !== '/' ) {\r\n      route = `${ routerBase.replace(/\\/+$/, '') }/${ route.replace(/^\\/+/, '') }`;\r\n    }\r\n  }\r\n\r\n  let returnToUrl = `${ window.location.origin }${ route }`;\r\n\r\n  const parsed = parseUrl(window.location.href);\r\n\r\n  if ( parsed.query.spa !== undefined ) {\r\n    returnToUrl = addParam(returnToUrl, SPA, _FLAGGED);\r\n  }\r\n\r\n  if ( opt.backTo ) {\r\n    returnToUrl = addParam(returnToUrl, BACK_TO, opt.backTo);\r\n  }\r\n\r\n  if (opt.config) {\r\n    returnToUrl = addParam(returnToUrl, 'config', opt.config);\r\n  }\r\n\r\n  return returnToUrl;\r\n}\r\n\r\n/**\r\n * Determines common auth provider info as those that are available (non-local) and the location of the enabled provider\r\n */\r\nexport const authProvidersInfo = async(store) => {\r\n  const rows = await store.dispatch(`management/findAll`, { type: MANAGEMENT.AUTH_CONFIG });\r\n  const nonLocal = rows.filter((x) => x.name !== 'local');\r\n  // Generic OIDC is returned via API but not supported (and will be removed or fixed in future)\r\n  const supportedNonLocal = nonLocal.filter((x) => x.id !== 'oidc');\r\n  const enabled = nonLocal.filter((x) => x.enabled === true );\r\n\r\n  const enabledLocation = enabled.length === 1 ? {\r\n    name:   'c-cluster-auth-config-id',\r\n    params: { id: enabled[0].id },\r\n    query:  { mode: _EDIT }\r\n  } : null;\r\n\r\n  return {\r\n    nonLocal: supportedNonLocal,\r\n    enabledLocation,\r\n    enabled\r\n  };\r\n};\r\n\r\nexport const checkSchemasForFindAllHash = (types, store) => {\r\n  const hash = {};\r\n\r\n  for (const [key, value] of Object.entries(types)) {\r\n    const schema = store.getters[`${ value.inStoreType }/schemaFor`](value.type);\r\n\r\n    // It could be that user has permissions for GET but not list\r\n    // e.g. Standard user with GitRepo permissions try to fetch list of fleetworkspaces\r\n    // user has ability to GET but not fleet workspaces\r\n    // so optionally define a function that require it to pass before /findAll\r\n    const validSchema = value.schemaValidator ? value.schemaValidator(schema) : !!schema;\r\n\r\n    if (validSchema) {\r\n      hash[key] = store.dispatch(`${ value.inStoreType }/findAll`, { type: value.type } );\r\n    }\r\n  }\r\n\r\n  return allHash(hash);\r\n};\r\n\r\nexport const checkPermissions = (types, getters) => {\r\n  const hash = {};\r\n\r\n  for (const [key, value] of Object.entries(types)) {\r\n    const schema = getters['management/schemaFor'](value.type);\r\n\r\n    if (!schema) {\r\n      hash[key] = false;\r\n\r\n      continue;\r\n    }\r\n\r\n    // It could be that user has permissions for GET but not list\r\n    // e.g. Standard user with GitRepo permissions try to fetch list of fleetworkspaces\r\n    // user has ability to GET but not fleet workspaces\r\n    // so optionally define a function that require it to pass before /findAll\r\n    if (value.schemaValidator) {\r\n      hash[key] = value.schemaValidator(schema);\r\n\r\n      continue;\r\n    }\r\n\r\n    if (value.resourceMethods && schema) {\r\n      hash[key] = value.resourceMethods.every((method) => {\r\n        return (schema.resourceMethods || []).includes(method);\r\n      });\r\n\r\n      continue;\r\n    }\r\n\r\n    if (value.collectionMethods && schema) {\r\n      hash[key] = value.collectionMethods.every((method) => {\r\n        return (schema.collectionMethods || []).includes(method);\r\n      });\r\n\r\n      continue;\r\n    }\r\n\r\n    hash[key] = !!schema;\r\n  }\r\n\r\n  return allHash(hash);\r\n};\r\n\r\nexport const canViewResource = (store, resource) => {\r\n  // Note - don't use the current products store... because products can override stores for resources with `typeStoreMap`\r\n  const inStore = store.getters['currentStore'](resource);\r\n  // There's a chance we're in an extension's product who's store could be anything, so confirm schemaFor exists\r\n  const schemaFor = store.getters[`${ inStore }/schemaFor`];\r\n\r\n  // In order to check a resource is valid we need these\r\n  if (!inStore || !schemaFor) {\r\n    return false;\r\n  }\r\n\r\n  // Resource is valid if a schema exists for it (standard resource, spoofed resource) or it's a virtual resource\r\n  const validResource = schemaFor(resource) || store.getters['type-map/isVirtual'](resource);\r\n\r\n  return !!validResource;\r\n};\r\n"],"mappings":"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"}]}