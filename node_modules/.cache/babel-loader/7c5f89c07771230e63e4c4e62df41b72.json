{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/alertmanagerconfig.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/alertmanagerconfig.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["jsyaml","base64Decode","base64Encode","MONITORING","SECRET","get","set","isEmpty","ROOT_NAME","DEFAULT_SECRET_ID","ALERTMANAGER_ID","FILENAME","getSecretId","_x","_getSecretId","apply","arguments","_asyncToGenerator","regeneratorRuntime","mark","_callee","dispatch","_alertManager$spec","alertManager","_alertManager$spec2","wrap","_callee$","_context","prev","next","type","ALERTMANAGER","id","root","sent","spec","configSecret","abrupt","concat","namespace","stop","getSecret","_x2","_getSecret","_callee2","secretId","_secretId$split","_secretId$split2","name","secret","_callee2$","_context2","t0","split","_slicedToArray","metadata","extractConfig","data","file","decodedFile","config","load","receivers","route","routes","loadConfig","_x3","_loadConfig","_callee3","_callee3$","_context3","updateConfig","_x4","_x5","_x6","_x7","_updateConfig","_callee4","path","updateFn","_yield$loadConfig","newValue","rootIndex","rootRoute","newFile","encodedFile","_callee4$","_context4","setDefaultRouteNames","findIndex","forEach","splice","dump","save","getAllReceivers","_x8","_getAllReceivers","_callee5","_yield$loadConfig2","receiversWithName","mapped","_callee5$","_context5","filter","receiver","map","SPOOFED","RECEIVER","Promise","all","getAllRoutes","_x9","_getAllRoutes","_callee6","_config$route2","_yield$loadConfig3","_callee6$","_context6","push","ROUTE","i","createDefaultRouteName","index","areRoutesSupportedFormat","_config$route","some","ex","canCreate","rootGetters","isCreatable"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/alertmanagerconfig.js"],"sourcesContent":["import jsyaml from 'js-yaml';\nimport { base64Decode, base64Encode } from '@shell/utils/crypto';\nimport { MONITORING, SECRET } from '@shell/config/types';\nimport { get, set } from '@shell/utils/object';\nimport isEmpty from 'lodash/isEmpty';\nimport { ROOT_NAME } from '@shell/models/monitoring.coreos.com.route';\n\nconst DEFAULT_SECRET_ID = 'cattle-monitoring-system/alertmanager-rancher-monitoring-alertmanager';\nconst ALERTMANAGER_ID = 'cattle-monitoring-system/rancher-monitoring-alertmanager';\n\nexport const FILENAME = 'alertmanager.yaml';\n\nexport async function getSecretId(dispatch) {\n  const alertManager = await dispatch('cluster/find', { type: MONITORING.ALERTMANAGER, id: ALERTMANAGER_ID }, { root: true });\n\n  if (alertManager?.spec?.configSecret) {\n    return `${ alertManager.namespace }/${ alertManager?.spec?.configSecret }`;\n  }\n\n  return DEFAULT_SECRET_ID;\n}\n\nexport async function getSecret(dispatch) {\n  const secretId = await getSecretId(dispatch, false);\n\n  try {\n    return await dispatch('cluster/find', { type: SECRET, id: secretId }, { root: true });\n  } catch (ex) {\n    const [namespace, name] = secretId.split('/');\n    const secret = await dispatch('cluster/create', { type: SECRET }, { root: true });\n\n    secret.metadata = {\n      namespace,\n      name\n    };\n\n    return secret;\n  }\n}\n\nfunction extractConfig(secret) {\n  secret.data = secret.data || {};\n  const file = secret.data[FILENAME];\n  const decodedFile = file ? base64Decode(file) : '{}';\n  const config = jsyaml.load(decodedFile);\n\n  config.receivers = config.receivers || [];\n  config.route = config.route || {};\n  config.route.routes = config.route.routes || [];\n\n  return config;\n}\n\nexport async function loadConfig(dispatch) {\n  const secret = await getSecret(dispatch);\n\n  return {\n    config: extractConfig(secret),\n    secret\n  };\n}\n\nexport async function updateConfig(dispatch, path, type, updateFn) {\n  const { config, secret } = await loadConfig(dispatch);\n\n  set(config, path, get(config, path) || []);\n  setDefaultRouteNames(config.route.routes);\n\n  const newValue = updateFn(get(config, path));\n\n  set(config, path, newValue);\n\n  const routes = config.route.routes;\n  const rootIndex = routes.findIndex((route) => route.name === ROOT_NAME);\n\n  routes.forEach((route) => {\n    if (route.name) {\n      delete route.name;\n    }\n  });\n\n  if (rootIndex >= 0) {\n    const rootRoute = routes.splice(rootIndex, 1)[0];\n\n    rootRoute.routes = routes;\n    config.route = rootRoute;\n  }\n\n  const newFile = jsyaml.dump(config);\n  const encodedFile = base64Encode(newFile);\n\n  secret.data[FILENAME] = encodedFile;\n  await secret.save();\n}\n\nexport async function getAllReceivers(dispatch) {\n  try {\n    const { config, secret } = await loadConfig(dispatch);\n    const receivers = config.receivers || [];\n    const receiversWithName = receivers.filter((receiver) => receiver.name);\n    const mapped = receiversWithName.map((receiver) => dispatch('cluster/create', {\n      id:   receiver.name,\n      spec: receiver,\n      type: MONITORING.SPOOFED.RECEIVER,\n      secret\n    }, { root: true }));\n\n    return Promise.all(mapped);\n  } catch (ex) {\n    return [];\n  }\n}\n\nexport async function getAllRoutes(dispatch) {\n  try {\n    const { config, secret } = await loadConfig(dispatch);\n\n    config.route = config.route || {};\n    config.route.name = ROOT_NAME;\n    const routes = config.route?.routes || [];\n\n    setDefaultRouteNames(routes);\n\n    routes.push(config.route);\n\n    const mapped = routes.map((route) => dispatch('cluster/create', {\n      id:   route.name,\n      spec: route,\n      type: MONITORING.SPOOFED.ROUTE,\n      secret\n    }, { root: true }));\n\n    return Promise.all(mapped);\n  } catch (ex) {\n    return [];\n  }\n}\n\nfunction setDefaultRouteNames(routes) {\n  routes.forEach((route, i) => {\n    route.name = route.name || createDefaultRouteName(i);\n  });\n}\n\nexport function createDefaultRouteName(index) {\n  return `route-${ index }`;\n}\n\nexport function areRoutesSupportedFormat(secret) {\n  try {\n    const config = extractConfig(secret);\n    const routes = config.route?.routes || [];\n\n    return !routes.some(isEmpty);\n  } catch (ex) {\n    return false;\n  }\n}\n\nexport function canCreate(rootGetters) {\n  return rootGetters['type-map/optionsFor'](SECRET).isCreatable;\n}\n"],"mappings":"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"}]}