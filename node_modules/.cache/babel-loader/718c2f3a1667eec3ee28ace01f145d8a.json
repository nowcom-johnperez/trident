{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mount","PolicyRuleTarget","cleanHtmlDirective","mock","PolicyRuleTargetSelectors","describe","each","mode","mockExists","jest","fn","mockReturnValue","mockT","wrapper","data","throttleTime","propsData","namespace","defaultNamespace","allNamespaces","allPods","type","directives","mocks","$store","getters","concat","it","_asyncToGenerator","regeneratorRuntime","mark","_callee","ipBlock","selectors","wrap","_callee$","_context","prev","next","setProps","value","expect","ruleType","vm","$data","_value","toBe","element","toBeUndefined","pod","namespaceAndPod","namespaceRule","podRule","toStrictEqual","cidr","stop","_callee2","namespaceSelector","_callee2$","_context2","matchingNamespaces","matched","matches","toHaveLength","metadata","name","labels","toBeDefined","_callee3","podSelector","_callee3$","_context3","matchingPods","_callee4","_callee4$","_context4"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/networking.k8s.io.networkpolicy/__tests__/PolicyRuleTarget.spec.ts"],"sourcesContent":["import { mount } from '@vue/test-utils';\nimport PolicyRuleTarget from '@shell/edit/networking.k8s.io.networkpolicy/PolicyRuleTarget';\nimport { cleanHtmlDirective } from '@shell/plugins/clean-html-directive';\nimport mock from '@shell/edit/networking.k8s.io.networkpolicy/__tests__/utils/mock.json';\nimport { PolicyRuleTargetSelectors } from '@shell/edit/networking.k8s.io.networkpolicy/__tests__/utils/selectors';\n\ndescribe.each([\n  'view',\n  'edit',\n])('component: PolicyRuleTarget', (mode) => {\n  const mockExists = jest.fn().mockReturnValue(true);\n  const mockT = jest.fn().mockReturnValue('some-string');\n\n  const wrapper = mount(PolicyRuleTarget, {\n    data() {\n      return { throttleTime: 0 };\n    },\n    propsData: {\n      namespace:     mock.defaultNamespace,\n      allNamespaces: mock.allNamespaces,\n      allPods:       mock.allPods,\n      type:          'ingress',\n      mode\n    },\n\n    directives: { cleanHtmlDirective },\n\n    mocks: {\n      $store: {\n        getters: {\n          'i18n/exists': mockExists,\n          'i18n/t':      mockT\n        }\n      }\n    }\n  });\n\n  describe(`${ mode } mode`, () => {\n    it('should display ip-block selector rule', async() => {\n      const ipBlock = mock.selectors.ipBlock;\n\n      await wrapper.setProps({ value: { ipBlock } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('ipBlock');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.pod.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.ipBlock.element._value).toStrictEqual(ipBlock.cidr);\n    });\n\n    it('should display namespace selector rule', async() => {\n      const namespaceSelector = mock.selectors.namespace;\n\n      await wrapper.setProps({ value: { namespaceSelector } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('namespaceSelector');\n\n      // Check the matching namespaces displayed by the banner\n      expect(wrapper.vm.$data.matchingNamespaces.matched).toBe(1);\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingNamespaces.matches).toHaveLength(1);\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.name).toBe('default');\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.labels['user']).toBe('alice');\n\n      expect(selectors.pod.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.namespace.element).toBeDefined();\n    });\n\n    it('should display pod selector rule', async() => {\n      const podSelector = mock.selectors.pod;\n\n      await wrapper.setProps({ value: { podSelector } });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('podSelector');\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingPods.matched).toBe(1);\n      expect(wrapper.vm.$data.matchingPods.matches).toHaveLength(1);\n\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.name).toBe('test-pod');\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.labels['foo']).toBe('bar');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeUndefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeUndefined();\n\n      expect(selectors.pod.element).toBeDefined();\n    });\n\n    it('should display namespace/pod selector rule', async() => {\n      const namespaceSelector = mock.selectors.namespaceAndPod.namespace;\n      const podSelector = mock.selectors.namespaceAndPod.pod;\n\n      await wrapper.setProps({\n        value: {\n          namespaceSelector,\n          podSelector,\n        }\n      });\n\n      const selectors = new PolicyRuleTargetSelectors(wrapper);\n\n      // Check rule type selector\n      expect(selectors.ruleType.vm.$data._value.value).toBe('namespaceAndPodSelector');\n\n      // Check the matching pods displayed by the banner\n      expect(wrapper.vm.$data.matchingPods.matched).toBe(1);\n\n      // Check if namespace's labels match\n      expect(wrapper.vm.$data.matchingNamespaces.matches).toHaveLength(1);\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.name).toBe('default');\n      expect(wrapper.vm.$data.matchingNamespaces.matches[0].metadata.labels['user']).toBe('alice');\n\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.name).toBe('test-pod');\n      expect(wrapper.vm.$data.matchingPods.matches[0].metadata.labels['foo']).toBe('bar');\n\n      expect(selectors.namespace.element).toBeUndefined();\n      expect(selectors.pod.element).toBeUndefined();\n\n      expect(selectors.namespaceAndPod.namespaceRule.element).toBeDefined();\n      expect(selectors.namespaceAndPod.podRule.element).toBeDefined();\n    });\n  });\n});\n"],"mappings":"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"}]}