{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/namespace.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/namespace.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IE5hbWVOc0Rlc2NyaXB0aW9uIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vTmFtZU5zRGVzY3JpcHRpb24nOwppbXBvcnQgQ3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IExhYmVsZWRTZWxlY3QgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9MYWJlbGVkU2VsZWN0JzsKaW1wb3J0IHsgTUFOQUdFTUVOVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgeyBDT05UQUlORVJfREVGQVVMVF9SRVNPVVJDRV9MSU1JVCwgUFJPSkVDVCB9IGZyb20gJ0BzaGVsbC9jb25maWcvbGFiZWxzLWFubm90YXRpb25zJzsKaW1wb3J0IENvbnRhaW5lclJlc291cmNlTGltaXQgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvQ29udGFpbmVyUmVzb3VyY2VMaW1pdCc7CmltcG9ydCBQb2RTZWN1cml0eUFkbWlzc2lvbiBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Qb2RTZWN1cml0eUFkbWlzc2lvbic7CmltcG9ydCBUYWIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkL1RhYic7CmltcG9ydCBSZXNvdXJjZVRhYnMgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9SZXNvdXJjZVRhYnMvaW5kZXgudnVlJzsKaW1wb3J0IENydVJlc291cmNlIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0NydVJlc291cmNlJzsKaW1wb3J0IHsgUFJPSkVDVF9JRCwgX1ZJRVcsIEZMQVRfVklFVywgX0NSRUFURSB9IGZyb20gJ0BzaGVsbC9jb25maWcvcXVlcnktcGFyYW1zJzsKaW1wb3J0IE1vdmVNb2RhbCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Nb3ZlTW9kYWwnOwppbXBvcnQgUmVzb3VyY2VRdW90YSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL1Jlc291cmNlUXVvdGEvTmFtZXNwYWNlJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCB7IEhBUlZFU1RFUl9UWVBFUywgUkFOQ0hFUl9UWVBFUyB9IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vUmVzb3VyY2VRdW90YS9zaGFyZWQnOwppbXBvcnQgeyBIQVJWRVNURVJfTkFNRSBhcyBIQVJWRVNURVIgfSBmcm9tICdAc2hlbGwvY29uZmlnL2ZlYXR1cmVzJzsKaW1wb3J0IExhYmVscyBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0xhYmVscyc7CmltcG9ydCB7IHJhbmRvbVN0ciB9IGZyb20gJ0BzaGVsbC91dGlscy9zdHJpbmcnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgQ29udGFpbmVyUmVzb3VyY2VMaW1pdDogQ29udGFpbmVyUmVzb3VyY2VMaW1pdCwKICAgIENydVJlc291cmNlOiBDcnVSZXNvdXJjZSwKICAgIExhYmVsZWRTZWxlY3Q6IExhYmVsZWRTZWxlY3QsCiAgICBMYWJlbHM6IExhYmVscywKICAgIExvYWRpbmc6IExvYWRpbmcsCiAgICBOYW1lTnNEZXNjcmlwdGlvbjogTmFtZU5zRGVzY3JpcHRpb24sCiAgICBQb2RTZWN1cml0eUFkbWlzc2lvbjogUG9kU2VjdXJpdHlBZG1pc3Npb24sCiAgICBSZXNvdXJjZVF1b3RhOiBSZXNvdXJjZVF1b3RhLAogICAgVGFiOiBUYWIsCiAgICBSZXNvdXJjZVRhYnM6IFJlc291cmNlVGFicywKICAgIE1vdmVNb2RhbDogTW92ZU1vZGFsCiAgfSwKICBtaXhpbnM6IFtDcmVhdGVFZGl0Vmlld10sCiAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIGlmICghX3RoaXMuJHN0b3JlLmdldHRlcnNbJ21hbmFnZW1lbnQvc2NoZW1hRm9yJ10oTUFOQUdFTUVOVC5QUk9KRUNUKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICB9CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gX3RoaXMuJHN0b3JlLmRpc3BhdGNoKCdtYW5hZ2VtZW50L2ZpbmRBbGwnLCB7CiAgICAgICAgICAgICAgdHlwZTogTUFOQUdFTUVOVC5QUk9KRUNUCiAgICAgICAgICAgIH0pOwogICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICBfdGhpcy5wcm9qZWN0cyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF90aGlzLnByb2plY3QgPSBfdGhpcy5wcm9qZWN0cy5maW5kKGZ1bmN0aW9uIChwKSB7CiAgICAgICAgICAgICAgcmV0dXJuIHAuaWQuaW5jbHVkZXMoX3RoaXMucHJvamVjdE5hbWUpOwogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgNToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyRsaXZlVmFsdWUsIF90aGlzJHZhbHVlLCBfdGhpcyR2YWx1ZSRhbm5vdGF0aW87CiAgICB2YXIgb3JpZ2luYWxRdW90YUlkID0gbnVsbDsKICAgIGlmICgoX3RoaXMkbGl2ZVZhbHVlID0gdGhpcy5saXZlVmFsdWUpICE9PSBudWxsICYmIF90aGlzJGxpdmVWYWx1ZSAhPT0gdm9pZCAwICYmIChfdGhpcyRsaXZlVmFsdWUgPSBfdGhpcyRsaXZlVmFsdWUubWV0YWRhdGEpICE9PSBudWxsICYmIF90aGlzJGxpdmVWYWx1ZSAhPT0gdm9pZCAwICYmIF90aGlzJGxpdmVWYWx1ZS5uYW1lKSB7CiAgICAgIG9yaWdpbmFsUXVvdGFJZCA9ICIiLmNvbmNhdCh0aGlzLmxpdmVWYWx1ZS5tZXRhZGF0YS5uYW1lLCAiL2RlZmF1bHQtcXVvdGEiKTsKICAgIH0KICAgIHZhciBwcm9qZWN0TmFtZSA9ICgoX3RoaXMkdmFsdWUgPSB0aGlzLnZhbHVlKSA9PT0gbnVsbCB8fCBfdGhpcyR2YWx1ZSA9PT0gdm9pZCAwIHx8IChfdGhpcyR2YWx1ZSA9IF90aGlzJHZhbHVlLm1ldGFkYXRhKSA9PT0gbnVsbCB8fCBfdGhpcyR2YWx1ZSA9PT0gdm9pZCAwIHx8IChfdGhpcyR2YWx1ZSA9IF90aGlzJHZhbHVlLmxhYmVscykgPT09IG51bGwgfHwgX3RoaXMkdmFsdWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZhbHVlW1BST0pFQ1RdKSB8fCB0aGlzLiRyb3V0ZS5xdWVyeVtQUk9KRUNUX0lEXTsKICAgIHJldHVybiB7CiAgICAgIG9yaWdpbmFsUXVvdGFJZDogb3JpZ2luYWxRdW90YUlkLAogICAgICBwcm9qZWN0OiBudWxsLAogICAgICBwcm9qZWN0czogbnVsbCwKICAgICAgdmlld01vZGU6IF9WSUVXLAogICAgICBjb250YWluZXJSZXNvdXJjZUxpbWl0czogKChfdGhpcyR2YWx1ZSRhbm5vdGF0aW8gPSB0aGlzLnZhbHVlLmFubm90YXRpb25zKSA9PT0gbnVsbCB8fCBfdGhpcyR2YWx1ZSRhbm5vdGF0aW8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHZhbHVlJGFubm90YXRpb1tDT05UQUlORVJfREVGQVVMVF9SRVNPVVJDRV9MSU1JVF0pIHx8IHRoaXMuZ2V0RGVmYXVsdENvbnRhaW5lclJlc291cmNlTGltaXRzKHByb2plY3ROYW1lKSwKICAgICAgcmVyZW5kZXJOdW1zOiByYW5kb21TdHIoNCksCiAgICAgIHByb2plY3ROYW1lOiBwcm9qZWN0TmFtZSwKICAgICAgSEFSVkVTVEVSX1RZUEVTOiBIQVJWRVNURVJfVFlQRVMsCiAgICAgIFJBTkNIRVJfVFlQRVM6IFJBTkNIRVJfVFlQRVMKICAgIH07CiAgfSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnaXNTdGFuZGFsb25lSGFydmVzdGVyJ10pKSwge30sIHsKICAgIGlzQ3JlYXRlOiBmdW5jdGlvbiBpc0NyZWF0ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMubW9kZSA9PT0gX0NSRUFURTsKICAgIH0sCiAgICBwcm9qZWN0T3B0czogZnVuY3Rpb24gcHJvamVjdE9wdHMoKSB7CiAgICAgIHZhciBjbHVzdGVySWQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydjdXJyZW50Q2x1c3RlciddLmlkOwogICAgICB2YXIgcHJvamVjdHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2FsbCddKE1BTkFHRU1FTlQuUFJPSkVDVCk7CgogICAgICAvLyBGaWx0ZXIgb3V0IHByb2plY3RzIG5vdCBmb3IgdGhlIGN1cnJlbnQgY2x1c3RlcgogICAgICBwcm9qZWN0cyA9IHByb2plY3RzLmZpbHRlcihmdW5jdGlvbiAoYykgewogICAgICAgIHZhciBfYyRzcGVjOwogICAgICAgIHJldHVybiAoKF9jJHNwZWMgPSBjLnNwZWMpID09PSBudWxsIHx8IF9jJHNwZWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jJHNwZWMuY2x1c3Rlck5hbWUpID09PSBjbHVzdGVySWQ7CiAgICAgIH0pOwogICAgICB2YXIgb3V0ID0gcHJvamVjdHMubWFwKGZ1bmN0aW9uIChwcm9qZWN0KSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsOiBwcm9qZWN0Lm5hbWVEaXNwbGF5LAogICAgICAgICAgdmFsdWU6IHByb2plY3QubWV0YWRhdGEubmFtZQogICAgICAgIH07CiAgICAgIH0pOwogICAgICBvdXQudW5zaGlmdCh7CiAgICAgICAgbGFiZWw6IHRoaXMudCgnbmFtZXNwYWNlLnByb2plY3Qubm9uZScpLAogICAgICAgIHZhbHVlOiBudWxsCiAgICAgIH0pOwogICAgICByZXR1cm4gb3V0OwogICAgfSwKICAgIGRvbmVMb2NhdGlvbk92ZXJyaWRlOiBmdW5jdGlvbiBkb25lTG9jYXRpb25PdmVycmlkZSgpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWUubGlzdExvY2F0aW9uOwogICAgfSwKICAgIHNob3dSZXNvdXJjZVF1b3RhOiBmdW5jdGlvbiBzaG93UmVzb3VyY2VRdW90YSgpIHsKICAgICAgdmFyIF90aGlzJHByb2plY3Q7CiAgICAgIHJldHVybiAhdGhpcy5pc1N0YW5kYWxvbmVIYXJ2ZXN0ZXIgJiYgT2JqZWN0LmtleXMoKChfdGhpcyRwcm9qZWN0ID0gdGhpcy5wcm9qZWN0KSA9PT0gbnVsbCB8fCBfdGhpcyRwcm9qZWN0ID09PSB2b2lkIDAgfHwgKF90aGlzJHByb2plY3QgPSBfdGhpcyRwcm9qZWN0LnNwZWMpID09PSBudWxsIHx8IF90aGlzJHByb2plY3QgPT09IHZvaWQgMCB8fCAoX3RoaXMkcHJvamVjdCA9IF90aGlzJHByb2plY3QucmVzb3VyY2VRdW90YSkgPT09IG51bGwgfHwgX3RoaXMkcHJvamVjdCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkcHJvamVjdC5saW1pdCkgfHwge30pLmxlbmd0aCA+IDA7CiAgICB9LAogICAgc2hvd0NvbnRhaW5lclJlc291cmNlTGltaXQ6IGZ1bmN0aW9uIHNob3dDb250YWluZXJSZXNvdXJjZUxpbWl0KCkgewogICAgICByZXR1cm4gIXRoaXMuaXNTdGFuZGFsb25lSGFydmVzdGVyOwogICAgfSwKICAgIGZsYXRWaWV3OiBmdW5jdGlvbiBmbGF0VmlldygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHJvdXRlLnF1ZXJ5W0ZMQVRfVklFV10gfHwgZmFsc2U7CiAgICB9LAogICAgc2hvd1BvZFNlY3VyaXR5QWRtaXNzaW9uOiBmdW5jdGlvbiBzaG93UG9kU2VjdXJpdHlBZG1pc3Npb24oKSB7CiAgICAgIHJldHVybiAhdGhpcy5pc1N0YW5kYWxvbmVIYXJ2ZXN0ZXI7CiAgICB9LAogICAgc2hvd0hhcnZlc3RlckhlbHBUZXh0OiBmdW5jdGlvbiBzaG93SGFydmVzdGVySGVscFRleHQoKSB7CiAgICAgIHJldHVybiAhdGhpcy5pc1N0YW5kYWxvbmVIYXJ2ZXN0ZXIgJiYgdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudFByb2R1Y3QnXS5pblN0b3JlID09PSBIQVJWRVNURVI7CiAgICB9CiAgfSksCiAgd2F0Y2g6IHsKICAgIHByb2plY3Q6IGZ1bmN0aW9uIHByb2plY3QoKSB7CiAgICAgIHZhciBsaW1pdHMgPSB0aGlzLmdldERlZmF1bHRDb250YWluZXJSZXNvdXJjZUxpbWl0cyh0aGlzLnByb2plY3ROYW1lKTsKICAgICAgdGhpcy4kc2V0KHRoaXMsICdjb250YWluZXJSZXNvdXJjZUxpbWl0cycsIGxpbWl0cyk7CiAgICB9LAogICAgcHJvamVjdE5hbWU6IGZ1bmN0aW9uIHByb2plY3ROYW1lKG5ld1Byb2plY3ROYW1lKSB7CiAgICAgIHRoaXMuJHNldCh0aGlzLCAncHJvamVjdCcsIHRoaXMucHJvamVjdHMuZmluZChmdW5jdGlvbiAocCkgewogICAgICAgIHJldHVybiBwLmlkLmluY2x1ZGVzKG5ld1Byb2plY3ROYW1lKTsKICAgICAgfSkpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMucmVnaXN0ZXJCZWZvcmVIb29rKHRoaXMud2lsbFNhdmUsICd3aWxsU2F2ZScpOwogIH0sCiAgbWV0aG9kczogewogICAgd2lsbFNhdmU6IGZ1bmN0aW9uIHdpbGxTYXZlKCkgewogICAgICB2YXIgX3RoaXMkcHJvamVjdDI7CiAgICAgIHZhciBjbHVzdGVyID0gdGhpcy4kc3RvcmUuZ2V0dGVyc1snY3VycmVudENsdXN0ZXInXTsKICAgICAgdmFyIHByb2plY3RJZCA9IChfdGhpcyRwcm9qZWN0MiA9IHRoaXMucHJvamVjdCkgPT09IG51bGwgfHwgX3RoaXMkcHJvamVjdDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHByb2plY3QyLmlkLnNwbGl0KCcvJylbMV07CiAgICAgIHZhciBhbm5vdGF0aW9uID0gcHJvamVjdElkID8gIiIuY29uY2F0KGNsdXN0ZXIuaWQsICI6IikuY29uY2F0KHByb2plY3RJZCkgOiBudWxsOwogICAgICB0aGlzLnZhbHVlLnNldExhYmVsKFBST0pFQ1QsIHByb2plY3RJZCk7CiAgICAgIHRoaXMudmFsdWUuc2V0QW5ub3RhdGlvbihQUk9KRUNULCBhbm5vdGF0aW9uKTsKICAgIH0sCiAgICBnZXREZWZhdWx0Q29udGFpbmVyUmVzb3VyY2VMaW1pdHM6IGZ1bmN0aW9uIGdldERlZmF1bHRDb250YWluZXJSZXNvdXJjZUxpbWl0cyhwcm9qZWN0TmFtZSkgewogICAgICB2YXIgX3Byb2plY3Qkc3BlYzsKICAgICAgaWYgKCFwcm9qZWN0TmFtZSkgewogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB2YXIgcHJvamVjdHMgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2FsbCddKE1BTkFHRU1FTlQuUFJPSkVDVCk7CiAgICAgIHZhciBwcm9qZWN0ID0gcHJvamVjdHMuZmluZChmdW5jdGlvbiAocCkgewogICAgICAgIHJldHVybiBwLmlkLmluY2x1ZGVzKHByb2plY3ROYW1lKTsKICAgICAgfSk7CiAgICAgIHJldHVybiAocHJvamVjdCA9PT0gbnVsbCB8fCBwcm9qZWN0ID09PSB2b2lkIDAgfHwgKF9wcm9qZWN0JHNwZWMgPSBwcm9qZWN0LnNwZWMpID09PSBudWxsIHx8IF9wcm9qZWN0JHNwZWMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9wcm9qZWN0JHNwZWMuY29udGFpbmVyRGVmYXVsdFJlc291cmNlTGltaXQpIHx8IHt9OwogICAgfSwKICAgIFBTQUNoYW5nZWQ6IGZ1bmN0aW9uIFBTQUNoYW5nZWQoJGV2ZW50KSB7CiAgICAgIHRoaXMudmFsdWUuc2V0TGFiZWxzKCRldmVudCk7CiAgICAgIHRoaXMucmVyZW5kZXJOdW1zID0gcmFuZG9tU3RyKDQpOwogICAgfQogIH0KfTs="},{"version":3,"names":["mapGetters","NameNsDescription","CreateEditView","LabeledSelect","MANAGEMENT","CONTAINER_DEFAULT_RESOURCE_LIMIT","PROJECT","ContainerResourceLimit","PodSecurityAdmission","Tab","ResourceTabs","CruResource","PROJECT_ID","_VIEW","FLAT_VIEW","_CREATE","MoveModal","ResourceQuota","Loading","HARVESTER_TYPES","RANCHER_TYPES","HARVESTER_NAME","HARVESTER","Labels","randomStr","components","mixins","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","getters","dispatch","type","projects","sent","project","find","p","id","includes","projectName","stop","data","_this$liveValue","_this$value","_this$value$annotatio","originalQuotaId","liveValue","metadata","name","concat","value","labels","$route","query","viewMode","containerResourceLimits","annotations","getDefaultContainerResourceLimits","rerenderNums","computed","_objectSpread","isCreate","mode","projectOpts","clusterId","filter","c","_c$spec","spec","clusterName","out","map","label","nameDisplay","unshift","t","doneLocationOverride","listLocation","showResourceQuota","_this$project","isStandaloneHarvester","Object","keys","resourceQuota","limit","length","showContainerResourceLimit","flatView","showPodSecurityAdmission","showHarvesterHelpText","inStore","watch","limits","$set","newProjectName","created","registerBeforeHook","willSave","methods","_this$project2","cluster","projectId","split","annotation","setLabel","setAnnotation","_project$spec","containerDefaultResourceLimit","PSAChanged","$event","setLabels"],"sources":["node_modules/@rancher/shell/edit/namespace.vue"],"sourcesContent":["<script>\nimport { mapGetters } from 'vuex';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { MANAGEMENT } from '@shell/config/types';\nimport { CONTAINER_DEFAULT_RESOURCE_LIMIT, PROJECT } from '@shell/config/labels-annotations';\nimport ContainerResourceLimit from '@shell/components/ContainerResourceLimit';\nimport PodSecurityAdmission from '@shell/components/PodSecurityAdmission';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport ResourceTabs from '@shell/components/form/ResourceTabs/index.vue';\nimport CruResource from '@shell/components/CruResource';\nimport { PROJECT_ID, _VIEW, FLAT_VIEW, _CREATE } from '@shell/config/query-params';\nimport MoveModal from '@shell/components/MoveModal';\nimport ResourceQuota from '@shell/components/form/ResourceQuota/Namespace';\nimport Loading from '@shell/components/Loading';\nimport { HARVESTER_TYPES, RANCHER_TYPES } from '@shell/components/form/ResourceQuota/shared';\nimport { HARVESTER_NAME as HARVESTER } from '@shell/config/features';\nimport Labels from '@shell/components/form/Labels';\nimport { randomStr } from '@shell/utils/string';\n\nexport default {\n  components: {\n    ContainerResourceLimit,\n    CruResource,\n    LabeledSelect,\n    Labels,\n    Loading,\n    NameNsDescription,\n    PodSecurityAdmission,\n    ResourceQuota,\n    Tab,\n    ResourceTabs,\n    MoveModal\n  },\n\n  mixins: [CreateEditView],\n\n  async fetch() {\n    if (this.$store.getters['management/schemaFor'](MANAGEMENT.PROJECT)) {\n      this.projects = await this.$store.dispatch('management/findAll', { type: MANAGEMENT.PROJECT });\n\n      this.project = this.projects.find((p) => p.id.includes(this.projectName));\n    }\n  },\n\n  data() {\n    let originalQuotaId = null;\n\n    if ( this.liveValue?.metadata?.name ) {\n      originalQuotaId = `${ this.liveValue.metadata.name }/default-quota`;\n    }\n\n    const projectName = this.value?.metadata?.labels?.[PROJECT] || this.$route.query[PROJECT_ID];\n\n    return {\n      originalQuotaId,\n      project:                 null,\n      projects:                null,\n      viewMode:                _VIEW,\n      containerResourceLimits: this.value.annotations?.[CONTAINER_DEFAULT_RESOURCE_LIMIT] || this.getDefaultContainerResourceLimits(projectName),\n      rerenderNums:            randomStr(4),\n      projectName,\n      HARVESTER_TYPES,\n      RANCHER_TYPES,\n    };\n  },\n\n  computed: {\n    ...mapGetters(['isStandaloneHarvester']),\n\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n\n    projectOpts() {\n      const clusterId = this.$store.getters['currentCluster'].id;\n      let projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n\n      // Filter out projects not for the current cluster\n      projects = projects.filter((c) => c.spec?.clusterName === clusterId);\n      const out = projects.map((project) => {\n        return {\n          label: project.nameDisplay,\n          value: project.metadata.name,\n        };\n      });\n\n      out.unshift({\n        label: this.t('namespace.project.none'),\n        value: null,\n      });\n\n      return out;\n    },\n\n    doneLocationOverride() {\n      return this.value.listLocation;\n    },\n\n    showResourceQuota() {\n      return (!this.isStandaloneHarvester) && Object.keys(this.project?.spec?.resourceQuota?.limit || {}).length > 0;\n    },\n\n    showContainerResourceLimit() {\n      return !this.isStandaloneHarvester;\n    },\n\n    flatView() {\n      return (this.$route.query[FLAT_VIEW] || false);\n    },\n\n    showPodSecurityAdmission() {\n      return !this.isStandaloneHarvester;\n    },\n\n    showHarvesterHelpText() {\n      return !this.isStandaloneHarvester && this.$store.getters['currentProduct'].inStore === HARVESTER;\n    },\n  },\n\n  watch: {\n    project() {\n      const limits = this.getDefaultContainerResourceLimits(this.projectName);\n\n      this.$set(this, 'containerResourceLimits', limits);\n    },\n\n    projectName(newProjectName) {\n      this.$set(this, 'project', this.projects.find((p) => p.id.includes(newProjectName)));\n    }\n  },\n\n  created() {\n    this.registerBeforeHook(this.willSave, 'willSave');\n  },\n\n  methods: {\n    willSave() {\n      const cluster = this.$store.getters['currentCluster'];\n      const projectId = this.project?.id.split('/')[1];\n      const annotation = projectId ? `${ cluster.id }:${ projectId }` : null;\n\n      this.value.setLabel(PROJECT, projectId);\n      this.value.setAnnotation(PROJECT, annotation);\n    },\n\n    getDefaultContainerResourceLimits(projectName) {\n      if (!projectName) {\n        return;\n      }\n\n      const projects = this.$store.getters['management/all'](MANAGEMENT.PROJECT);\n      const project = projects.find((p) => p.id.includes(projectName));\n\n      return project?.spec?.containerDefaultResourceLimit || {};\n    },\n\n    PSAChanged($event) {\n      this.value.setLabels($event);\n      this.rerenderNums = randomStr(4);\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <CruResource\n    v-else\n    :done-route=\"doneLocationOverride.name\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :subtypes=\"[]\"\n    :validation-passed=\"true\"\n    :errors=\"errors\"\n    :apply-hooks=\"applyHooks\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <NameNsDescription\n      v-if=\"!isView\"\n      :value=\"value\"\n      :namespaced=\"false\"\n      :mode=\"mode\"\n      :extra-columns=\"['project-col']\"\n    >\n      <template\n        v-if=\"flatView && isCreate\"\n        #project-col\n      >\n        <LabeledSelect\n          v-model=\"projectName\"\n          data-testid=\"name-ns-description-project\"\n          :label=\"t('namespace.project.label')\"\n          :options=\"projectOpts\"\n        />\n      </template>\n    </NameNsDescription>\n    <ResourceTabs\n      v-model=\"value\"\n      :mode=\"mode\"\n      :side-tabs=\"true\"\n    >\n      <Tab\n        v-if=\"showResourceQuota\"\n        :weight=\"1\"\n        name=\"container-resource-quotas\"\n        :label=\"t('namespace.resourceQuotas')\"\n      >\n        <div class=\"row\">\n          <div class=\"col span-12\">\n            <p class=\"helper-text mb-10\">\n              <t\n                v-if=\"mode === viewMode\"\n                k=\"resourceQuota.helpTextDetail\"\n              />\n              <t\n                v-else\n                k=\"resourceQuota.helpText\"\n              />\n              <span v-if=\"showHarvesterHelpText\">\n                {{ t('resourceQuota.helpTextHarvester') }}\n              </span>\n            </p>\n          </div>\n        </div>\n        <ResourceQuota\n          v-model=\"value\"\n          :mode=\"mode\"\n          :project=\"project\"\n          :types=\"isStandaloneHarvester ? HARVESTER_TYPES : RANCHER_TYPES\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showContainerResourceLimit\"\n        :weight=\"0\"\n        name=\"container-resource-limit\"\n        :label=\"t('namespace.containerResourceLimit')\"\n      >\n        <ContainerResourceLimit\n          :key=\"JSON.stringify(containerResourceLimits)\"\n          :value=\"containerResourceLimits\"\n          :mode=\"mode\"\n          :namespace=\"value\"\n          :register-before-hook=\"registerBeforeHook\"\n        />\n      </Tab>\n      <Tab\n        name=\"labels-and-annotations\"\n        label-key=\"generic.labelsAndAnnotations\"\n        :weight=\"-1\"\n      >\n        <Labels\n          :key=\"rerenderNums\"\n          default-container-class=\"labels-and-annotations-container\"\n          :value=\"value\"\n          :mode=\"mode\"\n          :display-side-by-side=\"false\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showPodSecurityAdmission\"\n        name=\"pod-security-admission\"\n        label-key=\"podSecurityAdmission.name\"\n        :label=\"t('podSecurityAdmission.name')\"\n      >\n        <PodSecurityAdmission\n          :labels=\"value.labels\"\n          :mode=\"mode\"\n          labels-prefix=\"pod-security.kubernetes.io/\"\n          @updateLabels=\"PSAChanged\"\n        />\n      </Tab>\n    </ResourceTabs>\n    <MoveModal v-if=\"projects\" />\n  </CruResource>\n</template>\n"],"mappings":"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"}]}