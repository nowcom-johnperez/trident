{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/CustomCommand.tests.ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/CustomCommand.tests.ts","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgbW91bnQgfSBmcm9tICdAdnVlL3Rlc3QtdXRpbHMnOwppbXBvcnQgQ3VzdG9tQ29tbWFuZCBmcm9tICdAc2hlbGwvZWRpdC9wcm92aXNpb25pbmcuY2F0dGxlLmlvLmNsdXN0ZXIvQ3VzdG9tQ29tbWFuZC52dWUnOwpkZXNjcmliZSgnY29tcG9uZW50OiBDdXN0b21Db21tYW5kJywgZnVuY3Rpb24gKCkgewogIHZhciB0b2tlbiA9ICdNWV9UT0tFTic7CiAgdmFyIGlwID0gJ01ZX0lQJzsKICB2YXIgY2hlY2tTdW0gPSAnTVlfQ0hFQ0tTVU0nOwogIHZhciB3cmFwcGVyID0gbW91bnQoQ3VzdG9tQ29tbWFuZCwgewogICAgbW9ja3M6IHsKICAgICAgJHN0b3JlOiB7CiAgICAgICAgZ2V0dGVyczogewogICAgICAgICAgY3VycmVudFN0b3JlOiBmdW5jdGlvbiBjdXJyZW50U3RvcmUoKSB7CiAgICAgICAgICAgIHJldHVybiAnY3VycmVudF9zdG9yZSc7CiAgICAgICAgICB9LAogICAgICAgICAgJ21hbmFnZW1lbnQvc2NoZW1hRm9yJzogamVzdC5mbigpLAogICAgICAgICAgJ2N1cnJlbnRfc3RvcmUvYWxsJzogamVzdC5mbigpLAogICAgICAgICAgJ2kxOG4vdCc6IGplc3QuZm4oKSwKICAgICAgICAgICdpMThuL3dpdGhGYWxsYmFjayc6IGplc3QuZm4oKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHByb3BzRGF0YTogewogICAgICBjbHVzdGVyOiB7fSwKICAgICAgY2x1c3RlclRva2VuOiB7CiAgICAgICAgaW5zZWN1cmVOb2RlQ29tbWFuZDogIiBjdXJsIC0taW5zZWN1cmUgLWZMICIuY29uY2F0KGlwLCAiL3N5c3RlbS1hZ2VudC1pbnN0YWxsLnNoIHwgc3VkbyAgc2ggLXMgLSAtLXNlcnZlciAiKS5jb25jYXQoaXAsICIgLS1sYWJlbCAnY2F0dGxlLmlvL29zPWxpbnV4JyAtLXRva2VuICIpLmNvbmNhdCh0b2tlbiwgIiAtLWNhLWNoZWNrc3VtICIpLmNvbmNhdChjaGVja1N1bSksCiAgICAgICAgbm9kZUNvbW1hbmQ6ICIgY3VybCAtZkwgIi5jb25jYXQoaXAsICIvc3lzdGVtLWFnZW50LWluc3RhbGwuc2ggfCBzdWRvICBzaCAtcyAtIC0tc2VydmVyICIpLmNvbmNhdChpcCwgIiAtLWxhYmVsICdjYXR0bGUuaW8vb3M9bGludXgnIC0tdG9rZW4gIikuY29uY2F0KHRva2VuLCAiIC0tY2EtY2hlY2tzdW0gIikuY29uY2F0KGNoZWNrU3VtKQogICAgICB9CiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBhZGRyZXNzOiAnJywKICAgICAgICBjb250cm9sUGxhbmU6IHRydWUsCiAgICAgICAgZXRjZDogdHJ1ZSwKICAgICAgICBpbnNlY3VyZTogZmFsc2UsCiAgICAgICAgaW50ZXJuYWxBZGRyZXNzOiAnJywKICAgICAgICBsYWJlbHM6IHt9LAogICAgICAgIG5vZGVOYW1lOiAnJywKICAgICAgICB0YWludHM6IFtdLAogICAgICAgIHdvcmtlcjogdHJ1ZQogICAgICB9OwogICAgfQogIH0pOwogIGl0KCdzaG91bGQgcmV0dXJuIGxpbnV4IGNvbW1hbmRzIHdpdGggdGhlIHJpZ2h0IGZsYWdzIGJhc2VkIG9uIGNsdXN0ZXIgaW5mb3JtYXRpb24nLCBmdW5jdGlvbiAoKSB7CiAgICB2YXIgdmFsdWUgPSAiY3VybCAtZkwgIi5jb25jYXQoaXAsICIvc3lzdGVtLWFnZW50LWluc3RhbGwuc2ggfCBzdWRvICBzaCAtcyAtIC0tc2VydmVyICIpLmNvbmNhdChpcCwgIiAtLWxhYmVsICdjYXR0bGUuaW8vb3M9bGludXgnIC0tdG9rZW4gIikuY29uY2F0KHRva2VuLCAiIC0tY2EtY2hlY2tzdW0gIikuY29uY2F0KGNoZWNrU3VtLCAiIC0tZXRjZCAtLWNvbnRyb2xwbGFuZSAtLXdvcmtlciIpOwogICAgdmFyIGVsZW1lbnQgPSB3cmFwcGVyLmZpbmQoJyNjb3BpZWRMaW51eCcpLmVsZW1lbnQ7CiAgICBleHBlY3QoZWxlbWVudC50ZXh0Q29udGVudCkudG9Db250YWluKHZhbHVlKTsKICB9KTsKICBpdCgnc2hvdWxkIG5vdCBkaXNwbGF5IHdhcm5pbmcgbWVzc2FnZSBpZiBhbGwgbm9kZSByb2xlcyBhcmUgc2VsZWN0ZWQnLCAvKiNfX1BVUkVfXyovX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgdmFyIGVsZW1lbnQ7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICBjYXNlIDA6CiAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgIHJldHVybiB3cmFwcGVyLnNldERhdGEoewogICAgICAgICAgICBjb250cm9sUGxhbmU6IHRydWUsCiAgICAgICAgICAgIGV0Y2Q6IHRydWUsCiAgICAgICAgICAgIHdvcmtlcjogdHJ1ZQogICAgICAgICAgfSk7CiAgICAgICAgY2FzZSAyOgogICAgICAgICAgZWxlbWVudCA9IHdyYXBwZXIuZmluZCgnW2RhdGEtdGVzdGlkPSJub2RlLXJvbGUtd2FybmluZyJdJykuZWxlbWVudDsKICAgICAgICAgIGV4cGVjdChlbGVtZW50KS50b0JlVW5kZWZpbmVkKCk7CiAgICAgICAgY2FzZSA0OgogICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSkpOwogIGRlc2NyaWJlKCdzaG91bGQgZGlzcGxheSB3YXJuaW5nIG1lc3NhZ2UgaWYgYXQgbGVhc3Qgb25lIG9mIHRoZSBub2RlIHJvbGVzIGlzIHVuc2VsZWN0ZWQnLCBmdW5jdGlvbiAoKSB7CiAgICBpdC5lYWNoKFtbdHJ1ZSwgdHJ1ZSwgZmFsc2VdLCBbdHJ1ZSwgZmFsc2UsIHRydWVdLCBbdHJ1ZSwgZmFsc2UsIGZhbHNlXSwgW2ZhbHNlLCB0cnVlLCB0cnVlXSwgW2ZhbHNlLCB0cnVlLCBmYWxzZV0sIFtmYWxzZSwgZmFsc2UsIHRydWVdLCBbZmFsc2UsIGZhbHNlLCBmYWxzZV1dKSgnY29udHJvbFBsYW5lOiAlcCwgZXRjZDogJXAsIHdvcmtlcjogJXAnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZjIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKGNvbnRyb2xQbGFuZSwgZXRjZCwgd29ya2VyKSB7CiAgICAgICAgdmFyIGVsZW1lbnQ7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gd3JhcHBlci5zZXREYXRhKHsKICAgICAgICAgICAgICAgIGNvbnRyb2xQbGFuZTogY29udHJvbFBsYW5lLAogICAgICAgICAgICAgICAgZXRjZDogZXRjZCwKICAgICAgICAgICAgICAgIHdvcmtlcjogd29ya2VyCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICBlbGVtZW50ID0gd3JhcHBlci5maW5kKCdbZGF0YS10ZXN0aWQ9Im5vZGUtcm9sZS13YXJuaW5nIl0nKS5lbGVtZW50OwogICAgICAgICAgICAgIGV4cGVjdChlbGVtZW50KS50b0JlRGVmaW5lZCgpOwogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CiAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICAgICAgcmV0dXJuIF9yZWYyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCkpOwogIH0pOwp9KTs="},{"version":3,"names":["mount","CustomCommand","describe","token","ip","checkSum","wrapper","mocks","$store","getters","currentStore","jest","fn","propsData","cluster","clusterToken","insecureNodeCommand","concat","nodeCommand","data","address","controlPlane","etcd","insecure","internalAddress","labels","nodeName","taints","worker","it","value","element","find","expect","textContent","toContain","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","setData","toBeUndefined","stop","each","_ref2","_callee2","_callee2$","_context2","toBeDefined","_x","_x2","_x3","apply","arguments"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/__tests__/CustomCommand.tests.ts"],"sourcesContent":["import { mount } from '@vue/test-utils';\nimport CustomCommand from '@shell/edit/provisioning.cattle.io.cluster/CustomCommand.vue';\n\ndescribe('component: CustomCommand', () => {\n  const token = 'MY_TOKEN';\n  const ip = 'MY_IP';\n  const checkSum = 'MY_CHECKSUM';\n  const wrapper = mount(CustomCommand, {\n    mocks: {\n      $store: {\n        getters: {\n          currentStore:           () => 'current_store',\n          'management/schemaFor': jest.fn(),\n          'current_store/all':    jest.fn(),\n          'i18n/t':               jest.fn(),\n          'i18n/withFallback':    jest.fn(),\n        }\n      },\n    },\n    propsData: {\n      cluster:      {},\n      clusterToken: {\n        insecureNodeCommand: ` curl --insecure -fL ${ ip }/system-agent-install.sh | sudo  sh -s - --server ${ ip } --label 'cattle.io/os=linux' --token ${ token } --ca-checksum ${ checkSum }`,\n        nodeCommand:         ` curl -fL ${ ip }/system-agent-install.sh | sudo  sh -s - --server ${ ip } --label 'cattle.io/os=linux' --token ${ token } --ca-checksum ${ checkSum }`\n      }\n    },\n    data: () => ({\n      address:         '',\n      controlPlane:    true,\n      etcd:            true,\n      insecure:        false,\n      internalAddress: '',\n      labels:          {},\n      nodeName:        '',\n      taints:          [],\n      worker:          true,\n    }),\n  });\n\n  it('should return linux commands with the right flags based on cluster information', () => {\n    const value = `curl -fL ${ ip }/system-agent-install.sh | sudo  sh -s - --server ${ ip } --label 'cattle.io/os=linux' --token ${ token } --ca-checksum ${ checkSum } --etcd --controlplane --worker`;\n    const element = wrapper.find('#copiedLinux').element;\n\n    expect(element.textContent).toContain(value);\n  });\n\n  it('should not display warning message if all node roles are selected', async() => {\n    await wrapper.setData({\n      controlPlane: true,\n      etcd:         true,\n      worker:       true,\n    });\n\n    const element = wrapper.find('[data-testid=\"node-role-warning\"]').element;\n\n    expect(element).toBeUndefined();\n  });\n\n  describe('should display warning message if at least one of the node roles is unselected', () => {\n    it.each([\n      [true, true, false],\n      [true, false, true],\n      [true, false, false],\n      [false, true, true],\n      [false, true, false],\n      [false, false, true],\n      [false, false, false],\n    ])('controlPlane: %p, etcd: %p, worker: %p', async(\n      controlPlane,\n      etcd,\n      worker\n    ) => {\n      await wrapper.setData({\n        controlPlane,\n        etcd,\n        worker\n      });\n\n      const element = wrapper.find('[data-testid=\"node-role-warning\"]').element;\n\n      expect(element).toBeDefined();\n    });\n  });\n});\n"],"mappings":"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"}]}