{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/string.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/string.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["camelToTitle","str","dasherize","split","map","ucFirst","join","substr","toUpperCase","lcFirst","toLowerCase","strPad","toLength","padChars","arguments","length","undefined","right","concat","neededLen","padStr","Array","sortableNumericSuffix","match","entityMap","escapeHtml","html","String","replace","s","decodeHtml","text","div","document","createElement","innerHTML","textContent","innerText","escapeRegex","string","random32","count","Math","max","out","i","window","crypto","getRandomValues","tmp","Uint32Array","random","alpha","num","sym","CHARSET","NUMERIC","NO_VOWELS","ALPHA","ALPHA_NUM","ALPHA_LOWER","ALPHA_UPPER","HEX","PASSWORD","randomStr","chars","val","formatPercent","value","maxPrecision","round","pluralize","endsWith","resourceNames","names","plusMore","t","reduce","res","name","indent","lines","token","afterRegex","line","prefix","suffix","decamelizeRegex","decamelize","dasherizeRegex","asciiLike","coerceStringTypeToScalarType","type","parseFloat","parseInt","isNaN","matchesSomeRegex","stringRaw","regexes","some","regexRaw","regex","ensureRegex","strOrRegex","exact","RegExp","nlToBr","quotedMatch","splitObjectPath","path","includes","x","joinObjectPath","ary","_iterator","_createForOfIteratorHelper","_step","n","done","p","err","e","f","startsWith","shortenedImage","image","isIpv4","ip","reg","test","sanitizeKey","k","sanitizeValue","v","sanitizeIP"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/string.js"],"sourcesContent":["export function camelToTitle(str) {\n  return dasherize((str || '')).split('-').map((str) => {\n    return ucFirst(str);\n  }).join(' ');\n}\n\nexport function ucFirst(str) {\n  str = str || '';\n\n  return str.substr(0, 1).toUpperCase() + str.substr(1);\n}\n\nexport function lcFirst(str) {\n  str = str || '';\n\n  return str.substr(0, 1).toLowerCase() + str.substr(1);\n}\n\nexport function strPad(str, toLength, padChars = ' ', right = false) {\n  str = `${ str }`;\n\n  if (str.length >= toLength) {\n    return str;\n  }\n\n  const neededLen = toLength - str.length + 1;\n  const padStr = (new Array(neededLen)).join(padChars).substr(0, neededLen);\n\n  if (right) {\n    return str + padStr;\n  } else {\n    return padStr + str;\n  }\n}\n\n// Turn thing1 into thing00000001 so that the numbers sort numerically\nexport function sortableNumericSuffix(str) {\n  str = str || '';\n  const match = str.match(/^(.*[^0-9])([0-9]+)$/);\n\n  if (match) {\n    return match[1] + strPad(match[2], 8, '0');\n  }\n\n  return str;\n}\n\nconst entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\n\nexport function escapeHtml(html) {\n  return String(html).replace(/[&<>\"']/g, (s) => {\n    return entityMap[s];\n  });\n}\n\n/**\n * Return HTML markup from escaped HTML string, allowing specific tags\n * @param text string\n * @returns string\n */\nexport function decodeHtml(text) {\n  const div = document.createElement('div');\n\n  div.innerHTML = text;\n\n  return div.textContent || div.innerText || '';\n}\n\nexport function escapeRegex(string) {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n\nexport function random32(count) {\n  count = Math.max(0, count || 1);\n\n  const out = [];\n  let i;\n\n  if (window.crypto && window.crypto.getRandomValues) {\n    const tmp = new Uint32Array(count);\n\n    window.crypto.getRandomValues(tmp);\n    for (i = 0; i < tmp.length; i++) {\n      out[i] = tmp[i];\n    }\n  } else {\n    for (i = 0; i < count; i++) {\n      out[i] = Math.random() * 4294967296; // Math.pow(2,32);\n    }\n  }\n\n  if (count === 1) {\n    return out[0];\n  } else {\n    return out;\n  }\n}\n\nconst alpha = 'abcdefghijklmnopqrstuvwxyz';\nconst num = '0123456789';\nconst sym = '!@#$%^&*()_+-=[]{};:,./<>?|';\n\nexport const CHARSET = {\n  NUMERIC:     num,\n  NO_VOWELS:   'bcdfghjklmnpqrstvwxz2456789',\n  ALPHA:       alpha + alpha.toUpperCase(),\n  ALPHA_NUM:   alpha + alpha.toUpperCase() + num,\n  ALPHA_LOWER: alpha,\n  ALPHA_UPPER: alpha.toUpperCase(),\n  HEX:         `${ num }ABCDEF`,\n  PASSWORD:    alpha + alpha.toUpperCase() + num + alpha + alpha.toUpperCase() + num + sym,\n  // ^-- includes alpha / ALPHA / num twice to reduce the occurrence of symbols\n};\n\nexport function randomStr(length = 16, chars = CHARSET.ALPHA_NUM) {\n  if (!chars || !chars.length) {\n    return null;\n  }\n\n  return random32(length).map((val) => {\n    return chars[val % chars.length];\n  }).join('');\n}\n\nexport function formatPercent(value, maxPrecision = 2) {\n  if (value < 1 && maxPrecision >= 2) {\n    return `${ Math.round(value * 100) / 100 }%`;\n  } else if (value < 10 && maxPrecision >= 1) {\n    return `${ Math.round(value * 10) / 10 }%`;\n  } else {\n    return `${ Math.round(value) }%`;\n  }\n}\n\nexport function pluralize(str) {\n  if ( str.match(/.*[^aeiou]y$/i) ) {\n    return `${ str.substr(0, str.length - 1) }ies`;\n  } else if ( str.endsWith('ics') ) {\n    return str;\n  } else if ( str.endsWith('s') ) {\n    return `${ str }es`;\n  } else {\n    return `${ str }s`;\n  }\n}\n\nexport function resourceNames(names, plusMore, t) {\n  return names.reduce((res, name, i) => {\n    if (i >= 5) {\n      return res;\n    }\n    res += `<b>${ escapeHtml( name ) }</b>`;\n    if (i === names.length - 1) {\n      res += plusMore;\n    } else {\n      res += i === names.length - 2 ? t('generic.and') : t('generic.comma');\n    }\n\n    return res;\n  }, '');\n}\n\nexport function indent(lines, count = 2, token = ' ', afterRegex = null) {\n  if (typeof lines === 'string') {\n    lines = lines.split(/\\n/);\n  } else {\n    lines = lines || [];\n  }\n\n  const padStr = (new Array(count + 1)).join(token);\n\n  const out = lines.map((line) => {\n    let prefix = '';\n    let suffix = line;\n\n    if (afterRegex) {\n      const match = line.match(afterRegex);\n\n      if (match) {\n        prefix = match[match.length - 1];\n        suffix = line.substr(match[0].length);\n      }\n    }\n\n    return `${ prefix }${ padStr }${ suffix }`;\n  });\n\n  const str = out.join('\\n');\n\n  return str;\n}\n\nconst decamelizeRegex = /([a-z\\d])([A-Z])/g;\n\nexport function decamelize(str) {\n  return str.replace(decamelizeRegex, '$1_$2').toLowerCase();\n}\n\nconst dasherizeRegex = /[ _]/g;\n\nexport function dasherize(str) {\n  return decamelize(str).replace(dasherizeRegex, '-');\n}\n\nexport function asciiLike(str) {\n  str = str || '';\n\n  if ( str.match(/[^\\r\\n\\t\\x20-\\x7F]/) ) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function coerceStringTypeToScalarType(val, type) {\n  if ( type === 'float' ) {\n    // Coerce strings to floats\n    val = parseFloat(val) || null; // NaN becomes null\n  } else if ( type === 'int' ) {\n    // Coerce strings to ints\n    val = parseInt(val, 10);\n\n    if ( isNaN(val) ) {\n      val = null;\n    }\n  } else if ( type === 'boolean') {\n    // Coerce strings to boolean\n    if (val.toLowerCase() === 'true') {\n      val = true;\n    } else if (val.toLowerCase() === 'false') {\n      val = false;\n    }\n  }\n\n  return val;\n}\n\nexport function matchesSomeRegex(stringRaw, regexes = []) {\n  return regexes.some((regexRaw) => {\n    const string = stringRaw || '';\n    const regex = ensureRegex(regexRaw);\n\n    return string.match(regex);\n  });\n}\n\nexport function ensureRegex(strOrRegex, exact = true) {\n  if ( typeof strOrRegex === 'string' ) {\n    if ( exact ) {\n      return new RegExp(`^${ escapeRegex(strOrRegex) }$`, 'i');\n    } else {\n      return new RegExp(`${ escapeRegex(strOrRegex) }`, 'i');\n    }\n  }\n\n  return strOrRegex;\n}\n\nexport function nlToBr(value) {\n  return escapeHtml(value || '').replace(/(\\r\\n|\\r|\\n)/g, '<br/>\\n');\n}\n\nconst quotedMatch = /[^.\"']+|\"([^\"]*)\"|'([^']*)'/g;\n\nexport function splitObjectPath(path) {\n  if ( path.includes('\"') || path.includes(\"'\") ) {\n    // Path with quoted section\n    return path.match(quotedMatch).map((x) => x.replace(/['\"]/g, ''));\n  }\n\n  // Regular path\n  return path.split('.');\n}\n\nexport function joinObjectPath(ary) {\n  let out = '';\n\n  for ( const p of ary ) {\n    if ( p.includes('.') ) {\n      out += `.\"${ p }\"`;\n    } else {\n      out += `.${ p }`;\n    }\n  }\n\n  if ( out.startsWith('.') ) {\n    out = out.substr(1);\n  }\n\n  return out;\n}\n\nexport function shortenedImage(image) {\n  return (image || '')\n    .replace(/^(index\\.)?docker.io\\/(library\\/)?/, '')\n    .replace(/:latest$/, '')\n    .replace(/^(.*@sha256:)([0-9a-f]{8})[0-9a-f]+$/i, '$1$2…');\n}\n\nexport function isIpv4(ip) {\n  const reg = /^((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\n\n  return reg.test(ip);\n}\n\nexport function sanitizeKey(k) {\n  return (k || '').replace(/[^a-z0-9./_-]/ig, '');\n}\n\nexport function sanitizeValue(v) {\n  return (v || '').replace(/[^a-z0-9._-]/ig, '');\n}\n\nexport function sanitizeIP(v) {\n  return (v || '').replace(/[^a-z0-9.:_-]/ig, '');\n}\n"],"mappings":"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"}]}