{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/mixins/auth-config.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/mixins/auth-config.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_EDIT","NORMAN","MANAGEMENT","AFTER_SAVE_HOOKS","BEFORE_SAVE_HOOKS","BASE_SCOPES","addObject","findBy","set","exceptionToErrorsArray","difference","beforeCreate","query","$route","mode","$router","applyQuery","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","mixinFetch","stop","data","isEnabling","editConfig","model","serverSetting","errors","originalModel","principals","authConfigName","params","id","computed","doneLocationOverride","name","serverUrl","process","client","window","location","origin","baseUrl","concat","tls","hostname","principal","displayName","t","NAME","AUTH_CONFIG","showCancel","enabled","methods","_this2","_callee2","_callee2$","_context2","$store","dispatch","type","opt","url","force","sent","SETTING","PRINCIPAL","value","resource","openLdapConfig","showLdap","configType","rancherApiHost","length","$set","applyDefaults","save","btnCb","_this3","_callee3","wasEnabled","obj","code","newModel","oldKeys","newKeys","missingNewKeys","_callee3$","_context3","applyHooks","toSave","provider","body","accessMode","doAction","redirectUnauthorized","Object","keys","forEach","key","allowedPrincipalIds","includes","commit","console","warn","ignoreFields","reloadModel","t0","disable","_this4","_callee4","clone","_callee4$","_context4","hasAction","_this5","_callee5","_callee5$","_context5","abrupt","goToEdit","cancel","_this6","go","then","cloned","endsWith","slice","keycloakoidc"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/mixins/auth-config.js"],"sourcesContent":["import { _EDIT } from '@shell/config/query-params';\nimport { NORMAN, MANAGEMENT } from '@shell/config/types';\nimport { AFTER_SAVE_HOOKS, BEFORE_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport { BASE_SCOPES } from '@shell/store/auth';\nimport { addObject, findBy } from '@shell/utils/array';\nimport { set } from '@shell/utils/object';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\nimport difference from 'lodash/difference';\n\nexport default {\n  beforeCreate() {\n    const { query } = this.$route;\n\n    if (query.mode !== _EDIT) {\n      this.$router.applyQuery({ mode: _EDIT });\n    }\n  },\n\n  async fetch() {\n    await this.mixinFetch();\n  },\n\n  data() {\n    return {\n      isEnabling:     false,\n      editConfig:     false,\n      model:          null,\n      serverSetting:  null,\n      errors:         [],\n      originalModel:  null,\n      principals:     [],\n      authConfigName: this.$route.params.id,\n    };\n  },\n\n  computed: {\n    doneLocationOverride() {\n      return {\n        name:   this.$route.name,\n        params: this.$route.params\n      };\n    },\n\n    serverUrl() {\n      if (process.client) {\n        // Client-side rendered: use the current window location\n        return window.location.origin;\n      }\n\n      // Server-side rendered\n      return this.serverSetting || '';\n    },\n\n    baseUrl() {\n      return `${ this.model.tls ? 'https://' : 'http://' }${ this.model.hostname }`;\n    },\n\n    principal() {\n      return findBy(this.principals, 'me', true) || {};\n    },\n\n    displayName() {\n      return this.t(`model.authConfig.provider.${ this.NAME }`);\n    },\n\n    NAME() {\n      return this.$route.params.id;\n    },\n\n    AUTH_CONFIG() {\n      return MANAGEMENT.AUTH_CONFIG;\n    },\n\n    showCancel() {\n      return this.editConfig || !this.model.enabled;\n    }\n  },\n\n  methods: {\n    async mixinFetch() {\n      this.authConfigName = this.$route.params.id;\n\n      this.originalModel = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.AUTH_CONFIG,\n        id:   this.authConfigName,\n        opt:  { url: `/v3/${ NORMAN.AUTH_CONFIG }/${ this.authConfigName }`, force: true }\n      });\n\n      const serverUrl = await this.$store.dispatch('management/find', {\n        type: MANAGEMENT.SETTING,\n        id:   'server-url',\n        opt:  { url: `/v1/${ MANAGEMENT.SETTING }/server-url` }\n      });\n\n      this.principals = await this.$store.dispatch('rancher/findAll', {\n        type: NORMAN.PRINCIPAL,\n        opt:  { url: '/v3/principals', force: true }\n      });\n\n      if ( serverUrl ) {\n        this.serverSetting = serverUrl.value;\n      }\n      this.model = await this.$store.dispatch(`rancher/clone`, { resource: this.originalModel });\n      if (this.model.openLdapConfig) {\n        this.showLdap = true;\n      }\n      if (this.value.configType === 'saml') {\n        if (!this.model.rancherApiHost || !this.model.rancherApiHost.length) {\n          this.$set(this.model, 'rancherApiHost', this.serverUrl);\n        }\n      }\n\n      if (!this.model.enabled) {\n        this.applyDefaults();\n      }\n    },\n\n    async save(btnCb) {\n      await this.applyHooks(BEFORE_SAVE_HOOKS);\n\n      const configType = this.value.configType;\n\n      this.errors = [];\n      const wasEnabled = this.model.enabled;\n\n      if (!wasEnabled) {\n        this.isEnabling = true;\n      }\n      let obj = this.toSave;\n\n      if (!obj) {\n        obj = this.model;\n      }\n      try {\n        if (this.editConfig || !wasEnabled) {\n          if (configType === 'oauth' || configType === 'oidc') {\n            const code = await this.$store.dispatch('auth/test', { provider: this.model.id, body: this.model });\n\n            obj.code = code;\n          }\n\n          if (configType === 'saml') {\n            if (!this.model.accessMode) {\n              this.model.accessMode = 'unrestricted';\n            }\n            if (this.model.openLdapConfig && !this.showLdap) {\n              delete this.model.openLdapConfig;\n            }\n            await this.model.save();\n            await this.$store.dispatch('auth/test', { provider: this.model.id, body: this.model });\n            this.model.enabled = true;\n          } else {\n            this.model.enabled = true;\n            if (!this.model.accessMode) {\n              this.model.accessMode = 'unrestricted';\n            }\n            await this.model.doAction('testAndApply', obj, { redirectUnauthorized: false });\n          }\n\n          // Reload auth config to get any changes made during testAndApply\n          const newModel = await this.$store.dispatch('rancher/find', {\n            type: NORMAN.AUTH_CONFIG,\n            id:   this.authConfigName,\n            opt:  { url: `/v3/${ NORMAN.AUTH_CONFIG }/${ this.authConfigName }`, force: true }\n          });\n\n          // We want to find and add keys that are in the original model that are missing from the new model.\n          // This is specifically intended for adding secretKeys which aren't returned when fetching. One example\n          // is the applicationSecret key that is present for azureAD auth.\n          const oldKeys = Object.keys(this.model);\n          const newKeys = Object.keys(newModel);\n          const missingNewKeys = difference(oldKeys, newKeys);\n\n          missingNewKeys.forEach((key) => {\n            newModel[key] = this.model[key];\n          });\n\n          this.model = await this.$store.dispatch(`rancher/clone`, { resource: newModel });\n\n          // Reload principals to get the new ones from the provider (including 'me')\n          this.principals = await this.$store.dispatch('rancher/findAll', {\n            type: NORMAN.PRINCIPAL,\n            opt:  { url: '/v3/principals', force: true }\n          });\n\n          this.model.allowedPrincipalIds = this.model.allowedPrincipalIds || [];\n\n          if ( this.principal) {\n            if (!this.model.allowedPrincipalIds.includes(this.principal.id) ) {\n              addObject(this.model.allowedPrincipalIds, this.principal.id);\n            }\n            // Session has switched to new 'me', ensure we react\n            this.$store.commit('auth/loggedInAs', this.principal.id);\n          } else {\n            console.warn(`Unable to find principal marked as 'me'`); // eslint-disable-line no-console\n          }\n        }\n        if (wasEnabled && configType === 'oauth') {\n          await this.model.save({ ignoreFields: ['oauthCredential', 'serviceAccountCredential'] });\n        } else {\n          await this.model.save();\n        }\n        await this.reloadModel();\n        this.isEnabling = false;\n        this.editConfig = false;\n        await this.applyHooks(AFTER_SAVE_HOOKS);\n\n        btnCb(true);\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        btnCb(false);\n        this.model.enabled = wasEnabled;\n        this.isEnabling = false;\n      }\n    },\n\n    async disable() {\n      try {\n        if (this.model.hasAction('disable')) {\n          await this.model.doAction('disable');\n        } else {\n          const clone = await this.$store.dispatch(`rancher/clone`, { resource: this.model });\n\n          clone.enabled = false;\n          await clone.save();\n        }\n        await this.reloadModel();\n        // Covers case where user disables... then enables in same visit to page\n        this.applyDefaults();\n\n        this.principals = await this.$store.dispatch('rancher/findAll', {\n          type: NORMAN.PRINCIPAL,\n          opt:  { url: '/v3/principals', force: true }\n        });\n        this.showLdap = false;\n      } catch (err) {\n        this.errors = [err];\n      }\n    },\n\n    async reloadModel() {\n      this.originalModel = await this.$store.dispatch('rancher/find', {\n        type: NORMAN.AUTH_CONFIG,\n        id:   this.NAME,\n        opt:  { url: `/v3/${ NORMAN.AUTH_CONFIG }/${ this.NAME }`, force: true }\n      });\n\n      this.model = await this.$store.dispatch(`rancher/clone`, { resource: this.originalModel });\n\n      return this.model;\n    },\n\n    goToEdit() {\n      this.editConfig = true;\n    },\n\n    cancel() {\n      // go back to provider selection screen\n      if (!this.model.enabled) {\n        this.$router.go(-1);\n      } else {\n        // must be cancelling edit of an enabled config; reset any changes and return to add users/groups view for that config\n        this.$store.dispatch(`rancher/clone`, { resource: this.originalModel }).then((cloned) => {\n          this.model = cloned;\n          this.editConfig = false;\n        });\n      }\n    },\n\n    applyDefaults() {\n      switch (this.value.configType) {\n      case 'oidc': {\n        const serverUrl = this.serverUrl.endsWith('/') ? this.serverUrl.slice(0, this.serverUrl.length - 1) : this.serverUrl;\n\n        // AuthConfig\n        set(this.model, 'accessMode', 'unrestricted'); // This should remain as unrestricted, enabling will fail otherwise\n\n        // KeyCloakOIDCConfig --> OIDCConfig\n        set(this.model, 'rancherUrl', `${ serverUrl }/verify-auth`);\n        set(this.model, 'scope', BASE_SCOPES.keycloakoidc[0]);\n        break;\n      }\n\n      case 'saml':\n        set(this.model, 'accessMode', 'unrestricted');\n        break;\n      case 'ldap':\n        set(this.model, 'servers', []);\n        set(this.model, 'accessMode', 'unrestricted');\n        set(this.model, 'starttls', false);\n        if (this.model.id === 'activedirectory') {\n          set(this.model, 'disabledStatusBitmask', 2);\n        } else {\n          set(this.model, 'disabledStatusBitmask', 0);\n        }\n        break;\n      default:\n        break;\n      }\n    }\n  },\n};\n"],"mappings":"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"}]}