{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/node.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/detail/node.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyI7CmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIjsKZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9CmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQoZSkgeyBmb3IgKHZhciByID0gMTsgciA8IGFyZ3VtZW50cy5sZW5ndGg7IHIrKykgeyB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307IHIgJSAyID8gb3duS2V5cyhPYmplY3QodCksICEwKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHQpKSA6IG93bktleXMoT2JqZWN0KHQpKS5mb3JFYWNoKGZ1bmN0aW9uIChyKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTsgfSk7IH0gcmV0dXJuIGU7IH0KaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQ29uc3VtcHRpb25HYXVnZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9Db25zdW1wdGlvbkdhdWdlJzsKaW1wb3J0IEFsZXJ0IGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0FsZXJ0JzsKaW1wb3J0IFJlc291cmNlVGFibGUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvUmVzb3VyY2VUYWJsZSc7CmltcG9ydCBUYWIgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvVGFiYmVkL1RhYic7CmltcG9ydCB7IEVGRkVDVCwgSU1BR0VfU0laRSwgS0VZLCBTSU1QTEVfTkFNRSwgVkFMVUUgfSBmcm9tICdAc2hlbGwvY29uZmlnL3RhYmxlLWhlYWRlcnMnOwppbXBvcnQgUmVzb3VyY2VUYWJzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL2Zvcm0vUmVzb3VyY2VUYWJzJzsKaW1wb3J0IEVtYmVyUGFnZSBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9FbWJlclBhZ2UnOwppbXBvcnQgeyBNRVRSSUMsIFBPRCB9IGZyb20gJ0BzaGVsbC9jb25maWcvdHlwZXMnOwppbXBvcnQgY3JlYXRlRWRpdFZpZXcgZnJvbSAnQHNoZWxsL21peGlucy9jcmVhdGUtZWRpdC12aWV3JzsKaW1wb3J0IHsgZm9ybWF0U2ksIGV4cG9uZW50TmVlZGVkLCBVTklUUyB9IGZyb20gJ0BzaGVsbC91dGlscy91bml0cyc7CmltcG9ydCBEYXNoYm9hcmRNZXRyaWNzIGZyb20gJ0BzaGVsbC9jb21wb25lbnRzL0Rhc2hib2FyZE1ldHJpY3MnOwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IGFsbERhc2hib2FyZHNFeGlzdCB9IGZyb20gJ0BzaGVsbC91dGlscy9ncmFmYW5hJzsKaW1wb3J0IExvYWRpbmcgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvTG9hZGluZyc7CmltcG9ydCBtZXRyaWNQb2xsZXIgZnJvbSAnQHNoZWxsL21peGlucy9tZXRyaWMtcG9sbGVyJzsKaW1wb3J0IHsgaGF2ZVYxTW9uaXRvcmluZyB9IGZyb20gJ0BzaGVsbC91dGlscy9tb25pdG9yaW5nJzsKdmFyIE5PREVfTUVUUklDU19ERVRBSUxfVVJMID0gJy9hcGkvdjEvbmFtZXNwYWNlcy9jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0vc2VydmljZXMvaHR0cDpyYW5jaGVyLW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItbm9kZS1kZXRhaWwtMS9yYW5jaGVyLW5vZGUtZGV0YWlsP29yZ0lkPTEnOwp2YXIgTk9ERV9NRVRSSUNTX1NVTU1BUllfVVJMID0gJy9hcGkvdjEvbmFtZXNwYWNlcy9jYXR0bGUtbW9uaXRvcmluZy1zeXN0ZW0vc2VydmljZXMvaHR0cDpyYW5jaGVyLW1vbml0b3JpbmctZ3JhZmFuYTo4MC9wcm94eS9kL3JhbmNoZXItbm9kZS0xL3JhbmNoZXItbm9kZT9vcmdJZD0xJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdEZXRhaWxOb2RlJywKICBjb21wb25lbnRzOiB7CiAgICBBbGVydDogQWxlcnQsCiAgICBDb25zdW1wdGlvbkdhdWdlOiBDb25zdW1wdGlvbkdhdWdlLAogICAgRGFzaGJvYXJkTWV0cmljczogRGFzaGJvYXJkTWV0cmljcywKICAgIExvYWRpbmc6IExvYWRpbmcsCiAgICBSZXNvdXJjZVRhYnM6IFJlc291cmNlVGFicywKICAgIFRhYjogVGFiLAogICAgUmVzb3VyY2VUYWJsZTogUmVzb3VyY2VUYWJsZSwKICAgIEVtYmVyUGFnZTogRW1iZXJQYWdlCiAgfSwKICBtaXhpbnM6IFtjcmVhdGVFZGl0VmlldywgbWV0cmljUG9sbGVyXSwKICBwcm9wczogewogICAgdmFsdWU6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZmV0Y2g6IGZ1bmN0aW9uIGZldGNoKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciB2M05vZGVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGFsbERhc2hib2FyZHNFeGlzdChfdGhpcy4kc3RvcmUsIF90aGlzLmN1cnJlbnRDbHVzdGVyLmlkLCBbTk9ERV9NRVRSSUNTX0RFVEFJTF9VUkwsIE5PREVfTUVUUklDU19TVU1NQVJZX1VSTF0pOwogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBfdGhpcy5zaG93TWV0cmljcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIGlmICghaGF2ZVYxTW9uaXRvcmluZyhfdGhpcy4kc3RvcmUuZ2V0dGVycykpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRzdG9yZS5kaXNwYXRjaCgncmFuY2hlci9yZXF1ZXN0JywgewogICAgICAgICAgICAgIHVybDogJy92My9ub2RlcycsCiAgICAgICAgICAgICAgbWV0aG9kOiAnZ2V0JwogICAgICAgICAgICB9KTsKICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgdjNOb2RlcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF90aGlzLnYzTm9kZXMgPSB2M05vZGVzOwogICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCBfdGhpcy4kc3RvcmUuZGlzcGF0Y2goJ2NsdXN0ZXIvZmluZEFsbCcsIHsKICAgICAgICAgICAgICB0eXBlOiBQT0QKICAgICAgICAgICAgfSkpOwogICAgICAgICAgY2FzZSA5OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIHBvZFNjaGVtYSA9IHRoaXMuJHN0b3JlLmdldHRlcnNbJ2NsdXN0ZXIvc2NoZW1hRm9yJ10oUE9EKTsKICAgIHJldHVybiB7CiAgICAgIHYzTm9kZXM6IG51bGwsCiAgICAgIG1ldHJpY3M6IHsKICAgICAgICBjcHU6IDAsCiAgICAgICAgbWVtb3J5OiAwCiAgICAgIH0sCiAgICAgIGluZm9UYWJsZUhlYWRlcnM6IFtfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIEtFWSksIHt9LCB7CiAgICAgICAgbGFiZWw6ICcnLAogICAgICAgIHdpZHRoOiAyMDAKICAgICAgfSksIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgVkFMVUUpLCB7fSwgewogICAgICAgIGxhYmVsOiAnJywKICAgICAgICBkYXNoSWZFbXB0eTogdHJ1ZQogICAgICB9KV0sCiAgICAgIGltYWdlVGFibGVIZWFkZXJzOiBbX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBTSU1QTEVfTkFNRSksIHt9LCB7CiAgICAgICAgd2lkdGg6IG51bGwKICAgICAgfSksIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgSU1BR0VfU0laRSksIHt9LCB7CiAgICAgICAgd2lkdGg6IDEwMAogICAgICB9KSAvLyBFbnN1cmUgb25lIGhlYWRlciBoYXMgYSBzaXplLCBhbGwgb3RoZXIgY29sdW1ucyB3aWxsIHNjYWxlCiAgICAgIF0sCiAgICAgIHRhaW50VGFibGVIZWFkZXJzOiBbS0VZLCBWQUxVRSwgRUZGRUNUXSwKICAgICAgcG9kVGFibGVIZWFkZXJzOiB0aGlzLiRzdG9yZS5nZXR0ZXJzWyd0eXBlLW1hcC9oZWFkZXJzRm9yJ10ocG9kU2NoZW1hKSwKICAgICAgTk9ERV9NRVRSSUNTX0RFVEFJTF9VUkw6IE5PREVfTUVUUklDU19ERVRBSUxfVVJMLAogICAgICBOT0RFX01FVFJJQ1NfU1VNTUFSWV9VUkw6IE5PREVfTUVUUklDU19TVU1NQVJZX1VSTCwKICAgICAgc2hvd01ldHJpY3M6IGZhbHNlCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwR2V0dGVycyhbJ2N1cnJlbnRDbHVzdGVyJ10pKSwge30sIHsKICAgIHYxTW9uaXRvcmluZ1VybDogZnVuY3Rpb24gdjFNb25pdG9yaW5nVXJsKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgaWYgKHRoaXMudjNOb2RlcyAmJiB0aGlzLnYzTm9kZXMuZGF0YSkgewogICAgICAgIHZhciBub2RlID0gdGhpcy52M05vZGVzLmRhdGEuZmluZChmdW5jdGlvbiAobikgewogICAgICAgICAgdmFyIF90aGlzMiR2YWx1ZSRtZXRhZGF0YTsKICAgICAgICAgIHJldHVybiBuLm5vZGVOYW1lID09PSAoKF90aGlzMiR2YWx1ZSRtZXRhZGF0YSA9IF90aGlzMi52YWx1ZS5tZXRhZGF0YSkgPT09IG51bGwgfHwgX3RoaXMyJHZhbHVlJG1ldGFkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpczIkdmFsdWUkbWV0YWRhdGEubmFtZSk7CiAgICAgICAgfSk7CiAgICAgICAgaWYgKG5vZGUpIHsKICAgICAgICAgIC8vIEN1c3RvbSBwYWdlIGp1c3Qgd2l0aCBub2RlIG1ldHJpY3MgZ3JhcGhzCiAgICAgICAgICB2YXIgaWQgPSB0aGlzLmN1cnJlbnRDbHVzdGVyLmlkOwogICAgICAgICAgcmV0dXJuICIvay8iLmNvbmNhdChpZCwgIi9tb25pdG9yaW5nLyIpLmNvbmNhdChub2RlLmlkLCAiL21ldHJpY3MiKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIG51bGw7CiAgICB9LAogICAgbWVtb3J5VW5pdHM6IGZ1bmN0aW9uIG1lbW9yeVVuaXRzKCkgewogICAgICB2YXIgZXhwb25lbnQgPSBleHBvbmVudE5lZWRlZCh0aGlzLnZhbHVlLnJhbVJlc2VydmVkLCAxMDI0KTsKICAgICAgcmV0dXJuICIiLmNvbmNhdChVTklUU1tleHBvbmVudF0sICJpQiIpOwogICAgfSwKICAgIHBpZFByZXNzdXJlU3RhdHVzOiBmdW5jdGlvbiBwaWRQcmVzc3VyZVN0YXR1cygpIHsKICAgICAgcmV0dXJuIHRoaXMubWFwVG9TdGF0dXModGhpcy52YWx1ZS5pc1BpZFByZXNzdXJlT2spOwogICAgfSwKICAgIGRpc2tQcmVzc3VyZVN0YXR1czogZnVuY3Rpb24gZGlza1ByZXNzdXJlU3RhdHVzKCkgewogICAgICByZXR1cm4gdGhpcy5tYXBUb1N0YXR1cyh0aGlzLnZhbHVlLmlzRGlza1ByZXNzdXJlT2spOwogICAgfSwKICAgIG1lbW9yeVByZXNzdXJlU3RhdHVzOiBmdW5jdGlvbiBtZW1vcnlQcmVzc3VyZVN0YXR1cygpIHsKICAgICAgcmV0dXJuIHRoaXMubWFwVG9TdGF0dXModGhpcy52YWx1ZS5pc01lbW9yeVByZXNzdXJlT2spOwogICAgfSwKICAgIGt1YmVsZXRTdGF0dXM6IGZ1bmN0aW9uIGt1YmVsZXRTdGF0dXMoKSB7CiAgICAgIHJldHVybiB0aGlzLm1hcFRvU3RhdHVzKHRoaXMudmFsdWUuaXNLdWJlbGV0T2spOwogICAgfSwKICAgIGluZm9UYWJsZVJvd3M6IGZ1bmN0aW9uIGluZm9UYWJsZVJvd3MoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwogICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy52YWx1ZS5zdGF0dXMubm9kZUluZm8pLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGtleTogX3RoaXMzLnQoIm5vZGUuZGV0YWlsLnRhYi5pbmZvLmtleS4iLmNvbmNhdChrZXkpKSwKICAgICAgICAgIHZhbHVlOiBfdGhpczMudmFsdWUuc3RhdHVzLm5vZGVJbmZvW2tleV0KICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBpbWFnZVRhYmxlUm93czogZnVuY3Rpb24gaW1hZ2VUYWJsZVJvd3MoKSB7CiAgICAgIHZhciBpbWFnZXMgPSB0aGlzLnZhbHVlLnN0YXR1cy5pbWFnZXMgfHwgW107CiAgICAgIHJldHVybiBpbWFnZXMubWFwKGZ1bmN0aW9uIChpbWFnZSkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAvLyBpbWFnZS5uYW1lc1sxXSB0eXBpY2FsbHkgaGFzIHRoZSB1c2VyIGZyaWVuZGx5IG5hbWUgYnV0IG9uIG9jY2FzaW9uIHRoZXJlJ3Mgb25seSBvbmUgbmFtZSBhbmQgd2Ugc2hvdWxkIHVzZSB0aGF0CiAgICAgICAgICBuYW1lOiBpbWFnZS5uYW1lcyA/IGltYWdlLm5hbWVzWzFdIHx8IGltYWdlLm5hbWVzWzBdIDogJy0tLScsCiAgICAgICAgICBzaXplQnl0ZXM6IGltYWdlLnNpemVCeXRlcwogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIHRhaW50VGFibGVSb3dzOiBmdW5jdGlvbiB0YWludFRhYmxlUm93cygpIHsKICAgICAgcmV0dXJuIHRoaXMudmFsdWUuc3BlYy50YWludHMgfHwgW107CiAgICB9LAogICAgZ3JhcGhWYXJzOiBmdW5jdGlvbiBncmFwaFZhcnMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaW5zdGFuY2U6ICIiLmNvbmNhdCh0aGlzLnZhbHVlLmludGVybmFsSXAsICI6OTc5NiIpCiAgICAgIH07CiAgICB9CiAgfSksCiAgbWV0aG9kczogewogICAgbWVtb3J5Rm9ybWF0dGVyOiBmdW5jdGlvbiBtZW1vcnlGb3JtYXR0ZXIodmFsdWUpIHsKICAgICAgdmFyIGZvcm1hdE9wdGlvbnMgPSB7CiAgICAgICAgYWRkU3VmZml4OiBmYWxzZSwKICAgICAgICBpbmNyZW1lbnQ6IDEwMjQKICAgICAgfTsKICAgICAgcmV0dXJuIGZvcm1hdFNpKHZhbHVlLCBmb3JtYXRPcHRpb25zKTsKICAgIH0sCiAgICBtYXBUb1N0YXR1czogZnVuY3Rpb24gbWFwVG9TdGF0dXMoaXNPaykgewogICAgICByZXR1cm4gaXNPayA/ICdzdWNjZXNzJyA6ICdlcnJvcic7CiAgICB9LAogICAgbG9hZE1ldHJpY3M6IGZ1bmN0aW9uIGxvYWRNZXRyaWNzKCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHNjaGVtYTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgc2NoZW1hID0gX3RoaXM0LiRzdG9yZS5nZXR0ZXJzWydjbHVzdGVyL3NjaGVtYUZvciddKE1FVFJJQy5OT0RFKTsKICAgICAgICAgICAgICBpZiAoIXNjaGVtYSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM0LiRzdG9yZS5kaXNwYXRjaCgnY2x1c3Rlci9maW5kJywgewogICAgICAgICAgICAgICAgdHlwZTogTUVUUklDLk5PREUsCiAgICAgICAgICAgICAgICBpZDogX3RoaXM0LnZhbHVlLmlkLAogICAgICAgICAgICAgICAgb3B0OiB7CiAgICAgICAgICAgICAgICAgIGZvcmNlOiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfdGhpczQuJGZvcmNlVXBkYXRlKCk7CiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"names":["ConsumptionGauge","Alert","ResourceTable","Tab","EFFECT","IMAGE_SIZE","KEY","SIMPLE_NAME","VALUE","ResourceTabs","EmberPage","METRIC","POD","createEditView","formatSi","exponentNeeded","UNITS","DashboardMetrics","mapGetters","allDashboardsExist","Loading","metricPoller","haveV1Monitoring","NODE_METRICS_DETAIL_URL","NODE_METRICS_SUMMARY_URL","name","components","mixins","props","value","type","Object","required","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","v3Nodes","wrap","_callee$","_context","prev","next","$store","currentCluster","id","showMetrics","sent","getters","dispatch","url","method","abrupt","stop","data","podSchema","metrics","cpu","memory","infoTableHeaders","_objectSpread","label","width","dashIfEmpty","imageTableHeaders","taintTableHeaders","podTableHeaders","computed","v1MonitoringUrl","_this2","node","find","n","_this2$value$metadata","nodeName","metadata","concat","memoryUnits","exponent","ramReserved","pidPressureStatus","mapToStatus","isPidPressureOk","diskPressureStatus","isDiskPressureOk","memoryPressureStatus","isMemoryPressureOk","kubeletStatus","isKubeletOk","infoTableRows","_this3","keys","status","nodeInfo","map","key","t","imageTableRows","images","image","names","sizeBytes","taintTableRows","spec","taints","graphVars","instance","internalIp","methods","memoryFormatter","formatOptions","addSuffix","increment","isOk","loadMetrics","_this4","_callee2","schema","_callee2$","_context2","NODE","opt","force","$forceUpdate"],"sources":["node_modules/@rancher/shell/detail/node.vue"],"sourcesContent":["<script>\nimport ConsumptionGauge from '@shell/components/ConsumptionGauge';\nimport Alert from '@shell/components/Alert';\nimport ResourceTable from '@shell/components/ResourceTable';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport {\n  EFFECT,\n  IMAGE_SIZE,\n  KEY,\n  SIMPLE_NAME,\n  VALUE\n} from '@shell/config/table-headers';\nimport ResourceTabs from '@shell/components/form/ResourceTabs';\nimport EmberPage from '@shell/components/EmberPage';\nimport { METRIC, POD } from '@shell/config/types';\nimport createEditView from '@shell/mixins/create-edit-view';\nimport { formatSi, exponentNeeded, UNITS } from '@shell/utils/units';\nimport DashboardMetrics from '@shell/components/DashboardMetrics';\nimport { mapGetters } from 'vuex';\nimport { allDashboardsExist } from '@shell/utils/grafana';\nimport Loading from '@shell/components/Loading';\nimport metricPoller from '@shell/mixins/metric-poller';\nimport { haveV1Monitoring } from '@shell/utils/monitoring';\n\nconst NODE_METRICS_DETAIL_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-node-detail-1/rancher-node-detail?orgId=1';\nconst NODE_METRICS_SUMMARY_URL = '/api/v1/namespaces/cattle-monitoring-system/services/http:rancher-monitoring-grafana:80/proxy/d/rancher-node-1/rancher-node?orgId=1';\n\nexport default {\n  name: 'DetailNode',\n\n  components: {\n    Alert,\n    ConsumptionGauge,\n    DashboardMetrics,\n    Loading,\n    ResourceTabs,\n    Tab,\n    ResourceTable,\n    EmberPage,\n  },\n\n  mixins: [createEditView, metricPoller],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  async fetch() {\n    this.showMetrics = await allDashboardsExist(this.$store, this.currentCluster.id, [NODE_METRICS_DETAIL_URL, NODE_METRICS_SUMMARY_URL]);\n\n    if (haveV1Monitoring(this.$store.getters)) {\n      const v3Nodes = await this.$store.dispatch('rancher/request', {\n        url:    '/v3/nodes',\n        method: 'get'\n      });\n\n      this.v3Nodes = v3Nodes;\n    }\n\n    return this.$store.dispatch('cluster/findAll', { type: POD });\n  },\n\n  data() {\n    const podSchema = this.$store.getters['cluster/schemaFor'](POD);\n\n    return {\n      v3Nodes:          null,\n      metrics:          { cpu: 0, memory: 0 },\n      infoTableHeaders: [\n        {\n          ...KEY,\n          label: '',\n          width: 200\n        },\n        {\n          ...VALUE,\n          label:       '',\n          dashIfEmpty: true,\n        }\n      ],\n      imageTableHeaders: [\n        { ...SIMPLE_NAME, width: null },\n        { ...IMAGE_SIZE, width: 100 } // Ensure one header has a size, all other columns will scale\n      ],\n      taintTableHeaders: [\n        KEY,\n        VALUE,\n        EFFECT\n      ],\n      podTableHeaders: this.$store.getters['type-map/headersFor'](podSchema),\n      NODE_METRICS_DETAIL_URL,\n      NODE_METRICS_SUMMARY_URL,\n      showMetrics:     false\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    v1MonitoringUrl() {\n      if (this.v3Nodes && this.v3Nodes.data) {\n        const node = this.v3Nodes.data.find((n) => {\n          return n.nodeName === this.value.metadata?.name;\n        });\n\n        if (node) {\n          // Custom page just with node metrics graphs\n          const id = this.currentCluster.id;\n\n          return `/k/${ id }/monitoring/${ node.id }/metrics`;\n        }\n      }\n\n      return null;\n    },\n    memoryUnits() {\n      const exponent = exponentNeeded(this.value.ramReserved, 1024);\n\n      return `${ UNITS[exponent] }iB`;\n    },\n\n    pidPressureStatus() {\n      return this.mapToStatus(this.value.isPidPressureOk);\n    },\n\n    diskPressureStatus() {\n      return this.mapToStatus(this.value.isDiskPressureOk);\n    },\n\n    memoryPressureStatus() {\n      return this.mapToStatus(this.value.isMemoryPressureOk);\n    },\n\n    kubeletStatus() {\n      return this.mapToStatus(this.value.isKubeletOk);\n    },\n\n    infoTableRows() {\n      return Object.keys(this.value.status.nodeInfo)\n        .map((key) => ({\n          key:   this.t(`node.detail.tab.info.key.${ key }`),\n          value: this.value.status.nodeInfo[key]\n        }));\n    },\n\n    imageTableRows() {\n      const images = this.value.status.images || [];\n\n      return images.map((image) => ({\n        // image.names[1] typically has the user friendly name but on occasion there's only one name and we should use that\n        name:      image.names ? (image.names[1] || image.names[0]) : '---',\n        sizeBytes: image.sizeBytes\n      }));\n    },\n\n    taintTableRows() {\n      return this.value.spec.taints || [];\n    },\n\n    graphVars() {\n      return { instance: `${ this.value.internalIp }:9796` };\n    }\n  },\n\n  methods: {\n    memoryFormatter(value) {\n      const formatOptions = {\n        addSuffix: false,\n        increment: 1024,\n      };\n\n      return formatSi(value, formatOptions);\n    },\n\n    mapToStatus(isOk) {\n      return isOk ? 'success' : 'error';\n    },\n\n    async loadMetrics() {\n      const schema = this.$store.getters['cluster/schemaFor'](METRIC.NODE);\n\n      if (schema) {\n        await this.$store.dispatch('cluster/find', {\n          type: METRIC.NODE,\n          id:   this.value.id,\n          opt:  { force: true }\n        });\n\n        this.$forceUpdate();\n      }\n    }\n  }\n};\n</script>\n\n<template>\n  <Loading v-if=\"$fetchState.pending\" />\n  <div\n    v-else\n    class=\"node\"\n  >\n    <div class=\"spacer\" />\n    <div class=\"alerts\">\n      <Alert\n        class=\"mr-10\"\n        :status=\"pidPressureStatus\"\n        :message=\"t('node.detail.glance.pidPressure')\"\n      />\n      <Alert\n        class=\"mr-10\"\n        :status=\"diskPressureStatus\"\n        :message=\"t('node.detail.glance.diskPressure')\"\n      />\n      <Alert\n        class=\"mr-10\"\n        :status=\"memoryPressureStatus\"\n        :message=\"t('node.detail.glance.memoryPressure')\"\n      />\n      <Alert\n        :status=\"kubeletStatus\"\n        :message=\"t('node.detail.glance.kubelet')\"\n      />\n    </div>\n    <div class=\"mt-20 resources\">\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.cpu')\"\n        :capacity=\"value.cpuCapacity\"\n        :used=\"value.cpuUsage\"\n      />\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.memory')\"\n        :capacity=\"value.ramReserved\"\n        :used=\"value.ramUsage\"\n        :units=\"memoryUnits\"\n        :number-formatter=\"memoryFormatter\"\n      />\n      <ConsumptionGauge\n        :resource-name=\"t('node.detail.glance.consumptionGauge.pods')\"\n        :capacity=\"value.podCapacity\"\n        :used=\"value.podConsumed\"\n      />\n    </div>\n    <div class=\"spacer\" />\n    <ResourceTabs\n      v-model=\"value\"\n      :mode=\"mode\"\n    >\n      <Tab\n        name=\"pods\"\n        :label=\"t('node.detail.tab.pods')\"\n        :weight=\"4\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"podTableHeaders\"\n          :rows=\"value.pods\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"showMetrics\"\n        :label=\"t('node.detail.tab.metrics')\"\n        name=\"node-metrics\"\n        :weight=\"3\"\n      >\n        <template #default=\"props\">\n          <DashboardMetrics\n            v-if=\"props.active\"\n            :detail-url=\"NODE_METRICS_DETAIL_URL\"\n            :summary-url=\"NODE_METRICS_SUMMARY_URL\"\n            :vars=\"graphVars\"\n            graph-height=\"825px\"\n          />\n        </template>\n      </Tab>\n      <Tab\n        name=\"info\"\n        :label=\"t('node.detail.tab.info.label')\"\n        class=\"bordered-table\"\n        :weight=\"2\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"infoTableHeaders\"\n          :rows=\"infoTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :show-headers=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        name=\"images\"\n        :label=\"t('node.detail.tab.images')\"\n        :weight=\"1\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"imageTableHeaders\"\n          :rows=\"imageTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n        />\n      </Tab>\n      <Tab\n        name=\"taints\"\n        :label=\"t('node.detail.tab.taints')\"\n        :weight=\"0\"\n      >\n        <ResourceTable\n          key-field=\"_key\"\n          :headers=\"taintTableHeaders\"\n          :rows=\"taintTableRows\"\n          :row-actions=\"false\"\n          :table-actions=\"false\"\n          :search=\"false\"\n        />\n      </Tab>\n      <Tab\n        v-if=\"v1MonitoringUrl\"\n        name=\"v1Metrics\"\n        :label=\"t('node.detail.tab.metrics')\"\n        :weight=\"0\"\n      >\n        <div id=\"ember-anchor\">\n          <EmberPage\n            inline=\"ember-anchor\"\n            :src=\"v1MonitoringUrl\"\n          />\n        </div>\n      </Tab>\n    </ResourceTabs>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n.resources {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  & > * {\n    width: 30%;\n  }\n}\n</style>\n"],"mappings":"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"}]}