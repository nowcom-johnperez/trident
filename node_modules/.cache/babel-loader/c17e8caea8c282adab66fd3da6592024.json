{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/RegistryMirrors.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/RegistryMirrors.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobywgYWxsb3dBcnJheUxpa2UpIHsgdmFyIGl0ID0gdHlwZW9mIFN5bWJvbCAhPT0gInVuZGVmaW5lZCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdIHx8IG9bIkBAaXRlcmF0b3IiXTsgaWYgKCFpdCkgeyBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSAibnVtYmVyIikgeyBpZiAoaXQpIG8gPSBpdDsgdmFyIGkgPSAwOyB2YXIgRiA9IGZ1bmN0aW9uIEYoKSB7fTsgcmV0dXJuIHsgczogRiwgbjogZnVuY3Rpb24gbigpIHsgaWYgKGkgPj0gby5sZW5ndGgpIHJldHVybiB7IGRvbmU6IHRydWUgfTsgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBvW2krK10gfTsgfSwgZTogZnVuY3Rpb24gZShfZSkgeyB0aHJvdyBfZTsgfSwgZjogRiB9OyB9IHRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgYXR0ZW1wdCB0byBpdGVyYXRlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfSB2YXIgbm9ybWFsQ29tcGxldGlvbiA9IHRydWUsIGRpZEVyciA9IGZhbHNlLCBlcnI7IHJldHVybiB7IHM6IGZ1bmN0aW9uIHMoKSB7IGl0ID0gaXQuY2FsbChvKTsgfSwgbjogZnVuY3Rpb24gbigpIHsgdmFyIHN0ZXAgPSBpdC5uZXh0KCk7IG5vcm1hbENvbXBsZXRpb24gPSBzdGVwLmRvbmU7IHJldHVybiBzdGVwOyB9LCBlOiBmdW5jdGlvbiBlKF9lMikgeyBkaWRFcnIgPSB0cnVlOyBlcnIgPSBfZTI7IH0sIGY6IGZ1bmN0aW9uIGYoKSB7IHRyeSB7IGlmICghbm9ybWFsQ29tcGxldGlvbiAmJiBpdC5yZXR1cm4gIT0gbnVsbCkgaXQucmV0dXJuKCk7IH0gZmluYWxseSB7IGlmIChkaWRFcnIpIHRocm93IGVycjsgfSB9IH07IH0KZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSAic3RyaW5nIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09ICJPYmplY3QiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSAiTWFwIiB8fCBuID09PSAiU2V0IikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSAiQXJndW1lbnRzIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH0KZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgYXJyMltpXSA9IGFycltpXTsgcmV0dXJuIGFycjI7IH0KaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnRyaW0uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZyb20uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuZGVzY3JpcHRpb24uanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgQXJyYXlMaXN0R3JvdXBlZCBmcm9tICdAc2hlbGwvY29tcG9uZW50cy9mb3JtL0FycmF5TGlzdEdyb3VwZWQnOwppbXBvcnQgS2V5VmFsdWUgZnJvbSAnQHNoZWxsL2NvbXBvbmVudHMvZm9ybS9LZXlWYWx1ZSc7CmltcG9ydCB7IExhYmVsZWRJbnB1dCB9IGZyb20gJ0Bjb21wb25lbnRzL0Zvcm0vTGFiZWxlZElucHV0JzsKaW1wb3J0IHsgc2V0IH0gZnJvbSAnQHNoZWxsL3V0aWxzL29iamVjdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBBcnJheUxpc3RHcm91cGVkOiBBcnJheUxpc3RHcm91cGVkLAogICAgS2V5VmFsdWU6IEtleVZhbHVlLAogICAgTGFiZWxlZElucHV0OiBMYWJlbGVkSW5wdXQKICB9LAogIHByb3BzOiB7CiAgICBtb2RlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICB2YWx1ZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIF90aGlzJHZhbHVlJHNwZWMkcmtlQzsKICAgIHZhciBtaXJyb3JNYXAgPSAoKF90aGlzJHZhbHVlJHNwZWMkcmtlQyA9IHRoaXMudmFsdWUuc3BlYy5ya2VDb25maWcpID09PSBudWxsIHx8IF90aGlzJHZhbHVlJHNwZWMkcmtlQyA9PT0gdm9pZCAwIHx8IChfdGhpcyR2YWx1ZSRzcGVjJHJrZUMgPSBfdGhpcyR2YWx1ZSRzcGVjJHJrZUMucmVnaXN0cmllcykgPT09IG51bGwgfHwgX3RoaXMkdmFsdWUkc3BlYyRya2VDID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyR2YWx1ZSRzcGVjJHJrZUMubWlycm9ycykgfHwge307CiAgICB2YXIgZW50cmllcyA9IFtdOwogICAgZm9yICh2YXIgaG9zdG5hbWUgaW4gbWlycm9yTWFwKSB7CiAgICAgIGVudHJpZXMucHVzaCh7CiAgICAgICAgaG9zdG5hbWU6IGhvc3RuYW1lLAogICAgICAgIGVuZHBvaW50czogKG1pcnJvck1hcFtob3N0bmFtZV0uZW5kcG9pbnQgfHwgW10pLmpvaW4oJywgJyksCiAgICAgICAgcmV3cml0ZTogbWlycm9yTWFwW2hvc3RuYW1lXS5yZXdyaXRlIHx8IHt9CiAgICAgIH0pOwogICAgfQogICAgcmV0dXJuIHsKICAgICAgZW50cmllczogZW50cmllcwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMkdmFsdWUkc3BlYyRya2VDMjsKICAgIGlmICghKChfdGhpcyR2YWx1ZSRzcGVjJHJrZUMyID0gdGhpcy52YWx1ZS5zcGVjLnJrZUNvbmZpZykgIT09IG51bGwgJiYgX3RoaXMkdmFsdWUkc3BlYyRya2VDMiAhPT0gdm9pZCAwICYmIChfdGhpcyR2YWx1ZSRzcGVjJHJrZUMyID0gX3RoaXMkdmFsdWUkc3BlYyRya2VDMi5yZWdpc3RyaWVzKSAhPT0gbnVsbCAmJiBfdGhpcyR2YWx1ZSRzcGVjJHJrZUMyICE9PSB2b2lkIDAgJiYgX3RoaXMkdmFsdWUkc3BlYyRya2VDMi5taXJyb3JzKSkgewogICAgICBzZXQodGhpcy52YWx1ZSwgJ3NwZWMucmtlQ29uZmlnLnJlZ2lzdHJpZXMubWlycm9ycycsIHt9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkZWZhdWx0QWRkVmFsdWU6IGZ1bmN0aW9uIGRlZmF1bHRBZGRWYWx1ZSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBob3N0bmFtZTogJycsCiAgICAgICAgZW5kcG9pbnRzOiAnJywKICAgICAgICByZXdyaXRlOiB7fQogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoZW50cmllcykgewogICAgICB2YXIgbWlycm9ycyA9IHt9OwogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIoZW50cmllcyksCiAgICAgICAgX3N0ZXA7CiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBlbnRyeSA9IF9zdGVwLnZhbHVlOwogICAgICAgICAgaWYgKCFlbnRyeS5ob3N0bmFtZSB8fCBtaXJyb3JzW2VudHJ5Lmhvc3RuYW1lXSkgewogICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgIH0KICAgICAgICAgIG1pcnJvcnNbZW50cnkuaG9zdG5hbWVdID0gewogICAgICAgICAgICBlbmRwb2ludDogZW50cnkuZW5kcG9pbnRzLnNwbGl0KC9ccyosXHMqLykubWFwKGZ1bmN0aW9uICh4KSB7CiAgICAgICAgICAgICAgcmV0dXJuIHgudHJpbSgpOwogICAgICAgICAgICB9KQogICAgICAgICAgfTsKICAgICAgICAgIGlmIChlbnRyeS5yZXdyaXRlKSB7CiAgICAgICAgICAgIG1pcnJvcnNbZW50cnkuaG9zdG5hbWVdLnJld3JpdGUgPSBlbnRyeS5yZXdyaXRlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CiAgICAgIHNldCh0aGlzLnZhbHVlLCAnc3BlYy5ya2VDb25maWcucmVnaXN0cmllcy5taXJyb3JzJywgbWlycm9ycyk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"names":["ArrayListGrouped","KeyValue","LabeledInput","set","components","props","mode","type","String","required","value","Object","data","_this$value$spec$rkeC","mirrorMap","spec","rkeConfig","registries","mirrors","entries","hostname","push","endpoints","endpoint","join","rewrite","created","_this$value$spec$rkeC2","computed","defaultAddValue","methods","update","_iterator","_createForOfIteratorHelper","_step","s","n","done","entry","split","map","x","trim","err","e","f"],"sources":["node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/RegistryMirrors.vue"],"sourcesContent":["<script>\nimport ArrayListGrouped from '@shell/components/form/ArrayListGrouped';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { set } from '@shell/utils/object';\n\nexport default {\n  components: {\n    ArrayListGrouped, KeyValue, LabeledInput\n  },\n\n  props: {\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    value: {\n      type:     Object,\n      required: true,\n    },\n  },\n\n  data() {\n    const mirrorMap = this.value.spec.rkeConfig?.registries?.mirrors || {};\n    const entries = [];\n\n    for ( const hostname in mirrorMap ) {\n      entries.push({\n        hostname,\n        endpoints: (mirrorMap[hostname].endpoint || []).join(', '),\n        rewrite:   mirrorMap[hostname].rewrite || {},\n      });\n    }\n\n    return { entries };\n  },\n\n  created() {\n    if (!this.value.spec.rkeConfig?.registries?.mirrors) {\n      set(this.value, 'spec.rkeConfig.registries.mirrors', {});\n    }\n  },\n\n  computed: {\n    defaultAddValue() {\n      return {\n        hostname:  '',\n        endpoints: '',\n        rewrite:   {}\n      };\n    },\n  },\n\n  methods: {\n    update(entries) {\n      const mirrors = {};\n\n      for ( const entry of entries ) {\n        if ( !entry.hostname || mirrors[entry.hostname] ) {\n          continue;\n        }\n\n        mirrors[entry.hostname] = { endpoint: entry.endpoints.split(/\\s*,\\s*/).map((x) => x.trim()) };\n        if (entry.rewrite) {\n          mirrors[entry.hostname].rewrite = entry.rewrite;\n        }\n      }\n      set(this.value, 'spec.rkeConfig.registries.mirrors', mirrors);\n    },\n  }\n};\n</script>\n\n<template>\n  <div>\n    <h3>\n      {{ t('registryMirror.header') }}\n      <i\n        v-clean-tooltip=\"t('registryMirror.toolTip')\"\n        class=\"icon icon-info\"\n      />\n    </h3>\n    <p class=\"mb-20\">\n      {{ t('registryMirror.description') }}\n    </p>\n    <ArrayListGrouped\n      v-model=\"entries\"\n      :add-label=\"t('registryMirror.addLabel')\"\n      :default-add-value=\"defaultAddValue\"\n      :initial-empty-row=\"true\"\n      :mode=\"mode\"\n      @input=\"update\"\n    >\n      <template #default=\"{row}\">\n        <div class=\"row\">\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"row.value.hostname\"\n              :label=\"t('registryMirror.hostnameLabel')\"\n              :placeholder=\"t('registryMirror.hostnamePlaceholder')\"\n              :mode=\"mode\"\n            />\n          </div>\n          <div class=\"col span-6\">\n            <LabeledInput\n              v-model=\"row.value.endpoints\"\n              :label=\"t('registryMirror.endpointsLabel')\"\n              :placeholder=\"t('registryMirror.endpointsPlaceholder')\"\n              :mode=\"mode\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-20\">\n          <div class=\"col span-12\">\n            <h3>\n              {{ t('registryMirrorRewrite.header') }}\n              <i\n                v-clean-tooltip=\"t('registryMirrorRewrite.toolTip')\"\n                class=\"icon icon-info\"\n              />\n            </h3>\n            <KeyValue\n              v-model=\"row.value.rewrite\"\n              :mode=\"mode\"\n              :add-label=\"t('registryMirrorRewrite.addLabel')\"\n              :read-allowed=\"false\"\n              :key-label=\"t('registryMirrorRewrite.keyLabel')\"\n              :key-placeholder=\"t('registryMirrorRewrite.keyPlaceholder')\"\n              :value-label=\"t('registryMirrorRewrite.valueLabel')\"\n              :value-placeholder=\"t('registryMirrorRewrite.valuePlaceholder')\"\n            />\n          </div>\n        </div>\n      </template>\n    </ArrayListGrouped>\n  </div>\n</template>\n"],"mappings":";;;;;;;;;;;;;;;;;;;AACA,OAAAA,gBAAA;AACA,OAAAC,QAAA;AACA,SAAAC,YAAA;AACA,SAAAC,GAAA;AAEA;EACAC,UAAA;IACAJ,gBAAA,EAAAA,gBAAA;IAAAC,QAAA,EAAAA,QAAA;IAAAC,YAAA,EAAAA;EACA;EAEAG,KAAA;IACAC,IAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,QAAA;IACA;IAEAC,KAAA;MACAH,IAAA,EAAAI,MAAA;MACAF,QAAA;IACA;EACA;EAEAG,IAAA,WAAAA,KAAA;IAAA,IAAAC,qBAAA;IACA,IAAAC,SAAA,KAAAD,qBAAA,QAAAH,KAAA,CAAAK,IAAA,CAAAC,SAAA,cAAAH,qBAAA,gBAAAA,qBAAA,GAAAA,qBAAA,CAAAI,UAAA,cAAAJ,qBAAA,uBAAAA,qBAAA,CAAAK,OAAA;IACA,IAAAC,OAAA;IAEA,SAAAC,QAAA,IAAAN,SAAA;MACAK,OAAA,CAAAE,IAAA;QACAD,QAAA,EAAAA,QAAA;QACAE,SAAA,GAAAR,SAAA,CAAAM,QAAA,EAAAG,QAAA,QAAAC,IAAA;QACAC,OAAA,EAAAX,SAAA,CAAAM,QAAA,EAAAK,OAAA;MACA;IACA;IAEA;MAAAN,OAAA,EAAAA;IAAA;EACA;EAEAO,OAAA,WAAAA,QAAA;IAAA,IAAAC,sBAAA;IACA,OAAAA,sBAAA,QAAAjB,KAAA,CAAAK,IAAA,CAAAC,SAAA,cAAAW,sBAAA,gBAAAA,sBAAA,GAAAA,sBAAA,CAAAV,UAAA,cAAAU,sBAAA,eAAAA,sBAAA,CAAAT,OAAA;MACAf,GAAA,MAAAO,KAAA;IACA;EACA;EAEAkB,QAAA;IACAC,eAAA,WAAAA,gBAAA;MACA;QACAT,QAAA;QACAE,SAAA;QACAG,OAAA;MACA;IACA;EACA;EAEAK,OAAA;IACAC,MAAA,WAAAA,OAAAZ,OAAA;MACA,IAAAD,OAAA;MAAA,IAAAc,SAAA,GAAAC,0BAAA,CAEAd,OAAA;QAAAe,KAAA;MAAA;QAAA,KAAAF,SAAA,CAAAG,CAAA,MAAAD,KAAA,GAAAF,SAAA,CAAAI,CAAA,IAAAC,IAAA;UAAA,IAAAC,KAAA,GAAAJ,KAAA,CAAAxB,KAAA;UACA,KAAA4B,KAAA,CAAAlB,QAAA,IAAAF,OAAA,CAAAoB,KAAA,CAAAlB,QAAA;YACA;UACA;UAEAF,OAAA,CAAAoB,KAAA,CAAAlB,QAAA;YAAAG,QAAA,EAAAe,KAAA,CAAAhB,SAAA,CAAAiB,KAAA,YAAAC,GAAA,WAAAC,CAAA;cAAA,OAAAA,CAAA,CAAAC,IAAA;YAAA;UAAA;UACA,IAAAJ,KAAA,CAAAb,OAAA;YACAP,OAAA,CAAAoB,KAAA,CAAAlB,QAAA,EAAAK,OAAA,GAAAa,KAAA,CAAAb,OAAA;UACA;QACA;MAAA,SAAAkB,GAAA;QAAAX,SAAA,CAAAY,CAAA,CAAAD,GAAA;MAAA;QAAAX,SAAA,CAAAa,CAAA;MAAA;MACA1C,GAAA,MAAAO,KAAA,uCAAAQ,OAAA;IACA;EACA;AACA"}]}