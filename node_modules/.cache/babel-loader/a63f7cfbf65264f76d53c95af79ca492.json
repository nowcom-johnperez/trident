{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.nodepool.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.nodepool.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["CAPI","MANAGEMENT","NORMAN","sortBy","HybridModel","MgmtNodePool","_HybridModel","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","get","_this$spec","id","spec","nodeTemplateName","replace","template","$getters","NODE_TEMPLATE","_this$nodeTemplate","nodeTemplate","provider","_this$nodeTemplate2","nameDisplay","_this$nodeTemplate3","providerDisplay","_this$nodeTemplate4","providerLocation","_this$nodeTemplate5","providerSize","_this","RANCHER_CLUSTER","find","c","name","clusterName","_this$provisioningClu","params","resource","namespace","provisioningCluster","norman","quantity","value","scalePool","delta","_this2","scaleTimer","clearTimeout","setTimeout","save","error","$dispatch","title","root","nodePoolName","NODE","filter","node","res","pending","unavailable","ready","nodes","reduce","n","metadata","state","transitioning","_objectSpread","_this$spec2","nodeSummary","out","label","color","textColor","sort","x","$rootGetters","NODE_POOL","_this$norman","hasLink","_this$norman2","remove","_this$norman3","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.nodepool.js"],"sourcesContent":["import { CAPI, MANAGEMENT, NORMAN } from '@shell/config/types';\nimport { sortBy } from '@shell/utils/sort';\nimport HybridModel from '@shell/plugins/steve/hybrid-class';\n\nexport default class MgmtNodePool extends HybridModel {\n  get nodeTemplate() {\n    const id = (this.spec?.nodeTemplateName || '').replace(/:/, '/');\n    const template = this.$getters['byId'](MANAGEMENT.NODE_TEMPLATE, id);\n\n    return template;\n  }\n\n  get provider() {\n    return this.nodeTemplate?.provider;\n  }\n\n  get providerName() {\n    return this.nodeTemplate?.nameDisplay;\n  }\n\n  get providerDisplay() {\n    return this.nodeTemplate?.providerDisplay;\n  }\n\n  get providerLocation() {\n    return this.nodeTemplate?.providerLocation;\n  }\n\n  get providerSize() {\n    return this.nodeTemplate?.providerSize;\n  }\n\n  get provisioningCluster() {\n    return this.$getters['all'](CAPI.RANCHER_CLUSTER).find((c) => c.name === this.spec.clusterName);\n  }\n\n  get doneOverride() {\n    return {\n      name:   'c-cluster-product-resource-namespace-id',\n      params: {\n        resource:  CAPI.RANCHER_CLUSTER,\n        namespace: this.provisioningCluster?.namespace,\n        id:        this.spec.clusterName\n      }\n    };\n  }\n\n  get scale() {\n    return this.norman.quantity;\n  }\n\n  scalePool(delta) {\n    this.norman.quantity += delta;\n\n    if ( this.scaleTimer ) {\n      clearTimeout(this.scaleTimer);\n    }\n\n    this.scaleTimer = setTimeout(() => {\n      try {\n        this.norman.save();\n      } catch (error) {\n        this.$dispatch('growl/fromError', {\n          title: 'Error scaling pool',\n          error\n        }, { root: true });\n      }\n    }, 1000);\n  }\n\n  get nodes() {\n    const nodePoolName = this.id.replace('/', ':');\n\n    return this.$getters['all'](MANAGEMENT.NODE).filter((node) => node.spec.nodePoolName === nodePoolName);\n  }\n\n  get nodeSummary() {\n    // Use three buckets of states rather than actual states.\n    // These are used in `stateParts` which is show in the same context as `stateParts` for machine deployments (rke2 pools))\n    // Using actual states here would look strange when against bucket states for RKE2\n    const res = {\n      pending:     0,\n      unavailable: 0,\n      ready:       0,\n    };\n\n    if (!this.nodes) {\n      return res;\n    }\n\n    return this.nodes.reduce((res, n) => {\n      if (n.metadata.state.error ) {\n        res.unavailable++;\n      } else if (n.metadata.state.transitioning) {\n        res.pending++;\n      } else if (n.state !== 'active') {\n        res.unavailable++;\n      } else {\n        res.ready++;\n      }\n\n      return res;\n    }, { ...res });\n  }\n\n  get desired() {\n    return this.spec?.quantity || 0;\n  }\n\n  get pending() {\n    return this.nodeSummary.pending;\n  }\n\n  get ready() {\n    return this.nodeSummary.ready;\n  }\n\n  get unavailable() {\n    return this.nodeSummary.unavailable;\n  }\n\n  get stateParts() {\n    const out = [\n      {\n        label:     'Pending',\n        color:     'bg-info',\n        textColor: 'text-info',\n        value:     this.pending,\n        sort:      1,\n      },\n      {\n        label:     'Unavailable',\n        color:     'bg-error',\n        textColor: 'text-error',\n        value:     this.unavailable,\n        sort:      3,\n      },\n      {\n        label:     'Ready',\n        color:     'bg-success',\n        textColor: 'text-success',\n        value:     this.ready,\n        sort:      4,\n      },\n    ].filter((x) => x.value > 0);\n\n    return sortBy(out, 'sort:desc');\n  }\n\n  get norman() {\n    const id = this.id.replace('/', ':');\n\n    return this.$rootGetters['rancher/byId'](NORMAN.NODE_POOL, id);\n  }\n\n  get canDelete() {\n    return this.norman?.hasLink('remove');\n  }\n\n  get canUpdate() {\n    return this.norman?.hasLink('update');\n  }\n\n  remove() {\n    return this.norman?.remove();\n  }\n}\n"],"mappings":"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"}]}