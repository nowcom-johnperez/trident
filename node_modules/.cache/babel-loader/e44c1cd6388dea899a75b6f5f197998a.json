{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["LabeledSelect","UnitInput","RadioGroup","Checkbox","LabeledInput","mapGetters","removeObject","addObject","STORAGE_CLASS","PV","allHash","get","components","props","mode","type","String","default","value","Object","_default","registerBeforeHook","Function","savePvcHookName","required","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","hash","wrap","_callee$","_context","prev","next","storageClasses","$store","dispatch","persistentVolumes","sent","$set","spec","storageClassName","defaultStorageClassName","stop","data","metadata","accessModes","isCreatePV","uniqueId","Date","getTime","computed","_objectSpread","storageClassNames","map","sc","name","_this$storageClasses$","find","_sc$metadata","_sc$metadata2","annotations","availablePVs","reduce","total","each","_each$status","status","phase","push","persistentVolumeNames","pv","t","watch","neu","volumeName","resources","requests","storage","created","$emit","save","undefined","beforeDestroy","methods","updateMode","enabled","updatePV","_pv$spec","capacity","updateStorage","arguments","length","toString","match","vol"],"sources":["node_modules/@rancher/shell/edit/workload/storage/persistentVolumeClaim/persistentvolumeclaim.vue"],"sourcesContent":["<script>\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport UnitInput from '@shell/components/form/UnitInput';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport { mapGetters } from 'vuex';\nimport { removeObject, addObject } from '@shell/utils/array';\nimport { STORAGE_CLASS, PV } from '@shell/config/types';\nimport { allHash } from '@shell/utils/promise';\nimport { get } from '@shell/utils/object';\n\nexport default {\n\n  components: {\n    LabeledSelect, UnitInput, RadioGroup, Checkbox, LabeledInput\n  },\n\n  props: {\n    mode: {\n      type:    String,\n      default: 'create'\n    },\n\n    value: {\n      type:    Object,\n      default: () => {\n        return {};\n      }\n    },\n\n    registerBeforeHook: {\n      type:    Function,\n      default: null,\n    },\n\n    savePvcHookName: {\n      type:     String,\n      default:  '',\n      required: true\n    },\n  },\n  async fetch() {\n    const hash = await allHash({\n      storageClasses:    this.$store.dispatch('cluster/findAll', { type: STORAGE_CLASS }),\n      persistentVolumes: this.$store.dispatch('cluster/findAll', { type: PV }),\n    });\n\n    this.storageClasses = hash.storageClasses;\n    this.persistentVolumes = hash.persistentVolumes;\n    this.$set(this.spec, 'storageClassName', (this.spec.storageClassName || this.defaultStorageClassName));\n  },\n\n  data() {\n    const spec = this.value.spec;\n\n    if (!this.value.metadata) {\n      this.$set(this.value, 'metadata', {});\n    }\n\n    this.$set(this.value.spec, 'accessModes', this.value.spec.accessModes || []);\n\n    return {\n      storageClasses:    [],\n      persistentVolumes: [],\n      isCreatePV:        true,\n      spec,\n      uniqueId:          new Date().getTime() // Allows form state to be individually deleted\n    };\n  },\n\n  computed: {\n    storageClassNames() {\n      return this.storageClasses.map((sc) => sc.metadata.name);\n    },\n\n    /**\n     * Required to initialize with default SC on creation\n     */\n    defaultStorageClassName() {\n      return this.storageClasses.find((sc) => sc.metadata?.annotations?.['storageclass.beta.kubernetes.io/is-default-class'] || sc.metadata?.annotations?.['storageclass.kubernetes.io/is-default-class'])?.metadata.name;\n    },\n\n    availablePVs() {\n      return this.persistentVolumes.reduce((total, each) => {\n        if (each?.status?.phase === 'Available') {\n          total.push(each);\n        }\n\n        return total;\n      }, []);\n    },\n\n    persistentVolumeNames() {\n      return this.availablePVs.map((pv) => pv.metadata.name);\n    },\n\n    ...mapGetters({ t: 'i18n/t' })\n  },\n\n  watch: {\n    isCreatePV(neu) {\n      if (neu) {\n        delete this.spec.volumeName;\n        this.spec.resources.requests.storage = null;\n      } else {\n        this.spec.resources.requests.storage = null;\n      }\n    },\n  },\n\n  created() {\n    this.value.uniqueId = this.uniqueId;\n    this.$emit('createUniqueId');\n    if (this.registerBeforeHook) {\n      // Append the uniqueID to the PVC hook name so that form state for each can be deleted individually\n      this.registerBeforeHook(this.value.save, this.savePvcHookName + this.uniqueId, undefined, this.value);\n    }\n  },\n\n  beforeDestroy() {\n    this.$emit('removePvcForm', this.savePvcHookName + this.uniqueId);\n  },\n\n  methods: {\n    updateMode(mode, enabled) {\n      if (enabled) {\n        addObject(this.value.spec.accessModes, mode);\n      } else {\n        removeObject(this.value.spec.accessModes, mode);\n      }\n    },\n\n    updatePV(pv) {\n      this.$set(this.spec, 'volumeName', pv.metadata.name);\n      this.$set(this.spec, 'storageClassName', (pv.spec.storageClassName || ''));\n      this.spec.resources.requests.storage = pv?.spec?.capacity?.storage;\n    },\n\n    updateStorage(neu = '') {\n      if (!neu.toString().match(/[0-9]*[a-zA-Z]+$/)) {\n        neu += 'Gi';\n      }\n\n      this.spec.resources.requests.storage = neu;\n    },\n\n    volumeName(vol) {\n      return get(vol, 'metadata.name') || vol;\n    }\n  }\n};\n</script>\n\n<template>\n  <div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledInput\n          v-model=\"value.metadata.name\"\n          :mode=\"mode\"\n          :label=\"t('persistentVolumeClaim.name')\"\n          :required=\"true\"\n          @input=\"$emit('input', value)\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <RadioGroup\n          v-model=\"isCreatePV\"\n          name=\"isCreatePV\"\n          :options=\"[true, false]\"\n          :labels=\"[t('persistentVolumeClaim.source.options.new'), t('persistentVolumeClaim.source.options.existing')]\"\n          :mode=\"mode\"\n        />\n      </div>\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-if=\"isCreatePV\"\n          v-model=\"spec.storageClassName\"\n          data-testid=\"storage-class-name\"\n          :mode=\"mode\"\n          :required=\"true\"\n          :label=\"t('persistentVolumeClaim.storageClass')\"\n          :options=\"storageClassNames\"\n        />\n        <LabeledSelect\n          v-else\n          :value=\"spec.volumeName\"\n          :get-option-label=\"volumeName\"\n          :required=\"true\"\n          :mode=\"mode\"\n          :label=\"t('persistentVolumeClaim.volumes')\"\n          :options=\"availablePVs\"\n          @input=\"updatePV\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <div class=\"access-modes\">\n          <t\n            class=\"text-label\"\n            k=\"persistentVolumeClaim.accessModes\"\n          />\n          <span class=\"text-error\">*</span>\n        </div>\n        <div class=\"access-modes\">\n          <Checkbox\n            :mode=\"mode\"\n            :value=\"value.spec.accessModes.includes('ReadWriteOnce')\"\n            :label=\"t('persistentVolumeClaim.accessModesOptions.singleNodeRW')\"\n            @input=\"e=>updateMode('ReadWriteOnce', e)\"\n          />\n          <Checkbox\n            :mode=\"mode\"\n            :value=\"value.spec.accessModes.includes('ReadOnlyMany')\"\n            :label=\"t('persistentVolumeClaim.accessModesOptions.manyNodeR')\"\n            @input=\"e=>updateMode('ReadOnlyMany', e)\"\n          />\n          <Checkbox\n            :mode=\"mode\"\n            :value=\"value.spec.accessModes.includes('ReadWriteMany')\"\n            :label=\"t('persistentVolumeClaim.accessModesOptions.manyNodeRW')\"\n            @input=\"e=>updateMode('ReadWriteMany', e)\"\n          />\n        </div>\n      </div>\n      <div\n        v-if=\"isCreatePV\"\n        class=\"col span-6\"\n      >\n        <UnitInput\n          v-model=\"spec.resources.requests.storage\"\n          :mode=\"mode\"\n          :label=\"t('persistentVolumeClaim.capacity')\"\n          :increment=\"1024\"\n          :input-exponent=\"3\"\n          :required=\"true\"\n          :output-modifier=\"true\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang='scss'>\n.access-modes {\n  display: flex;\n  flex-direction: row;\n}\n</style>\n"],"mappings":"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"}]}