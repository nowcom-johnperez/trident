{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--17-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js??ref--17-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue?vue&type=script&lang=ts","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/ts-loader/index.js","mtime":1716430466133},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Vue","_VIEW","_CREATE","LabeledSelect","Checkbox","LabeledInput","PSADefaultLevel","PSADefaultVersion","PSADimensions","PSALevels","PSAModes","pickBy","toDictionary","getPsaControl","active","level","version","getExemptionControl","value","extend","components","props","labels","type","Object","default","_default","labelsAlwaysActive","Boolean","mode","String","required","exemptions","labelsPrefix","componentTestid","data","_this","psaControls","psaExemptionsControls","options","map","label","t","concat","watch","computed","isView","hasExemptions","keys","length","created","_objectSpread","getPsaControls","getPsaExemptions","updateLabels","updateExemptions","methods","_this2","nonPSALabels","_","key","includes","reduce","acc","_defineProperty","$emit","_this3","dimension","split","trim","_this4","replace","_this5","values","join","isPsaControlDisabled"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/components/PodSecurityAdmission.vue?vue&type=script&lang=ts"],"sourcesContent":["\nimport Vue from 'vue';\nimport { _VIEW, _CREATE } from '@shell/config/query-params';\nimport LabeledSelect from '@shell/components/form/LabeledSelect.vue';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport LabeledInput from '@components/Form/LabeledInput/LabeledInput.vue';\nimport { PSADimension, PSAMode } from '@shell/types/pod-security-admission';\nimport {\n  PSADefaultLevel,\n  PSADefaultVersion, PSADimensions, PSALevels, PSAModes\n} from '@shell/config/pod-security-admission';\nimport { pickBy, toDictionary } from '@shell/utils/object';\n\ninterface PSAControl { active: boolean, level: string, version: string }\nconst getPsaControl = (): PSAControl => ({\n  active:  false,\n  level:   PSADefaultLevel,\n  version: ''\n});\n\n// Type and function for exemptions form builder\ninterface PSAExemptionControl { active: boolean, value: string }\nconst getExemptionControl = (): PSAExemptionControl => ({\n  active: false,\n  value:  ''\n});\n\nexport default Vue.extend({\n  components: {\n    Checkbox, LabeledSelect, LabeledInput\n  },\n  props: {\n    /**\n     * List of labels used for the resource\n     * Note: PSA labels are always paired\n     */\n    labels: {\n      type:    Object as () => Record<string, string>,\n      default: () => ({})\n    },\n\n    labelsAlwaysActive: {\n      type:    Boolean,\n      default: false\n    },\n\n    /**\n     * Map editing capabilities to the component\n     */\n    mode: {\n      type:     String,\n      required: true\n    },\n\n    /**\n     * List of exemptions used for the resource\n     */\n    exemptions: {\n      type:    Object as () => Record<PSADimension, string[]>,\n      default: () => ({} as Record<PSADimension, string[]>)\n    },\n\n    /**\n     * Prefix used for setting labels\n     */\n    labelsPrefix: {\n      type:    String,\n      default: ''\n    },\n\n    /**\n     * Inherited global identifier prefix for tests\n     * Define a term based on the parent component to avoid conflicts on multiple components\n     */\n    componentTestid: {\n      type:    String,\n      default: 'pod-security-admission'\n    }\n  },\n\n  data() {\n    return {\n      // Generate PSA form controls\n      psaControls:           toDictionary(PSAModes, getPsaControl) as Record<PSAMode, PSAControl>,\n      psaExemptionsControls: toDictionary(PSADimensions, getExemptionControl) as Record<PSADimension, PSAExemptionControl>,\n      options:               PSALevels.map((level) => ({\n        value: level,\n        label: this.t(`podSecurityAdmission.labels.${ level }`)\n      })),\n    };\n  },\n\n  watch: {},\n\n  computed: {\n    isView(): boolean {\n      return this.mode === _VIEW;\n    },\n\n    /**\n     * Enable exemption form if any\n     */\n    hasExemptions(): boolean {\n      return Object.keys(this.exemptions).length > 0;\n    },\n  },\n\n  created() {\n    // Assign values to the form, overriding existing values\n    this.psaControls = {\n      ...this.psaControls,\n      ...this.getPsaControls()\n    };\n\n    this.psaExemptionsControls = this.getPsaExemptions();\n\n    // Emit initial value on creation if labels always active, as default predefined values are required\n    if (this.mode === _CREATE && this.labelsAlwaysActive) {\n      this.updateLabels();\n      this.updateExemptions();\n    }\n  },\n\n  methods: {\n    /**\n     * Filter out existing PSA labels and emit existing labels with new PSA ones\n     */\n    updateLabels(): void {\n      const nonPSALabels = pickBy(this.labels, (_, key) => !key.includes(this.labelsPrefix));\n      const labels = PSAModes.reduce((acc, mode) => {\n        return this.psaControls[mode].active || this.labelsAlwaysActive ? {\n          ...acc,\n          // Set default level if none\n          [`${ this.labelsPrefix }${ mode }`]:         this.psaControls[mode].level || PSADefaultLevel,\n          // Set default version if none\n          [`${ this.labelsPrefix }${ mode }-version`]: this.psaControls[mode].version || PSADefaultVersion\n        } : acc;\n      }, nonPSALabels);\n\n      this.$emit('updateLabels', labels);\n    },\n\n    /**\n     * Emit active exemptions in required format\n     */\n    updateExemptions(): void {\n      const exemptions = PSADimensions.reduce((acc, dimension) => {\n        const value = this.psaExemptionsControls[dimension].value.split(',').map((value) => value.trim());\n        const active = this.psaExemptionsControls[dimension].active;\n\n        return {\n          ...acc,\n          [dimension]: active && value ? value : []\n        };\n      }, {});\n\n      this.$emit('updateExemptions', exemptions);\n    },\n\n    /**\n     * Generate form controls based on PSA labels in the provided dictionary\n     */\n    getPsaControls(): Record<PSAMode, PSAControl> {\n      return PSAModes.reduce((acc, mode) => {\n        const level = this.labels[`${ this.labelsPrefix }${ mode }`];\n        // Retrieve version, hiding the value 'latest' from the user\n        const version = (this.labels[`${ this.labelsPrefix }${ mode }-version`] || '').replace(PSADefaultVersion, '');\n\n        return level ? {\n          ...acc,\n          [mode]: {\n            active: true,\n            level,\n            version\n          }\n        } : acc;\n      }, {} as Record<PSAMode, PSAControl>);\n    },\n\n    /**\n     * Generate form exemptions based on PSA exemptions provided dictionary\n     */\n    getPsaExemptions(): Record<PSADimension, PSAExemptionControl> {\n      return PSADimensions.reduce((acc, dimension) => {\n        const values = (this.exemptions[dimension] || []).map((value) => value.trim()).join(',');\n\n        return {\n          ...acc,\n          [dimension]: {\n            active: !!values.length,\n            value:  values\n          }\n        };\n      }, {}) as Record<PSADimension, PSAExemptionControl>;\n    },\n\n    /**\n     * Add checks on input for PSA controls to be active or not, allowing white cases\n     */\n    isPsaControlDisabled(active: boolean): boolean {\n      return !this.labelsAlwaysActive && (!active || this.isView);\n    }\n  }\n});\n"],"mappings":"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"}]}