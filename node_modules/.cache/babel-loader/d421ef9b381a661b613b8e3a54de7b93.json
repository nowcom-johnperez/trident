{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/Basics.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/Basics.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["difference","mapGetters","CreateEditView","FormValidation","set","get","Banner","Checkbox","LabeledSelect","YamlEditor","LEGACY","semver","HARVESTER","components","mixins","props","mode","type","String","required","value","Object","provider","psps","default","credential","userChartValues","cisOverride","Boolean","cisPsaChangeBanner","allPsps","Array","allPsas","addonVersions","needsPsp","selectedVersion","versionOptions","isHarvesterDriver","isHarvesterIncompatible","showDeprecatedPatchVersions","clusterIsAlreadyCreated","isElementalCluster","hasPsaTemplates","isK3s","haveArgInfo","showCni","showCloudProvider","unsupportedCloudProvider","cloudProviderOptions","computed","_objectSpread","features","hasPsps","_this$psps","count","serverConfig","spec","rkeConfig","machineGlobalConfig","agentConfig","needsPSA","_this$value","release","kubernetesVersion","version","match","isRequiredVersion","length","profileOptions","_this$agentArgs","out","agentArgs","profile","options","map","x","label","unshift","$store","getters","hasCisOverride","_this$serverConfig","_this$agentConfig","showCisProfile","isCisSupported","pspOptions","_iterator","_createForOfIteratorHelper","_step","s","n","done","pspt","push","nameDisplay","id","err","e","f","cur","defaultPodSecurityPolicyTemplateName","find","concat","isPsaDisabled","_this$agentConfig2","_this$serverConfig2","cisValue","defaultPsaOptionLabel","optionCase","psaOptions","_iterator2","_step2","psa","defaultPodSecurityAdmissionConfigurationTemplateName","cisProfile","option","includes","disableOptions","_this","serverArgs","disable","replace","_this$selectedVersion","_this$selectedVersion2","chartVersions","_this$selectedVersion3","charts","_this$serverArgs","_this$agentArgs2","enabledSystemServices","neu","$emit","showCloudConfigYaml","name","showVsphereNote","showk8s21LegacyWarning","isLegacyEnabled","coerce","satisfies","ciliumIpv6","_this$userChartValues","cni","chartVersionKey","cilium","ipv6","enabled","val","canNotEditCloudProvider","canNotEdit","methods","addonVersion","av"],"sources":["node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/Basics.vue"],"sourcesContent":["<script>\nimport difference from 'lodash/difference';\nimport { mapGetters } from 'vuex';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport FormValidation from '@shell/mixins/form-validation';\n\nimport { set, get } from '@shell/utils/object';\nimport { Banner } from '@components/Banner';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport YamlEditor from '@shell/components/YamlEditor';\nimport { LEGACY } from '@shell/store/features';\nimport semver from 'semver';\n\nconst HARVESTER = 'harvester';\n\nexport default {\n  components: {\n    Banner,\n    Checkbox,\n    LabeledSelect,\n    YamlEditor,\n  },\n\n  mixins: [CreateEditView, FormValidation],\n\n  props: {\n    mode: {\n      type:     String,\n      required: true,\n    },\n\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    provider: {\n      type:     String,\n      required: true,\n    },\n\n    psps: {\n      type:     Object,\n      default:  null,\n      required: false\n    },\n\n    credential: {\n      type:     Object,\n      default:  null,\n      required: false\n    },\n\n    userChartValues: {\n      type:     Object,\n      required: true\n    },\n    cisOverride: {\n      type:     Boolean,\n      required: true\n    },\n\n    cisPsaChangeBanner: {\n      type:     Boolean,\n      required: true\n    },\n    allPsps: {\n      type:     Array,\n      required: false,\n      default:  null\n    },\n    allPsas: {\n      type:     Array,\n      required: true\n    },\n\n    addonVersions: {\n      type:     Array,\n      required: false,\n      default:  null\n    },\n    needsPsp: {\n      type:     Boolean,\n      required: true\n    },\n    selectedVersion: {\n      type:     Object,\n      required: true\n    },\n    versionOptions: {\n      type:     Array,\n      required: true\n    },\n    isHarvesterDriver: {\n      type:     Boolean,\n      required: true\n    },\n    isHarvesterIncompatible: {\n      type:     Boolean,\n      required: true\n    },\n    showDeprecatedPatchVersions: {\n      type:     Boolean,\n      required: true\n    },\n    clusterIsAlreadyCreated: {\n      type:     Boolean,\n      required: true\n    },\n    isElementalCluster: {\n      type:     Boolean,\n      required: true\n    },\n    hasPsaTemplates: {\n      type:     Boolean,\n      required: true\n    },\n    isK3s: {\n      type:     Boolean,\n      required: true\n    },\n    haveArgInfo: {\n      type:     Boolean,\n      required: true\n    },\n    showCni: {\n      type:     Boolean,\n      required: true\n    },\n    showCloudProvider: {\n      type:     Boolean,\n      required: true\n    },\n    unsupportedCloudProvider: {\n      type:     Boolean,\n      required: true\n    },\n    cloudProviderOptions: {\n      type:     Array,\n      required: true\n    },\n  },\n\n  computed: {\n    ...mapGetters({ features: 'features/get' }),\n\n    /**\n     * Check presence of PSPs as template or CLI creation\n     */\n\n    hasPsps() {\n      return !!this.psps?.count;\n    },\n\n    serverConfig() {\n      return this.value.spec.rkeConfig.machineGlobalConfig;\n    },\n\n    agentConfig() {\n      return this.value.agentConfig;\n    },\n\n    /**\n     * Define introduction of PSA and return need of PSA templates based on min k8s version\n     */\n    needsPSA() {\n      const release = this.value?.spec?.kubernetesVersion || '';\n      const version = release.match(/\\d+/g);\n      const isRequiredVersion = version?.length ? +version[0] > 1 || +version[1] >= 23 : false;\n\n      return isRequiredVersion;\n    },\n\n    profileOptions() {\n      const out = (this.agentArgs?.profile?.options || []).map((x) => {\n        return { label: x, value: x };\n      });\n\n      out.unshift({\n        label: this.$store.getters['i18n/t']('cluster.rke2.cisProfile.option'),\n        value: ''\n      });\n\n      return out;\n    },\n\n    /**\n     * Allow to display override if PSA is needed and profile is set\n     */\n    hasCisOverride() {\n      return (this.serverConfig?.profile || this.agentConfig?.profile) && this.needsPSA &&\n        // Also check other cases on when to display the override\n        this.hasPsaTemplates && this.showCisProfile && this.isCisSupported;\n    },\n\n    pspOptions() {\n      if ( this.isK3s ) {\n        return null;\n      }\n      const out = [{\n        label: this.$store.getters['i18n/t']('cluster.rke2.defaultPodSecurityPolicyTemplateName.option'),\n        value: ''\n      }];\n\n      if ( this.allPsps ) {\n        for ( const pspt of this.allPsps ) {\n          out.push({\n            label: pspt.nameDisplay,\n            value: pspt.id,\n          });\n        }\n      }\n      const cur = this.value.spec.defaultPodSecurityPolicyTemplateName;\n\n      if ( cur && !out.find((x) => x.value === cur) ) {\n        out.unshift({ label: `${ cur } (Current)`, value: cur });\n      }\n\n      return out;\n    },\n\n    /**\n     * Disable PSA if CIS hardening is enabled, except override\n     */\n    isPsaDisabled() {\n      const cisValue = this.agentConfig?.profile || this.serverConfig?.profile;\n\n      return !(!cisValue || this.cisOverride) && this.hasPsaTemplates && this.isCisSupported;\n    },\n\n    /**\n     * Get the default label for the PSA template option\n     */\n    defaultPsaOptionLabel() {\n      const optionCase = !this.needsPsp && !this.isK3s ? 'default' : 'none';\n\n      return this.$store.getters['i18n/t'](`cluster.rke2.defaultPodSecurityAdmissionConfigurationTemplateName.option.${ optionCase }`);\n    },\n\n    /**\n     * Convert PSA templates into options, sorting and flagging if any selected\n     */\n    psaOptions() {\n      if ( !this.needsPSA ) {\n        return [];\n      }\n      const out = [{\n        label: this.defaultPsaOptionLabel,\n        value: ''\n      }];\n\n      if ( this.allPsas ) {\n        for ( const psa of this.allPsas ) {\n          out.push({\n            label: psa.nameDisplay,\n            value: psa.id,\n          });\n        }\n      }\n      const cur = this.value.spec.defaultPodSecurityAdmissionConfigurationTemplateName;\n\n      if ( cur && !out.find((x) => x.value === cur) ) {\n        out.unshift({ label: `${ cur } (Current)`, value: cur });\n      }\n\n      return out;\n    },\n\n    /**\n     * Check if current CIS profile is required and listed in the options\n     */\n    isCisSupported() {\n      const cisProfile = this.serverConfig.profile || this.agentConfig.profile;\n\n      return !cisProfile || this.profileOptions.map((option) => option.value).includes(cisProfile);\n    },\n\n    disableOptions() {\n      return (this.serverArgs.disable.options || []).map((value) => {\n        return {\n          label: this.$store.getters['i18n/withFallback'](`cluster.${ this.isK3s ? 'k3s' : 'rke2' }.systemService.\"${ value }\"`, null, value.replace(/^(rke2|rancher)-/, '')),\n          value,\n        };\n      });\n    },\n\n    serverArgs() {\n      return this.selectedVersion?.serverArgs || {};\n    },\n\n    agentArgs() {\n      return this.selectedVersion?.agentArgs || {};\n    },\n\n    /**\n     * The addons (kube charts) applicable for the selected kube version\n     *\n     * { [chartName:string]: { repo: string, version: string } }\n     */\n    chartVersions() {\n      return this.selectedVersion?.charts || {};\n    },\n\n    showCisProfile() {\n      return (this.provider === 'custom' || this.isElementalCluster) && ( this.serverArgs?.profile || this.agentArgs?.profile );\n    },\n\n    enabledSystemServices: {\n      get() {\n        const out = difference(this.serverArgs.disable.options, this.serverConfig.disable || []);\n\n        return out;\n      },\n\n      set(neu) {\n        const out = difference(this.serverArgs.disable.options, neu);\n\n        this.$emit('enabled-system-services-changed', out);\n      },\n    },\n\n    showCloudConfigYaml() {\n      if ( !this.agentArgs['cloud-provider-name'] ) {\n        return false;\n      }\n\n      const name = this.agentConfig['cloud-provider-name'];\n\n      if ( !name ) {\n        return false;\n      }\n\n      switch ( name ) {\n      case 'none': return false;\n      case 'aws': return false;\n      case 'rancher-vsphere': return false;\n      case HARVESTER: return false;\n      default: return true;\n      }\n    },\n\n    showVsphereNote() {\n      if ( !this.agentArgs['cloud-provider-name'] ) {\n        return false;\n      }\n\n      const name = this.agentConfig['cloud-provider-name'];\n\n      return name === 'rancher-vsphere';\n    },\n\n    showk8s21LegacyWarning() {\n      const isLegacyEnabled = this.features(LEGACY);\n\n      if (!isLegacyEnabled) {\n        return false;\n      }\n      const selectedVersion = semver.coerce(this.value.spec.kubernetesVersion);\n\n      return semver.satisfies(selectedVersion, '>=1.21.0');\n    },\n\n    ciliumIpv6: {\n      get() {\n        // eslint-disable-next-line no-unused-vars\n        const cni = this.serverConfig.cni; // force this property to recalculate if cni was changed away from cilium and chartValues['rke-cilium'] deleted\n\n        return this.userChartValues[this.chartVersionKey('rke2-cilium')]?.cilium?.ipv6?.enabled || false;\n      },\n      set(val) {\n        this.$emit('cilium-ipv6-changed', val);\n      }\n    },\n\n    canNotEditCloudProvider() {\n      const canNotEdit = this.clusterIsAlreadyCreated && !this.unsupportedCloudProvider;\n\n      return canNotEdit;\n    }\n  },\n\n  methods: {\n    set,\n\n    chartVersionKey(name) {\n      const addonVersion = this.addonVersions.find((av) => av.name === name);\n\n      return addonVersion ? `${ name }-${ addonVersion.version }` : name;\n    },\n    get,\n  },\n};\n</script>\n\n<template>\n  <div>\n    <Banner\n      v-if=\"!haveArgInfo\"\n      color=\"warning\"\n      :label=\"t('cluster.banner.haveArgInfo')\"\n    />\n    <Banner\n      v-if=\"showk8s21LegacyWarning\"\n      color=\"warning\"\n      :label=\"t('cluster.legacyWarning')\"\n    />\n    <Banner\n      v-if=\"isHarvesterDriver && isHarvesterIncompatible && showCloudProvider\"\n      color=\"warning\"\n    >\n      <span\n        v-clean-html=\"t('cluster.harvester.warning.cloudProvider.incompatible', null, true)\"\n      />\n    </Banner>\n    <div class=\"row mb-10\">\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"value.spec.kubernetesVersion\"\n          :mode=\"mode\"\n          :options=\"versionOptions\"\n          label-key=\"cluster.kubernetesVersion.label\"\n          @input=\"$emit('kubernetes-changed', $event)\"\n        />\n        <Checkbox\n          :value=\"showDeprecatedPatchVersions\"\n          :label=\"t('cluster.kubernetesVersion.deprecatedPatches')\"\n          :tooltip=\"t('cluster.kubernetesVersion.deprecatedPatchWarning')\"\n          class=\"patch-version\"\n          @input=\"$emit('show-deprecated-patch-versions-changed', $event)\"\n        />\n      </div>\n      <div\n        v-if=\"showCloudProvider\"\n        class=\"col span-6\"\n      >\n        <LabeledSelect\n          v-model=\"agentConfig['cloud-provider-name']\"\n          :mode=\"mode\"\n          :disabled=\"canNotEditCloudProvider\"\n          :options=\"cloudProviderOptions\"\n          :label=\"t('cluster.rke2.cloudProvider.label')\"\n        />\n      </div>\n    </div>\n    <div\n      v-if=\"showCni\"\n      :style=\"{'align-items':'center'}\"\n      class=\"row\"\n    >\n      <div class=\"col span-6\">\n        <LabeledSelect\n          v-model=\"serverConfig.cni\"\n          :mode=\"mode\"\n          :disabled=\"clusterIsAlreadyCreated\"\n          :options=\"serverArgs.cni.options\"\n          :label=\"t('cluster.rke2.cni.label')\"\n        />\n      </div>\n      <div\n        v-if=\"serverConfig.cni === 'cilium' || serverConfig.cni === 'multus,cilium'\"\n        class=\"col\"\n      >\n        <Checkbox\n          v-model=\"ciliumIpv6\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.address.ipv6.enable')\"\n        />\n      </div>\n    </div>\n    <template v-if=\"showVsphereNote\">\n      <Banner\n        color=\"warning\"\n        label-key=\"cluster.cloudProvider.rancher-vsphere.note\"\n      />\n    </template>\n    <template v-else-if=\"showCloudConfigYaml\">\n      <div class=\"spacer\" />\n\n      <div class=\"col span-12\">\n        <Banner\n          v-if=\"unsupportedCloudProvider\"\n          class=\"error mt-5\"\n        >\n          {{ t('cluster.rke2.cloudProvider.unsupported') }}\n        </Banner>\n        <h3>\n          {{ t('cluster.rke2.cloudProvider.header') }}\n        </h3>\n        <YamlEditor\n          ref=\"yaml\"\n          v-model=\"agentConfig['cloud-provider-config']\"\n          :editor-mode=\"mode === 'view' ? 'VIEW_CODE' : 'EDIT_CODE'\"\n          initial-yaml-values=\"# Cloud Provider Config\"\n          class=\"yaml-editor\"\n        />\n      </div>\n    </template>\n\n    <div class=\"spacer\" />\n\n    <h3>\n      {{ t('cluster.rke2.security.header') }}\n    </h3>\n    <Banner\n      v-if=\"isEdit && !needsPsp && hasPsps\"\n      color=\"warning\"\n      :label=\"t('cluster.banner.invalidPsps')\"\n    />\n    <Banner\n      v-else-if=\"isCreate && !needsPsp\"\n      color=\"info\"\n      :label=\"t('cluster.banner.removedPsp')\"\n    />\n    <Banner\n      v-else-if=\"isCreate && hasPsps\"\n      color=\"info\"\n      :label=\"t('cluster.banner.deprecatedPsp')\"\n    />\n\n    <Banner\n      v-if=\"showCisProfile && !isCisSupported && isEdit\"\n      color=\"info\"\n    >\n      <p v-clean-html=\"t('cluster.rke2.banner.cisUnsupported', {cisProfile: serverConfig.profile || agentConfig.profile}, true)\" />\n    </Banner>\n\n    <div class=\"row mb-10\">\n      <div\n        v-if=\"pspOptions && needsPsp\"\n        class=\"col span-6\"\n      >\n        <!-- PSP template selector -->\n        <LabeledSelect\n          v-model=\"value.spec.defaultPodSecurityPolicyTemplateName\"\n          data-testid=\"rke2-custom-edit-psp\"\n          :mode=\"mode\"\n          :options=\"pspOptions\"\n          :label=\"t('cluster.rke2.defaultPodSecurityPolicyTemplateName.label')\"\n          @input=\"$emit('psp-changed', $event)\"\n        />\n      </div>\n\n      <div\n        v-if=\"showCisProfile\"\n        class=\"col span-6\"\n      >\n        <LabeledSelect\n          v-if=\"serverArgs && serverArgs.profile\"\n          v-model=\"serverConfig.profile\"\n          :mode=\"mode\"\n          :options=\"profileOptions\"\n          :label=\"t('cluster.rke2.cis.sever')\"\n          @input=\"$emit('cis-changed')\"\n        />\n        <LabeledSelect\n          v-else-if=\"agentArgs && agentArgs.profile\"\n          v-model=\"agentConfig.profile\"\n          data-testid=\"rke2-custom-edit-cis-agent\"\n          :mode=\"mode\"\n          :options=\"profileOptions\"\n          :label=\"t('cluster.rke2.cis.agent')\"\n          @input=\"$emit('cis-changed')\"\n        />\n      </div>\n    </div>\n\n    <template v-if=\"hasCisOverride\">\n      <Checkbox\n        v-model=\"cisOverride\"\n        :mode=\"mode\"\n        :label=\"t('cluster.rke2.cis.override')\"\n        @input=\"$emit('psa-default-changed')\"\n      />\n\n      <Banner\n        v-if=\"cisOverride\"\n        color=\"warning\"\n        :label=\"t('cluster.rke2.banner.cisOverride')\"\n      />\n      <Banner\n        v-if=\"cisPsaChangeBanner && !cisOverride\"\n        color=\"info\"\n        :label=\"t('cluster.rke2.banner.psaChange')\"\n      />\n    </template>\n\n    <div\n      v-if=\"needsPSA\"\n      class=\"row mb-10 mt-10\"\n    >\n      <div class=\"col span-6\">\n        <!-- PSA template selector -->\n        <LabeledSelect\n          v-model=\"value.spec.defaultPodSecurityAdmissionConfigurationTemplateName\"\n          :mode=\"mode\"\n          data-testid=\"rke2-custom-edit-psa\"\n          :options=\"psaOptions\"\n          :disabled=\"isPsaDisabled\"\n          :label=\"t('cluster.rke2.defaultPodSecurityAdmissionConfigurationTemplateName.label')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col span-12 mt-20\">\n        <Checkbox\n          v-if=\"serverArgs['secrets-encryption']\"\n          v-model=\"serverConfig['secrets-encryption']\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.secretEncryption.label')\"\n        />\n        <Checkbox\n          v-model=\"value.spec.enableNetworkPolicy\"\n          :mode=\"mode\"\n          :label=\"t('cluster.rke2.enableNetworkPolicy.label')\"\n        />\n      </div>\n    </div>\n\n    <div\n      v-if=\"serverConfig.cni === 'cilium' && value.spec.enableNetworkPolicy\"\n      class=\"row\"\n    >\n      <div class=\"col span-12\">\n        <Banner\n          color=\"info\"\n          :label=\"t('cluster.rke2.enableNetworkPolicy.warning')\"\n        />\n      </div>\n    </div>\n\n    <div class=\"spacer\" />\n\n    <div\n      v-if=\"serverArgs.disable\"\n      class=\"row\"\n    >\n      <div class=\"col span-12\">\n        <div>\n          <h3>\n            {{ t('cluster.rke2.systemService.header') }}\n          </h3>\n        </div>\n        <Checkbox\n          v-for=\"opt in disableOptions\"\n          :key=\"opt.value\"\n          v-model=\"enabledSystemServices\"\n          :mode=\"mode\"\n          :label=\"opt.label\"\n          :value-when-true=\"opt.value\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scoped>\n  .patch-version {\n    margin-top: 5px;\n  }\n</style>\n"],"mappings":"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"}]}