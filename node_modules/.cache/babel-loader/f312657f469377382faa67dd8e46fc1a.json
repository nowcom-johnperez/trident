{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.globalrole.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.globalrole.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["DESCRIPTION","SCHEMA","NORMAN","CATTLE_API_GROUP","SUBTYPE_MAPPING","CREATE_VERBS","uniq","get","SteveDescriptionModel","AS","MODE","_CLONE","_UNFLAG","BASE","USER","ADMIN","SPECIAL","GLOBAL","key","GlobalRole","_SteveDescriptionMode","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","path","validators","concat","type","nullable","out","_details","unshift","label","t","content","_this$metadata","id","displayName","metadata","name","$rootGetters","_this$metadata2","description","annotations","includes","newUserDefault","$getters","filter","r","_r$attributes","attributes","kind","allResources","group","globalResources","map","_r$attributes2","resource","sort","hash","_objectSpread","_detailLocation","listLocation","$dispatch","GLOBAL_ROLE","root","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","norman","wrap","_callee$","_context","prev","next","basicNorman","sent","rules","abrupt","stop","schema","resourceMethods","find","verb","has","value","goToClone","moreQuery","length","undefined","location","detailLocation","query","_defineProperty","currentRouter","push","_save","_callee2","_iterator","_step","rule","_callee2$","_context2","_createForOfIteratorHelper","s","n","done","nonResourceURLs","resources","apiGroups","err","e","f","save","_remove","_callee3","_callee3$","_context3","remove","default"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/models/management.cattle.io.globalrole.js"],"sourcesContent":["import { DESCRIPTION } from '@shell/config/labels-annotations';\nimport { SCHEMA, NORMAN } from '@shell/config/types';\nimport { CATTLE_API_GROUP, SUBTYPE_MAPPING, CREATE_VERBS } from '@shell/models/management.cattle.io.roletemplate';\nimport { uniq } from '@shell/utils/array';\nimport { get } from '@shell/utils/object';\nimport SteveDescriptionModel from '@shell/plugins/steve/steve-description-class';\nimport { AS, MODE, _CLONE, _UNFLAG } from '@shell/config/query-params';\n\nconst BASE = 'user-base';\nconst USER = 'user';\nconst ADMIN = 'admin';\nconst SPECIAL = [BASE, ADMIN, USER];\n\nconst GLOBAL = SUBTYPE_MAPPING.GLOBAL.key;\n\nexport default class GlobalRole extends SteveDescriptionModel {\n  get customValidationRules() {\n    return [\n      {\n        path:       'rules',\n        validators: [`roleTemplateRules:${ this.type }`],\n        nullable:   false,\n        type:       'array',\n      },\n    ];\n  }\n\n  get details() {\n    const out = this._details;\n\n    out.unshift({\n      label:   this.t('resourceDetail.detailTop.name'),\n      content: get(this, 'name')\n    });\n\n    return out;\n  }\n\n  get nameDisplay() {\n    const path = `rbac.globalRoles.role.${ this.id }.label`;\n    const label = this.displayName || this.metadata?.name || this.id;\n\n    return this.$rootGetters['i18n/withFallback'](path, label);\n  }\n\n  get descriptionDisplay() {\n    return this.description ||\n    this.metadata?.annotations?.[DESCRIPTION] ||\n    this.$rootGetters['i18n/withFallback'](`rbac.globalRoles.role.${ this.id }.description`, this.t(`rbac.globalRoles.unknownRole.description`));\n  }\n\n  get isSpecial() {\n    return SPECIAL.includes(this.id);\n  }\n\n  get subtype() {\n    return GLOBAL;\n  }\n\n  get default() {\n    return !!this.newUserDefault;\n  }\n\n  get allResources() {\n    return this.$getters['all'](SCHEMA).filter((r) => r.attributes?.kind);\n  }\n\n  get globalResources() {\n    return this.allResources.filter((r) => r.attributes.group.includes(CATTLE_API_GROUP));\n  }\n\n  get resources() {\n    return uniq(this.globalResources.map((r) => r.attributes?.resource)).sort();\n  }\n\n  get listLocation() {\n    return {\n      name: `c-cluster-auth-roles`,\n      hash: `#${ GLOBAL }`\n    };\n  }\n\n  get detailLocation() {\n    return {\n      ...this._detailLocation,\n      name: `c-cluster-auth-roles-resource-id`,\n    };\n  }\n\n  get doneOverride() {\n    return this.listLocation;\n  }\n\n  get parentLocationOverride() {\n    return this.listLocation;\n  }\n\n  get basicNorman() {\n    if (this.id) {\n      return this.$dispatch(`rancher/find`, { id: this.id, type: NORMAN.GLOBAL_ROLE }, { root: true });\n    }\n\n    return this.$dispatch(`rancher/create`, { type: NORMAN.GLOBAL_ROLE, name: this.displayName }, { root: true });\n  }\n\n  /**\n   * Due to issues in the Steve API, we need to switch to Norman API for handle and save this model\n   */\n  get norman() {\n    return (async() => {\n      const norman = await this.basicNorman;\n\n      norman.rules = this.rules;\n      norman.newUserDefault = this.newUserDefault;\n      norman.id = this.id;\n      norman.name = this.displayName;\n      norman.description = this.description;\n\n      return norman;\n    })();\n  }\n\n  get canCreate() {\n    const schema = this.$getters['schemaFor'](this.type);\n\n    return schema?.resourceMethods.find((verb) => CREATE_VERBS.has(verb));\n  }\n\n  goToClone(moreQuery = {}) {\n    const location = this.detailLocation;\n\n    location.query = {\n      ...location.query,\n      [MODE]:      _CLONE,\n      [AS]:        _UNFLAG,\n      roleContext: GLOBAL,\n      ...moreQuery\n    };\n\n    this.currentRouter().push(location);\n  }\n\n  async save() {\n    const norman = await this.norman;\n\n    for (const rule of norman.rules) {\n      if (rule.nonResourceURLs && rule.nonResourceURLs.length) {\n        delete rule.resources;\n        delete rule.apiGroups;\n      } else {\n        delete rule.nonResourceURLs;\n      }\n    }\n\n    return norman.save();\n  }\n\n  async remove() {\n    const norman = await this.norman;\n\n    await norman.remove();\n  }\n}\n"],"mappings":"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"}]}