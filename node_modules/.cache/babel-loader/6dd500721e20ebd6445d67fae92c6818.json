{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/cluster.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/cluster.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zdGFydHMtd2l0aC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5qb2luLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgc2VtdmVyIGZyb20gJ3NlbXZlcic7CmltcG9ydCB7IENBUEkgfSBmcm9tICdAc2hlbGwvY29uZmlnL2xhYmVscy1hbm5vdGF0aW9ucyc7CmltcG9ydCB7IE1BTkFHRU1FTlQsIFZJUlRVQUxfSEFSVkVTVEVSX1BST1ZJREVSIH0gZnJvbSAnQHNoZWxsL2NvbmZpZy90eXBlcyc7CmltcG9ydCB7IFNFVFRJTkcgfSBmcm9tICdAc2hlbGwvY29uZmlnL3NldHRpbmdzJzsKCi8vIEZpbHRlciBvdXQgYW55IGNsdXN0ZXJzIHRoYXQgYXJlIG5vdCBLdWJlcm5ldGVzIENsdXN0ZXJzCmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJPbmx5S3ViZXJuZXRlc0NsdXN0ZXJzKG1nbXRDbHVzdGVycywgc3RvcmUpIHsKICB2YXIgb3BlbkhhcnZlc3RlckNvbnRhaW5lcldvcmtsb2FkID0gc3RvcmUuZ2V0dGVyc1snZmVhdHVyZXMvZ2V0J10oJ2hhcnZlc3Rlci1iYXJlbWV0YWwtY29udGFpbmVyLXdvcmtsb2FkJyk7CiAgcmV0dXJuIG1nbXRDbHVzdGVycy5maWx0ZXIoZnVuY3Rpb24gKGMpIHsKICAgIHJldHVybiBvcGVuSGFydmVzdGVyQ29udGFpbmVyV29ya2xvYWQgPyB0cnVlIDogIWlzSGFydmVzdGVyQ2x1c3RlcihjKTsKICB9KTsKfQpleHBvcnQgZnVuY3Rpb24gaXNIYXJ2ZXN0ZXJDbHVzdGVyKG1nbXRDbHVzdGVyKSB7CiAgdmFyIF9tZ210Q2x1c3RlciRtZXRhZGF0YSwgX21nbXRDbHVzdGVyJHN0YXR1czsKICAvLyBVc2UgdGhlIHByb3ZpZGVyIGlmIGl0IGlzIHNldCBvdGhlcndpc2UgdXNlIHRoZSBsYWJlbAogIHZhciBwcm92aWRlciA9IChtZ210Q2x1c3RlciA9PT0gbnVsbCB8fCBtZ210Q2x1c3RlciA9PT0gdm9pZCAwIHx8IChfbWdtdENsdXN0ZXIkbWV0YWRhdGEgPSBtZ210Q2x1c3Rlci5tZXRhZGF0YSkgPT09IG51bGwgfHwgX21nbXRDbHVzdGVyJG1ldGFkYXRhID09PSB2b2lkIDAgfHwgKF9tZ210Q2x1c3RlciRtZXRhZGF0YSA9IF9tZ210Q2x1c3RlciRtZXRhZGF0YS5sYWJlbHMpID09PSBudWxsIHx8IF9tZ210Q2x1c3RlciRtZXRhZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX21nbXRDbHVzdGVyJG1ldGFkYXRhW0NBUEkuUFJPVklERVJdKSB8fCAobWdtdENsdXN0ZXIgPT09IG51bGwgfHwgbWdtdENsdXN0ZXIgPT09IHZvaWQgMCB8fCAoX21nbXRDbHVzdGVyJHN0YXR1cyA9IG1nbXRDbHVzdGVyLnN0YXR1cykgPT09IG51bGwgfHwgX21nbXRDbHVzdGVyJHN0YXR1cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX21nbXRDbHVzdGVyJHN0YXR1cy5wcm92aWRlcik7CiAgcmV0dXJuIHByb3ZpZGVyID09PSBWSVJUVUFMX0hBUlZFU1RFUl9QUk9WSURFUjsKfQpleHBvcnQgZnVuY3Rpb24gaXNIYXJ2ZXN0ZXJTYXRpc2ZpZXNWZXJzaW9uKCkgewogIHZhciB2ZXJzaW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnJzsKICBpZiAodmVyc2lvbi5zdGFydHNXaXRoKCd2MS4yMS40K3JrZTJyJykpIHsKICAgIHZhciBya2VWZXJzaW9uID0gdmVyc2lvbi5yZXBsYWNlKC8uK3JrZTJyL2ksICcnKTsKICAgIHJldHVybiBOdW1iZXIocmtlVmVyc2lvbikgPj0gNDsKICB9IGVsc2UgewogICAgcmV0dXJuIHNlbXZlci5zYXRpc2ZpZXMoc2VtdmVyLmNvZXJjZSh2ZXJzaW9uKSwgJz49djEuMjEuNCtya2UycjQnKTsKICB9Cn0KZXhwb3J0IGZ1bmN0aW9uIGZpbHRlckhpZGRlbkxvY2FsQ2x1c3RlcihtZ210Q2x1c3RlcnMsIHN0b3JlKSB7CiAgdmFyIGhpZGVMb2NhbFNldHRpbmcgPSBzdG9yZS5nZXR0ZXJzWydtYW5hZ2VtZW50L2J5SWQnXShNQU5BR0VNRU5ULlNFVFRJTkcsIFNFVFRJTkcuSElERV9MT0NBTF9DTFVTVEVSKSB8fCB7fTsKICB2YXIgdmFsdWUgPSBoaWRlTG9jYWxTZXR0aW5nLnZhbHVlIHx8IGhpZGVMb2NhbFNldHRpbmcuZGVmYXVsdCB8fCAnZmFsc2UnOwogIHZhciBoaWRlTG9jYWwgPSB2YWx1ZSA9PT0gJ3RydWUnOwogIGlmICghaGlkZUxvY2FsKSB7CiAgICByZXR1cm4gbWdtdENsdXN0ZXJzOwogIH0KICByZXR1cm4gbWdtdENsdXN0ZXJzLmZpbHRlcihmdW5jdGlvbiAoYykgewogICAgdmFyIHRhcmdldCA9IGMubWdtdCB8fCBjOwogICAgcmV0dXJuICF0YXJnZXQuaXNMb2NhbDsKICB9KTsKfQp2YXIgY2x1c3Rlck5hbWVTZWdtZW50cyA9IC8oW0EtWmEtel0rfFxkKykvZzsKCi8qKgogKiBTaG9ydGVucyBhbiBpbnB1dCBzdHJpbmcgYmFzZWQgb24gdGhlIG51bWJlciBvZiBzZWdtZW50cyBpdCBjb250YWlucy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0IC0gVGhlIGlucHV0IHN0cmluZyB0byBiZSBzaG9ydGVuZWQuCiAqIEByZXR1cm5zIHtzdHJpbmd9IC0gVGhlIHNob3J0ZW5lZCBzdHJpbmcuCiAqIEBleGFtcGxlIHNtYWxsSWRlbnRpZmllcignbG9jYWwnKSA9PiAnbGNsJwogKiBAZXhhbXBsZSBzbWFsbElkZW50aWZpZXIoJ3dvcmQtd2lkZS13ZWInKSA9PiAnd3d3JwogKi8KZXhwb3J0IGZ1bmN0aW9uIGFiYnJldmlhdGVDbHVzdGVyTmFtZShpbnB1dCkgewogIGlmICghaW5wdXQpIHsKICAgIHJldHVybiAnJzsKICB9CiAgaWYgKGlucHV0Lmxlbmd0aCA8PSAzKSB7CiAgICByZXR1cm4gaW5wdXQ7CiAgfQogIHZhciBzZWdtZW50cyA9IGlucHV0Lm1hdGNoKGNsdXN0ZXJOYW1lU2VnbWVudHMpOwogIGlmICghc2VnbWVudHMpIHJldHVybiAnJzsgLy8gSW4gY2FzZSBubyB2YWxpZCBzZWdtZW50cyBhcmUgZm91bmQKCiAgdmFyIHJlc3VsdCA9ICcnOwogIHN3aXRjaCAoc2VnbWVudHMubGVuZ3RoKSB7CiAgICBjYXNlIDE6CiAgICAgIHsKICAgICAgICB2YXIgd29yZCA9IHNlZ21lbnRzWzBdOwogICAgICAgIHJlc3VsdCA9ICIiLmNvbmNhdCh3b3JkWzBdKS5jb25jYXQod29yZFtNYXRoLmZsb29yKHdvcmQubGVuZ3RoIC8gMildKS5jb25jYXQod29yZFt3b3JkLmxlbmd0aCAtIDFdKTsKICAgICAgICBicmVhazsKICAgICAgfQogICAgY2FzZSAyOgogICAgICB7CiAgICAgICAgdmFyIHcxID0gIiIuY29uY2F0KHNlZ21lbnRzWzBdWzBdKTsKICAgICAgICB2YXIgdzIgPSAiIi5jb25jYXQoc2VnbWVudHNbMF0ubGVuZ3RoID49IDIgPyBzZWdtZW50c1swXVtzZWdtZW50c1swXS5sZW5ndGggLSAxXSA6IHNlZ21lbnRzWzFdWzBdKTsKICAgICAgICB2YXIgdzMgPSAiIi5jb25jYXQoc2VnbWVudHNbMV1bc2VnbWVudHNbMV0ubGVuZ3RoIC0gMV0pOwogICAgICAgIHJlc3VsdCA9IHcxICsgdzIgKyB3MzsKICAgICAgICBicmVhazsKICAgICAgfQogICAgZGVmYXVsdDoKICAgICAgcmVzdWx0ID0gc2VnbWVudHMuc2xpY2UoMCwgMykubWFwKGZ1bmN0aW9uIChzZWdtZW50KSB7CiAgICAgICAgcmV0dXJuIHNlZ21lbnRbMF07CiAgICAgIH0pLmpvaW4oJycpOwogIH0KICByZXR1cm4gcmVzdWx0Owp9"},{"version":3,"names":["semver","CAPI","MANAGEMENT","VIRTUAL_HARVESTER_PROVIDER","SETTING","filterOnlyKubernetesClusters","mgmtClusters","store","openHarvesterContainerWorkload","getters","filter","c","isHarvesterCluster","mgmtCluster","_mgmtCluster$metadata","_mgmtCluster$status","provider","metadata","labels","PROVIDER","status","isHarvesterSatisfiesVersion","version","arguments","length","undefined","startsWith","rkeVersion","replace","Number","satisfies","coerce","filterHiddenLocalCluster","hideLocalSetting","HIDE_LOCAL_CLUSTER","value","default","hideLocal","target","mgmt","isLocal","clusterNameSegments","abbreviateClusterName","input","segments","match","result","word","concat","Math","floor","w1","w2","w3","slice","map","segment","join"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/utils/cluster.js"],"sourcesContent":["import semver from 'semver';\nimport { CAPI } from '@shell/config/labels-annotations';\nimport { MANAGEMENT, VIRTUAL_HARVESTER_PROVIDER } from '@shell/config/types';\nimport { SETTING } from '@shell/config/settings';\n\n// Filter out any clusters that are not Kubernetes Clusters\nexport function filterOnlyKubernetesClusters(mgmtClusters, store) {\n  const openHarvesterContainerWorkload = store.getters['features/get']('harvester-baremetal-container-workload');\n\n  return mgmtClusters.filter((c) => {\n    return openHarvesterContainerWorkload ? true : !isHarvesterCluster(c);\n  });\n}\n\nexport function isHarvesterCluster(mgmtCluster) {\n  // Use the provider if it is set otherwise use the label\n  const provider = mgmtCluster?.metadata?.labels?.[CAPI.PROVIDER] || mgmtCluster?.status?.provider;\n\n  return provider === VIRTUAL_HARVESTER_PROVIDER;\n}\n\nexport function isHarvesterSatisfiesVersion(version = '') {\n  if (version.startsWith('v1.21.4+rke2r')) {\n    const rkeVersion = version.replace(/.+rke2r/i, '');\n\n    return Number(rkeVersion) >= 4;\n  } else {\n    return semver.satisfies(semver.coerce(version), '>=v1.21.4+rke2r4');\n  }\n}\n\nexport function filterHiddenLocalCluster(mgmtClusters, store) {\n  const hideLocalSetting = store.getters['management/byId'](MANAGEMENT.SETTING, SETTING.HIDE_LOCAL_CLUSTER) || {};\n  const value = hideLocalSetting.value || hideLocalSetting.default || 'false';\n  const hideLocal = value === 'true';\n\n  if (!hideLocal) {\n    return mgmtClusters;\n  }\n\n  return mgmtClusters.filter((c) => {\n    const target = c.mgmt || c;\n\n    return !target.isLocal;\n  });\n}\n\nconst clusterNameSegments = /([A-Za-z]+|\\d+)/g;\n\n/**\n * Shortens an input string based on the number of segments it contains.\n * @param {string} input - The input string to be shortened.\n * @returns {string} - The shortened string.\n * @example smallIdentifier('local') => 'lcl'\n * @example smallIdentifier('word-wide-web') => 'www'\n */\nexport function abbreviateClusterName(input) {\n  if (!input) {\n    return '';\n  }\n\n  if (input.length <= 3) {\n    return input;\n  }\n\n  const segments = input.match(clusterNameSegments);\n\n  if (!segments) return ''; // In case no valid segments are found\n\n  let result = '';\n\n  switch (segments.length) {\n  case 1: {\n    const word = segments[0];\n\n    result = `${ word[0] }${ word[Math.floor(word.length / 2)] }${ word[word.length - 1] }`;\n    break;\n  }\n  case 2: {\n    const w1 = `${ segments[0][0] }`;\n    const w2 = `${ segments[0].length >= 2 ? segments[0][segments[0].length - 1] : segments[1][0] }`;\n    const w3 = `${ segments[1][segments[1].length - 1] }`;\n\n    result = w1 + w2 + w3;\n    break;\n  }\n  default:\n    result = segments.slice(0, 3).map((segment) => segment[0]).join('');\n  }\n\n  return result;\n}\n"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAM,MAAM,QAAQ;AAC3B,SAASC,IAAI,QAAQ,kCAAkC;AACvD,SAASC,UAAU,EAAEC,0BAA0B,QAAQ,qBAAqB;AAC5E,SAASC,OAAO,QAAQ,wBAAwB;;AAEhD;AACA,OAAO,SAASC,4BAA4BA,CAACC,YAAY,EAAEC,KAAK,EAAE;EAChE,IAAMC,8BAA8B,GAAGD,KAAK,CAACE,OAAO,CAAC,cAAc,CAAC,CAAC,wCAAwC,CAAC;EAE9G,OAAOH,YAAY,CAACI,MAAM,CAAC,UAACC,CAAC,EAAK;IAChC,OAAOH,8BAA8B,GAAG,IAAI,GAAG,CAACI,kBAAkB,CAACD,CAAC,CAAC;EACvE,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,kBAAkBA,CAACC,WAAW,EAAE;EAAA,IAAAC,qBAAA,EAAAC,mBAAA;EAC9C;EACA,IAAMC,QAAQ,GAAG,CAAAH,WAAW,aAAXA,WAAW,gBAAAC,qBAAA,GAAXD,WAAW,CAAEI,QAAQ,cAAAH,qBAAA,gBAAAA,qBAAA,GAArBA,qBAAA,CAAuBI,MAAM,cAAAJ,qBAAA,uBAA7BA,qBAAA,CAAgCb,IAAI,CAACkB,QAAQ,CAAC,MAAIN,WAAW,aAAXA,WAAW,gBAAAE,mBAAA,GAAXF,WAAW,CAAEO,MAAM,cAAAL,mBAAA,uBAAnBA,mBAAA,CAAqBC,QAAQ;EAEhG,OAAOA,QAAQ,KAAKb,0BAA0B;AAChD;AAEA,OAAO,SAASkB,2BAA2BA,CAAA,EAAe;EAAA,IAAdC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EACtD,IAAID,OAAO,CAACI,UAAU,CAAC,eAAe,CAAC,EAAE;IACvC,IAAMC,UAAU,GAAGL,OAAO,CAACM,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;IAElD,OAAOC,MAAM,CAACF,UAAU,CAAC,IAAI,CAAC;EAChC,CAAC,MAAM;IACL,OAAO3B,MAAM,CAAC8B,SAAS,CAAC9B,MAAM,CAAC+B,MAAM,CAACT,OAAO,CAAC,EAAE,kBAAkB,CAAC;EACrE;AACF;AAEA,OAAO,SAASU,wBAAwBA,CAAC1B,YAAY,EAAEC,KAAK,EAAE;EAC5D,IAAM0B,gBAAgB,GAAG1B,KAAK,CAACE,OAAO,CAAC,iBAAiB,CAAC,CAACP,UAAU,CAACE,OAAO,EAAEA,OAAO,CAAC8B,kBAAkB,CAAC,IAAI,CAAC,CAAC;EAC/G,IAAMC,KAAK,GAAGF,gBAAgB,CAACE,KAAK,IAAIF,gBAAgB,CAACG,OAAO,IAAI,OAAO;EAC3E,IAAMC,SAAS,GAAGF,KAAK,KAAK,MAAM;EAElC,IAAI,CAACE,SAAS,EAAE;IACd,OAAO/B,YAAY;EACrB;EAEA,OAAOA,YAAY,CAACI,MAAM,CAAC,UAACC,CAAC,EAAK;IAChC,IAAM2B,MAAM,GAAG3B,CAAC,CAAC4B,IAAI,IAAI5B,CAAC;IAE1B,OAAO,CAAC2B,MAAM,CAACE,OAAO;EACxB,CAAC,CAAC;AACJ;AAEA,IAAMC,mBAAmB,GAAG,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,qBAAqBA,CAACC,KAAK,EAAE;EAC3C,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,EAAE;EACX;EAEA,IAAIA,KAAK,CAACnB,MAAM,IAAI,CAAC,EAAE;IACrB,OAAOmB,KAAK;EACd;EAEA,IAAMC,QAAQ,GAAGD,KAAK,CAACE,KAAK,CAACJ,mBAAmB,CAAC;EAEjD,IAAI,CAACG,QAAQ,EAAE,OAAO,EAAE,CAAC,CAAC;;EAE1B,IAAIE,MAAM,GAAG,EAAE;EAEf,QAAQF,QAAQ,CAACpB,MAAM;IACvB,KAAK,CAAC;MAAE;QACN,IAAMuB,IAAI,GAAGH,QAAQ,CAAC,CAAC,CAAC;QAExBE,MAAM,MAAAE,MAAA,CAAOD,IAAI,CAAC,CAAC,CAAC,EAAAC,MAAA,CAAKD,IAAI,CAACE,IAAI,CAACC,KAAK,CAACH,IAAI,CAACvB,MAAM,GAAG,CAAC,CAAC,CAAC,EAAAwB,MAAA,CAAKD,IAAI,CAACA,IAAI,CAACvB,MAAM,GAAG,CAAC,CAAC,CAAG;QACvF;MACF;IACA,KAAK,CAAC;MAAE;QACN,IAAM2B,EAAE,MAAAH,MAAA,CAAOJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG;QAChC,IAAMQ,EAAE,MAAAJ,MAAA,CAAOJ,QAAQ,CAAC,CAAC,CAAC,CAACpB,MAAM,IAAI,CAAC,GAAGoB,QAAQ,CAAC,CAAC,CAAC,CAACA,QAAQ,CAAC,CAAC,CAAC,CAACpB,MAAM,GAAG,CAAC,CAAC,GAAGoB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAG;QAChG,IAAMS,EAAE,MAAAL,MAAA,CAAOJ,QAAQ,CAAC,CAAC,CAAC,CAACA,QAAQ,CAAC,CAAC,CAAC,CAACpB,MAAM,GAAG,CAAC,CAAC,CAAG;QAErDsB,MAAM,GAAGK,EAAE,GAAGC,EAAE,GAAGC,EAAE;QACrB;MACF;IACA;MACEP,MAAM,GAAGF,QAAQ,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,UAACC,OAAO;QAAA,OAAKA,OAAO,CAAC,CAAC,CAAC;MAAA,EAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACrE;EAEA,OAAOX,MAAM;AACf"}]}