{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/mixins/workload.js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/mixins/workload.js","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["mapGetters","omitBy","cleanUp","CONFIG_MAP","SECRET","WORKLOAD_TYPES","NODE","SERVICE","PVC","SERVICE_ACCOUNT","CAPI","POD","LIST_WORKLOAD_TYPES","HCI","Tab","CreateEditView","ResourceManager","LabeledSelect","LabeledInput","ServiceNameSelect","HealthCheck","Security","Upgrading","Loading","Networking","VolumeClaimTemplate","Job","_EDIT","_CREATE","_VIEW","_CLONE","WorkloadPorts","ContainerResourceLimit","KeyValue","Tabbed","NodeScheduling","PodAffinity","Tolerations","CruResource","Command","LifecycleHooks","Storage","ContainerMountPaths","Labels","RadioGroup","UI_MANAGED","removeObject","BEFORE_SAVE_HOOKS","NameNsDescription","formRulesGenerator","TYPES","SECRET_TYPES","defaultContainer","allHash","TAB_WEIGHT_MAP","general","healthCheck","labels","networking","nodeScheduling","podScheduling","resources","upgrading","securityContext","storage","volumeClaimTemplates","GPU_KEY","ID_KEY","Symbol","serialMaker","prefix","seq","setPrefix","p","setSeq","s","genSym","result","name","components","mixins","props","value","type","Object","required","mode","String","default","createOption","_default","text","metadata","Function","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","rancherClusters","$store","dispatch","RANCHER_CLUSTER","harvesterConfigs","HARVESTER_CONFIG","resourceManagerFetchSecondaryResources","secondaryResourceData","getServicesOwned","servicesOwned","sent","stop","data","_spec$template","_this$value","_podTemplateSpec$secu","$route","params","resource","createSidecar","query","sidecar","spec","podContainers","imagePullPolicy","_objectSpread","podSpec","template","containers","initContainers","$set","realMode","podTemplateSpec","CRON_JOB","jobTemplate","container","hasSidecars","allContainers","concat","_toConsumableArray","init","push","length","_init","selectContainer","secondaryResourceDataConfig","namespacedConfigMaps","allNodes","allNodeObjects","namespacedSecrets","imagePullNamespacedSecrets","allServices","headlessServices","pvcs","namespacedServiceNames","showTabs","pullPolicyOptions","servicesToRemove","portsForServices","containerChange","tabChange","podFsGroup","fsGroup","savePvcHookName","tabWeightMap","fvFormRuleSets","path","rootObject","rules","translationKey","fvReportedValidationPaths","isNamespaceNew","idKey","computed","tabErrors","_this$fvGetPathErrors","fvGetPathErrors","defaultTab","_container$name","find","c","__active","isEdit","isJob","JOB","isCronJob","isReplicable","DEPLOYMENT","REPLICA_SET","REPLICATION_CONTROLLER","STATEFUL_SET","isDeployment","isPod","isStatefulSet","get","_this$spec","set","neu","podLabels","podAnnotations","annotations","_this$podTemplateSpec","_this$podTemplateSpec2","_this2","key","map","each","containerImageRule","getters","containerImage","error","flatResources","_ref","_ref$limits","limits","_ref$requests","requests","limitsCpu","cpu","limitsMemory","memory","limitsGpu","requestsCpu","requestsMemory","out","_defineProperty","_this$container","readinessProbe","livenessProbe","startupProbe","assign","imagePullSecrets","secret","schema","workloadSubTypes","workloadTypes","prop","subtype","id","description","label","nameDisplayFor","bannerAbbrv","initialDisplayFor","containerOptions","isView","__add","t","watch","valueMetadataNamespace","_this3","_callee2","_callee2$","_context2","abrupt","namespace","old","resourceManagerClearSecondaryResources","_this$spec2","_this$spec3","restartPolicy","replicas","schedule","apiVersion","created","registerBeforeHook","saveWorkload","getPorts","registerAfterHook","saveService","methods","_this$value2","applyTo","var","parsingFunc","filter","_type","DOCKER","DOCKER_JSON","node","service","clusterIP","addContainerBtn","typeDisplay","split","letter","match","join","cancel","done","_this4","_callee3","ports","_callee3$","_context3","getPortsWithServiceType","t0","_this5","_callee4","_ref2","_ref2$toSave","toSave","_ref2$toRemove","toRemove","_callee4$","_context4","servicesFromContainerPorts","Promise","all","svc","save","_svc$metadata","ui","remove","_template","_template2","_template3","selector","matchLabels","workloadSelector","_template$spec$contai","containerResources","nvidiaGpuLimit","nvidiaIsValid","keys","_unused","nodeAffinity","affinity","podAffinity","podAntiAffinity","fixNodeAffinity","fixPodAffinity","_template4","_template5","_template6","_template7","fixPodSecurityContext","reduce","total","containerPorts","apply","port","_serviceType","preferredDuringSchedulingIgnoredDuringExecution","requiredDuringSchedulingIgnoredDuringExecution","forEach","term","_term$preference","matchExpressions","preference","expression","values","nodeSelectorTerms","_term$podAffinityTerm","podAffinityTerm","labelSelector","_term$labelSelector","podTempSpec","_podTempSpec$security","selectType","$router","replace","addContainer","_this6","nameNumber","allNames","names","includes","active","$nextTick","_this6$$refs$containe","$refs","containersTabbed","select","removeContainer","updateInitContainer","_this$podTemplateSpec3","clearPvcFormState","hookName","unregisterBeforeSaveHook","updateServiceAccount","serviceAccount","serviceAccountName","Number","isInteger","parseInt","undefined"],"sources":["/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/workload/mixins/workload.js"],"sourcesContent":["import { mapGetters } from 'vuex';\nimport omitBy from 'lodash/omitBy';\nimport { cleanUp } from '@shell/utils/object';\nimport {\n  CONFIG_MAP,\n  SECRET,\n  WORKLOAD_TYPES,\n  NODE,\n  SERVICE,\n  PVC,\n  SERVICE_ACCOUNT,\n  CAPI,\n  POD,\n  LIST_WORKLOAD_TYPES,\n  HCI,\n} from '@shell/config/types';\nimport Tab from '@shell/components/Tabbed/Tab';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport ResourceManager from '@shell/mixins/resource-manager';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport ServiceNameSelect from '@shell/components/form/ServiceNameSelect';\nimport HealthCheck from '@shell/components/form/HealthCheck';\nimport Security from '@shell/components/form/Security';\nimport Upgrading from '@shell/edit/workload/Upgrading';\nimport Loading from '@shell/components/Loading';\nimport Networking from '@shell/components/form/Networking';\nimport VolumeClaimTemplate from '@shell/edit/workload/VolumeClaimTemplate';\nimport Job from '@shell/edit/workload/Job';\nimport { _EDIT, _CREATE, _VIEW, _CLONE } from '@shell/config/query-params';\nimport WorkloadPorts from '@shell/components/form/WorkloadPorts';\nimport ContainerResourceLimit from '@shell/components/ContainerResourceLimit';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport Tabbed from '@shell/components/Tabbed';\n\nimport NodeScheduling from '@shell/components/form/NodeScheduling';\nimport PodAffinity from '@shell/components/form/PodAffinity';\nimport Tolerations from '@shell/components/form/Tolerations';\nimport CruResource from '@shell/components/CruResource';\nimport Command from '@shell/components/form/Command';\nimport LifecycleHooks from '@shell/components/form/LifecycleHooks';\nimport Storage from '@shell/edit/workload/storage';\nimport ContainerMountPaths from '@shell/edit/workload/storage/ContainerMountPaths.vue';\nimport Labels from '@shell/components/form/Labels';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { UI_MANAGED } from '@shell/config/labels-annotations';\nimport { removeObject } from '@shell/utils/array';\nimport { BEFORE_SAVE_HOOKS } from '@shell/mixins/child-hook';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport formRulesGenerator from '@shell/utils/validators/formRules';\nimport { TYPES as SECRET_TYPES } from '@shell/models/secret';\nimport { defaultContainer } from '@shell/models/workload';\nimport { allHash } from '@shell/utils/promise';\n\nconst TAB_WEIGHT_MAP = {\n  general:              99,\n  healthCheck:          98,\n  labels:               97,\n  networking:           96,\n  nodeScheduling:       95,\n  podScheduling:        94,\n  resources:            93,\n  upgrading:            92,\n  securityContext:      91,\n  storage:              90,\n  volumeClaimTemplates: 89,\n};\n\nconst GPU_KEY = 'nvidia.com/gpu';\nconst ID_KEY = Symbol('container-id');\n\nconst serialMaker = function() {\n  let prefix = '';\n  let seq = 0;\n\n  return {\n    setPrefix(p) {\n      prefix = p;\n    },\n    setSeq(s) {\n      seq = s;\n    },\n    genSym() {\n      const result = prefix + seq;\n\n      seq += 1;\n\n      return result;\n    }\n  };\n}();\n\nexport default {\n  name:       'CruWorkload',\n  components: {\n    ContainerResourceLimit,\n    Command,\n    CruResource,\n    HealthCheck,\n    Job,\n    KeyValue,\n    LabeledInput,\n    LabeledSelect,\n    Labels,\n    LifecycleHooks,\n    Loading,\n    NameNsDescription,\n    Networking,\n    NodeScheduling,\n    PodAffinity,\n    RadioGroup,\n    Security,\n    ServiceNameSelect,\n    Storage,\n    Tab,\n    Tabbed,\n    Tolerations,\n    Upgrading,\n    VolumeClaimTemplate,\n    WorkloadPorts,\n    ContainerMountPaths\n  },\n\n  mixins: [CreateEditView, ResourceManager],\n\n  props: {\n    value: {\n      type:     Object,\n      required: true,\n    },\n\n    mode: {\n      type:    String,\n      default: 'create',\n    },\n\n    createOption: {\n      default: (text) => {\n        if (text) {\n          return { metadata: { name: text } };\n        }\n      },\n      type: Function\n    },\n  },\n\n  async fetch() {\n    // TODO Should remove these lines\n    await allHash({\n      rancherClusters:  this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER }),\n      harvesterConfigs: this.$store.dispatch('management/findAll', { type: HCI.HARVESTER_CONFIG }),\n    });\n\n    // don't block UI for these resources\n    this.resourceManagerFetchSecondaryResources(this.secondaryResourceData);\n    this.servicesOwned = await this.value.getServicesOwned();\n  },\n\n  data() {\n    serialMaker.setPrefix('container-');\n    serialMaker.setSeq(0);\n    let type = this.$route.params.resource;\n    const createSidecar = !!this.$route.query.sidecar;\n\n    if (type === 'workload') {\n      type = null;\n    }\n\n    if (!this.value.spec) {\n      this.value.spec = {};\n      if (this.value.type === POD) {\n        const podContainers = [{\n          imagePullPolicy: 'Always',\n          name:            `container-0`,\n        }];\n\n        const metadata = { ...this.value.metadata };\n\n        const podSpec = { template: { spec: { containers: podContainers, initContainers: [] }, metadata } };\n\n        this.$set(this.value, 'spec', podSpec);\n      }\n    }\n\n    // EDIT view for POD\n    // Transform it from POD world to workload\n    if ((this.mode === _EDIT || this.mode === _VIEW || this.realMode === _CLONE ) && this.value.type === 'pod') {\n      const podSpec = { ...this.value.spec };\n      const metadata = { ...this.value.metadata };\n\n      this.$set(this.value.spec, 'template', { spec: podSpec, metadata });\n    }\n\n    const spec = this.value.spec;\n    let podTemplateSpec = type === WORKLOAD_TYPES.CRON_JOB ? spec.jobTemplate.spec.template.spec : spec?.template?.spec;\n\n    let containers = podTemplateSpec.containers || [];\n    let container;\n\n    if (this.mode === _VIEW && this.value.type === 'pod' ) {\n      podTemplateSpec = spec;\n    }\n\n    if (\n      this.mode === _CREATE ||\n      this.mode === _VIEW ||\n      this.realMode === _CLONE ||\n      (!createSidecar && !this.value.hasSidecars) // hasSideCars = containers.length > 1 || initContainers.length;\n    ) {\n      container = containers[0];\n    } else {\n      // This means that there are no containers.\n      if (!podTemplateSpec.initContainers) {\n        podTemplateSpec.initContainers = [];\n      }\n      const allContainers = [\n        ...podTemplateSpec.initContainers,\n        ...podTemplateSpec.containers,\n      ];\n\n      if (this.$route.query.init) {\n        podTemplateSpec.initContainers.push({\n          imagePullPolicy: 'Always',\n          name:            `container-${ allContainers.length }`,\n          _init:           true,\n        });\n\n        containers = podTemplateSpec.initContainers;\n      }\n      if (createSidecar || this.value.type === 'pod') {\n        container = {\n          imagePullPolicy: 'Always',\n          name:            `container-${ allContainers.length }`,\n          _init:           false,\n        };\n\n        containers.push(container);\n      } else {\n        container = containers[0];\n      }\n    }\n\n    this.selectContainer(container);\n\n    return {\n      secondaryResourceData:      this.secondaryResourceDataConfig(),\n      namespacedConfigMaps:       [],\n      allNodes:                   null,\n      allNodeObjects:             [],\n      namespacedSecrets:          [],\n      imagePullNamespacedSecrets: [],\n      allServices:                [],\n      headlessServices:           [],\n      name:                       this.value?.metadata?.name || null,\n      pvcs:                       [],\n      namespacedServiceNames:     [],\n      showTabs:                   false,\n      pullPolicyOptions:          ['Always', 'IfNotPresent', 'Never'],\n      spec,\n      type,\n      servicesOwned:              [],\n      servicesToRemove:           [],\n      portsForServices:           [],\n      container,\n      containerChange:            0,\n      tabChange:                  0,\n      podFsGroup:                 podTemplateSpec.securityContext?.fsGroup,\n      savePvcHookName:            'savePvcHook',\n      tabWeightMap:               TAB_WEIGHT_MAP,\n      fvFormRuleSets:             [{\n        path: 'image', rootObject: this.container, rules: ['required'], translationKey: 'workload.container.image'\n      }],\n      fvReportedValidationPaths: ['spec'],\n      isNamespaceNew:            false,\n      idKey:                     ID_KEY\n    };\n  },\n\n  computed: {\n    ...mapGetters(['currentCluster']),\n    tabErrors() {\n      return { general: this.fvGetPathErrors(['image'])?.length > 0 };\n    },\n\n    defaultTab() {\n      if (!!this.$route.query.sidecar || this.$route.query.init || this.mode === _CREATE) {\n        const container = this.allContainers.find((c) => c.__active);\n\n        return container?.name ?? 'container-0';\n      }\n\n      return this.allContainers.length ? this.allContainers[0][this.idKey] : '';\n    },\n\n    isEdit() {\n      return this.mode === _EDIT;\n    },\n\n    isJob() {\n      return this.type === WORKLOAD_TYPES.JOB || this.isCronJob;\n    },\n\n    isCronJob() {\n      return this.type === WORKLOAD_TYPES.CRON_JOB;\n    },\n\n    isReplicable() {\n      return (\n        this.type === WORKLOAD_TYPES.DEPLOYMENT ||\n        this.type === WORKLOAD_TYPES.REPLICA_SET ||\n        this.type === WORKLOAD_TYPES.REPLICATION_CONTROLLER ||\n        this.type === WORKLOAD_TYPES.STATEFUL_SET\n      );\n    },\n\n    isDeployment() {\n      return this.type === WORKLOAD_TYPES.DEPLOYMENT;\n    },\n\n    isPod() {\n      return this.value.type === POD;\n    },\n\n    isStatefulSet() {\n      return this.type === WORKLOAD_TYPES.STATEFUL_SET;\n    },\n\n    // if this is a cronjob, grab pod spec from within job template spec\n    podTemplateSpec: {\n      get() {\n        return this.isCronJob ? this.spec.jobTemplate.spec.template.spec : this.spec?.template?.spec;\n      },\n      set(neu) {\n        if (this.isCronJob) {\n          this.$set(this.spec.jobTemplate.spec.template, 'spec', neu);\n        } else {\n          this.$set(this.spec.template, 'spec', neu);\n        }\n      },\n    },\n\n    podLabels: {\n      get() {\n        if (this.isCronJob) {\n          if (!this.spec.jobTemplate.metadata) {\n            this.$set(this.spec.jobTemplate, 'metadata', { labels: {} });\n          }\n\n          return this.spec.jobTemplate.metadata.labels;\n        }\n\n        if (!this.spec.template.metadata) {\n          this.$set(this.spec.template, 'metadata', { labels: {} });\n        }\n\n        return this.spec.template.metadata.labels;\n      },\n      set(neu) {\n        if (this.isCronJob) {\n          this.$set(this.spec.jobTemplate.metadata, 'labels', neu);\n        } else {\n          this.$set(this.spec.template.metadata, 'labels', neu);\n        }\n      },\n    },\n\n    podAnnotations: {\n      get() {\n        if (this.isCronJob) {\n          if (!this.spec.jobTemplate.metadata) {\n            this.$set(this.spec.jobTemplate, 'metadata', { annotations: {} });\n          }\n\n          return this.spec.jobTemplate.metadata.annotations;\n        }\n        if (!this.spec.template.metadata) {\n          this.$set(this.spec.template, 'metadata', { annotations: {} });\n        }\n\n        return this.spec.template.metadata.annotations;\n      },\n      set(neu) {\n        if (this.isCronJob) {\n          this.$set(this.spec.jobTemplate.metadata, 'annotations', neu);\n        } else {\n          this.$set(this.spec.template.metadata, 'annotations', neu);\n        }\n      },\n    },\n\n    allContainers() {\n      const containers = this.podTemplateSpec?.containers || [];\n      const initContainers = this.podTemplateSpec?.initContainers || [];\n      const key = this.idKey;\n\n      return [\n        ...containers.map((each) => {\n          each._init = false;\n          if (!each[key]) {\n            each[key] = serialMaker.genSym();\n          }\n\n          return each;\n        }),\n        ...initContainers.map((each) => {\n          each._init = true;\n          if (!each[key]) {\n            each[key] = serialMaker.genSym();\n          }\n\n          return each;\n        }),\n      ].map((container) => {\n        const containerImageRule = formRulesGenerator(this.$store.getters['i18n/t'], { name: container.name }).containerImage;\n\n        container.error = containerImageRule(container);\n\n        return container;\n      });\n    },\n\n    flatResources: {\n      get() {\n        const { limits = {}, requests = {} } = this.container.resources || {};\n        const {\n          cpu: limitsCpu,\n          memory: limitsMemory,\n          [GPU_KEY]: limitsGpu,\n        } = limits;\n        const { cpu: requestsCpu, memory: requestsMemory } = requests;\n\n        return {\n          limitsCpu,\n          limitsMemory,\n          requestsCpu,\n          requestsMemory,\n          limitsGpu,\n        };\n      },\n      set(neu) {\n        const {\n          limitsCpu,\n          limitsMemory,\n          requestsCpu,\n          requestsMemory,\n          limitsGpu,\n        } = neu;\n\n        const out = {\n          requests: {\n            cpu:    requestsCpu,\n            memory: requestsMemory,\n          },\n          limits: {\n            cpu:       limitsCpu,\n            memory:    limitsMemory,\n            [GPU_KEY]: limitsGpu,\n          },\n        };\n\n        this.$set(this.container, 'resources', cleanUp(out));\n      },\n    },\n\n    healthCheck: {\n      get() {\n        const { readinessProbe, livenessProbe, startupProbe } = this.container;\n\n        return {\n          readinessProbe,\n          livenessProbe,\n          startupProbe,\n        };\n      },\n      set(neu) {\n        Object.assign(this.container, neu);\n      },\n    },\n\n    imagePullSecrets: {\n      get() {\n        if (!this.podTemplateSpec.imagePullSecrets) {\n          this.$set(this.podTemplateSpec, 'imagePullSecrets', []);\n        }\n\n        const { imagePullSecrets } = this.podTemplateSpec;\n\n        return imagePullSecrets.map((each) => each.name);\n      },\n      set(neu) {\n        this.podTemplateSpec.imagePullSecrets = neu.map((secret) => {\n          return { name: secret };\n        });\n      },\n    },\n\n    schema() {\n      return this.$store.getters['cluster/schemaFor'](this.type);\n    },\n\n    // array of id, label, description, initials for type selection step\n    workloadSubTypes() {\n      const workloadTypes = omitBy(LIST_WORKLOAD_TYPES, (type) => {\n        return (\n          type === WORKLOAD_TYPES.REPLICA_SET ||\n          type === WORKLOAD_TYPES.REPLICATION_CONTROLLER\n        );\n      });\n\n      const out = [];\n\n      for (const prop in workloadTypes) {\n        const type = workloadTypes[prop];\n        const subtype = {\n          id:          type,\n          description: `workload.typeDescriptions.'${ type }'`,\n          label:       this.nameDisplayFor(type),\n          bannerAbbrv: this.initialDisplayFor(type),\n        };\n\n        out.push(subtype);\n      }\n\n      return out;\n    },\n\n    containerOptions() {\n      const out = [...this.allContainers];\n\n      if (!this.isView) {\n        out.push({ name: 'Add Container', __add: true });\n      }\n\n      return out;\n    },\n\n    ...mapGetters({ t: 'i18n/t' }),\n  },\n\n  watch: {\n    async 'value.metadata.namespace'(neu) {\n      if (this.isNamespaceNew) {\n        // we don't need to re-fetch namespace specific (or non-namespace specific) resources when the namespace hasn't been created yet\n        return;\n      }\n      this.secondaryResourceData.namespace = neu;\n      // Fetch resources that are namespace specific, we don't need to re-fetch non-namespaced resources on namespace change\n      this.resourceManagerFetchSecondaryResources(this.secondaryResourceData, true);\n\n      this.servicesOwned = await this.value.getServicesOwned();\n    },\n\n    isNamespaceNew(neu, old) {\n      if (!old && neu) {\n        // As the namespace is new any resource that's been fetched with a namespace is now invalid\n        this.resourceManagerClearSecondaryResources(this.secondaryResourceData, true);\n      }\n    },\n\n    type(neu, old) {\n      const template =\n        old === WORKLOAD_TYPES.CRON_JOB ? this.spec?.jobTemplate?.spec?.template : this.spec?.template;\n\n      if (!template.spec) {\n        template.spec = {};\n      }\n\n      let restartPolicy;\n\n      if (this.isJob || this.isCronJob) {\n        restartPolicy = 'Never';\n      } else {\n        restartPolicy = 'Always';\n      }\n\n      this.$set(template.spec, 'restartPolicy', restartPolicy);\n\n      if (!this.isReplicable) {\n        delete this.spec.replicas;\n      }\n\n      if (old === WORKLOAD_TYPES.CRON_JOB) {\n        this.$set(this.spec, 'template', { ...template });\n        delete this.spec.jobTemplate;\n        delete this.spec.schedule;\n      } else if (neu === WORKLOAD_TYPES.CRON_JOB) {\n        this.$set(this.spec, 'jobTemplate', { spec: { template } });\n        this.$set(this.spec, 'schedule', '0 * * * *');\n        delete this.spec.template;\n      }\n\n      this.$set(this.value, 'type', neu);\n      delete this.value.apiVersion;\n    },\n  },\n\n  created() {\n    this.registerBeforeHook(this.saveWorkload, 'willSaveWorkload');\n    this.registerBeforeHook(this.getPorts, 'getPorts');\n\n    this.registerAfterHook(this.saveService, 'saveService');\n  },\n\n  methods: {\n    secondaryResourceDataConfig() {\n      return {\n        namespace: this.value?.metadata?.namespace || null,\n        data:      {\n          [CONFIG_MAP]:      { applyTo: [{ var: 'namespacedConfigMaps' }] },\n          [PVC]:             { applyTo: [{ var: 'pvcs' }] },\n          [SERVICE_ACCOUNT]: { applyTo: [{ var: 'namespacedServiceNames' }] },\n          [SECRET]:          {\n            applyTo: [\n              { var: 'namespacedSecrets' },\n              {\n                var:         'imagePullNamespacedSecrets',\n                parsingFunc: (data) => {\n                  return data.filter((secret) => (secret._type === SECRET_TYPES.DOCKER || secret._type === SECRET_TYPES.DOCKER_JSON));\n                }\n              }\n            ]\n          },\n          [NODE]: {\n            applyTo: [\n              { var: 'allNodeObjects' },\n              {\n                var:         'allNodes',\n                parsingFunc: (data) => {\n                  return data.map((node) => node.id);\n                }\n              }\n            ]\n          },\n          [SERVICE]: {\n            applyTo: [\n              { var: 'allServices' },\n              {\n                var:         'headlessServices',\n                parsingFunc: (data) => {\n                  return data.filter((service) => service.spec.clusterIP === 'None');\n                }\n              }\n            ]\n          },\n        }\n      };\n    },\n    addContainerBtn() {\n      this.selectContainer({ name: 'Add Container', __add: true });\n    },\n    nameDisplayFor(type) {\n      const schema = this.$store.getters['cluster/schemaFor'](type);\n\n      return this.$store.getters['type-map/labelFor'](schema) || '';\n    },\n\n    // TODO better images for workload types?\n    // show initials of workload type in blue circles for now\n    initialDisplayFor(type) {\n      const typeDisplay = this.nameDisplayFor(type);\n\n      return typeDisplay\n        .split('')\n        .filter((letter) => letter.match(/[A-Z]/))\n        .join('');\n    },\n\n    cancel() {\n      this.done();\n    },\n\n    async getPorts() {\n      const ports = (await this.value.getPortsWithServiceType()) || [];\n\n      this.portsForServices = ports;\n    },\n\n    async saveService() {\n      // If we can't access services then just return - the UI should only allow ports without service creation\n      if (!this.$store.getters['cluster/schemaFor'](SERVICE)) {\n        return;\n      }\n\n      const { toSave = [], toRemove = [] } =\n        (await this.value.servicesFromContainerPorts(\n          this.mode,\n          this.portsForServices\n        )) || {};\n\n      this.servicesOwned = toSave;\n      this.servicesToRemove = toRemove;\n\n      if (!toSave.length && !toRemove.length) {\n        return;\n      }\n\n      return Promise.all([\n        ...toSave.map((svc) => svc.save()),\n        ...toRemove.map((svc) => {\n          const ui = svc?.metadata?.annotations[UI_MANAGED];\n\n          if (ui) {\n            svc.remove();\n          }\n        }),\n      ]);\n    },\n\n    saveWorkload() {\n      if (\n        this.type !== WORKLOAD_TYPES.JOB &&\n        this.type !== WORKLOAD_TYPES.CRON_JOB &&\n        (this.mode === _CREATE || this.realMode === _CLONE)\n      ) {\n        this.spec.selector = { matchLabels: this.value.workloadSelector };\n        Object.assign(this.value.metadata.labels, this.value.workloadSelector);\n      }\n\n      let template;\n\n      if (this.type === WORKLOAD_TYPES.CRON_JOB) {\n        template = this.spec.jobTemplate;\n      } else {\n        template = this.spec.template;\n      }\n\n      // WORKLOADS\n      if (\n        this.type !== WORKLOAD_TYPES.JOB &&\n        this.type !== WORKLOAD_TYPES.CRON_JOB &&\n        (this.mode === _CREATE || this.realMode === _CLONE)\n      ) {\n        if (!template.metadata) {\n          template.metadata = { labels: this.value.workloadSelector };\n        } else {\n          Object.assign(template.metadata.labels, this.value.workloadSelector);\n        }\n      }\n\n      if (template.spec.containers && template.spec.containers[0]) {\n        const containerResources = template.spec.containers[0].resources;\n        const nvidiaGpuLimit =\n          template.spec.containers[0].resources?.limits?.[GPU_KEY];\n\n        // Though not required, requests are also set to mirror the ember ui\n        if (nvidiaGpuLimit > 0) {\n          containerResources.requests = containerResources.requests || {};\n          containerResources.requests[GPU_KEY] = nvidiaGpuLimit;\n        }\n\n        if (!this.nvidiaIsValid(nvidiaGpuLimit)) {\n          try {\n            delete containerResources.requests[GPU_KEY];\n            delete containerResources.limits[GPU_KEY];\n\n            if (Object.keys(containerResources.limits).length === 0) {\n              delete containerResources.limits;\n            }\n            if (Object.keys(containerResources.requests).length === 0) {\n              delete containerResources.requests;\n            }\n            if (Object.keys(containerResources).length === 0) {\n              delete template.spec.containers[0].resources;\n            }\n          } catch {}\n        }\n      }\n\n      const nodeAffinity = template?.spec?.affinity?.nodeAffinity || {};\n      const podAffinity = template?.spec?.affinity?.podAffinity || {};\n      const podAntiAffinity = template?.spec?.affinity?.podAntiAffinity || {};\n\n      this.fixNodeAffinity(nodeAffinity);\n      this.fixPodAffinity(podAffinity);\n\n      // The fields are being removed because they are not allowed to be editabble\n      if (this.mode === _EDIT) {\n        if (template?.spec?.affinity && Object.keys(template?.spec?.affinity).length === 0) {\n          delete template.spec.affinity;\n        }\n\n        // Removing `affinity` fixes the issue with setting the `imagePullSecrets`\n        // However, this field should not be set. Therefore this is explicitly removed.\n        if (template?.spec?.imagePullSecrets && template?.spec?.imagePullSecrets.length === 0) {\n          delete template.spec.imagePullSecrets;\n        }\n      }\n\n      this.fixPodAffinity(podAntiAffinity);\n      this.fixPodSecurityContext(this.podTemplateSpec);\n\n      template.metadata.namespace = this.value.metadata.namespace;\n\n      // Handle the case where the user has changed the name of the workload\n      // Only do this for clone. Not allowed for edit\n      if (this.realMode === _CLONE) {\n        template.metadata.name = this.value.metadata.name;\n        template.metadata.description = this.value.metadata.description;\n      }\n\n      // delete this.value.kind;\n      if (this.container && !this.container.name) {\n        this.$set(this.container, 'name', this.value.metadata.name);\n      }\n\n      const ports = this.value.containers.reduce((total, each) => {\n        const containerPorts = each.ports || [];\n\n        total.push(\n          ...containerPorts.filter(\n            (port) => port._serviceType && port._serviceType !== ''\n          )\n        );\n\n        return total;\n      }, []);\n\n      // ports contain info used to create services after saving\n      this.portsForServices = ports;\n      Object.assign(this.value, { spec: this.spec });\n    },\n\n    // node and pod affinity are formatted incorrectly from API; fix before saving\n    fixNodeAffinity(nodeAffinity) {\n      const preferredDuringSchedulingIgnoredDuringExecution =\n        nodeAffinity.preferredDuringSchedulingIgnoredDuringExecution || [];\n      const requiredDuringSchedulingIgnoredDuringExecution =\n        nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution || {};\n\n      preferredDuringSchedulingIgnoredDuringExecution.forEach((term) => {\n        const matchExpressions = term?.preference?.matchExpressions || [];\n\n        matchExpressions.forEach((expression) => {\n          if (expression.values) {\n            expression.values =\n              typeof expression.values === 'string' ? [expression.values] : [...expression.values];\n          }\n        });\n      });\n\n      (\n        requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms || []\n      ).forEach((term) => {\n        const matchExpressions = term.matchExpressions || [];\n\n        matchExpressions.forEach((expression) => {\n          if (expression.values) {\n            expression.values =\n              typeof expression.values === 'string' ? [expression.values] : [...expression.values];\n          }\n        });\n      });\n    },\n\n    fixPodAffinity(podAffinity) {\n      const preferredDuringSchedulingIgnoredDuringExecution =\n        podAffinity.preferredDuringSchedulingIgnoredDuringExecution || [];\n      const requiredDuringSchedulingIgnoredDuringExecution =\n        podAffinity.requiredDuringSchedulingIgnoredDuringExecution || [];\n\n      preferredDuringSchedulingIgnoredDuringExecution.forEach((term) => {\n        const matchExpressions =\n          term?.podAffinityTerm?.labelSelector?.matchExpressions || [];\n\n        matchExpressions.forEach((expression) => {\n          if (expression.values) {\n            expression.values =\n              typeof expression.values === 'string' ? [expression.values] : [...expression.values];\n          }\n        });\n      });\n\n      requiredDuringSchedulingIgnoredDuringExecution.forEach((term) => {\n        const matchExpressions = term?.labelSelector?.matchExpressions || [];\n\n        matchExpressions.forEach((expression) => {\n          if (expression.values) {\n            expression.values =\n              typeof expression.values === 'string' ? [expression.values] : [...expression.values];\n          }\n        });\n      });\n\n      return podAffinity;\n    },\n\n    fixPodSecurityContext(podTempSpec) {\n      if (this.podFsGroup) {\n        podTempSpec.securityContext = podTempSpec.securityContext || {};\n        podTempSpec.securityContext.fsGroup = this.podFsGroup;\n      } else {\n        if (podTempSpec.securityContext?.fsGroup) {\n          delete podTempSpec.securityContext.fsGroup;\n        }\n        if (Object.keys(podTempSpec.securityContext || {}).length === 0) {\n          delete podTempSpec.securityContext;\n        }\n      }\n    },\n\n    selectType(type) {\n      if (!this.type && type) {\n        this.$router.replace({ params: { resource: type } });\n      } else {\n        this.type = type;\n      }\n    },\n\n    selectContainer(container) {\n      if (container.__add) {\n        this.addContainer();\n\n        return;\n      }\n      (this.allContainers || []).forEach((container) => {\n        if (container.__active) {\n          delete container.__active;\n        }\n      });\n      container.__active = true;\n      this.container = container;\n      this.containerChange++;\n    },\n\n    addContainer() {\n      let nameNumber = this.allContainers.length;\n      const allNames = this.allContainers.reduce((names, each) => {\n        names.push(each.name);\n\n        return names;\n      }, []);\n\n      while (allNames.includes(`container-${ nameNumber }`)) {\n        nameNumber++;\n      }\n      const container = {\n        ...defaultContainer,\n        name:   `container-${ nameNumber }`,\n        active: true\n      };\n\n      this.podTemplateSpec.containers.push(container);\n      this.selectContainer(container);\n      this.$nextTick(() => {\n        this.$refs.containersTabbed?.select(container.name);\n      });\n    },\n\n    removeContainer(container) {\n      if (container._init) {\n        removeObject(this.podTemplateSpec.initContainers, container);\n      } else {\n        removeObject(this.podTemplateSpec.containers, container);\n      }\n      this.selectContainer(this.allContainers[0]);\n    },\n\n    updateInitContainer(neu, container) {\n      if (!container) {\n        return;\n      }\n      const containers = this.podTemplateSpec.containers;\n      const initContainers = this.podTemplateSpec.initContainers ?? [];\n\n      if (neu) {\n        this.podTemplateSpec.initContainers = initContainers;\n        container._init = true;\n        if (!initContainers.includes(container)) {\n          initContainers.push(container);\n        }\n        removeObject(containers, container);\n      } else {\n        container._init = false;\n        removeObject(initContainers, container);\n        if (!containers.includes(container)) {\n          containers.push(container);\n        }\n      }\n    },\n    clearPvcFormState(hookName) {\n      // On the `closePvcForm` event, remove the\n      // before save hook to prevent the PVC from\n      // being created. Use the PVC's unique ID to distinguish\n      // between hooks for different PVCs.\n      if (this[BEFORE_SAVE_HOOKS]) {\n        this.unregisterBeforeSaveHook(hookName);\n      }\n    },\n\n    updateServiceAccount(neu) {\n      if (neu) {\n        this.podTemplateSpec.serviceAccount = neu;\n        this.podTemplateSpec.serviceAccountName = neu;\n      } else {\n        // Note - both have to be removed in order for removal to work\n        delete this.podTemplateSpec.serviceAccount;\n        delete this.podTemplateSpec.serviceAccountName;\n      }\n    },\n    nvidiaIsValid(nvidiaGpuLimit) {\n      if ( !Number.isInteger(parseInt(nvidiaGpuLimit)) ) {\n        return false;\n      }\n      if (nvidiaGpuLimit === undefined) {\n        return false;\n      }\n      if (nvidiaGpuLimit < 1) {\n        return false;\n      } else {\n        return true;\n      }\n\n      //\n    },\n  },\n};\n"],"mappings":"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"}]}