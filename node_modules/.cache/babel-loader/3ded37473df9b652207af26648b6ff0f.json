{"remainingRequest":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js??ref--16-1!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/CustomCommand.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/CustomCommand.vue","mtime":1716430447141},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/babel.config.js","mtime":1716430386710},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/babel-loader/lib/index.js","mtime":1716430465839},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/cache-loader/dist/cjs.js","mtime":1716430465924},{"path":"/Users/nowcom/Documents/nowcom/trident-extension-package/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1716430467929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["Banner","InfoBox","Checkbox","CopyCode","LabeledInput","KeyValue","Taints","MANAGEMENT","sanitizeKey","sanitizeIP","sanitizeValue","components","props","cluster","type","Object","required","clusterToken","fetch","_this","_asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$store","dispatch","NODE","stop","data","showAdvanced","etcd","controlPlane","worker","insecure","insecureWindows","address","internalAddress","nodeName","labels","taints","computed","linuxCommand","out","insecureNodeCommand","nodeCommand","push","concat","key","k","v","_iterator","_createForOfIteratorHelper","_step","s","n","done","t","value","e","effect","err","f","join","windowsCommand","insecureWindowsNodeCommand","windowsNodeCommand","_iterator2","_step2","readyForWindows","mgmt","isReady","nodes","allRoles","reduce","all","node","isWorker","isEtcd","isControlPlane","includes","length","methods","toggleAdvanced","copiedWindows","$emit"],"sources":["node_modules/@rancher/shell/edit/provisioning.cattle.io.cluster/CustomCommand.vue"],"sourcesContent":["<script>\nimport { Banner } from '@components/Banner';\nimport InfoBox from '@shell/components/InfoBox';\nimport { Checkbox } from '@components/Form/Checkbox';\nimport CopyCode from '@shell/components/CopyCode';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport Taints from '@shell/components/form/Taints';\nimport { MANAGEMENT } from '@shell/config/types';\n\nimport { sanitizeKey, sanitizeIP, sanitizeValue } from '@shell/utils/string';\n\nexport default {\n  components: {\n    Banner, Checkbox, CopyCode, InfoBox, KeyValue, LabeledInput, Taints\n  },\n\n  props: {\n    cluster: {\n      type:     Object,\n      required: true,\n    },\n\n    clusterToken: {\n      type:     Object,\n      required: true,\n    }\n  },\n\n  async fetch() {\n    await this.$store.dispatch('management/findAll', { type: MANAGEMENT.NODE });\n  },\n\n  data() {\n    return {\n      showAdvanced:    false,\n      etcd:            true,\n      controlPlane:    true,\n      worker:          true,\n      insecure:        false,\n      insecureWindows: false,\n      address:         '',\n      internalAddress: '',\n      nodeName:        '',\n      labels:          {},\n      taints:          []\n    };\n  },\n\n  computed: {\n    linuxCommand() {\n      const out = this.insecure ? [this.clusterToken.insecureNodeCommand] : [this.clusterToken.nodeCommand];\n\n      this.etcd && out.push('--etcd');\n      this.controlPlane && out.push('--controlplane');\n      this.worker && out.push('--worker');\n      this.address && out.push(`--address ${ sanitizeIP(this.address) }`);\n      this.internalAddress && out.push(`--internal-address ${ sanitizeValue(this.internalAddress) }`);\n      this.nodeName && out.push(`--node-name ${ sanitizeValue(this.nodeName) }`);\n\n      for ( const key in this.labels ) {\n        const k = sanitizeKey(key);\n        const v = sanitizeValue(this.labels[k]);\n\n        if ( k && v ) {\n          out.push(`--label ${ k }=${ v }`);\n        }\n      }\n\n      for ( const t of this.taints ) {\n        const k = sanitizeKey(t.key);\n        const v = sanitizeValue(t.value);\n        const e = sanitizeValue(t.effect);\n\n        if ( k && v && e ) {\n          out.push(`--taints ${ k }=${ v }:${ e }`);\n        }\n      }\n\n      return out.join(' ');\n    },\n\n    windowsCommand() {\n      const out = this.insecureWindows ? [this.clusterToken.insecureWindowsNodeCommand] : [this.clusterToken.windowsNodeCommand];\n\n      this.address && out.push(`-Address \"${ sanitizeValue(this.address) }\"`);\n      this.internalAddress && out.push(`-InternalAddress \"${ sanitizeValue(this.internalAddress) }\"`);\n      this.nodeName && out.push(`-NodeName \"${ sanitizeValue(this.nodeName) }\"`);\n\n      for ( const key in this.labels ) {\n        const k = sanitizeKey(key);\n        const v = sanitizeValue(this.labels[k]);\n\n        if ( k && v ) {\n          out.push(`-Label \"${ k }=${ v }\"`);\n        }\n      }\n\n      for ( const t of this.taints ) {\n        const k = sanitizeKey(t.key);\n        const v = sanitizeValue(t.value);\n        const e = sanitizeValue(t.effect);\n\n        if ( k && v && e ) {\n          out.push(`-Taint \"${ k }=${ v }:${ e }\"`);\n        }\n      }\n\n      return out.join(' ');\n    },\n\n    // Clusters need linux nodes with etcd, controlplane, and worker roles before windows nodes can be registration\n    readyForWindows() {\n      if (!this.cluster.mgmt || !this.cluster.mgmt.isReady) {\n        return false;\n      }\n      const nodes = this.cluster.nodes || [];\n\n      const allRoles = nodes.reduce((all, node) => {\n        const { isWorker, isEtcd, isControlPlane } = node;\n\n        if (isWorker && !all.includes('worker')) {\n          all.push('worker');\n        }\n        if (isEtcd && !all.includes('etcd')) {\n          all.push('etcd');\n        }\n        if (isControlPlane && !all.includes('controlPlane')) {\n          all.push('controlPlane');\n        }\n\n        return all;\n      }, []);\n\n      return allRoles.length === 3;\n    }\n\n  },\n\n  methods: {\n    toggleAdvanced() {\n      this.showAdvanced = !this.showAdvanced;\n    },\n\n    copiedWindows() {\n      this.$emit('copied-windows');\n    }\n  },\n};\n\n</script>\n\n<template>\n  <div>\n    <InfoBox\n      :step=\"1\"\n      class=\"step-box\"\n    >\n      <h3 v-t=\"'cluster.custom.nodeRole.label'\" />\n      <h4 v-t=\"'cluster.custom.nodeRole.detail'\" />\n      <Checkbox\n        v-model=\"etcd\"\n        label-key=\"model.machine.role.etcd\"\n      />\n      <Checkbox\n        v-model=\"controlPlane\"\n        label-key=\"model.machine.role.controlPlane\"\n      />\n      <Checkbox\n        v-model=\"worker\"\n        label-key=\"model.machine.role.worker\"\n      />\n      <Banner\n        v-if=\"!etcd || !controlPlane || !worker\"\n        data-testid=\"node-role-warning\"\n        color=\"warning\"\n        :label=\"t('cluster.custom.nodeRole.warning')\"\n      />\n    </InfoBox>\n\n    <InfoBox\n      v-if=\"showAdvanced\"\n      :step=\"2\"\n      class=\"step-box\"\n    >\n      <h3 v-t=\"'cluster.custom.advanced.label'\" />\n      <h4 v-t=\"'cluster.custom.advanced.detail'\" />\n\n      <div class=\"row mb-10\">\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"nodeName\"\n            label-key=\"cluster.custom.advanced.nodeName\"\n          />\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"address\"\n            label-key=\"cluster.custom.advanced.publicIp\"\n          />\n        </div>\n        <div class=\"col span-4\">\n          <LabeledInput\n            v-model=\"internalAddress\"\n            label-key=\"cluster.custom.advanced.privateIp\"\n          />\n        </div>\n      </div>\n\n      <KeyValue\n        v-model=\"labels\"\n        class=\"mb-10\"\n        mode=\"edit\"\n        :title=\"t('cluster.custom.advanced.nodeLabel.title')\"\n        :add-label=\"t('cluster.custom.advanced.nodeLabel.label')\"\n        :read-allowed=\"false\"\n      />\n\n      <Taints\n        v-model=\"taints\"\n        class=\"mb-10\"\n        mode=\"edit\"\n        :value=\"taints\"\n      />\n\n      <a\n        v-t=\"'generic.hideAdvanced'\"\n        @click=\"toggleAdvanced\"\n      />\n    </InfoBox>\n\n    <div\n      v-else\n      class=\"mb-20\"\n    >\n      <a\n        v-t=\"'generic.showAdvanced'\"\n        @click=\"toggleAdvanced\"\n      />\n    </div>\n\n    <InfoBox\n      :step=\"showAdvanced ? 3 : 2\"\n      class=\"step-box\"\n    >\n      <h3 v-t=\"'cluster.custom.registrationCommand.label'\" />\n      <h4 v-t=\"'cluster.custom.registrationCommand.linuxDetail'\" />\n      <CopyCode\n        id=\"copiedLinux\"\n        class=\"m-10 p-10\"\n      >\n        {{ linuxCommand }}\n      </CopyCode>\n      <Checkbox\n        v-if=\"clusterToken.insecureNodeCommand\"\n        v-model=\"insecure\"\n        label-key=\"cluster.custom.registrationCommand.insecure\"\n      />\n\n      <template v-if=\"cluster.supportsWindows\">\n        <hr class=\"mt-20 mb-20\">\n        <h4 v-t=\"'cluster.custom.registrationCommand.windowsDetail'\" />\n        <Banner\n          v-if=\"cluster.isRke1\"\n          color=\"warning\"\n          :label=\"t('cluster.custom.registrationCommand.windowsDeprecatedForRKE1')\"\n        />\n        <template v-if=\"readyForWindows\">\n          <CopyCode\n            id=\"copiedWindows\"\n            class=\"m-10 p-10\"\n            @copied=\"copiedWindows\"\n          >\n            {{ windowsCommand }}\n          </CopyCode>\n          <Checkbox\n            v-if=\"clusterToken.insecureWindowsNodeCommand\"\n            v-model=\"insecureWindows\"\n            label-key=\"cluster.custom.registrationCommand.insecure\"\n          />\n          <Banner\n            color=\"info\"\n            :label=\"t('cluster.custom.registrationCommand.windowsWarning')\"\n          />\n        </template>\n        <Banner\n          v-else\n          color=\"info\"\n          :label=\"t('cluster.custom.registrationCommand.windowsNotReady')\"\n        />\n      </template>\n    </InfoBox>\n  </div>\n</template>\n"],"mappings":"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"}]}