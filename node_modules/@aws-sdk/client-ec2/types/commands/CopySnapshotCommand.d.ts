import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { CopySnapshotRequest, CopySnapshotResult } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type CopySnapshotCommandInput = CopySnapshotRequest;
export declare type CopySnapshotCommandOutput = CopySnapshotResult & __MetadataBearer;
/**
 * <p>Copies a point-in-time snapshot of an EBS volume and stores it in Amazon S3. You can copy the
 *       snapshot within the same Region or from one Region to another. You can use the snapshot to
 *       create EBS volumes or Amazon Machine Images (AMIs).</p>
 *          <p>Copies of encrypted EBS snapshots remain encrypted. Copies of unencrypted snapshots remain
 *       unencrypted, unless you enable encryption for the snapshot copy operation. By default, encrypted
 *       snapshot copies use the default AWS Key Management Service (AWS KMS) customer master key (CMK); however, you can specify a
 *       different CMK.</p>
 *          <p>To copy an encrypted snapshot that has been shared from another account, you must have
 *       permissions for the CMK used to encrypt the snapshot.</p>
 *          <p>Snapshots created by copying another snapshot have an arbitrary volume ID that should not
 *       be used for any purpose.</p>
 *          <p>For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html">Copying an Amazon EBS snapshot</a> in the
 *         <i>Amazon Elastic Compute Cloud User Guide</i>.</p>
 */
export declare class CopySnapshotCommand extends $Command<CopySnapshotCommandInput, CopySnapshotCommandOutput, EC2ClientResolvedConfig> {
    readonly input: CopySnapshotCommandInput;
    constructor(input: CopySnapshotCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CopySnapshotCommandInput, CopySnapshotCommandOutput>;
    private serialize;
    private deserialize;
}
