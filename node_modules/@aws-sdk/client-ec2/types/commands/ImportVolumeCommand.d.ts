import { EC2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EC2Client";
import { ImportVolumeRequest, ImportVolumeResult } from "../models/models_4";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ImportVolumeCommandInput = ImportVolumeRequest;
export declare type ImportVolumeCommandOutput = ImportVolumeResult & __MetadataBearer;
/**
 * <p>Creates an import volume task using metadata from the specified disk image.For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/CommandLineReference/importing-your-volumes-into-amazon-ebs.html">Importing
 *     Disks to Amazon EBS</a>.</p>
 *          <p>For information about the import manifest referenced by this API action, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/manifest.html">VM Import Manifest</a>.</p>
 */
export declare class ImportVolumeCommand extends $Command<ImportVolumeCommandInput, ImportVolumeCommandOutput, EC2ClientResolvedConfig> {
    readonly input: ImportVolumeCommandInput;
    constructor(input: ImportVolumeCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EC2ClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ImportVolumeCommandInput, ImportVolumeCommandOutput>;
    private serialize;
    private deserialize;
}
