import { KMSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../KMSClient";
import { ListKeyPoliciesRequest, ListKeyPoliciesResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListKeyPoliciesCommandInput = ListKeyPoliciesRequest;
export declare type ListKeyPoliciesCommandOutput = ListKeyPoliciesResponse & __MetadataBearer;
/**
 * <p>Gets the names of the key policies that are attached to a customer master key (CMK). This
 *       operation is designed to get policy names that you can use in a <a>GetKeyPolicy</a>
 *       operation. However, the only valid policy name is <code>default</code>.
 *       You cannot perform this operation on a CMK in a different AWS account.</p>
 */
export declare class ListKeyPoliciesCommand extends $Command<ListKeyPoliciesCommandInput, ListKeyPoliciesCommandOutput, KMSClientResolvedConfig> {
    readonly input: ListKeyPoliciesCommandInput;
    constructor(input: ListKeyPoliciesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: KMSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListKeyPoliciesCommandInput, ListKeyPoliciesCommandOutput>;
    private serialize;
    private deserialize;
}
