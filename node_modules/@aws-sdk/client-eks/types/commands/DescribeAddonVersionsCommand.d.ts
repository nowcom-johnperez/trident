import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { DescribeAddonVersionsRequest, DescribeAddonVersionsResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeAddonVersionsCommandInput = DescribeAddonVersionsRequest;
export declare type DescribeAddonVersionsCommandOutput = DescribeAddonVersionsResponse & __MetadataBearer;
/**
 * <p>Describes the Kubernetes versions that the add-on can be used with.</p>
 */
export declare class DescribeAddonVersionsCommand extends $Command<DescribeAddonVersionsCommandInput, DescribeAddonVersionsCommandOutput, EKSClientResolvedConfig> {
    readonly input: DescribeAddonVersionsCommandInput;
    constructor(input: DescribeAddonVersionsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeAddonVersionsCommandInput, DescribeAddonVersionsCommandOutput>;
    private serialize;
    private deserialize;
}
