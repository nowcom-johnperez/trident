import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { ListFargateProfilesRequest, ListFargateProfilesResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListFargateProfilesCommandInput = ListFargateProfilesRequest;
export declare type ListFargateProfilesCommandOutput = ListFargateProfilesResponse & __MetadataBearer;
/**
 * <p>Lists the AWS Fargate profiles associated with the specified cluster in your AWS
 *             account in the specified Region.</p>
 */
export declare class ListFargateProfilesCommand extends $Command<ListFargateProfilesCommandInput, ListFargateProfilesCommandOutput, EKSClientResolvedConfig> {
    readonly input: ListFargateProfilesCommandInput;
    constructor(input: ListFargateProfilesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListFargateProfilesCommandInput, ListFargateProfilesCommandOutput>;
    private serialize;
    private deserialize;
}
