import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { ListUpdatesRequest, ListUpdatesResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListUpdatesCommandInput = ListUpdatesRequest;
export declare type ListUpdatesCommandOutput = ListUpdatesResponse & __MetadataBearer;
/**
 * <p>Lists the updates associated with an Amazon EKS cluster or managed node group in your AWS
 *             account, in the specified Region.</p>
 */
export declare class ListUpdatesCommand extends $Command<ListUpdatesCommandInput, ListUpdatesCommandOutput, EKSClientResolvedConfig> {
    readonly input: ListUpdatesCommandInput;
    constructor(input: ListUpdatesCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListUpdatesCommandInput, ListUpdatesCommandOutput>;
    private serialize;
    private deserialize;
}
