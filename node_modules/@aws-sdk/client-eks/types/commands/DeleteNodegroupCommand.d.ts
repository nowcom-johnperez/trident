import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { DeleteNodegroupRequest, DeleteNodegroupResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DeleteNodegroupCommandInput = DeleteNodegroupRequest;
export declare type DeleteNodegroupCommandOutput = DeleteNodegroupResponse & __MetadataBearer;
/**
 * <p>Deletes an Amazon EKS node group for a cluster.</p>
 */
export declare class DeleteNodegroupCommand extends $Command<DeleteNodegroupCommandInput, DeleteNodegroupCommandOutput, EKSClientResolvedConfig> {
    readonly input: DeleteNodegroupCommandInput;
    constructor(input: DeleteNodegroupCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteNodegroupCommandInput, DeleteNodegroupCommandOutput>;
    private serialize;
    private deserialize;
}
