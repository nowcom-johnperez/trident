import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { DescribeFargateProfileRequest, DescribeFargateProfileResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeFargateProfileCommandInput = DescribeFargateProfileRequest;
export declare type DescribeFargateProfileCommandOutput = DescribeFargateProfileResponse & __MetadataBearer;
/**
 * <p>Returns descriptive information about an AWS Fargate profile.</p>
 */
export declare class DescribeFargateProfileCommand extends $Command<DescribeFargateProfileCommandInput, DescribeFargateProfileCommandOutput, EKSClientResolvedConfig> {
    readonly input: DescribeFargateProfileCommandInput;
    constructor(input: DescribeFargateProfileCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeFargateProfileCommandInput, DescribeFargateProfileCommandOutput>;
    private serialize;
    private deserialize;
}
