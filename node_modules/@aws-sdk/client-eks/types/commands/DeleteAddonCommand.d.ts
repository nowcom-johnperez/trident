import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { DeleteAddonRequest, DeleteAddonResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DeleteAddonCommandInput = DeleteAddonRequest;
export declare type DeleteAddonCommandOutput = DeleteAddonResponse & __MetadataBearer;
/**
 * <p>Delete an Amazon EKS add-on.</p>
 *         <p>When you remove the add-on, it will also be deleted from the cluster. You can always
 *             manually start an add-on on the cluster using the Kubernetes API.</p>
 */
export declare class DeleteAddonCommand extends $Command<DeleteAddonCommandInput, DeleteAddonCommandOutput, EKSClientResolvedConfig> {
    readonly input: DeleteAddonCommandInput;
    constructor(input: DeleteAddonCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DeleteAddonCommandInput, DeleteAddonCommandOutput>;
    private serialize;
    private deserialize;
}
