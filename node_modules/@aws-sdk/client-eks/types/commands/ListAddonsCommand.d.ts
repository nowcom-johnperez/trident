import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { ListAddonsRequest, ListAddonsResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListAddonsCommandInput = ListAddonsRequest;
export declare type ListAddonsCommandOutput = ListAddonsResponse & __MetadataBearer;
/**
 * <p>Lists the available add-ons.</p>
 */
export declare class ListAddonsCommand extends $Command<ListAddonsCommandInput, ListAddonsCommandOutput, EKSClientResolvedConfig> {
    readonly input: ListAddonsCommandInput;
    constructor(input: ListAddonsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListAddonsCommandInput, ListAddonsCommandOutput>;
    private serialize;
    private deserialize;
}
