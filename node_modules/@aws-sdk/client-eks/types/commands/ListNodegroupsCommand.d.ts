import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { ListNodegroupsRequest, ListNodegroupsResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type ListNodegroupsCommandInput = ListNodegroupsRequest;
export declare type ListNodegroupsCommandOutput = ListNodegroupsResponse & __MetadataBearer;
/**
 * <p>Lists the Amazon EKS managed node groups associated with the specified cluster in your
 *             AWS account in the specified Region. Self-managed node groups are not listed.</p>
 */
export declare class ListNodegroupsCommand extends $Command<ListNodegroupsCommandInput, ListNodegroupsCommandOutput, EKSClientResolvedConfig> {
    readonly input: ListNodegroupsCommandInput;
    constructor(input: ListNodegroupsCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<ListNodegroupsCommandInput, ListNodegroupsCommandOutput>;
    private serialize;
    private deserialize;
}
