import { EKSClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../EKSClient";
import { DescribeNodegroupRequest, DescribeNodegroupResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export declare type DescribeNodegroupCommandInput = DescribeNodegroupRequest;
export declare type DescribeNodegroupCommandOutput = DescribeNodegroupResponse & __MetadataBearer;
/**
 * <p>Returns descriptive information about an Amazon EKS node group.</p>
 */
export declare class DescribeNodegroupCommand extends $Command<DescribeNodegroupCommandInput, DescribeNodegroupCommandOutput, EKSClientResolvedConfig> {
    readonly input: DescribeNodegroupCommandInput;
    constructor(input: DescribeNodegroupCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: EKSClientResolvedConfig, options?: __HttpHandlerOptions): Handler<DescribeNodegroupCommandInput, DescribeNodegroupCommandOutput>;
    private serialize;
    private deserialize;
}
